// Code generated by pigeon; DO NOT EDIT.

package parser

import (
	"bytes"
	"errors"
	"fmt"
	"io"
	"io/ioutil"
	"math"
	"os"
	"sort"
	"strconv"
	"strings"
	"unicode"
	"unicode/utf8"

	"github.com/bytesparadise/libasciidoc/pkg/types"
)

// *****************************************************************************************
// This file is generated after its sibling `asciidoc-grammar.peg` file. DO NOT MODIFY !
// *****************************************************************************************

var g = &grammar{
	rules: []*rule{
		{
			name: "Document",
			pos:  position{line: 18, col: 1, offset: 504},
			expr: &actionExpr{
				pos: position{line: 18, col: 13, offset: 516},
				run: (*parser).callonDocument1,
				expr: &seqExpr{
					pos: position{line: 18, col: 13, offset: 516},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 18, col: 13, offset: 516},
							label: "frontMatter",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 26, offset: 529},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 26, offset: 529},
									name: "FrontMatter",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 40, offset: 543},
							label: "documentHeader",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 56, offset: 559},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 56, offset: 559},
									name: "DocumentHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 73, offset: 576},
							label: "blocks",
							expr: &zeroOrMoreExpr{
								pos: position{line: 18, col: 80, offset: 583},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 81, offset: 584},
									name: "DocumentBlock",
								},
							},
						},
						&notExpr{
							pos: position{line: 1099, col: 8, offset: 46075},
							expr: &anyMatcher{
								line: 1099, col: 9, offset: 46076,
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentBlock",
			pos:  position{line: 22, col: 1, offset: 688},
			expr: &actionExpr{
				pos: position{line: 22, col: 18, offset: 705},
				run: (*parser).callonDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 22, col: 18, offset: 705},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 22, col: 18, offset: 705},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 22, col: 29, offset: 716},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonDocumentBlock5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5092},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5098},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 143, col: 14, offset: 5448},
															run: (*parser).callonDocumentBlock9,
															expr: &seqExpr{
																pos: position{line: 143, col: 14, offset: 5448},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 143, col: 14, offset: 5448},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 143, col: 19, offset: 5453},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonDocumentBlock13,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonDocumentBlock23,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 143, col: 27, offset: 5461},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 145, col: 5, offset: 5515},
															run: (*parser).callonDocumentBlock37,
															expr: &seqExpr{
																pos: position{line: 145, col: 5, offset: 5515},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 145, col: 5, offset: 5515},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 145, col: 10, offset: 5520},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonDocumentBlock41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonDocumentBlock51,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 145, col: 18, offset: 5528},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 155, col: 17, offset: 5831},
															run: (*parser).callonDocumentBlock65,
															expr: &seqExpr{
																pos: position{line: 155, col: 17, offset: 5831},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 155, col: 17, offset: 5831},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 155, col: 21, offset: 5835},
																		expr: &litMatcher{
																			pos:        position{line: 155, col: 22, offset: 5836},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 155, col: 26, offset: 5840},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonDocumentBlock73,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 155, col: 30, offset: 5844},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 159, col: 24, offset: 5949},
																			run: (*parser).callonDocumentBlock76,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 159, col: 24, offset: 5949},
																				expr: &seqExpr{
																					pos: position{line: 159, col: 25, offset: 5950},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 159, col: 25, offset: 5950},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 159, col: 34, offset: 5959,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 165, col: 16, offset: 6108},
															run: (*parser).callonDocumentBlock84,
															expr: &seqExpr{
																pos: position{line: 165, col: 16, offset: 6108},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 165, col: 16, offset: 6108},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 165, col: 21, offset: 6113},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonDocumentBlock90,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 165, col: 25, offset: 6117},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 169, col: 23, offset: 6221},
																			run: (*parser).callonDocumentBlock93,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 169, col: 23, offset: 6221},
																				expr: &seqExpr{
																					pos: position{line: 169, col: 24, offset: 6222},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 169, col: 24, offset: 6222},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 169, col: 33, offset: 6231},
																							expr: &litMatcher{
																								pos:        position{line: 169, col: 34, offset: 6232},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 169, col: 38, offset: 6236,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 165, col: 51, offset: 6143},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 174, col: 30, offset: 6385},
															run: (*parser).callonDocumentBlock104,
															expr: &seqExpr{
																pos: position{line: 174, col: 30, offset: 6385},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 30, offset: 6385},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 34, offset: 6389},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 507, col: 19, offset: 19712},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 507, col: 19, offset: 19712},
																					run: (*parser).callonDocumentBlock109,
																					expr: &litMatcher{
																						pos:        position{line: 507, col: 19, offset: 19712},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 509, col: 5, offset: 19750},
																					run: (*parser).callonDocumentBlock111,
																					expr: &litMatcher{
																						pos:        position{line: 509, col: 5, offset: 19750},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 511, col: 5, offset: 19790},
																					run: (*parser).callonDocumentBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 511, col: 5, offset: 19790},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 513, col: 5, offset: 19840},
																					run: (*parser).callonDocumentBlock115,
																					expr: &litMatcher{
																						pos:        position{line: 513, col: 5, offset: 19840},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 515, col: 5, offset: 19886},
																					run: (*parser).callonDocumentBlock117,
																					expr: &litMatcher{
																						pos:        position{line: 515, col: 5, offset: 19886},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 53, offset: 6408},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 197, col: 21, offset: 7157},
															run: (*parser).callonDocumentBlock120,
															expr: &litMatcher{
																pos:        position{line: 197, col: 21, offset: 7157},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 179, col: 19, offset: 6569},
															run: (*parser).callonDocumentBlock122,
															expr: &seqExpr{
																pos: position{line: 179, col: 19, offset: 6569},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 179, col: 19, offset: 6569},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 179, col: 23, offset: 6573},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonDocumentBlock128,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 179, col: 27, offset: 6577},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 179, col: 38, offset: 6588},
																			expr: &choiceExpr{
																				pos: position{line: 183, col: 21, offset: 6701},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						run: (*parser).callonDocumentBlock133,
																						expr: &seqExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 183, col: 21, offset: 6701},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonDocumentBlock136,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonDocumentBlock139,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonDocumentBlock142,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonDocumentBlock145,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 183, col: 40, offset: 6720},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 183, col: 44, offset: 6724},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 193, col: 19, offset: 7075},
																										run: (*parser).callonDocumentBlock159,
																										expr: &labeledExpr{
																											pos:   position{line: 193, col: 19, offset: 7075},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 193, col: 25, offset: 7081},
																												expr: &seqExpr{
																													pos: position{line: 193, col: 26, offset: 7082},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 193, col: 26, offset: 7082},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 27, offset: 7083},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 31, offset: 7087},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 32, offset: 7088},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 36, offset: 7092},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 37, offset: 7093},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 193, col: 41, offset: 7097,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 183, col: 67, offset: 6747},
																									expr: &litMatcher{
																										pos:        position{line: 183, col: 67, offset: 6747},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 183, col: 72, offset: 6752},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonDocumentBlock175,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						run: (*parser).callonDocumentBlock177,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 5, offset: 6836},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonDocumentBlock180,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonDocumentBlock183,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonDocumentBlock186,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonDocumentBlock189,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 24, offset: 6855},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 24, offset: 6855},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 29, offset: 6860},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonDocumentBlock206,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 179, col: 59, offset: 6609},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5202},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonDocumentBlock212,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 23, col: 3, offset: 739},
							label: "block",
							expr: &choiceExpr{
								pos: position{line: 23, col: 10, offset: 746},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 23, col: 10, offset: 746},
										name: "Section",
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 20, offset: 756},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 30, col: 1, offset: 957},
			expr: &ruleRefExpr{
				pos:  position{line: 30, col: 16, offset: 972},
				name: "YamlFrontMatter",
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 32, col: 1, offset: 990},
			expr: &actionExpr{
				pos: position{line: 32, col: 16, offset: 1005},
				run: (*parser).callonFrontMatter1,
				expr: &seqExpr{
					pos: position{line: 32, col: 16, offset: 1005},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1164},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 32, col: 37, offset: 1026},
							label: "content",
							expr: &actionExpr{
								pos: position{line: 38, col: 27, offset: 1201},
								run: (*parser).callonFrontMatter10,
								expr: &zeroOrMoreExpr{
									pos: position{line: 38, col: 27, offset: 1201},
									expr: &seqExpr{
										pos: position{line: 38, col: 28, offset: 1202},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 38, col: 28, offset: 1202},
												expr: &seqExpr{
													pos: position{line: 36, col: 26, offset: 1164},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 36, col: 26, offset: 1164},
															val:        "---",
															ignoreCase: false,
														},
														&choiceExpr{
															pos: position{line: 1101, col: 8, offset: 46086},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1099, col: 8, offset: 46075},
																	expr: &anyMatcher{
																		line: 1099, col: 9, offset: 46076,
																	},
																},
															},
														},
													},
												},
											},
											&anyMatcher{
												line: 38, col: 50, offset: 1224,
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1164},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentHeader",
			pos:  position{line: 46, col: 1, offset: 1448},
			expr: &actionExpr{
				pos: position{line: 46, col: 19, offset: 1466},
				run: (*parser).callonDocumentHeader1,
				expr: &seqExpr{
					pos: position{line: 46, col: 19, offset: 1466},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 46, col: 19, offset: 1466},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 46, col: 27, offset: 1474},
								name: "Section0TitleWithAttributes",
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 56, offset: 1503},
							label: "authors",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 65, offset: 1512},
								expr: &choiceExpr{
									pos: position{line: 50, col: 20, offset: 1726},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 52, col: 30, offset: 1813},
											run: (*parser).callonDocumentHeader8,
											expr: &seqExpr{
												pos: position{line: 52, col: 30, offset: 1813},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 52, col: 30, offset: 1813},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonDocumentHeader13,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 52, col: 34, offset: 1817},
														expr: &litMatcher{
															pos:        position{line: 52, col: 35, offset: 1818},
															val:        ":",
															ignoreCase: false,
														},
													},
													&labeledExpr{
														pos:   position{line: 52, col: 39, offset: 1822},
														label: "authors",
														expr: &oneOrMoreExpr{
															pos: position{line: 52, col: 48, offset: 1831},
															expr: &actionExpr{
																pos: position{line: 60, col: 19, offset: 2082},
																run: (*parser).callonDocumentHeader19,
																expr: &seqExpr{
																	pos: position{line: 60, col: 19, offset: 2082},
																	exprs: []interface{}{
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 19, offset: 2082},
																			expr: &choiceExpr{
																				pos: position{line: 1093, col: 7, offset: 45984},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1093, col: 7, offset: 45984},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1093, col: 13, offset: 45990},
																						run: (*parser).callonDocumentHeader24,
																						expr: &litMatcher{
																							pos:        position{line: 1093, col: 13, offset: 45990},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 23, offset: 2086},
																			label: "namePart1",
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2422},
																				run: (*parser).callonDocumentHeader27,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2422},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2423},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2427},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2428},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2432},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2433},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2433},
																										expr: &choiceExpr{
																											pos: position{line: 1097, col: 12, offset: 46046},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1097, col: 12, offset: 46046},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1097, col: 21, offset: 46055},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2442},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentHeader42,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2446,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2450},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonDocumentHeader48,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 58, offset: 2121},
																			label: "namePart2",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 68, offset: 2131},
																				expr: &actionExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					run: (*parser).callonDocumentHeader52,
																					expr: &seqExpr{
																						pos: position{line: 65, col: 27, offset: 2422},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 65, col: 27, offset: 2422},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 28, offset: 2423},
																									val:        "<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 65, col: 32, offset: 2427},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 33, offset: 2428},
																									val:        ";",
																									ignoreCase: false,
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 65, col: 37, offset: 2432},
																								expr: &seqExpr{
																									pos: position{line: 65, col: 38, offset: 2433},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 65, col: 38, offset: 2433},
																											expr: &choiceExpr{
																												pos: position{line: 1097, col: 12, offset: 46046},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 65, col: 47, offset: 2442},
																											expr: &choiceExpr{
																												pos: position{line: 1093, col: 7, offset: 45984},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1093, col: 7, offset: 45984},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1093, col: 13, offset: 45990},
																														run: (*parser).callonDocumentHeader67,
																														expr: &litMatcher{
																															pos:        position{line: 1093, col: 13, offset: 45990},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 65, col: 51, offset: 2446,
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 65, col: 55, offset: 2450},
																								expr: &choiceExpr{
																									pos: position{line: 1093, col: 7, offset: 45984},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1093, col: 7, offset: 45984},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1093, col: 13, offset: 45990},
																											run: (*parser).callonDocumentHeader73,
																											expr: &litMatcher{
																												pos:        position{line: 1093, col: 13, offset: 45990},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 94, offset: 2157},
																			label: "namePart3",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 104, offset: 2167},
																				expr: &actionExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					run: (*parser).callonDocumentHeader77,
																					expr: &seqExpr{
																						pos: position{line: 65, col: 27, offset: 2422},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 65, col: 27, offset: 2422},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 28, offset: 2423},
																									val:        "<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 65, col: 32, offset: 2427},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 33, offset: 2428},
																									val:        ";",
																									ignoreCase: false,
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 65, col: 37, offset: 2432},
																								expr: &seqExpr{
																									pos: position{line: 65, col: 38, offset: 2433},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 65, col: 38, offset: 2433},
																											expr: &choiceExpr{
																												pos: position{line: 1097, col: 12, offset: 46046},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 65, col: 47, offset: 2442},
																											expr: &choiceExpr{
																												pos: position{line: 1093, col: 7, offset: 45984},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1093, col: 7, offset: 45984},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1093, col: 13, offset: 45990},
																														run: (*parser).callonDocumentHeader92,
																														expr: &litMatcher{
																															pos:        position{line: 1093, col: 13, offset: 45990},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 65, col: 51, offset: 2446,
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 65, col: 55, offset: 2450},
																								expr: &choiceExpr{
																									pos: position{line: 1093, col: 7, offset: 45984},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1093, col: 7, offset: 45984},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1093, col: 13, offset: 45990},
																											run: (*parser).callonDocumentHeader98,
																											expr: &litMatcher{
																												pos:        position{line: 1093, col: 13, offset: 45990},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 130, offset: 2193},
																			label: "email",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 136, offset: 2199},
																				expr: &actionExpr{
																					pos: position{line: 69, col: 24, offset: 2513},
																					run: (*parser).callonDocumentHeader102,
																					expr: &seqExpr{
																						pos: position{line: 69, col: 24, offset: 2513},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 69, col: 24, offset: 2513},
																								val:        "<",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 69, col: 28, offset: 2517},
																								label: "email",
																								expr: &oneOrMoreExpr{
																									pos: position{line: 69, col: 34, offset: 2523},
																									expr: &seqExpr{
																										pos: position{line: 69, col: 35, offset: 2524},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 69, col: 35, offset: 2524},
																												expr: &litMatcher{
																													pos:        position{line: 69, col: 36, offset: 2525},
																													val:        ">",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 69, col: 40, offset: 2529},
																												expr: &choiceExpr{
																													pos: position{line: 1101, col: 8, offset: 46086},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1097, col: 12, offset: 46046},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1097, col: 21, offset: 46055},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 1099, col: 8, offset: 46075},
																															expr: &anyMatcher{
																																line: 1099, col: 9, offset: 46076,
																															},
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 69, col: 45, offset: 2534,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 69, col: 49, offset: 2538},
																								val:        ">",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 159, offset: 2222},
																			expr: &choiceExpr{
																				pos: position{line: 1093, col: 7, offset: 45984},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1093, col: 7, offset: 45984},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1093, col: 13, offset: 45990},
																						run: (*parser).callonDocumentHeader121,
																						expr: &litMatcher{
																							pos:        position{line: 1093, col: 13, offset: 45990},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 60, col: 163, offset: 2226},
																			expr: &litMatcher{
																				pos:        position{line: 60, col: 163, offset: 2226},
																				val:        ";",
																				ignoreCase: false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 168, offset: 2231},
																			expr: &choiceExpr{
																				pos: position{line: 1093, col: 7, offset: 45984},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1093, col: 7, offset: 45984},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1093, col: 13, offset: 45990},
																						run: (*parser).callonDocumentHeader128,
																						expr: &litMatcher{
																							pos:        position{line: 1093, col: 13, offset: 45990},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1101, col: 8, offset: 46086},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1099, col: 8, offset: 46075},
																expr: &anyMatcher{
																	line: 1099, col: 9, offset: 46076,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 56, col: 33, offset: 1950},
											run: (*parser).callonDocumentHeader135,
											expr: &seqExpr{
												pos: position{line: 56, col: 33, offset: 1950},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 56, col: 33, offset: 1950},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonDocumentHeader140,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 56, col: 37, offset: 1954},
														val:        ":author:",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 56, col: 48, offset: 1965},
														label: "author",
														expr: &actionExpr{
															pos: position{line: 60, col: 19, offset: 2082},
															run: (*parser).callonDocumentHeader144,
															expr: &seqExpr{
																pos: position{line: 60, col: 19, offset: 2082},
																exprs: []interface{}{
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 19, offset: 2082},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonDocumentHeader149,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 23, offset: 2086},
																		label: "namePart1",
																		expr: &actionExpr{
																			pos: position{line: 65, col: 27, offset: 2422},
																			run: (*parser).callonDocumentHeader152,
																			expr: &seqExpr{
																				pos: position{line: 65, col: 27, offset: 2422},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 65, col: 27, offset: 2422},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 28, offset: 2423},
																							val:        "<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 65, col: 32, offset: 2427},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 33, offset: 2428},
																							val:        ";",
																							ignoreCase: false,
																						},
																					},
																					&oneOrMoreExpr{
																						pos: position{line: 65, col: 37, offset: 2432},
																						expr: &seqExpr{
																							pos: position{line: 65, col: 38, offset: 2433},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 65, col: 38, offset: 2433},
																									expr: &choiceExpr{
																										pos: position{line: 1097, col: 12, offset: 46046},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1097, col: 12, offset: 46046},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1097, col: 21, offset: 46055},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 65, col: 47, offset: 2442},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonDocumentHeader167,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 65, col: 51, offset: 2446,
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 65, col: 55, offset: 2450},
																						expr: &choiceExpr{
																							pos: position{line: 1093, col: 7, offset: 45984},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1093, col: 7, offset: 45984},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1093, col: 13, offset: 45990},
																									run: (*parser).callonDocumentHeader173,
																									expr: &litMatcher{
																										pos:        position{line: 1093, col: 13, offset: 45990},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 58, offset: 2121},
																		label: "namePart2",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 68, offset: 2131},
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2422},
																				run: (*parser).callonDocumentHeader52,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2422},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2423},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2427},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2428},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2432},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2433},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2433},
																										expr: &choiceExpr{
																											pos: position{line: 1097, col: 12, offset: 46046},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1097, col: 12, offset: 46046},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1097, col: 21, offset: 46055},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2442},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentHeader67,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2446,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2450},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonDocumentHeader73,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 94, offset: 2157},
																		label: "namePart3",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 104, offset: 2167},
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2422},
																				run: (*parser).callonDocumentHeader77,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2422},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2423},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2427},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2428},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2432},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2433},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2433},
																										expr: &choiceExpr{
																											pos: position{line: 1097, col: 12, offset: 46046},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1097, col: 12, offset: 46046},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1097, col: 21, offset: 46055},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2442},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentHeader92,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2446,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2450},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonDocumentHeader98,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 130, offset: 2193},
																		label: "email",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 136, offset: 2199},
																			expr: &actionExpr{
																				pos: position{line: 69, col: 24, offset: 2513},
																				run: (*parser).callonDocumentHeader102,
																				expr: &seqExpr{
																					pos: position{line: 69, col: 24, offset: 2513},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 69, col: 24, offset: 2513},
																							val:        "<",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 69, col: 28, offset: 2517},
																							label: "email",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 69, col: 34, offset: 2523},
																								expr: &seqExpr{
																									pos: position{line: 69, col: 35, offset: 2524},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 69, col: 35, offset: 2524},
																											expr: &litMatcher{
																												pos:        position{line: 69, col: 36, offset: 2525},
																												val:        ">",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 69, col: 40, offset: 2529},
																											expr: &choiceExpr{
																												pos: position{line: 1101, col: 8, offset: 46086},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1099, col: 8, offset: 46075},
																														expr: &anyMatcher{
																															line: 1099, col: 9, offset: 46076,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 69, col: 45, offset: 2534,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 69, col: 49, offset: 2538},
																							val:        ">",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 159, offset: 2222},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonDocumentHeader246,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&zeroOrOneExpr{
																		pos: position{line: 60, col: 163, offset: 2226},
																		expr: &litMatcher{
																			pos:        position{line: 60, col: 163, offset: 2226},
																			val:        ";",
																			ignoreCase: false,
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 168, offset: 2231},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonDocumentHeader253,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 83, offset: 1530},
							label: "revision",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 93, offset: 1540},
								expr: &actionExpr{
									pos: position{line: 75, col: 21, offset: 2728},
									run: (*parser).callonDocumentHeader257,
									expr: &seqExpr{
										pos: position{line: 75, col: 21, offset: 2728},
										exprs: []interface{}{
											&zeroOrMoreExpr{
												pos: position{line: 75, col: 21, offset: 2728},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonDocumentHeader262,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 75, col: 25, offset: 2732},
												expr: &litMatcher{
													pos:        position{line: 75, col: 26, offset: 2733},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 30, offset: 2737},
												label: "revnumber",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 40, offset: 2747},
													expr: &choiceExpr{
														pos: position{line: 80, col: 27, offset: 3050},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 80, col: 27, offset: 3050},
																run: (*parser).callonDocumentHeader269,
																expr: &seqExpr{
																	pos: position{line: 80, col: 27, offset: 3050},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 80, col: 27, offset: 3050},
																			val:        "v",
																			ignoreCase: true,
																		},
																		&actionExpr{
																			pos: position{line: 1089, col: 10, offset: 45936},
																			run: (*parser).callonDocumentHeader272,
																			expr: &charClassMatcher{
																				pos:        position{line: 1089, col: 10, offset: 45936},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 80, col: 39, offset: 3062},
																			expr: &seqExpr{
																				pos: position{line: 80, col: 40, offset: 3063},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 80, col: 40, offset: 3063},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 80, col: 45, offset: 3068},
																						expr: &litMatcher{
																							pos:        position{line: 80, col: 46, offset: 3069},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 80, col: 50, offset: 3073},
																						expr: &litMatcher{
																							pos:        position{line: 80, col: 51, offset: 3074},
																							val:        ":",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 80, col: 55, offset: 3078,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 82, col: 5, offset: 3119},
																run: (*parser).callonDocumentHeader287,
																expr: &seqExpr{
																	pos: position{line: 82, col: 5, offset: 3119},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 82, col: 5, offset: 3119},
																			expr: &litMatcher{
																				pos:        position{line: 82, col: 5, offset: 3119},
																				val:        "v",
																				ignoreCase: true,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1089, col: 10, offset: 45936},
																			run: (*parser).callonDocumentHeader291,
																			expr: &charClassMatcher{
																				pos:        position{line: 1089, col: 10, offset: 45936},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 82, col: 18, offset: 3132},
																			expr: &seqExpr{
																				pos: position{line: 82, col: 19, offset: 3133},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 82, col: 19, offset: 3133},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 82, col: 24, offset: 3138},
																						expr: &litMatcher{
																							pos:        position{line: 82, col: 25, offset: 3139},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 82, col: 29, offset: 3143},
																						expr: &litMatcher{
																							pos:        position{line: 82, col: 30, offset: 3144},
																							val:        ":",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 82, col: 34, offset: 3148,
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 82, col: 38, offset: 3152},
																			expr: &choiceExpr{
																				pos: position{line: 1093, col: 7, offset: 45984},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1093, col: 7, offset: 45984},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1093, col: 13, offset: 45990},
																						run: (*parser).callonDocumentHeader309,
																						expr: &litMatcher{
																							pos:        position{line: 1093, col: 13, offset: 45990},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&andExpr{
																			pos: position{line: 82, col: 42, offset: 3156},
																			expr: &litMatcher{
																				pos:        position{line: 82, col: 43, offset: 3157},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 75, col: 66, offset: 2773},
												expr: &litMatcher{
													pos:        position{line: 75, col: 66, offset: 2773},
													val:        ",",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 71, offset: 2778},
												label: "revdate",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 79, offset: 2786},
													expr: &actionExpr{
														pos: position{line: 86, col: 25, offset: 3221},
														run: (*parser).callonDocumentHeader317,
														expr: &zeroOrMoreExpr{
															pos: position{line: 86, col: 25, offset: 3221},
															expr: &seqExpr{
																pos: position{line: 86, col: 26, offset: 3222},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 86, col: 26, offset: 3222},
																		expr: &choiceExpr{
																			pos: position{line: 1101, col: 8, offset: 46086},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1099, col: 8, offset: 46075},
																					expr: &anyMatcher{
																						line: 1099, col: 9, offset: 46076,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 86, col: 31, offset: 3227},
																		expr: &litMatcher{
																			pos:        position{line: 86, col: 32, offset: 3228},
																			val:        ":",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 86, col: 36, offset: 3232,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 75, col: 103, offset: 2810},
												expr: &litMatcher{
													pos:        position{line: 75, col: 103, offset: 2810},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 108, offset: 2815},
												label: "revremark",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 118, offset: 2825},
													expr: &actionExpr{
														pos: position{line: 90, col: 27, offset: 3298},
														run: (*parser).callonDocumentHeader333,
														expr: &zeroOrMoreExpr{
															pos: position{line: 90, col: 27, offset: 3298},
															expr: &seqExpr{
																pos: position{line: 90, col: 28, offset: 3299},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 90, col: 28, offset: 3299},
																		expr: &choiceExpr{
																			pos: position{line: 1101, col: 8, offset: 46086},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1099, col: 8, offset: 46075},
																					expr: &anyMatcher{
																						line: 1099, col: 9, offset: 46076,
																					},
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 90, col: 33, offset: 3304,
																	},
																},
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 112, offset: 1559},
							label: "otherAttributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 46, col: 129, offset: 1576},
								expr: &choiceExpr{
									pos: position{line: 97, col: 33, offset: 3491},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 97, col: 33, offset: 3491},
											run: (*parser).callonDocumentHeader351,
											expr: &seqExpr{
												pos: position{line: 97, col: 33, offset: 3491},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 97, col: 33, offset: 3491},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 97, col: 37, offset: 3495},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															run: (*parser).callonDocumentHeader355,
															expr: &seqExpr{
																pos: position{line: 116, col: 26, offset: 4341},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 116, col: 27, offset: 4342},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 116, col: 56, offset: 4371},
																		expr: &charClassMatcher{
																			pos:        position{line: 116, col: 57, offset: 4372},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 97, col: 66, offset: 3524},
														val:        ":",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 97, col: 70, offset: 3528},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonDocumentHeader364,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1101, col: 8, offset: 46086},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1099, col: 8, offset: 46075},
																expr: &anyMatcher{
																	line: 1099, col: 9, offset: 46076,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 99, col: 5, offset: 3611},
											run: (*parser).callonDocumentHeader371,
											expr: &seqExpr{
												pos: position{line: 99, col: 5, offset: 3611},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 99, col: 5, offset: 3611},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 99, col: 9, offset: 3615},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															run: (*parser).callonDocumentHeader375,
															expr: &seqExpr{
																pos: position{line: 116, col: 26, offset: 4341},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 116, col: 27, offset: 4342},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 116, col: 56, offset: 4371},
																		expr: &charClassMatcher{
																			pos:        position{line: 116, col: 57, offset: 4372},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 99, col: 38, offset: 3644},
														val:        ":",
														ignoreCase: false,
													},
													&oneOrMoreExpr{
														pos: position{line: 99, col: 42, offset: 3648},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonDocumentHeader384,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&labeledExpr{
														pos:   position{line: 99, col: 46, offset: 3652},
														label: "value",
														expr: &actionExpr{
															pos: position{line: 120, col: 27, offset: 4464},
															run: (*parser).callonDocumentHeader387,
															expr: &zeroOrMoreExpr{
																pos: position{line: 120, col: 27, offset: 4464},
																expr: &seqExpr{
																	pos: position{line: 120, col: 28, offset: 4465},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 120, col: 28, offset: 4465},
																			expr: &choiceExpr{
																				pos: position{line: 1097, col: 12, offset: 46046},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1097, col: 12, offset: 46046},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1097, col: 21, offset: 46055},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&anyMatcher{
																			line: 120, col: 37, offset: 4474,
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1101, col: 8, offset: 46086},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1099, col: 8, offset: 46075},
																expr: &anyMatcher{
																	line: 1099, col: 9, offset: 46076,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentElement",
			pos:  position{line: 127, col: 1, offset: 4625},
			expr: &actionExpr{
				pos: position{line: 127, col: 20, offset: 4644},
				run: (*parser).callonDocumentElement1,
				expr: &seqExpr{
					pos: position{line: 127, col: 20, offset: 4644},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 127, col: 20, offset: 4644},
							expr: &notExpr{
								pos: position{line: 1099, col: 8, offset: 46075},
								expr: &anyMatcher{
									line: 1099, col: 9, offset: 46076,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 128, col: 5, offset: 4722},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 128, col: 14, offset: 4731},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 1060, col: 14, offset: 45168},
										run: (*parser).callonDocumentElement8,
										expr: &seqExpr{
											pos: position{line: 1060, col: 14, offset: 45168},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 1060, col: 14, offset: 45168},
													expr: &notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 1060, col: 19, offset: 45173},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonDocumentElement16,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1101, col: 8, offset: 46086},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1099, col: 8, offset: 46075},
															expr: &anyMatcher{
																line: 1099, col: 9, offset: 46076,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 97, col: 33, offset: 3491},
										run: (*parser).callonDocumentElement23,
										expr: &seqExpr{
											pos: position{line: 97, col: 33, offset: 3491},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 97, col: 33, offset: 3491},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 97, col: 37, offset: 3495},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonDocumentElement27,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 97, col: 66, offset: 3524},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 97, col: 70, offset: 3528},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonDocumentElement36,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1101, col: 8, offset: 46086},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1099, col: 8, offset: 46075},
															expr: &anyMatcher{
																line: 1099, col: 9, offset: 46076,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 99, col: 5, offset: 3611},
										run: (*parser).callonDocumentElement43,
										expr: &seqExpr{
											pos: position{line: 99, col: 5, offset: 3611},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 99, col: 5, offset: 3611},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 99, col: 9, offset: 3615},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonDocumentElement47,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 99, col: 38, offset: 3644},
													val:        ":",
													ignoreCase: false,
												},
												&oneOrMoreExpr{
													pos: position{line: 99, col: 42, offset: 3648},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonDocumentElement56,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 99, col: 46, offset: 3652},
													label: "value",
													expr: &actionExpr{
														pos: position{line: 120, col: 27, offset: 4464},
														run: (*parser).callonDocumentElement59,
														expr: &zeroOrMoreExpr{
															pos: position{line: 120, col: 27, offset: 4464},
															expr: &seqExpr{
																pos: position{line: 120, col: 28, offset: 4465},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 120, col: 28, offset: 4465},
																		expr: &choiceExpr{
																			pos: position{line: 1097, col: 12, offset: 46046},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 120, col: 37, offset: 4474,
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1101, col: 8, offset: 46086},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1099, col: 8, offset: 46075},
															expr: &anyMatcher{
																line: 1099, col: 9, offset: 46076,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 103, col: 27, offset: 3790},
										run: (*parser).callonDocumentElement72,
										expr: &seqExpr{
											pos: position{line: 103, col: 27, offset: 3790},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 103, col: 27, offset: 3790},
													val:        ":!",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 103, col: 32, offset: 3795},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonDocumentElement76,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 103, col: 61, offset: 3824},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 103, col: 65, offset: 3828},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonDocumentElement85,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1101, col: 8, offset: 46086},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1099, col: 8, offset: 46075},
															expr: &anyMatcher{
																line: 1099, col: 9, offset: 46076,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 105, col: 5, offset: 3900},
										run: (*parser).callonDocumentElement92,
										expr: &seqExpr{
											pos: position{line: 105, col: 5, offset: 3900},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 105, col: 5, offset: 3900},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 105, col: 9, offset: 3904},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonDocumentElement96,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 105, col: 38, offset: 3933},
													val:        "!:",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 105, col: 43, offset: 3938},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonDocumentElement105,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1101, col: 8, offset: 46086},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1099, col: 8, offset: 46075},
															expr: &anyMatcher{
																line: 1099, col: 9, offset: 46076,
															},
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 371, col: 25, offset: 13783},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 371, col: 25, offset: 13783},
												val:        "toc::[]",
												ignoreCase: false,
											},
											&choiceExpr{
												pos: position{line: 1097, col: 12, offset: 46046},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 129, col: 14, offset: 4836},
										name: "MasqueradeParagraph",
									},
									&ruleRefExpr{
										pos:  position{line: 129, col: 36, offset: 4858},
										name: "List",
									},
									&actionExpr{
										pos: position{line: 774, col: 15, offset: 33533},
										run: (*parser).callonDocumentElement119,
										expr: &seqExpr{
											pos: position{line: 774, col: 15, offset: 33533},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 774, col: 15, offset: 33533},
													val:        "image::",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 774, col: 25, offset: 33543},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1075, col: 8, offset: 45632},
														run: (*parser).callonDocumentElement123,
														expr: &oneOrMoreExpr{
															pos: position{line: 1075, col: 8, offset: 45632},
															expr: &seqExpr{
																pos: position{line: 1075, col: 9, offset: 45633},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1075, col: 9, offset: 45633},
																		expr: &choiceExpr{
																			pos: position{line: 1097, col: 12, offset: 46046},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1075, col: 18, offset: 45642},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonDocumentElement133,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1075, col: 22, offset: 45646},
																		expr: &litMatcher{
																			pos:        position{line: 1075, col: 23, offset: 45647},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1075, col: 27, offset: 45651},
																		expr: &litMatcher{
																			pos:        position{line: 1075, col: 28, offset: 45652},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1075, col: 32, offset: 45656,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 774, col: 36, offset: 33554},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 783, col: 20, offset: 33989},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 783, col: 20, offset: 33989},
																run: (*parser).callonDocumentElement142,
																expr: &seqExpr{
																	pos: position{line: 783, col: 20, offset: 33989},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 783, col: 20, offset: 33989},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 783, col: 24, offset: 33993},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonDocumentElement146,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 783, col: 45, offset: 34014},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 784, col: 9, offset: 34026},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonDocumentElement158,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 784, col: 33, offset: 34050},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 785, col: 9, offset: 34062},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonDocumentElement170,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 785, col: 33, offset: 34086},
																			expr: &litMatcher{
																				pos:        position{line: 785, col: 33, offset: 34086},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 786, col: 9, offset: 34099},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 786, col: 20, offset: 34110},
																				expr: &choiceExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							run: (*parser).callonDocumentElement185,
																							expr: &seqExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 183, col: 21, offset: 6701},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonDocumentElement188,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonDocumentElement191,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonDocumentElement194,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonDocumentElement197,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 183, col: 40, offset: 6720},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 183, col: 44, offset: 6724},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 193, col: 19, offset: 7075},
																											run: (*parser).callonDocumentElement211,
																											expr: &labeledExpr{
																												pos:   position{line: 193, col: 19, offset: 7075},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 193, col: 25, offset: 7081},
																													expr: &seqExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 27, offset: 7083},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 31, offset: 7087},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 32, offset: 7088},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 36, offset: 7092},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 37, offset: 7093},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 193, col: 41, offset: 7097,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 183, col: 67, offset: 6747},
																										expr: &litMatcher{
																											pos:        position{line: 183, col: 67, offset: 6747},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 183, col: 72, offset: 6752},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentElement227,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							run: (*parser).callonDocumentElement229,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 5, offset: 6836},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonDocumentElement232,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonDocumentElement235,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonDocumentElement238,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonDocumentElement241,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 24, offset: 6855},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 24, offset: 6855},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 29, offset: 6860},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentElement258,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 786, col: 40, offset: 34130},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 788, col: 9, offset: 34236},
																run: (*parser).callonDocumentElement261,
																expr: &seqExpr{
																	pos: position{line: 788, col: 9, offset: 34236},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 788, col: 9, offset: 34236},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 788, col: 13, offset: 34240},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonDocumentElement265,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 788, col: 34, offset: 34261},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 789, col: 9, offset: 34273},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonDocumentElement277,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 789, col: 32, offset: 34296},
																			expr: &litMatcher{
																				pos:        position{line: 789, col: 32, offset: 34296},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 790, col: 9, offset: 34309},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 790, col: 20, offset: 34320},
																				expr: &choiceExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							run: (*parser).callonDocumentElement292,
																							expr: &seqExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 183, col: 21, offset: 6701},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonDocumentElement295,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonDocumentElement298,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonDocumentElement301,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonDocumentElement304,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 183, col: 40, offset: 6720},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 183, col: 44, offset: 6724},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 193, col: 19, offset: 7075},
																											run: (*parser).callonDocumentElement318,
																											expr: &labeledExpr{
																												pos:   position{line: 193, col: 19, offset: 7075},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 193, col: 25, offset: 7081},
																													expr: &seqExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 27, offset: 7083},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 31, offset: 7087},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 32, offset: 7088},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 36, offset: 7092},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 37, offset: 7093},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 193, col: 41, offset: 7097,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 183, col: 67, offset: 6747},
																										expr: &litMatcher{
																											pos:        position{line: 183, col: 67, offset: 6747},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 183, col: 72, offset: 6752},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentElement334,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							run: (*parser).callonDocumentElement336,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 5, offset: 6836},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonDocumentElement339,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonDocumentElement342,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonDocumentElement345,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonDocumentElement348,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 24, offset: 6855},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 24, offset: 6855},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 29, offset: 6860},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentElement365,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 790, col: 40, offset: 34340},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 792, col: 9, offset: 34443},
																run: (*parser).callonDocumentElement368,
																expr: &seqExpr{
																	pos: position{line: 792, col: 9, offset: 34443},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 792, col: 9, offset: 34443},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 792, col: 13, offset: 34447},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonDocumentElement372,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 792, col: 34, offset: 34468},
																			expr: &litMatcher{
																				pos:        position{line: 792, col: 34, offset: 34468},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 793, col: 9, offset: 34481},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 793, col: 20, offset: 34492},
																				expr: &choiceExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							run: (*parser).callonDocumentElement387,
																							expr: &seqExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 183, col: 21, offset: 6701},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonDocumentElement390,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonDocumentElement393,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonDocumentElement396,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonDocumentElement399,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 183, col: 40, offset: 6720},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 183, col: 44, offset: 6724},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 193, col: 19, offset: 7075},
																											run: (*parser).callonDocumentElement413,
																											expr: &labeledExpr{
																												pos:   position{line: 193, col: 19, offset: 7075},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 193, col: 25, offset: 7081},
																													expr: &seqExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 27, offset: 7083},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 31, offset: 7087},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 32, offset: 7088},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 36, offset: 7092},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 37, offset: 7093},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 193, col: 41, offset: 7097,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 183, col: 67, offset: 6747},
																										expr: &litMatcher{
																											pos:        position{line: 183, col: 67, offset: 6747},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 183, col: 72, offset: 6752},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentElement429,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							run: (*parser).callonDocumentElement431,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 5, offset: 6836},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonDocumentElement434,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonDocumentElement437,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonDocumentElement440,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonDocumentElement443,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 24, offset: 6855},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 24, offset: 6855},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 29, offset: 6860},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentElement460,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 793, col: 40, offset: 34512},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 795, col: 9, offset: 34613},
																run: (*parser).callonDocumentElement463,
																expr: &seqExpr{
																	pos: position{line: 795, col: 9, offset: 34613},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 795, col: 9, offset: 34613},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 795, col: 13, offset: 34617},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 795, col: 24, offset: 34628},
																				expr: &choiceExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							run: (*parser).callonDocumentElement469,
																							expr: &seqExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 183, col: 21, offset: 6701},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonDocumentElement472,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonDocumentElement475,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonDocumentElement478,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonDocumentElement481,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 183, col: 40, offset: 6720},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 183, col: 44, offset: 6724},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 193, col: 19, offset: 7075},
																											run: (*parser).callonDocumentElement495,
																											expr: &labeledExpr{
																												pos:   position{line: 193, col: 19, offset: 7075},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 193, col: 25, offset: 7081},
																													expr: &seqExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 27, offset: 7083},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 31, offset: 7087},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 32, offset: 7088},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 36, offset: 7092},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 37, offset: 7093},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 193, col: 41, offset: 7097,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 183, col: 67, offset: 6747},
																										expr: &litMatcher{
																											pos:        position{line: 183, col: 67, offset: 6747},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 183, col: 72, offset: 6752},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentElement511,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							run: (*parser).callonDocumentElement513,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 5, offset: 6836},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonDocumentElement516,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonDocumentElement519,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonDocumentElement522,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonDocumentElement525,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 24, offset: 6855},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 24, offset: 6855},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 29, offset: 6860},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentElement542,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 795, col: 44, offset: 34648},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 774, col: 71, offset: 33589},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonDocumentElement548,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1101, col: 8, offset: 46086},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1099, col: 8, offset: 46075},
															expr: &anyMatcher{
																line: 1099, col: 9, offset: 46076,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 129, col: 56, offset: 4878},
										name: "Table",
									},
									&ruleRefExpr{
										pos:  position{line: 129, col: 64, offset: 4886},
										name: "DelimitedBlock",
									},
									&actionExpr{
										pos: position{line: 1000, col: 31, offset: 43002},
										run: (*parser).callonDocumentElement557,
										expr: &labeledExpr{
											pos:   position{line: 1000, col: 31, offset: 43002},
											label: "lines",
											expr: &actionExpr{
												pos: position{line: 1006, col: 5, offset: 43267},
												run: (*parser).callonDocumentElement559,
												expr: &seqExpr{
													pos: position{line: 1006, col: 5, offset: 43267},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 1006, col: 5, offset: 43267},
															label: "firstLine",
															expr: &actionExpr{
																pos: position{line: 1006, col: 16, offset: 43278},
																run: (*parser).callonDocumentElement562,
																expr: &seqExpr{
																	pos: position{line: 1006, col: 16, offset: 43278},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonDocumentElement566,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&oneOrMoreExpr{
																			pos: position{line: 1006, col: 19, offset: 43281},
																			expr: &seqExpr{
																				pos: position{line: 1006, col: 20, offset: 43282},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 1006, col: 20, offset: 43282},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 1006, col: 25, offset: 43287,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1101, col: 8, offset: 46086},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1099, col: 8, offset: 46075},
																	expr: &anyMatcher{
																		line: 1099, col: 9, offset: 46076,
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 1009, col: 5, offset: 43398},
															label: "otherLines",
															expr: &zeroOrMoreExpr{
																pos: position{line: 1009, col: 16, offset: 43409},
																expr: &actionExpr{
																	pos: position{line: 1010, col: 9, offset: 43419},
																	run: (*parser).callonDocumentElement584,
																	expr: &seqExpr{
																		pos: position{line: 1010, col: 9, offset: 43419},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 1010, col: 9, offset: 43419},
																				label: "otherLine",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 20, offset: 43430},
																					run: (*parser).callonDocumentElement587,
																					expr: &seqExpr{
																						pos: position{line: 1010, col: 20, offset: 43430},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1010, col: 20, offset: 43430},
																								expr: &actionExpr{
																									pos: position{line: 1060, col: 14, offset: 45168},
																									run: (*parser).callonDocumentElement590,
																									expr: &seqExpr{
																										pos: position{line: 1060, col: 14, offset: 45168},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1060, col: 14, offset: 45168},
																												expr: &notExpr{
																													pos: position{line: 1099, col: 8, offset: 46075},
																													expr: &anyMatcher{
																														line: 1099, col: 9, offset: 46076,
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 1060, col: 19, offset: 45173},
																												expr: &choiceExpr{
																													pos: position{line: 1093, col: 7, offset: 45984},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1093, col: 7, offset: 45984},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1093, col: 13, offset: 45990},
																															run: (*parser).callonDocumentElement598,
																															expr: &litMatcher{
																																pos:        position{line: 1093, col: 13, offset: 45990},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&choiceExpr{
																												pos: position{line: 1101, col: 8, offset: 46086},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1099, col: 8, offset: 46075},
																														expr: &anyMatcher{
																															line: 1099, col: 9, offset: 46076,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 1010, col: 31, offset: 43441},
																								expr: &seqExpr{
																									pos: position{line: 1010, col: 32, offset: 43442},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1010, col: 32, offset: 43442},
																											expr: &choiceExpr{
																												pos: position{line: 1101, col: 8, offset: 46086},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1099, col: 8, offset: 46075},
																														expr: &anyMatcher{
																															line: 1099, col: 9, offset: 46076,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 1010, col: 37, offset: 43447,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1101, col: 8, offset: 46086},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1097, col: 12, offset: 46046},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1097, col: 21, offset: 46055},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1099, col: 8, offset: 46075},
																						expr: &anyMatcher{
																							line: 1099, col: 9, offset: 46076,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 1020, col: 39, offset: 43783},
										run: (*parser).callonDocumentElement619,
										expr: &seqExpr{
											pos: position{line: 1020, col: 39, offset: 43783},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 997, col: 26, offset: 42900},
													val:        "....",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 1020, col: 61, offset: 43805},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonDocumentElement625,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1097, col: 12, offset: 46046},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1020, col: 73, offset: 43817},
													label: "lines",
													expr: &actionExpr{
														pos: position{line: 1025, col: 44, offset: 44090},
														run: (*parser).callonDocumentElement631,
														expr: &labeledExpr{
															pos:   position{line: 1025, col: 44, offset: 44090},
															label: "lines",
															expr: &oneOrMoreExpr{
																pos: position{line: 1025, col: 50, offset: 44096},
																expr: &actionExpr{
																	pos: position{line: 1026, col: 5, offset: 44102},
																	run: (*parser).callonDocumentElement634,
																	expr: &seqExpr{
																		pos: position{line: 1026, col: 5, offset: 44102},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 1026, col: 5, offset: 44102},
																				label: "line",
																				expr: &actionExpr{
																					pos: position{line: 1026, col: 11, offset: 44108},
																					run: (*parser).callonDocumentElement637,
																					expr: &seqExpr{
																						pos: position{line: 1026, col: 11, offset: 44108},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1026, col: 11, offset: 44108},
																								expr: &litMatcher{
																									pos:        position{line: 997, col: 26, offset: 42900},
																									val:        "....",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 1026, col: 34, offset: 44131},
																								expr: &seqExpr{
																									pos: position{line: 1026, col: 35, offset: 44132},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1026, col: 35, offset: 44132},
																											expr: &choiceExpr{
																												pos: position{line: 1101, col: 8, offset: 46086},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1099, col: 8, offset: 46075},
																														expr: &anyMatcher{
																															line: 1099, col: 9, offset: 46076,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 1026, col: 40, offset: 44137,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1101, col: 8, offset: 46086},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1097, col: 12, offset: 46046},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1097, col: 21, offset: 46055},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1099, col: 8, offset: 46075},
																						expr: &anyMatcher{
																							line: 1099, col: 9, offset: 46076,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1020, col: 122, offset: 43866},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 1020, col: 123, offset: 43867},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 997, col: 26, offset: 42900},
																	val:        "....",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 1020, col: 145, offset: 43889},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonDocumentElement661,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1099, col: 8, offset: 46075},
															expr: &anyMatcher{
																line: 1099, col: 9, offset: 46076,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 1035, col: 34, offset: 44400},
										run: (*parser).callonDocumentElement670,
										expr: &seqExpr{
											pos: position{line: 1035, col: 34, offset: 44400},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 1035, col: 34, offset: 44400},
													label: "attributes",
													expr: &seqExpr{
														pos: position{line: 1035, col: 46, offset: 44412},
														exprs: []interface{}{
															&actionExpr{
																pos: position{line: 1043, col: 21, offset: 44694},
																run: (*parser).callonDocumentElement674,
																expr: &seqExpr{
																	pos: position{line: 1043, col: 21, offset: 44694},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1043, col: 21, offset: 44694},
																			val:        "[literal]",
																			ignoreCase: false,
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 1043, col: 33, offset: 44706},
																			expr: &choiceExpr{
																				pos: position{line: 1093, col: 7, offset: 45984},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1093, col: 7, offset: 45984},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1093, col: 13, offset: 45990},
																						run: (*parser).callonDocumentElement680,
																						expr: &litMatcher{
																							pos:        position{line: 1093, col: 13, offset: 45990},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&choiceExpr{
																			pos: position{line: 1097, col: 12, offset: 46046},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 1035, col: 63, offset: 44429},
																expr: &actionExpr{
																	pos: position{line: 136, col: 21, offset: 5092},
																	run: (*parser).callonDocumentElement686,
																	expr: &seqExpr{
																		pos: position{line: 136, col: 21, offset: 5092},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 136, col: 21, offset: 5092},
																				label: "attr",
																				expr: &choiceExpr{
																					pos: position{line: 136, col: 27, offset: 5098},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 143, col: 14, offset: 5448},
																							run: (*parser).callonDocumentElement690,
																							expr: &seqExpr{
																								pos: position{line: 143, col: 14, offset: 5448},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 143, col: 14, offset: 5448},
																										val:        "[[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 143, col: 19, offset: 5453},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1079, col: 7, offset: 45702},
																											run: (*parser).callonDocumentElement694,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1079, col: 7, offset: 45702},
																												expr: &seqExpr{
																													pos: position{line: 1079, col: 8, offset: 45703},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 1079, col: 8, offset: 45703},
																															expr: &choiceExpr{
																																pos: position{line: 1097, col: 12, offset: 46046},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1097, col: 12, offset: 46046},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1097, col: 21, offset: 46055},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1079, col: 17, offset: 45712},
																															expr: &choiceExpr{
																																pos: position{line: 1093, col: 7, offset: 45984},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1093, col: 7, offset: 45984},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1093, col: 13, offset: 45990},
																																		run: (*parser).callonDocumentElement704,
																																		expr: &litMatcher{
																																			pos:        position{line: 1093, col: 13, offset: 45990},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1079, col: 21, offset: 45716},
																															expr: &litMatcher{
																																pos:        position{line: 1079, col: 22, offset: 45717},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1079, col: 26, offset: 45721},
																															expr: &litMatcher{
																																pos:        position{line: 1079, col: 27, offset: 45722},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1079, col: 31, offset: 45726},
																															expr: &litMatcher{
																																pos:        position{line: 1079, col: 32, offset: 45727},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1079, col: 37, offset: 45732},
																															expr: &litMatcher{
																																pos:        position{line: 1079, col: 38, offset: 45733},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1079, col: 43, offset: 45738},
																															expr: &litMatcher{
																																pos:        position{line: 1079, col: 44, offset: 45739},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 1079, col: 48, offset: 45743,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 143, col: 27, offset: 5461},
																										val:        "]]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 145, col: 5, offset: 5515},
																							run: (*parser).callonDocumentElement718,
																							expr: &seqExpr{
																								pos: position{line: 145, col: 5, offset: 5515},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 145, col: 5, offset: 5515},
																										val:        "[#",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 145, col: 10, offset: 5520},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1079, col: 7, offset: 45702},
																											run: (*parser).callonDocumentElement722,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1079, col: 7, offset: 45702},
																												expr: &seqExpr{
																													pos: position{line: 1079, col: 8, offset: 45703},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 1079, col: 8, offset: 45703},
																															expr: &choiceExpr{
																																pos: position{line: 1097, col: 12, offset: 46046},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1097, col: 12, offset: 46046},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1097, col: 21, offset: 46055},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1079, col: 17, offset: 45712},
																															expr: &choiceExpr{
																																pos: position{line: 1093, col: 7, offset: 45984},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1093, col: 7, offset: 45984},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1093, col: 13, offset: 45990},
																																		run: (*parser).callonDocumentElement732,
																																		expr: &litMatcher{
																																			pos:        position{line: 1093, col: 13, offset: 45990},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1079, col: 21, offset: 45716},
																															expr: &litMatcher{
																																pos:        position{line: 1079, col: 22, offset: 45717},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1079, col: 26, offset: 45721},
																															expr: &litMatcher{
																																pos:        position{line: 1079, col: 27, offset: 45722},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1079, col: 31, offset: 45726},
																															expr: &litMatcher{
																																pos:        position{line: 1079, col: 32, offset: 45727},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1079, col: 37, offset: 45732},
																															expr: &litMatcher{
																																pos:        position{line: 1079, col: 38, offset: 45733},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1079, col: 43, offset: 45738},
																															expr: &litMatcher{
																																pos:        position{line: 1079, col: 44, offset: 45739},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 1079, col: 48, offset: 45743,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 145, col: 18, offset: 5528},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 155, col: 17, offset: 5831},
																							run: (*parser).callonDocumentElement746,
																							expr: &seqExpr{
																								pos: position{line: 155, col: 17, offset: 5831},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 155, col: 17, offset: 5831},
																										val:        ".",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 155, col: 21, offset: 5835},
																										expr: &litMatcher{
																											pos:        position{line: 155, col: 22, offset: 5836},
																											val:        ".",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 155, col: 26, offset: 5840},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentElement754,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 155, col: 30, offset: 5844},
																										label: "title",
																										expr: &actionExpr{
																											pos: position{line: 159, col: 24, offset: 5949},
																											run: (*parser).callonDocumentElement757,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 159, col: 24, offset: 5949},
																												expr: &seqExpr{
																													pos: position{line: 159, col: 25, offset: 5950},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 159, col: 25, offset: 5950},
																															expr: &choiceExpr{
																																pos: position{line: 1097, col: 12, offset: 46046},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1097, col: 12, offset: 46046},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1097, col: 21, offset: 46055},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&anyMatcher{
																															line: 159, col: 34, offset: 5959,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 165, col: 16, offset: 6108},
																							run: (*parser).callonDocumentElement765,
																							expr: &seqExpr{
																								pos: position{line: 165, col: 16, offset: 6108},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 165, col: 16, offset: 6108},
																										val:        "[.",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 165, col: 21, offset: 6113},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentElement771,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 165, col: 25, offset: 6117},
																										label: "role",
																										expr: &actionExpr{
																											pos: position{line: 169, col: 23, offset: 6221},
																											run: (*parser).callonDocumentElement774,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 169, col: 23, offset: 6221},
																												expr: &seqExpr{
																													pos: position{line: 169, col: 24, offset: 6222},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 169, col: 24, offset: 6222},
																															expr: &choiceExpr{
																																pos: position{line: 1097, col: 12, offset: 46046},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1097, col: 12, offset: 46046},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1097, col: 21, offset: 46055},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 169, col: 33, offset: 6231},
																															expr: &litMatcher{
																																pos:        position{line: 169, col: 34, offset: 6232},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 169, col: 38, offset: 6236,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 165, col: 51, offset: 6143},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 174, col: 30, offset: 6385},
																							run: (*parser).callonDocumentElement785,
																							expr: &seqExpr{
																								pos: position{line: 174, col: 30, offset: 6385},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 174, col: 30, offset: 6385},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 174, col: 34, offset: 6389},
																										label: "k",
																										expr: &choiceExpr{
																											pos: position{line: 507, col: 19, offset: 19712},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 507, col: 19, offset: 19712},
																													run: (*parser).callonDocumentElement790,
																													expr: &litMatcher{
																														pos:        position{line: 507, col: 19, offset: 19712},
																														val:        "TIP",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 509, col: 5, offset: 19750},
																													run: (*parser).callonDocumentElement792,
																													expr: &litMatcher{
																														pos:        position{line: 509, col: 5, offset: 19750},
																														val:        "NOTE",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 511, col: 5, offset: 19790},
																													run: (*parser).callonDocumentElement794,
																													expr: &litMatcher{
																														pos:        position{line: 511, col: 5, offset: 19790},
																														val:        "IMPORTANT",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 513, col: 5, offset: 19840},
																													run: (*parser).callonDocumentElement796,
																													expr: &litMatcher{
																														pos:        position{line: 513, col: 5, offset: 19840},
																														val:        "WARNING",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 515, col: 5, offset: 19886},
																													run: (*parser).callonDocumentElement798,
																													expr: &litMatcher{
																														pos:        position{line: 515, col: 5, offset: 19886},
																														val:        "CAUTION",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 174, col: 53, offset: 6408},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 197, col: 21, offset: 7157},
																							run: (*parser).callonDocumentElement801,
																							expr: &litMatcher{
																								pos:        position{line: 197, col: 21, offset: 7157},
																								val:        "[horizontal]",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 179, col: 19, offset: 6569},
																							run: (*parser).callonDocumentElement803,
																							expr: &seqExpr{
																								pos: position{line: 179, col: 19, offset: 6569},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 179, col: 19, offset: 6569},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 179, col: 23, offset: 6573},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonDocumentElement809,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 179, col: 27, offset: 6577},
																										label: "attributes",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 179, col: 38, offset: 6588},
																											expr: &choiceExpr{
																												pos: position{line: 183, col: 21, offset: 6701},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 183, col: 21, offset: 6701},
																														run: (*parser).callonDocumentElement814,
																														expr: &seqExpr{
																															pos: position{line: 183, col: 21, offset: 6701},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 183, col: 21, offset: 6701},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		run: (*parser).callonDocumentElement817,
																																		expr: &seqExpr{
																																			pos: position{line: 189, col: 17, offset: 6961},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 189, col: 17, offset: 6961},
																																					expr: &actionExpr{
																																						pos: position{line: 213, col: 14, offset: 7794},
																																						run: (*parser).callonDocumentElement820,
																																						expr: &litMatcher{
																																							pos:        position{line: 213, col: 14, offset: 7794},
																																							val:        "quote",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 189, col: 28, offset: 6972},
																																					expr: &actionExpr{
																																						pos: position{line: 229, col: 14, offset: 8391},
																																						run: (*parser).callonDocumentElement823,
																																						expr: &litMatcher{
																																							pos:        position{line: 229, col: 14, offset: 8391},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 189, col: 39, offset: 6983},
																																					expr: &actionExpr{
																																						pos: position{line: 1039, col: 16, offset: 44628},
																																						run: (*parser).callonDocumentElement826,
																																						expr: &litMatcher{
																																							pos:        position{line: 1039, col: 16, offset: 44628},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 189, col: 52, offset: 6996},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 189, col: 56, offset: 7000},
																																						expr: &seqExpr{
																																							pos: position{line: 189, col: 57, offset: 7001},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 189, col: 57, offset: 7001},
																																									expr: &litMatcher{
																																										pos:        position{line: 189, col: 58, offset: 7002},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 189, col: 62, offset: 7006},
																																									expr: &litMatcher{
																																										pos:        position{line: 189, col: 63, offset: 7007},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 189, col: 67, offset: 7011},
																																									expr: &litMatcher{
																																										pos:        position{line: 189, col: 68, offset: 7012},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 189, col: 72, offset: 7016,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&litMatcher{
																																	pos:        position{line: 183, col: 40, offset: 6720},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																																&labeledExpr{
																																	pos:   position{line: 183, col: 44, offset: 6724},
																																	label: "value",
																																	expr: &actionExpr{
																																		pos: position{line: 193, col: 19, offset: 7075},
																																		run: (*parser).callonDocumentElement840,
																																		expr: &labeledExpr{
																																			pos:   position{line: 193, col: 19, offset: 7075},
																																			label: "value",
																																			expr: &zeroOrMoreExpr{
																																				pos: position{line: 193, col: 25, offset: 7081},
																																				expr: &seqExpr{
																																					pos: position{line: 193, col: 26, offset: 7082},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 193, col: 26, offset: 7082},
																																							expr: &litMatcher{
																																								pos:        position{line: 193, col: 27, offset: 7083},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 193, col: 31, offset: 7087},
																																							expr: &litMatcher{
																																								pos:        position{line: 193, col: 32, offset: 7088},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 193, col: 36, offset: 7092},
																																							expr: &litMatcher{
																																								pos:        position{line: 193, col: 37, offset: 7093},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 193, col: 41, offset: 7097,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 183, col: 67, offset: 6747},
																																	expr: &litMatcher{
																																		pos:        position{line: 183, col: 67, offset: 6747},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 183, col: 72, offset: 6752},
																																	expr: &choiceExpr{
																																		pos: position{line: 1093, col: 7, offset: 45984},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1093, col: 7, offset: 45984},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1093, col: 13, offset: 45990},
																																				run: (*parser).callonDocumentElement856,
																																				expr: &litMatcher{
																																					pos:        position{line: 1093, col: 13, offset: 45990},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 185, col: 5, offset: 6836},
																														run: (*parser).callonDocumentElement858,
																														expr: &seqExpr{
																															pos: position{line: 185, col: 5, offset: 6836},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 185, col: 5, offset: 6836},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		run: (*parser).callonDocumentElement861,
																																		expr: &seqExpr{
																																			pos: position{line: 189, col: 17, offset: 6961},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 189, col: 17, offset: 6961},
																																					expr: &actionExpr{
																																						pos: position{line: 213, col: 14, offset: 7794},
																																						run: (*parser).callonDocumentElement864,
																																						expr: &litMatcher{
																																							pos:        position{line: 213, col: 14, offset: 7794},
																																							val:        "quote",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 189, col: 28, offset: 6972},
																																					expr: &actionExpr{
																																						pos: position{line: 229, col: 14, offset: 8391},
																																						run: (*parser).callonDocumentElement867,
																																						expr: &litMatcher{
																																							pos:        position{line: 229, col: 14, offset: 8391},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 189, col: 39, offset: 6983},
																																					expr: &actionExpr{
																																						pos: position{line: 1039, col: 16, offset: 44628},
																																						run: (*parser).callonDocumentElement870,
																																						expr: &litMatcher{
																																							pos:        position{line: 1039, col: 16, offset: 44628},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 189, col: 52, offset: 6996},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 189, col: 56, offset: 7000},
																																						expr: &seqExpr{
																																							pos: position{line: 189, col: 57, offset: 7001},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 189, col: 57, offset: 7001},
																																									expr: &litMatcher{
																																										pos:        position{line: 189, col: 58, offset: 7002},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 189, col: 62, offset: 7006},
																																									expr: &litMatcher{
																																										pos:        position{line: 189, col: 63, offset: 7007},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 189, col: 67, offset: 7011},
																																									expr: &litMatcher{
																																										pos:        position{line: 189, col: 68, offset: 7012},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 189, col: 72, offset: 7016,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 185, col: 24, offset: 6855},
																																	expr: &litMatcher{
																																		pos:        position{line: 185, col: 24, offset: 6855},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 185, col: 29, offset: 6860},
																																	expr: &choiceExpr{
																																		pos: position{line: 1093, col: 7, offset: 45984},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1093, col: 7, offset: 45984},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1093, col: 13, offset: 45990},
																																				run: (*parser).callonDocumentElement887,
																																				expr: &litMatcher{
																																					pos:        position{line: 1093, col: 13, offset: 45990},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 179, col: 59, offset: 6609},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 136, col: 131, offset: 5202},
																				expr: &choiceExpr{
																					pos: position{line: 1093, col: 7, offset: 45984},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1093, col: 7, offset: 45984},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1093, col: 13, offset: 45990},
																							run: (*parser).callonDocumentElement893,
																							expr: &litMatcher{
																								pos:        position{line: 1093, col: 13, offset: 45990},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1101, col: 8, offset: 46086},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1097, col: 12, offset: 46046},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1097, col: 21, offset: 46055},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1099, col: 8, offset: 46075},
																						expr: &anyMatcher{
																							line: 1099, col: 9, offset: 46076,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1035, col: 82, offset: 44448},
													label: "lines",
													expr: &actionExpr{
														pos: position{line: 1048, col: 39, offset: 44837},
														run: (*parser).callonDocumentElement901,
														expr: &labeledExpr{
															pos:   position{line: 1048, col: 39, offset: 44837},
															label: "lines",
															expr: &oneOrMoreExpr{
																pos: position{line: 1048, col: 45, offset: 44843},
																expr: &actionExpr{
																	pos: position{line: 1049, col: 5, offset: 44849},
																	run: (*parser).callonDocumentElement904,
																	expr: &seqExpr{
																		pos: position{line: 1049, col: 5, offset: 44849},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 1049, col: 5, offset: 44849},
																				label: "line",
																				expr: &actionExpr{
																					pos: position{line: 1049, col: 11, offset: 44855},
																					run: (*parser).callonDocumentElement907,
																					expr: &seqExpr{
																						pos: position{line: 1049, col: 11, offset: 44855},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1049, col: 11, offset: 44855},
																								expr: &actionExpr{
																									pos: position{line: 1060, col: 14, offset: 45168},
																									run: (*parser).callonDocumentElement910,
																									expr: &seqExpr{
																										pos: position{line: 1060, col: 14, offset: 45168},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1060, col: 14, offset: 45168},
																												expr: &notExpr{
																													pos: position{line: 1099, col: 8, offset: 46075},
																													expr: &anyMatcher{
																														line: 1099, col: 9, offset: 46076,
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 1060, col: 19, offset: 45173},
																												expr: &choiceExpr{
																													pos: position{line: 1093, col: 7, offset: 45984},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1093, col: 7, offset: 45984},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1093, col: 13, offset: 45990},
																															run: (*parser).callonDocumentElement918,
																															expr: &litMatcher{
																																pos:        position{line: 1093, col: 13, offset: 45990},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&choiceExpr{
																												pos: position{line: 1101, col: 8, offset: 46086},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1099, col: 8, offset: 46075},
																														expr: &anyMatcher{
																															line: 1099, col: 9, offset: 46076,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 1049, col: 24, offset: 44868},
																								expr: &seqExpr{
																									pos: position{line: 1049, col: 25, offset: 44869},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1049, col: 25, offset: 44869},
																											expr: &choiceExpr{
																												pos: position{line: 1101, col: 8, offset: 46086},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1099, col: 8, offset: 46075},
																														expr: &anyMatcher{
																															line: 1099, col: 9, offset: 46076,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 1049, col: 30, offset: 44874,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1101, col: 8, offset: 46086},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1097, col: 12, offset: 46046},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1097, col: 21, offset: 46055},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1099, col: 8, offset: 46075},
																						expr: &anyMatcher{
																							line: 1099, col: 9, offset: 46076,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 129, col: 96, offset: 4918},
										name: "Paragraph",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section",
			pos:  position{line: 244, col: 1, offset: 8680},
			expr: &actionExpr{
				pos: position{line: 245, col: 5, offset: 8765},
				run: (*parser).callonSection1,
				expr: &labeledExpr{
					pos:   position{line: 245, col: 5, offset: 8765},
					label: "section",
					expr: &choiceExpr{
						pos: position{line: 245, col: 14, offset: 8774},
						alternatives: []interface{}{
							&ruleRefExpr{
								pos:  position{line: 245, col: 14, offset: 8774},
								name: "Section0",
							},
							&ruleRefExpr{
								pos:  position{line: 245, col: 25, offset: 8785},
								name: "Section1",
							},
							&ruleRefExpr{
								pos:  position{line: 245, col: 36, offset: 8796},
								name: "Section2",
							},
							&ruleRefExpr{
								pos:  position{line: 245, col: 47, offset: 8807},
								name: "Section3",
							},
							&ruleRefExpr{
								pos:  position{line: 245, col: 58, offset: 8818},
								name: "Section4",
							},
							&ruleRefExpr{
								pos:  position{line: 245, col: 69, offset: 8829},
								name: "Section5",
							},
						},
					},
				},
			},
		},
		{
			name: "Section0",
			pos:  position{line: 251, col: 1, offset: 8910},
			expr: &actionExpr{
				pos: position{line: 251, col: 13, offset: 8922},
				run: (*parser).callonSection01,
				expr: &seqExpr{
					pos: position{line: 251, col: 13, offset: 8922},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 251, col: 13, offset: 8922},
							expr: &notExpr{
								pos: position{line: 1099, col: 8, offset: 46075},
								expr: &anyMatcher{
									line: 1099, col: 9, offset: 46076,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 252, col: 5, offset: 8993},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 252, col: 13, offset: 9001},
								name: "Section0Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 252, col: 28, offset: 9016},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 252, col: 38, offset: 9026},
								expr: &ruleRefExpr{
									pos:  position{line: 252, col: 38, offset: 9026},
									name: "Section0Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Title",
			pos:  position{line: 258, col: 1, offset: 9175},
			expr: &actionExpr{
				pos: position{line: 258, col: 18, offset: 9192},
				run: (*parser).callonSection0Title1,
				expr: &seqExpr{
					pos: position{line: 258, col: 18, offset: 9192},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 256, col: 24, offset: 9166},
							val:        "=",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 256, col: 28, offset: 9170},
							expr: &choiceExpr{
								pos: position{line: 1093, col: 7, offset: 45984},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1093, col: 7, offset: 45984},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1093, col: 13, offset: 45990},
										run: (*parser).callonSection0Title7,
										expr: &litMatcher{
											pos:        position{line: 1093, col: 13, offset: 45990},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 258, col: 38, offset: 9212},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 258, col: 48, offset: 9222},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 258, col: 63, offset: 9237},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 258, col: 67, offset: 9241},
								expr: &actionExpr{
									pos: position{line: 149, col: 20, offset: 5599},
									run: (*parser).callonSection0Title13,
									expr: &seqExpr{
										pos: position{line: 149, col: 20, offset: 5599},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 149, col: 20, offset: 5599},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 149, col: 25, offset: 5604},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1079, col: 7, offset: 45702},
													run: (*parser).callonSection0Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														expr: &seqExpr{
															pos: position{line: 1079, col: 8, offset: 45703},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1079, col: 8, offset: 45703},
																	expr: &choiceExpr{
																		pos: position{line: 1097, col: 12, offset: 46046},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1097, col: 12, offset: 46046},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1097, col: 21, offset: 46055},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 17, offset: 45712},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonSection0Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 21, offset: 45716},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 22, offset: 45717},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 26, offset: 45721},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 27, offset: 45722},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 31, offset: 45726},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 32, offset: 45727},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 37, offset: 45732},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 38, offset: 45733},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 43, offset: 45738},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 44, offset: 45739},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1079, col: 48, offset: 45743,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 149, col: 33, offset: 5612},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 149, col: 38, offset: 5617},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonSection0Title44,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0TitleWithAttributes",
			pos:  position{line: 262, col: 1, offset: 9356},
			expr: &actionExpr{
				pos: position{line: 262, col: 32, offset: 9387},
				run: (*parser).callonSection0TitleWithAttributes1,
				expr: &seqExpr{
					pos: position{line: 262, col: 32, offset: 9387},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 262, col: 32, offset: 9387},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 262, col: 43, offset: 9398},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection0TitleWithAttributes5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5092},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5098},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 143, col: 14, offset: 5448},
															run: (*parser).callonSection0TitleWithAttributes9,
															expr: &seqExpr{
																pos: position{line: 143, col: 14, offset: 5448},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 143, col: 14, offset: 5448},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 143, col: 19, offset: 5453},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection0TitleWithAttributes13,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection0TitleWithAttributes23,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 143, col: 27, offset: 5461},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 145, col: 5, offset: 5515},
															run: (*parser).callonSection0TitleWithAttributes37,
															expr: &seqExpr{
																pos: position{line: 145, col: 5, offset: 5515},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 145, col: 5, offset: 5515},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 145, col: 10, offset: 5520},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection0TitleWithAttributes41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection0TitleWithAttributes51,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 145, col: 18, offset: 5528},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 155, col: 17, offset: 5831},
															run: (*parser).callonSection0TitleWithAttributes65,
															expr: &seqExpr{
																pos: position{line: 155, col: 17, offset: 5831},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 155, col: 17, offset: 5831},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 155, col: 21, offset: 5835},
																		expr: &litMatcher{
																			pos:        position{line: 155, col: 22, offset: 5836},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 155, col: 26, offset: 5840},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection0TitleWithAttributes73,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 155, col: 30, offset: 5844},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 159, col: 24, offset: 5949},
																			run: (*parser).callonSection0TitleWithAttributes76,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 159, col: 24, offset: 5949},
																				expr: &seqExpr{
																					pos: position{line: 159, col: 25, offset: 5950},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 159, col: 25, offset: 5950},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 159, col: 34, offset: 5959,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 165, col: 16, offset: 6108},
															run: (*parser).callonSection0TitleWithAttributes84,
															expr: &seqExpr{
																pos: position{line: 165, col: 16, offset: 6108},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 165, col: 16, offset: 6108},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 165, col: 21, offset: 6113},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection0TitleWithAttributes90,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 165, col: 25, offset: 6117},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 169, col: 23, offset: 6221},
																			run: (*parser).callonSection0TitleWithAttributes93,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 169, col: 23, offset: 6221},
																				expr: &seqExpr{
																					pos: position{line: 169, col: 24, offset: 6222},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 169, col: 24, offset: 6222},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 169, col: 33, offset: 6231},
																							expr: &litMatcher{
																								pos:        position{line: 169, col: 34, offset: 6232},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 169, col: 38, offset: 6236,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 165, col: 51, offset: 6143},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 174, col: 30, offset: 6385},
															run: (*parser).callonSection0TitleWithAttributes104,
															expr: &seqExpr{
																pos: position{line: 174, col: 30, offset: 6385},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 30, offset: 6385},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 34, offset: 6389},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 507, col: 19, offset: 19712},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 507, col: 19, offset: 19712},
																					run: (*parser).callonSection0TitleWithAttributes109,
																					expr: &litMatcher{
																						pos:        position{line: 507, col: 19, offset: 19712},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 509, col: 5, offset: 19750},
																					run: (*parser).callonSection0TitleWithAttributes111,
																					expr: &litMatcher{
																						pos:        position{line: 509, col: 5, offset: 19750},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 511, col: 5, offset: 19790},
																					run: (*parser).callonSection0TitleWithAttributes113,
																					expr: &litMatcher{
																						pos:        position{line: 511, col: 5, offset: 19790},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 513, col: 5, offset: 19840},
																					run: (*parser).callonSection0TitleWithAttributes115,
																					expr: &litMatcher{
																						pos:        position{line: 513, col: 5, offset: 19840},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 515, col: 5, offset: 19886},
																					run: (*parser).callonSection0TitleWithAttributes117,
																					expr: &litMatcher{
																						pos:        position{line: 515, col: 5, offset: 19886},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 53, offset: 6408},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 197, col: 21, offset: 7157},
															run: (*parser).callonSection0TitleWithAttributes120,
															expr: &litMatcher{
																pos:        position{line: 197, col: 21, offset: 7157},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 179, col: 19, offset: 6569},
															run: (*parser).callonSection0TitleWithAttributes122,
															expr: &seqExpr{
																pos: position{line: 179, col: 19, offset: 6569},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 179, col: 19, offset: 6569},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 179, col: 23, offset: 6573},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection0TitleWithAttributes128,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 179, col: 27, offset: 6577},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 179, col: 38, offset: 6588},
																			expr: &choiceExpr{
																				pos: position{line: 183, col: 21, offset: 6701},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						run: (*parser).callonSection0TitleWithAttributes133,
																						expr: &seqExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 183, col: 21, offset: 6701},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection0TitleWithAttributes136,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection0TitleWithAttributes139,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection0TitleWithAttributes142,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection0TitleWithAttributes145,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 183, col: 40, offset: 6720},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 183, col: 44, offset: 6724},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 193, col: 19, offset: 7075},
																										run: (*parser).callonSection0TitleWithAttributes159,
																										expr: &labeledExpr{
																											pos:   position{line: 193, col: 19, offset: 7075},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 193, col: 25, offset: 7081},
																												expr: &seqExpr{
																													pos: position{line: 193, col: 26, offset: 7082},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 193, col: 26, offset: 7082},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 27, offset: 7083},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 31, offset: 7087},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 32, offset: 7088},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 36, offset: 7092},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 37, offset: 7093},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 193, col: 41, offset: 7097,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 183, col: 67, offset: 6747},
																									expr: &litMatcher{
																										pos:        position{line: 183, col: 67, offset: 6747},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 183, col: 72, offset: 6752},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection0TitleWithAttributes175,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						run: (*parser).callonSection0TitleWithAttributes177,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 5, offset: 6836},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection0TitleWithAttributes180,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection0TitleWithAttributes183,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection0TitleWithAttributes186,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection0TitleWithAttributes189,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 24, offset: 6855},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 24, offset: 6855},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 29, offset: 6860},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection0TitleWithAttributes206,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 179, col: 59, offset: 6609},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5202},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonSection0TitleWithAttributes212,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 263, col: 5, offset: 9423},
							label: "title",
							expr: &ruleRefExpr{
								pos:  position{line: 263, col: 12, offset: 9430},
								name: "Section0Title",
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Element",
			pos:  position{line: 267, col: 1, offset: 9525},
			expr: &actionExpr{
				pos: position{line: 267, col: 20, offset: 9544},
				run: (*parser).callonSection0Element1,
				expr: &seqExpr{
					pos: position{line: 267, col: 20, offset: 9544},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 267, col: 20, offset: 9544},
							expr: &seqExpr{
								pos: position{line: 256, col: 24, offset: 9166},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 256, col: 24, offset: 9166},
										val:        "=",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 256, col: 28, offset: 9170},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonSection0Element9,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 268, col: 5, offset: 9569},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 268, col: 16, offset: 9580},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection0Element13,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5092},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5098},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 143, col: 14, offset: 5448},
															run: (*parser).callonSection0Element17,
															expr: &seqExpr{
																pos: position{line: 143, col: 14, offset: 5448},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 143, col: 14, offset: 5448},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 143, col: 19, offset: 5453},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection0Element21,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection0Element31,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 143, col: 27, offset: 5461},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 145, col: 5, offset: 5515},
															run: (*parser).callonSection0Element45,
															expr: &seqExpr{
																pos: position{line: 145, col: 5, offset: 5515},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 145, col: 5, offset: 5515},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 145, col: 10, offset: 5520},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection0Element49,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection0Element59,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 145, col: 18, offset: 5528},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 155, col: 17, offset: 5831},
															run: (*parser).callonSection0Element73,
															expr: &seqExpr{
																pos: position{line: 155, col: 17, offset: 5831},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 155, col: 17, offset: 5831},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 155, col: 21, offset: 5835},
																		expr: &litMatcher{
																			pos:        position{line: 155, col: 22, offset: 5836},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 155, col: 26, offset: 5840},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection0Element81,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 155, col: 30, offset: 5844},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 159, col: 24, offset: 5949},
																			run: (*parser).callonSection0Element84,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 159, col: 24, offset: 5949},
																				expr: &seqExpr{
																					pos: position{line: 159, col: 25, offset: 5950},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 159, col: 25, offset: 5950},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 159, col: 34, offset: 5959,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 165, col: 16, offset: 6108},
															run: (*parser).callonSection0Element92,
															expr: &seqExpr{
																pos: position{line: 165, col: 16, offset: 6108},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 165, col: 16, offset: 6108},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 165, col: 21, offset: 6113},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection0Element98,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 165, col: 25, offset: 6117},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 169, col: 23, offset: 6221},
																			run: (*parser).callonSection0Element101,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 169, col: 23, offset: 6221},
																				expr: &seqExpr{
																					pos: position{line: 169, col: 24, offset: 6222},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 169, col: 24, offset: 6222},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 169, col: 33, offset: 6231},
																							expr: &litMatcher{
																								pos:        position{line: 169, col: 34, offset: 6232},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 169, col: 38, offset: 6236,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 165, col: 51, offset: 6143},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 174, col: 30, offset: 6385},
															run: (*parser).callonSection0Element112,
															expr: &seqExpr{
																pos: position{line: 174, col: 30, offset: 6385},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 30, offset: 6385},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 34, offset: 6389},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 507, col: 19, offset: 19712},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 507, col: 19, offset: 19712},
																					run: (*parser).callonSection0Element117,
																					expr: &litMatcher{
																						pos:        position{line: 507, col: 19, offset: 19712},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 509, col: 5, offset: 19750},
																					run: (*parser).callonSection0Element119,
																					expr: &litMatcher{
																						pos:        position{line: 509, col: 5, offset: 19750},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 511, col: 5, offset: 19790},
																					run: (*parser).callonSection0Element121,
																					expr: &litMatcher{
																						pos:        position{line: 511, col: 5, offset: 19790},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 513, col: 5, offset: 19840},
																					run: (*parser).callonSection0Element123,
																					expr: &litMatcher{
																						pos:        position{line: 513, col: 5, offset: 19840},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 515, col: 5, offset: 19886},
																					run: (*parser).callonSection0Element125,
																					expr: &litMatcher{
																						pos:        position{line: 515, col: 5, offset: 19886},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 53, offset: 6408},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 197, col: 21, offset: 7157},
															run: (*parser).callonSection0Element128,
															expr: &litMatcher{
																pos:        position{line: 197, col: 21, offset: 7157},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 179, col: 19, offset: 6569},
															run: (*parser).callonSection0Element130,
															expr: &seqExpr{
																pos: position{line: 179, col: 19, offset: 6569},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 179, col: 19, offset: 6569},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 179, col: 23, offset: 6573},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection0Element136,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 179, col: 27, offset: 6577},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 179, col: 38, offset: 6588},
																			expr: &choiceExpr{
																				pos: position{line: 183, col: 21, offset: 6701},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						run: (*parser).callonSection0Element141,
																						expr: &seqExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 183, col: 21, offset: 6701},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection0Element144,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection0Element147,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection0Element150,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection0Element153,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 183, col: 40, offset: 6720},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 183, col: 44, offset: 6724},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 193, col: 19, offset: 7075},
																										run: (*parser).callonSection0Element167,
																										expr: &labeledExpr{
																											pos:   position{line: 193, col: 19, offset: 7075},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 193, col: 25, offset: 7081},
																												expr: &seqExpr{
																													pos: position{line: 193, col: 26, offset: 7082},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 193, col: 26, offset: 7082},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 27, offset: 7083},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 31, offset: 7087},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 32, offset: 7088},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 36, offset: 7092},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 37, offset: 7093},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 193, col: 41, offset: 7097,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 183, col: 67, offset: 6747},
																									expr: &litMatcher{
																										pos:        position{line: 183, col: 67, offset: 6747},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 183, col: 72, offset: 6752},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection0Element183,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						run: (*parser).callonSection0Element185,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 5, offset: 6836},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection0Element188,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection0Element191,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection0Element194,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection0Element197,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 24, offset: 6855},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 24, offset: 6855},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 29, offset: 6860},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection0Element214,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 179, col: 59, offset: 6609},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5202},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonSection0Element220,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 269, col: 5, offset: 9605},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 269, col: 14, offset: 9614},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 269, col: 14, offset: 9614},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 269, col: 25, offset: 9625},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 269, col: 36, offset: 9636},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 269, col: 47, offset: 9647},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 269, col: 58, offset: 9658},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 269, col: 69, offset: 9669},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1",
			pos:  position{line: 274, col: 1, offset: 9773},
			expr: &actionExpr{
				pos: position{line: 274, col: 13, offset: 9785},
				run: (*parser).callonSection11,
				expr: &seqExpr{
					pos: position{line: 274, col: 13, offset: 9785},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 274, col: 13, offset: 9785},
							expr: &notExpr{
								pos: position{line: 1099, col: 8, offset: 46075},
								expr: &anyMatcher{
									line: 1099, col: 9, offset: 46076,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 275, col: 5, offset: 9856},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 275, col: 13, offset: 9864},
								name: "Section1Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 275, col: 28, offset: 9879},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 275, col: 38, offset: 9889},
								expr: &ruleRefExpr{
									pos:  position{line: 275, col: 38, offset: 9889},
									name: "Section1Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Title",
			pos:  position{line: 281, col: 1, offset: 10039},
			expr: &actionExpr{
				pos: position{line: 281, col: 18, offset: 10056},
				run: (*parser).callonSection1Title1,
				expr: &seqExpr{
					pos: position{line: 281, col: 18, offset: 10056},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 279, col: 24, offset: 10029},
							val:        "==",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 279, col: 29, offset: 10034},
							expr: &choiceExpr{
								pos: position{line: 1093, col: 7, offset: 45984},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1093, col: 7, offset: 45984},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1093, col: 13, offset: 45990},
										run: (*parser).callonSection1Title7,
										expr: &litMatcher{
											pos:        position{line: 1093, col: 13, offset: 45990},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 281, col: 38, offset: 10076},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 281, col: 48, offset: 10086},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 281, col: 63, offset: 10101},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 281, col: 67, offset: 10105},
								expr: &actionExpr{
									pos: position{line: 149, col: 20, offset: 5599},
									run: (*parser).callonSection1Title13,
									expr: &seqExpr{
										pos: position{line: 149, col: 20, offset: 5599},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 149, col: 20, offset: 5599},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 149, col: 25, offset: 5604},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1079, col: 7, offset: 45702},
													run: (*parser).callonSection1Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														expr: &seqExpr{
															pos: position{line: 1079, col: 8, offset: 45703},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1079, col: 8, offset: 45703},
																	expr: &choiceExpr{
																		pos: position{line: 1097, col: 12, offset: 46046},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1097, col: 12, offset: 46046},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1097, col: 21, offset: 46055},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 17, offset: 45712},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonSection1Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 21, offset: 45716},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 22, offset: 45717},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 26, offset: 45721},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 27, offset: 45722},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 31, offset: 45726},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 32, offset: 45727},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 37, offset: 45732},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 38, offset: 45733},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 43, offset: 45738},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 44, offset: 45739},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1079, col: 48, offset: 45743,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 149, col: 33, offset: 5612},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 149, col: 38, offset: 5617},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonSection1Title44,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Element",
			pos:  position{line: 285, col: 1, offset: 10221},
			expr: &actionExpr{
				pos: position{line: 285, col: 20, offset: 10240},
				run: (*parser).callonSection1Element1,
				expr: &seqExpr{
					pos: position{line: 285, col: 20, offset: 10240},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 285, col: 20, offset: 10240},
							expr: &seqExpr{
								pos: position{line: 279, col: 24, offset: 10029},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 279, col: 24, offset: 10029},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 279, col: 29, offset: 10034},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonSection1Element9,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 286, col: 5, offset: 10266},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 286, col: 16, offset: 10277},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection1Element13,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5092},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5098},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 143, col: 14, offset: 5448},
															run: (*parser).callonSection1Element17,
															expr: &seqExpr{
																pos: position{line: 143, col: 14, offset: 5448},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 143, col: 14, offset: 5448},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 143, col: 19, offset: 5453},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection1Element21,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection1Element31,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 143, col: 27, offset: 5461},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 145, col: 5, offset: 5515},
															run: (*parser).callonSection1Element45,
															expr: &seqExpr{
																pos: position{line: 145, col: 5, offset: 5515},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 145, col: 5, offset: 5515},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 145, col: 10, offset: 5520},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection1Element49,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection1Element59,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 145, col: 18, offset: 5528},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 155, col: 17, offset: 5831},
															run: (*parser).callonSection1Element73,
															expr: &seqExpr{
																pos: position{line: 155, col: 17, offset: 5831},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 155, col: 17, offset: 5831},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 155, col: 21, offset: 5835},
																		expr: &litMatcher{
																			pos:        position{line: 155, col: 22, offset: 5836},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 155, col: 26, offset: 5840},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection1Element81,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 155, col: 30, offset: 5844},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 159, col: 24, offset: 5949},
																			run: (*parser).callonSection1Element84,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 159, col: 24, offset: 5949},
																				expr: &seqExpr{
																					pos: position{line: 159, col: 25, offset: 5950},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 159, col: 25, offset: 5950},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 159, col: 34, offset: 5959,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 165, col: 16, offset: 6108},
															run: (*parser).callonSection1Element92,
															expr: &seqExpr{
																pos: position{line: 165, col: 16, offset: 6108},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 165, col: 16, offset: 6108},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 165, col: 21, offset: 6113},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection1Element98,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 165, col: 25, offset: 6117},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 169, col: 23, offset: 6221},
																			run: (*parser).callonSection1Element101,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 169, col: 23, offset: 6221},
																				expr: &seqExpr{
																					pos: position{line: 169, col: 24, offset: 6222},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 169, col: 24, offset: 6222},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 169, col: 33, offset: 6231},
																							expr: &litMatcher{
																								pos:        position{line: 169, col: 34, offset: 6232},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 169, col: 38, offset: 6236,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 165, col: 51, offset: 6143},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 174, col: 30, offset: 6385},
															run: (*parser).callonSection1Element112,
															expr: &seqExpr{
																pos: position{line: 174, col: 30, offset: 6385},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 30, offset: 6385},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 34, offset: 6389},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 507, col: 19, offset: 19712},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 507, col: 19, offset: 19712},
																					run: (*parser).callonSection1Element117,
																					expr: &litMatcher{
																						pos:        position{line: 507, col: 19, offset: 19712},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 509, col: 5, offset: 19750},
																					run: (*parser).callonSection1Element119,
																					expr: &litMatcher{
																						pos:        position{line: 509, col: 5, offset: 19750},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 511, col: 5, offset: 19790},
																					run: (*parser).callonSection1Element121,
																					expr: &litMatcher{
																						pos:        position{line: 511, col: 5, offset: 19790},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 513, col: 5, offset: 19840},
																					run: (*parser).callonSection1Element123,
																					expr: &litMatcher{
																						pos:        position{line: 513, col: 5, offset: 19840},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 515, col: 5, offset: 19886},
																					run: (*parser).callonSection1Element125,
																					expr: &litMatcher{
																						pos:        position{line: 515, col: 5, offset: 19886},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 53, offset: 6408},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 197, col: 21, offset: 7157},
															run: (*parser).callonSection1Element128,
															expr: &litMatcher{
																pos:        position{line: 197, col: 21, offset: 7157},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 179, col: 19, offset: 6569},
															run: (*parser).callonSection1Element130,
															expr: &seqExpr{
																pos: position{line: 179, col: 19, offset: 6569},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 179, col: 19, offset: 6569},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 179, col: 23, offset: 6573},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection1Element136,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 179, col: 27, offset: 6577},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 179, col: 38, offset: 6588},
																			expr: &choiceExpr{
																				pos: position{line: 183, col: 21, offset: 6701},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						run: (*parser).callonSection1Element141,
																						expr: &seqExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 183, col: 21, offset: 6701},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection1Element144,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection1Element147,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection1Element150,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection1Element153,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 183, col: 40, offset: 6720},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 183, col: 44, offset: 6724},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 193, col: 19, offset: 7075},
																										run: (*parser).callonSection1Element167,
																										expr: &labeledExpr{
																											pos:   position{line: 193, col: 19, offset: 7075},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 193, col: 25, offset: 7081},
																												expr: &seqExpr{
																													pos: position{line: 193, col: 26, offset: 7082},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 193, col: 26, offset: 7082},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 27, offset: 7083},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 31, offset: 7087},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 32, offset: 7088},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 36, offset: 7092},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 37, offset: 7093},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 193, col: 41, offset: 7097,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 183, col: 67, offset: 6747},
																									expr: &litMatcher{
																										pos:        position{line: 183, col: 67, offset: 6747},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 183, col: 72, offset: 6752},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection1Element183,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						run: (*parser).callonSection1Element185,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 5, offset: 6836},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection1Element188,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection1Element191,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection1Element194,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection1Element197,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 24, offset: 6855},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 24, offset: 6855},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 29, offset: 6860},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection1Element214,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 179, col: 59, offset: 6609},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5202},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonSection1Element220,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 287, col: 5, offset: 10302},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 287, col: 14, offset: 10311},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 287, col: 14, offset: 10311},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 287, col: 25, offset: 10322},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 287, col: 36, offset: 10333},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 287, col: 47, offset: 10344},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 287, col: 58, offset: 10355},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2",
			pos:  position{line: 291, col: 1, offset: 10454},
			expr: &actionExpr{
				pos: position{line: 291, col: 13, offset: 10466},
				run: (*parser).callonSection21,
				expr: &seqExpr{
					pos: position{line: 291, col: 13, offset: 10466},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 291, col: 13, offset: 10466},
							expr: &notExpr{
								pos: position{line: 1099, col: 8, offset: 46075},
								expr: &anyMatcher{
									line: 1099, col: 9, offset: 46076,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 292, col: 5, offset: 10537},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 292, col: 13, offset: 10545},
								name: "Section2Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 292, col: 28, offset: 10560},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 292, col: 38, offset: 10570},
								expr: &ruleRefExpr{
									pos:  position{line: 292, col: 38, offset: 10570},
									name: "Section2Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Title",
			pos:  position{line: 298, col: 1, offset: 10722},
			expr: &actionExpr{
				pos: position{line: 298, col: 18, offset: 10739},
				run: (*parser).callonSection2Title1,
				expr: &seqExpr{
					pos: position{line: 298, col: 18, offset: 10739},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 296, col: 24, offset: 10710},
							val:        "===",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 296, col: 30, offset: 10716},
							expr: &choiceExpr{
								pos: position{line: 1093, col: 7, offset: 45984},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1093, col: 7, offset: 45984},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1093, col: 13, offset: 45990},
										run: (*parser).callonSection2Title7,
										expr: &litMatcher{
											pos:        position{line: 1093, col: 13, offset: 45990},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 298, col: 38, offset: 10759},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 298, col: 48, offset: 10769},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 298, col: 63, offset: 10784},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 298, col: 67, offset: 10788},
								expr: &actionExpr{
									pos: position{line: 149, col: 20, offset: 5599},
									run: (*parser).callonSection2Title13,
									expr: &seqExpr{
										pos: position{line: 149, col: 20, offset: 5599},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 149, col: 20, offset: 5599},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 149, col: 25, offset: 5604},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1079, col: 7, offset: 45702},
													run: (*parser).callonSection2Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														expr: &seqExpr{
															pos: position{line: 1079, col: 8, offset: 45703},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1079, col: 8, offset: 45703},
																	expr: &choiceExpr{
																		pos: position{line: 1097, col: 12, offset: 46046},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1097, col: 12, offset: 46046},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1097, col: 21, offset: 46055},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 17, offset: 45712},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonSection2Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 21, offset: 45716},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 22, offset: 45717},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 26, offset: 45721},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 27, offset: 45722},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 31, offset: 45726},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 32, offset: 45727},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 37, offset: 45732},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 38, offset: 45733},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 43, offset: 45738},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 44, offset: 45739},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1079, col: 48, offset: 45743,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 149, col: 33, offset: 5612},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 149, col: 38, offset: 5617},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonSection2Title44,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Element",
			pos:  position{line: 302, col: 1, offset: 10904},
			expr: &actionExpr{
				pos: position{line: 302, col: 20, offset: 10923},
				run: (*parser).callonSection2Element1,
				expr: &seqExpr{
					pos: position{line: 302, col: 20, offset: 10923},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 302, col: 20, offset: 10923},
							expr: &seqExpr{
								pos: position{line: 279, col: 24, offset: 10029},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 279, col: 24, offset: 10029},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 279, col: 29, offset: 10034},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonSection2Element9,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 302, col: 41, offset: 10944},
							expr: &seqExpr{
								pos: position{line: 296, col: 24, offset: 10710},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 296, col: 24, offset: 10710},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 296, col: 30, offset: 10716},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonSection2Element17,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 303, col: 5, offset: 10970},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 303, col: 16, offset: 10981},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection2Element21,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5092},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5098},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 143, col: 14, offset: 5448},
															run: (*parser).callonSection2Element25,
															expr: &seqExpr{
																pos: position{line: 143, col: 14, offset: 5448},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 143, col: 14, offset: 5448},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 143, col: 19, offset: 5453},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection2Element29,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection2Element39,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 143, col: 27, offset: 5461},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 145, col: 5, offset: 5515},
															run: (*parser).callonSection2Element53,
															expr: &seqExpr{
																pos: position{line: 145, col: 5, offset: 5515},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 145, col: 5, offset: 5515},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 145, col: 10, offset: 5520},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection2Element57,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection2Element67,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 145, col: 18, offset: 5528},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 155, col: 17, offset: 5831},
															run: (*parser).callonSection2Element81,
															expr: &seqExpr{
																pos: position{line: 155, col: 17, offset: 5831},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 155, col: 17, offset: 5831},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 155, col: 21, offset: 5835},
																		expr: &litMatcher{
																			pos:        position{line: 155, col: 22, offset: 5836},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 155, col: 26, offset: 5840},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection2Element89,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 155, col: 30, offset: 5844},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 159, col: 24, offset: 5949},
																			run: (*parser).callonSection2Element92,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 159, col: 24, offset: 5949},
																				expr: &seqExpr{
																					pos: position{line: 159, col: 25, offset: 5950},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 159, col: 25, offset: 5950},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 159, col: 34, offset: 5959,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 165, col: 16, offset: 6108},
															run: (*parser).callonSection2Element100,
															expr: &seqExpr{
																pos: position{line: 165, col: 16, offset: 6108},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 165, col: 16, offset: 6108},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 165, col: 21, offset: 6113},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection2Element106,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 165, col: 25, offset: 6117},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 169, col: 23, offset: 6221},
																			run: (*parser).callonSection2Element109,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 169, col: 23, offset: 6221},
																				expr: &seqExpr{
																					pos: position{line: 169, col: 24, offset: 6222},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 169, col: 24, offset: 6222},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 169, col: 33, offset: 6231},
																							expr: &litMatcher{
																								pos:        position{line: 169, col: 34, offset: 6232},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 169, col: 38, offset: 6236,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 165, col: 51, offset: 6143},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 174, col: 30, offset: 6385},
															run: (*parser).callonSection2Element120,
															expr: &seqExpr{
																pos: position{line: 174, col: 30, offset: 6385},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 30, offset: 6385},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 34, offset: 6389},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 507, col: 19, offset: 19712},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 507, col: 19, offset: 19712},
																					run: (*parser).callonSection2Element125,
																					expr: &litMatcher{
																						pos:        position{line: 507, col: 19, offset: 19712},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 509, col: 5, offset: 19750},
																					run: (*parser).callonSection2Element127,
																					expr: &litMatcher{
																						pos:        position{line: 509, col: 5, offset: 19750},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 511, col: 5, offset: 19790},
																					run: (*parser).callonSection2Element129,
																					expr: &litMatcher{
																						pos:        position{line: 511, col: 5, offset: 19790},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 513, col: 5, offset: 19840},
																					run: (*parser).callonSection2Element131,
																					expr: &litMatcher{
																						pos:        position{line: 513, col: 5, offset: 19840},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 515, col: 5, offset: 19886},
																					run: (*parser).callonSection2Element133,
																					expr: &litMatcher{
																						pos:        position{line: 515, col: 5, offset: 19886},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 53, offset: 6408},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 197, col: 21, offset: 7157},
															run: (*parser).callonSection2Element136,
															expr: &litMatcher{
																pos:        position{line: 197, col: 21, offset: 7157},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 179, col: 19, offset: 6569},
															run: (*parser).callonSection2Element138,
															expr: &seqExpr{
																pos: position{line: 179, col: 19, offset: 6569},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 179, col: 19, offset: 6569},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 179, col: 23, offset: 6573},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection2Element144,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 179, col: 27, offset: 6577},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 179, col: 38, offset: 6588},
																			expr: &choiceExpr{
																				pos: position{line: 183, col: 21, offset: 6701},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						run: (*parser).callonSection2Element149,
																						expr: &seqExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 183, col: 21, offset: 6701},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection2Element152,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection2Element155,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection2Element158,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection2Element161,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 183, col: 40, offset: 6720},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 183, col: 44, offset: 6724},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 193, col: 19, offset: 7075},
																										run: (*parser).callonSection2Element175,
																										expr: &labeledExpr{
																											pos:   position{line: 193, col: 19, offset: 7075},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 193, col: 25, offset: 7081},
																												expr: &seqExpr{
																													pos: position{line: 193, col: 26, offset: 7082},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 193, col: 26, offset: 7082},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 27, offset: 7083},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 31, offset: 7087},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 32, offset: 7088},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 36, offset: 7092},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 37, offset: 7093},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 193, col: 41, offset: 7097,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 183, col: 67, offset: 6747},
																									expr: &litMatcher{
																										pos:        position{line: 183, col: 67, offset: 6747},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 183, col: 72, offset: 6752},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection2Element191,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						run: (*parser).callonSection2Element193,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 5, offset: 6836},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection2Element196,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection2Element199,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection2Element202,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection2Element205,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 24, offset: 6855},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 24, offset: 6855},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 29, offset: 6860},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection2Element222,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 179, col: 59, offset: 6609},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5202},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonSection2Element228,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 304, col: 5, offset: 11006},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 304, col: 14, offset: 11015},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 304, col: 14, offset: 11015},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 304, col: 25, offset: 11026},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 304, col: 36, offset: 11037},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 304, col: 47, offset: 11048},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3",
			pos:  position{line: 308, col: 1, offset: 11147},
			expr: &actionExpr{
				pos: position{line: 308, col: 13, offset: 11159},
				run: (*parser).callonSection31,
				expr: &seqExpr{
					pos: position{line: 308, col: 13, offset: 11159},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 308, col: 13, offset: 11159},
							expr: &notExpr{
								pos: position{line: 1099, col: 8, offset: 46075},
								expr: &anyMatcher{
									line: 1099, col: 9, offset: 46076,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 309, col: 5, offset: 11230},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 309, col: 13, offset: 11238},
								name: "Section3Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 309, col: 28, offset: 11253},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 309, col: 38, offset: 11263},
								expr: &ruleRefExpr{
									pos:  position{line: 309, col: 38, offset: 11263},
									name: "Section3Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Title",
			pos:  position{line: 315, col: 1, offset: 11416},
			expr: &actionExpr{
				pos: position{line: 315, col: 18, offset: 11433},
				run: (*parser).callonSection3Title1,
				expr: &seqExpr{
					pos: position{line: 315, col: 18, offset: 11433},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 313, col: 24, offset: 11403},
							val:        "====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 313, col: 31, offset: 11410},
							expr: &choiceExpr{
								pos: position{line: 1093, col: 7, offset: 45984},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1093, col: 7, offset: 45984},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1093, col: 13, offset: 45990},
										run: (*parser).callonSection3Title7,
										expr: &litMatcher{
											pos:        position{line: 1093, col: 13, offset: 45990},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 315, col: 38, offset: 11453},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 315, col: 48, offset: 11463},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 315, col: 63, offset: 11478},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 315, col: 67, offset: 11482},
								expr: &actionExpr{
									pos: position{line: 149, col: 20, offset: 5599},
									run: (*parser).callonSection3Title13,
									expr: &seqExpr{
										pos: position{line: 149, col: 20, offset: 5599},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 149, col: 20, offset: 5599},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 149, col: 25, offset: 5604},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1079, col: 7, offset: 45702},
													run: (*parser).callonSection3Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														expr: &seqExpr{
															pos: position{line: 1079, col: 8, offset: 45703},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1079, col: 8, offset: 45703},
																	expr: &choiceExpr{
																		pos: position{line: 1097, col: 12, offset: 46046},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1097, col: 12, offset: 46046},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1097, col: 21, offset: 46055},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 17, offset: 45712},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonSection3Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 21, offset: 45716},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 22, offset: 45717},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 26, offset: 45721},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 27, offset: 45722},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 31, offset: 45726},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 32, offset: 45727},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 37, offset: 45732},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 38, offset: 45733},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 43, offset: 45738},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 44, offset: 45739},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1079, col: 48, offset: 45743,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 149, col: 33, offset: 5612},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 149, col: 38, offset: 5617},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonSection3Title44,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Element",
			pos:  position{line: 319, col: 1, offset: 11598},
			expr: &actionExpr{
				pos: position{line: 319, col: 20, offset: 11617},
				run: (*parser).callonSection3Element1,
				expr: &seqExpr{
					pos: position{line: 319, col: 20, offset: 11617},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 319, col: 20, offset: 11617},
							expr: &seqExpr{
								pos: position{line: 279, col: 24, offset: 10029},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 279, col: 24, offset: 10029},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 279, col: 29, offset: 10034},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonSection3Element9,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 319, col: 41, offset: 11638},
							expr: &seqExpr{
								pos: position{line: 296, col: 24, offset: 10710},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 296, col: 24, offset: 10710},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 296, col: 30, offset: 10716},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonSection3Element17,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 319, col: 62, offset: 11659},
							expr: &seqExpr{
								pos: position{line: 313, col: 24, offset: 11403},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 313, col: 24, offset: 11403},
										val:        "====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 313, col: 31, offset: 11410},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonSection3Element25,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 320, col: 5, offset: 11684},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 320, col: 16, offset: 11695},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection3Element29,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5092},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5098},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 143, col: 14, offset: 5448},
															run: (*parser).callonSection3Element33,
															expr: &seqExpr{
																pos: position{line: 143, col: 14, offset: 5448},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 143, col: 14, offset: 5448},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 143, col: 19, offset: 5453},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection3Element37,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection3Element47,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 143, col: 27, offset: 5461},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 145, col: 5, offset: 5515},
															run: (*parser).callonSection3Element61,
															expr: &seqExpr{
																pos: position{line: 145, col: 5, offset: 5515},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 145, col: 5, offset: 5515},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 145, col: 10, offset: 5520},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection3Element65,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection3Element75,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 145, col: 18, offset: 5528},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 155, col: 17, offset: 5831},
															run: (*parser).callonSection3Element89,
															expr: &seqExpr{
																pos: position{line: 155, col: 17, offset: 5831},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 155, col: 17, offset: 5831},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 155, col: 21, offset: 5835},
																		expr: &litMatcher{
																			pos:        position{line: 155, col: 22, offset: 5836},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 155, col: 26, offset: 5840},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection3Element97,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 155, col: 30, offset: 5844},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 159, col: 24, offset: 5949},
																			run: (*parser).callonSection3Element100,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 159, col: 24, offset: 5949},
																				expr: &seqExpr{
																					pos: position{line: 159, col: 25, offset: 5950},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 159, col: 25, offset: 5950},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 159, col: 34, offset: 5959,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 165, col: 16, offset: 6108},
															run: (*parser).callonSection3Element108,
															expr: &seqExpr{
																pos: position{line: 165, col: 16, offset: 6108},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 165, col: 16, offset: 6108},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 165, col: 21, offset: 6113},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection3Element114,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 165, col: 25, offset: 6117},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 169, col: 23, offset: 6221},
																			run: (*parser).callonSection3Element117,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 169, col: 23, offset: 6221},
																				expr: &seqExpr{
																					pos: position{line: 169, col: 24, offset: 6222},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 169, col: 24, offset: 6222},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 169, col: 33, offset: 6231},
																							expr: &litMatcher{
																								pos:        position{line: 169, col: 34, offset: 6232},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 169, col: 38, offset: 6236,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 165, col: 51, offset: 6143},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 174, col: 30, offset: 6385},
															run: (*parser).callonSection3Element128,
															expr: &seqExpr{
																pos: position{line: 174, col: 30, offset: 6385},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 30, offset: 6385},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 34, offset: 6389},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 507, col: 19, offset: 19712},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 507, col: 19, offset: 19712},
																					run: (*parser).callonSection3Element133,
																					expr: &litMatcher{
																						pos:        position{line: 507, col: 19, offset: 19712},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 509, col: 5, offset: 19750},
																					run: (*parser).callonSection3Element135,
																					expr: &litMatcher{
																						pos:        position{line: 509, col: 5, offset: 19750},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 511, col: 5, offset: 19790},
																					run: (*parser).callonSection3Element137,
																					expr: &litMatcher{
																						pos:        position{line: 511, col: 5, offset: 19790},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 513, col: 5, offset: 19840},
																					run: (*parser).callonSection3Element139,
																					expr: &litMatcher{
																						pos:        position{line: 513, col: 5, offset: 19840},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 515, col: 5, offset: 19886},
																					run: (*parser).callonSection3Element141,
																					expr: &litMatcher{
																						pos:        position{line: 515, col: 5, offset: 19886},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 53, offset: 6408},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 197, col: 21, offset: 7157},
															run: (*parser).callonSection3Element144,
															expr: &litMatcher{
																pos:        position{line: 197, col: 21, offset: 7157},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 179, col: 19, offset: 6569},
															run: (*parser).callonSection3Element146,
															expr: &seqExpr{
																pos: position{line: 179, col: 19, offset: 6569},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 179, col: 19, offset: 6569},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 179, col: 23, offset: 6573},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection3Element152,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 179, col: 27, offset: 6577},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 179, col: 38, offset: 6588},
																			expr: &choiceExpr{
																				pos: position{line: 183, col: 21, offset: 6701},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						run: (*parser).callonSection3Element157,
																						expr: &seqExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 183, col: 21, offset: 6701},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection3Element160,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection3Element163,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection3Element166,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection3Element169,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 183, col: 40, offset: 6720},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 183, col: 44, offset: 6724},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 193, col: 19, offset: 7075},
																										run: (*parser).callonSection3Element183,
																										expr: &labeledExpr{
																											pos:   position{line: 193, col: 19, offset: 7075},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 193, col: 25, offset: 7081},
																												expr: &seqExpr{
																													pos: position{line: 193, col: 26, offset: 7082},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 193, col: 26, offset: 7082},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 27, offset: 7083},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 31, offset: 7087},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 32, offset: 7088},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 36, offset: 7092},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 37, offset: 7093},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 193, col: 41, offset: 7097,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 183, col: 67, offset: 6747},
																									expr: &litMatcher{
																										pos:        position{line: 183, col: 67, offset: 6747},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 183, col: 72, offset: 6752},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection3Element199,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						run: (*parser).callonSection3Element201,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 5, offset: 6836},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection3Element204,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection3Element207,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection3Element210,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection3Element213,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 24, offset: 6855},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 24, offset: 6855},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 29, offset: 6860},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection3Element230,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 179, col: 59, offset: 6609},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5202},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonSection3Element236,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 321, col: 5, offset: 11720},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 321, col: 14, offset: 11729},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 321, col: 14, offset: 11729},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 321, col: 25, offset: 11740},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 321, col: 36, offset: 11751},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4",
			pos:  position{line: 325, col: 1, offset: 11850},
			expr: &actionExpr{
				pos: position{line: 325, col: 13, offset: 11862},
				run: (*parser).callonSection41,
				expr: &seqExpr{
					pos: position{line: 325, col: 13, offset: 11862},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 325, col: 13, offset: 11862},
							expr: &notExpr{
								pos: position{line: 1099, col: 8, offset: 46075},
								expr: &anyMatcher{
									line: 1099, col: 9, offset: 46076,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 326, col: 5, offset: 11933},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 326, col: 13, offset: 11941},
								name: "Section4Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 326, col: 28, offset: 11956},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 326, col: 38, offset: 11966},
								expr: &ruleRefExpr{
									pos:  position{line: 326, col: 38, offset: 11966},
									name: "Section4Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Title",
			pos:  position{line: 332, col: 1, offset: 12120},
			expr: &actionExpr{
				pos: position{line: 332, col: 18, offset: 12137},
				run: (*parser).callonSection4Title1,
				expr: &seqExpr{
					pos: position{line: 332, col: 18, offset: 12137},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 330, col: 24, offset: 12106},
							val:        "=====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 330, col: 32, offset: 12114},
							expr: &choiceExpr{
								pos: position{line: 1093, col: 7, offset: 45984},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1093, col: 7, offset: 45984},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1093, col: 13, offset: 45990},
										run: (*parser).callonSection4Title7,
										expr: &litMatcher{
											pos:        position{line: 1093, col: 13, offset: 45990},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 332, col: 38, offset: 12157},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 332, col: 48, offset: 12167},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 332, col: 63, offset: 12182},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 332, col: 67, offset: 12186},
								expr: &actionExpr{
									pos: position{line: 149, col: 20, offset: 5599},
									run: (*parser).callonSection4Title13,
									expr: &seqExpr{
										pos: position{line: 149, col: 20, offset: 5599},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 149, col: 20, offset: 5599},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 149, col: 25, offset: 5604},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1079, col: 7, offset: 45702},
													run: (*parser).callonSection4Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														expr: &seqExpr{
															pos: position{line: 1079, col: 8, offset: 45703},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1079, col: 8, offset: 45703},
																	expr: &choiceExpr{
																		pos: position{line: 1097, col: 12, offset: 46046},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1097, col: 12, offset: 46046},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1097, col: 21, offset: 46055},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 17, offset: 45712},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonSection4Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 21, offset: 45716},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 22, offset: 45717},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 26, offset: 45721},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 27, offset: 45722},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 31, offset: 45726},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 32, offset: 45727},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 37, offset: 45732},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 38, offset: 45733},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 43, offset: 45738},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 44, offset: 45739},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1079, col: 48, offset: 45743,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 149, col: 33, offset: 5612},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 149, col: 38, offset: 5617},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonSection4Title44,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Element",
			pos:  position{line: 336, col: 1, offset: 12301},
			expr: &actionExpr{
				pos: position{line: 336, col: 20, offset: 12320},
				run: (*parser).callonSection4Element1,
				expr: &seqExpr{
					pos: position{line: 336, col: 20, offset: 12320},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 336, col: 20, offset: 12320},
							expr: &seqExpr{
								pos: position{line: 279, col: 24, offset: 10029},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 279, col: 24, offset: 10029},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 279, col: 29, offset: 10034},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonSection4Element9,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 336, col: 41, offset: 12341},
							expr: &seqExpr{
								pos: position{line: 296, col: 24, offset: 10710},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 296, col: 24, offset: 10710},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 296, col: 30, offset: 10716},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonSection4Element17,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 336, col: 62, offset: 12362},
							expr: &seqExpr{
								pos: position{line: 313, col: 24, offset: 11403},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 313, col: 24, offset: 11403},
										val:        "====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 313, col: 31, offset: 11410},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonSection4Element25,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 336, col: 83, offset: 12383},
							expr: &seqExpr{
								pos: position{line: 330, col: 24, offset: 12106},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 330, col: 24, offset: 12106},
										val:        "=====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 330, col: 32, offset: 12114},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonSection4Element33,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 337, col: 5, offset: 12408},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 337, col: 16, offset: 12419},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection4Element37,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5092},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5098},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 143, col: 14, offset: 5448},
															run: (*parser).callonSection4Element41,
															expr: &seqExpr{
																pos: position{line: 143, col: 14, offset: 5448},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 143, col: 14, offset: 5448},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 143, col: 19, offset: 5453},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection4Element45,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection4Element55,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 143, col: 27, offset: 5461},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 145, col: 5, offset: 5515},
															run: (*parser).callonSection4Element69,
															expr: &seqExpr{
																pos: position{line: 145, col: 5, offset: 5515},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 145, col: 5, offset: 5515},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 145, col: 10, offset: 5520},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection4Element73,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection4Element83,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 145, col: 18, offset: 5528},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 155, col: 17, offset: 5831},
															run: (*parser).callonSection4Element97,
															expr: &seqExpr{
																pos: position{line: 155, col: 17, offset: 5831},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 155, col: 17, offset: 5831},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 155, col: 21, offset: 5835},
																		expr: &litMatcher{
																			pos:        position{line: 155, col: 22, offset: 5836},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 155, col: 26, offset: 5840},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection4Element105,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 155, col: 30, offset: 5844},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 159, col: 24, offset: 5949},
																			run: (*parser).callonSection4Element108,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 159, col: 24, offset: 5949},
																				expr: &seqExpr{
																					pos: position{line: 159, col: 25, offset: 5950},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 159, col: 25, offset: 5950},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 159, col: 34, offset: 5959,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 165, col: 16, offset: 6108},
															run: (*parser).callonSection4Element116,
															expr: &seqExpr{
																pos: position{line: 165, col: 16, offset: 6108},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 165, col: 16, offset: 6108},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 165, col: 21, offset: 6113},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection4Element122,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 165, col: 25, offset: 6117},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 169, col: 23, offset: 6221},
																			run: (*parser).callonSection4Element125,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 169, col: 23, offset: 6221},
																				expr: &seqExpr{
																					pos: position{line: 169, col: 24, offset: 6222},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 169, col: 24, offset: 6222},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 169, col: 33, offset: 6231},
																							expr: &litMatcher{
																								pos:        position{line: 169, col: 34, offset: 6232},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 169, col: 38, offset: 6236,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 165, col: 51, offset: 6143},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 174, col: 30, offset: 6385},
															run: (*parser).callonSection4Element136,
															expr: &seqExpr{
																pos: position{line: 174, col: 30, offset: 6385},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 30, offset: 6385},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 34, offset: 6389},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 507, col: 19, offset: 19712},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 507, col: 19, offset: 19712},
																					run: (*parser).callonSection4Element141,
																					expr: &litMatcher{
																						pos:        position{line: 507, col: 19, offset: 19712},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 509, col: 5, offset: 19750},
																					run: (*parser).callonSection4Element143,
																					expr: &litMatcher{
																						pos:        position{line: 509, col: 5, offset: 19750},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 511, col: 5, offset: 19790},
																					run: (*parser).callonSection4Element145,
																					expr: &litMatcher{
																						pos:        position{line: 511, col: 5, offset: 19790},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 513, col: 5, offset: 19840},
																					run: (*parser).callonSection4Element147,
																					expr: &litMatcher{
																						pos:        position{line: 513, col: 5, offset: 19840},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 515, col: 5, offset: 19886},
																					run: (*parser).callonSection4Element149,
																					expr: &litMatcher{
																						pos:        position{line: 515, col: 5, offset: 19886},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 53, offset: 6408},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 197, col: 21, offset: 7157},
															run: (*parser).callonSection4Element152,
															expr: &litMatcher{
																pos:        position{line: 197, col: 21, offset: 7157},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 179, col: 19, offset: 6569},
															run: (*parser).callonSection4Element154,
															expr: &seqExpr{
																pos: position{line: 179, col: 19, offset: 6569},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 179, col: 19, offset: 6569},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 179, col: 23, offset: 6573},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection4Element160,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 179, col: 27, offset: 6577},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 179, col: 38, offset: 6588},
																			expr: &choiceExpr{
																				pos: position{line: 183, col: 21, offset: 6701},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						run: (*parser).callonSection4Element165,
																						expr: &seqExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 183, col: 21, offset: 6701},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection4Element168,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection4Element171,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection4Element174,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection4Element177,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 183, col: 40, offset: 6720},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 183, col: 44, offset: 6724},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 193, col: 19, offset: 7075},
																										run: (*parser).callonSection4Element191,
																										expr: &labeledExpr{
																											pos:   position{line: 193, col: 19, offset: 7075},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 193, col: 25, offset: 7081},
																												expr: &seqExpr{
																													pos: position{line: 193, col: 26, offset: 7082},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 193, col: 26, offset: 7082},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 27, offset: 7083},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 31, offset: 7087},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 32, offset: 7088},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 36, offset: 7092},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 37, offset: 7093},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 193, col: 41, offset: 7097,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 183, col: 67, offset: 6747},
																									expr: &litMatcher{
																										pos:        position{line: 183, col: 67, offset: 6747},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 183, col: 72, offset: 6752},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection4Element207,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						run: (*parser).callonSection4Element209,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 5, offset: 6836},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection4Element212,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection4Element215,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection4Element218,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection4Element221,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 24, offset: 6855},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 24, offset: 6855},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 29, offset: 6860},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection4Element238,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 179, col: 59, offset: 6609},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5202},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonSection4Element244,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 338, col: 5, offset: 12444},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 338, col: 14, offset: 12453},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 338, col: 14, offset: 12453},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 338, col: 25, offset: 12464},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5",
			pos:  position{line: 342, col: 1, offset: 12563},
			expr: &actionExpr{
				pos: position{line: 342, col: 13, offset: 12575},
				run: (*parser).callonSection51,
				expr: &seqExpr{
					pos: position{line: 342, col: 13, offset: 12575},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 342, col: 13, offset: 12575},
							expr: &notExpr{
								pos: position{line: 1099, col: 8, offset: 46075},
								expr: &anyMatcher{
									line: 1099, col: 9, offset: 46076,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 343, col: 5, offset: 12646},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 343, col: 13, offset: 12654},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 343, col: 28, offset: 12669},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 343, col: 38, offset: 12679},
								expr: &ruleRefExpr{
									pos:  position{line: 343, col: 38, offset: 12679},
									name: "Section5Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Title",
			pos:  position{line: 349, col: 1, offset: 12834},
			expr: &actionExpr{
				pos: position{line: 349, col: 18, offset: 12851},
				run: (*parser).callonSection5Title1,
				expr: &seqExpr{
					pos: position{line: 349, col: 18, offset: 12851},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 347, col: 24, offset: 12819},
							val:        "======",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 347, col: 33, offset: 12828},
							expr: &choiceExpr{
								pos: position{line: 1093, col: 7, offset: 45984},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1093, col: 7, offset: 45984},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1093, col: 13, offset: 45990},
										run: (*parser).callonSection5Title7,
										expr: &litMatcher{
											pos:        position{line: 1093, col: 13, offset: 45990},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 349, col: 38, offset: 12871},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 349, col: 48, offset: 12881},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 349, col: 63, offset: 12896},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 349, col: 67, offset: 12900},
								expr: &actionExpr{
									pos: position{line: 149, col: 20, offset: 5599},
									run: (*parser).callonSection5Title13,
									expr: &seqExpr{
										pos: position{line: 149, col: 20, offset: 5599},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 149, col: 20, offset: 5599},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 149, col: 25, offset: 5604},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1079, col: 7, offset: 45702},
													run: (*parser).callonSection5Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														expr: &seqExpr{
															pos: position{line: 1079, col: 8, offset: 45703},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1079, col: 8, offset: 45703},
																	expr: &choiceExpr{
																		pos: position{line: 1097, col: 12, offset: 46046},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1097, col: 12, offset: 46046},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1097, col: 21, offset: 46055},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 17, offset: 45712},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonSection5Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 21, offset: 45716},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 22, offset: 45717},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 26, offset: 45721},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 27, offset: 45722},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 31, offset: 45726},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 32, offset: 45727},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 37, offset: 45732},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 38, offset: 45733},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1079, col: 43, offset: 45738},
																	expr: &litMatcher{
																		pos:        position{line: 1079, col: 44, offset: 45739},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1079, col: 48, offset: 45743,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 149, col: 33, offset: 5612},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 149, col: 38, offset: 5617},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonSection5Title44,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Element",
			pos:  position{line: 353, col: 1, offset: 13016},
			expr: &actionExpr{
				pos: position{line: 354, col: 5, offset: 13040},
				run: (*parser).callonSection5Element1,
				expr: &seqExpr{
					pos: position{line: 354, col: 5, offset: 13040},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 354, col: 5, offset: 13040},
							expr: &ruleRefExpr{
								pos:  position{line: 354, col: 6, offset: 13041},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 354, col: 20, offset: 13055},
							expr: &ruleRefExpr{
								pos:  position{line: 354, col: 21, offset: 13056},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 354, col: 35, offset: 13070},
							expr: &ruleRefExpr{
								pos:  position{line: 354, col: 36, offset: 13071},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 354, col: 50, offset: 13085},
							expr: &ruleRefExpr{
								pos:  position{line: 354, col: 51, offset: 13086},
								name: "Section4Title",
							},
						},
						&notExpr{
							pos: position{line: 354, col: 65, offset: 13100},
							expr: &ruleRefExpr{
								pos:  position{line: 354, col: 66, offset: 13101},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 355, col: 5, offset: 13120},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 355, col: 16, offset: 13131},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection5Element15,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5092},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5098},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 143, col: 14, offset: 5448},
															run: (*parser).callonSection5Element19,
															expr: &seqExpr{
																pos: position{line: 143, col: 14, offset: 5448},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 143, col: 14, offset: 5448},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 143, col: 19, offset: 5453},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection5Element23,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection5Element33,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 143, col: 27, offset: 5461},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 145, col: 5, offset: 5515},
															run: (*parser).callonSection5Element47,
															expr: &seqExpr{
																pos: position{line: 145, col: 5, offset: 5515},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 145, col: 5, offset: 5515},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 145, col: 10, offset: 5520},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonSection5Element51,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonSection5Element61,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 145, col: 18, offset: 5528},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 155, col: 17, offset: 5831},
															run: (*parser).callonSection5Element75,
															expr: &seqExpr{
																pos: position{line: 155, col: 17, offset: 5831},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 155, col: 17, offset: 5831},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 155, col: 21, offset: 5835},
																		expr: &litMatcher{
																			pos:        position{line: 155, col: 22, offset: 5836},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 155, col: 26, offset: 5840},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection5Element83,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 155, col: 30, offset: 5844},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 159, col: 24, offset: 5949},
																			run: (*parser).callonSection5Element86,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 159, col: 24, offset: 5949},
																				expr: &seqExpr{
																					pos: position{line: 159, col: 25, offset: 5950},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 159, col: 25, offset: 5950},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 159, col: 34, offset: 5959,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 165, col: 16, offset: 6108},
															run: (*parser).callonSection5Element94,
															expr: &seqExpr{
																pos: position{line: 165, col: 16, offset: 6108},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 165, col: 16, offset: 6108},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 165, col: 21, offset: 6113},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection5Element100,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 165, col: 25, offset: 6117},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 169, col: 23, offset: 6221},
																			run: (*parser).callonSection5Element103,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 169, col: 23, offset: 6221},
																				expr: &seqExpr{
																					pos: position{line: 169, col: 24, offset: 6222},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 169, col: 24, offset: 6222},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 169, col: 33, offset: 6231},
																							expr: &litMatcher{
																								pos:        position{line: 169, col: 34, offset: 6232},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 169, col: 38, offset: 6236,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 165, col: 51, offset: 6143},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 174, col: 30, offset: 6385},
															run: (*parser).callonSection5Element114,
															expr: &seqExpr{
																pos: position{line: 174, col: 30, offset: 6385},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 30, offset: 6385},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 34, offset: 6389},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 507, col: 19, offset: 19712},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 507, col: 19, offset: 19712},
																					run: (*parser).callonSection5Element119,
																					expr: &litMatcher{
																						pos:        position{line: 507, col: 19, offset: 19712},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 509, col: 5, offset: 19750},
																					run: (*parser).callonSection5Element121,
																					expr: &litMatcher{
																						pos:        position{line: 509, col: 5, offset: 19750},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 511, col: 5, offset: 19790},
																					run: (*parser).callonSection5Element123,
																					expr: &litMatcher{
																						pos:        position{line: 511, col: 5, offset: 19790},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 513, col: 5, offset: 19840},
																					run: (*parser).callonSection5Element125,
																					expr: &litMatcher{
																						pos:        position{line: 513, col: 5, offset: 19840},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 515, col: 5, offset: 19886},
																					run: (*parser).callonSection5Element127,
																					expr: &litMatcher{
																						pos:        position{line: 515, col: 5, offset: 19886},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 53, offset: 6408},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 197, col: 21, offset: 7157},
															run: (*parser).callonSection5Element130,
															expr: &litMatcher{
																pos:        position{line: 197, col: 21, offset: 7157},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 179, col: 19, offset: 6569},
															run: (*parser).callonSection5Element132,
															expr: &seqExpr{
																pos: position{line: 179, col: 19, offset: 6569},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 179, col: 19, offset: 6569},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 179, col: 23, offset: 6573},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonSection5Element138,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 179, col: 27, offset: 6577},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 179, col: 38, offset: 6588},
																			expr: &choiceExpr{
																				pos: position{line: 183, col: 21, offset: 6701},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						run: (*parser).callonSection5Element143,
																						expr: &seqExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 183, col: 21, offset: 6701},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection5Element146,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection5Element149,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection5Element152,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection5Element155,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 183, col: 40, offset: 6720},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 183, col: 44, offset: 6724},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 193, col: 19, offset: 7075},
																										run: (*parser).callonSection5Element169,
																										expr: &labeledExpr{
																											pos:   position{line: 193, col: 19, offset: 7075},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 193, col: 25, offset: 7081},
																												expr: &seqExpr{
																													pos: position{line: 193, col: 26, offset: 7082},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 193, col: 26, offset: 7082},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 27, offset: 7083},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 31, offset: 7087},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 32, offset: 7088},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 36, offset: 7092},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 37, offset: 7093},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 193, col: 41, offset: 7097,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 183, col: 67, offset: 6747},
																									expr: &litMatcher{
																										pos:        position{line: 183, col: 67, offset: 6747},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 183, col: 72, offset: 6752},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection5Element185,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						run: (*parser).callonSection5Element187,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 5, offset: 6836},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonSection5Element190,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonSection5Element193,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonSection5Element196,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonSection5Element199,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 24, offset: 6855},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 24, offset: 6855},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 29, offset: 6860},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonSection5Element216,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 179, col: 59, offset: 6609},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5202},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonSection5Element222,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 356, col: 5, offset: 13156},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 356, col: 14, offset: 13165},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElements",
			pos:  position{line: 360, col: 1, offset: 13264},
			expr: &actionExpr{
				pos: position{line: 360, col: 18, offset: 13281},
				run: (*parser).callonTitleElements1,
				expr: &labeledExpr{
					pos:   position{line: 360, col: 18, offset: 13281},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 360, col: 27, offset: 13290},
						expr: &seqExpr{
							pos: position{line: 360, col: 28, offset: 13291},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 360, col: 28, offset: 13291},
									expr: &choiceExpr{
										pos: position{line: 1097, col: 12, offset: 46046},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1097, col: 12, offset: 46046},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1097, col: 21, offset: 46055},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 360, col: 37, offset: 13300},
									expr: &choiceExpr{
										pos: position{line: 1093, col: 7, offset: 45984},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonTitleElements12,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 360, col: 41, offset: 13304},
									expr: &actionExpr{
										pos: position{line: 149, col: 20, offset: 5599},
										run: (*parser).callonTitleElements15,
										expr: &seqExpr{
											pos: position{line: 149, col: 20, offset: 5599},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 149, col: 20, offset: 5599},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 149, col: 25, offset: 5604},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														run: (*parser).callonTitleElements19,
														expr: &oneOrMoreExpr{
															pos: position{line: 1079, col: 7, offset: 45702},
															expr: &seqExpr{
																pos: position{line: 1079, col: 8, offset: 45703},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1079, col: 8, offset: 45703},
																		expr: &choiceExpr{
																			pos: position{line: 1097, col: 12, offset: 46046},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 17, offset: 45712},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonTitleElements29,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 21, offset: 45716},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 22, offset: 45717},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 26, offset: 45721},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 27, offset: 45722},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 31, offset: 45726},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 32, offset: 45727},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 37, offset: 45732},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 38, offset: 45733},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 43, offset: 45738},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 44, offset: 45739},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1079, col: 48, offset: 45743,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 149, col: 33, offset: 5612},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 149, col: 38, offset: 5617},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonTitleElements46,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 360, col: 58, offset: 13321},
									name: "TitleElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 360, col: 71, offset: 13334},
									expr: &choiceExpr{
										pos: position{line: 1093, col: 7, offset: 45984},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonTitleElements52,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElement",
			pos:  position{line: 364, col: 1, offset: 13446},
			expr: &actionExpr{
				pos: position{line: 364, col: 17, offset: 13462},
				run: (*parser).callonTitleElement1,
				expr: &labeledExpr{
					pos:   position{line: 364, col: 17, offset: 13462},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 364, col: 26, offset: 13471},
						alternatives: []interface{}{
							&actionExpr{
								pos: position{line: 724, col: 19, offset: 31990},
								run: (*parser).callonTitleElement4,
								expr: &seqExpr{
									pos: position{line: 724, col: 19, offset: 31990},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 724, col: 19, offset: 31990},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 724, col: 24, offset: 31995},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1079, col: 7, offset: 45702},
												run: (*parser).callonTitleElement8,
												expr: &oneOrMoreExpr{
													pos: position{line: 1079, col: 7, offset: 45702},
													expr: &seqExpr{
														pos: position{line: 1079, col: 8, offset: 45703},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1079, col: 8, offset: 45703},
																expr: &choiceExpr{
																	pos: position{line: 1097, col: 12, offset: 46046},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1079, col: 17, offset: 45712},
																expr: &choiceExpr{
																	pos: position{line: 1093, col: 7, offset: 45984},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1093, col: 7, offset: 45984},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1093, col: 13, offset: 45990},
																			run: (*parser).callonTitleElement18,
																			expr: &litMatcher{
																				pos:        position{line: 1093, col: 13, offset: 45990},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1079, col: 21, offset: 45716},
																expr: &litMatcher{
																	pos:        position{line: 1079, col: 22, offset: 45717},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1079, col: 26, offset: 45721},
																expr: &litMatcher{
																	pos:        position{line: 1079, col: 27, offset: 45722},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1079, col: 31, offset: 45726},
																expr: &litMatcher{
																	pos:        position{line: 1079, col: 32, offset: 45727},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1079, col: 37, offset: 45732},
																expr: &litMatcher{
																	pos:        position{line: 1079, col: 38, offset: 45733},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1079, col: 43, offset: 45738},
																expr: &litMatcher{
																	pos:        position{line: 1079, col: 44, offset: 45739},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1079, col: 48, offset: 45743,
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 724, col: 32, offset: 32003},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonTitleElement34,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 724, col: 36, offset: 32007},
											val:        ",",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 724, col: 40, offset: 32011},
											label: "label",
											expr: &actionExpr{
												pos: position{line: 730, col: 24, offset: 32213},
												run: (*parser).callonTitleElement38,
												expr: &oneOrMoreExpr{
													pos: position{line: 730, col: 24, offset: 32213},
													expr: &seqExpr{
														pos: position{line: 730, col: 25, offset: 32214},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 730, col: 25, offset: 32214},
																expr: &litMatcher{
																	pos:        position{line: 730, col: 26, offset: 32215},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 730, col: 31, offset: 32220,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 724, col: 68, offset: 32039},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 726, col: 5, offset: 32114},
								run: (*parser).callonTitleElement45,
								expr: &seqExpr{
									pos: position{line: 726, col: 5, offset: 32114},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 726, col: 5, offset: 32114},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 726, col: 10, offset: 32119},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1079, col: 7, offset: 45702},
												run: (*parser).callonTitleElement49,
												expr: &oneOrMoreExpr{
													pos: position{line: 1079, col: 7, offset: 45702},
													expr: &seqExpr{
														pos: position{line: 1079, col: 8, offset: 45703},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1079, col: 8, offset: 45703},
																expr: &choiceExpr{
																	pos: position{line: 1097, col: 12, offset: 46046},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1079, col: 17, offset: 45712},
																expr: &choiceExpr{
																	pos: position{line: 1093, col: 7, offset: 45984},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1093, col: 7, offset: 45984},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1093, col: 13, offset: 45990},
																			run: (*parser).callonTitleElement59,
																			expr: &litMatcher{
																				pos:        position{line: 1093, col: 13, offset: 45990},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1079, col: 21, offset: 45716},
																expr: &litMatcher{
																	pos:        position{line: 1079, col: 22, offset: 45717},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1079, col: 26, offset: 45721},
																expr: &litMatcher{
																	pos:        position{line: 1079, col: 27, offset: 45722},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1079, col: 31, offset: 45726},
																expr: &litMatcher{
																	pos:        position{line: 1079, col: 32, offset: 45727},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1079, col: 37, offset: 45732},
																expr: &litMatcher{
																	pos:        position{line: 1079, col: 38, offset: 45733},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1079, col: 43, offset: 45738},
																expr: &litMatcher{
																	pos:        position{line: 1079, col: 44, offset: 45739},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1079, col: 48, offset: 45743,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 726, col: 18, offset: 32127},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 364, col: 43, offset: 13488},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 778, col: 16, offset: 33707},
								run: (*parser).callonTitleElement74,
								expr: &seqExpr{
									pos: position{line: 778, col: 16, offset: 33707},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 778, col: 16, offset: 33707},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 778, col: 25, offset: 33716},
											expr: &litMatcher{
												pos:        position{line: 778, col: 26, offset: 33717},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 778, col: 30, offset: 33721},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 1075, col: 8, offset: 45632},
												run: (*parser).callonTitleElement80,
												expr: &oneOrMoreExpr{
													pos: position{line: 1075, col: 8, offset: 45632},
													expr: &seqExpr{
														pos: position{line: 1075, col: 9, offset: 45633},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1075, col: 9, offset: 45633},
																expr: &choiceExpr{
																	pos: position{line: 1097, col: 12, offset: 46046},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1075, col: 18, offset: 45642},
																expr: &choiceExpr{
																	pos: position{line: 1093, col: 7, offset: 45984},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1093, col: 7, offset: 45984},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1093, col: 13, offset: 45990},
																			run: (*parser).callonTitleElement90,
																			expr: &litMatcher{
																				pos:        position{line: 1093, col: 13, offset: 45990},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1075, col: 22, offset: 45646},
																expr: &litMatcher{
																	pos:        position{line: 1075, col: 23, offset: 45647},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1075, col: 27, offset: 45651},
																expr: &litMatcher{
																	pos:        position{line: 1075, col: 28, offset: 45652},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1075, col: 32, offset: 45656,
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 778, col: 41, offset: 33732},
											label: "inlineAttributes",
											expr: &choiceExpr{
												pos: position{line: 783, col: 20, offset: 33989},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 783, col: 20, offset: 33989},
														run: (*parser).callonTitleElement99,
														expr: &seqExpr{
															pos: position{line: 783, col: 20, offset: 33989},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 783, col: 20, offset: 33989},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 783, col: 24, offset: 33993},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 800, col: 19, offset: 34768},
																		run: (*parser).callonTitleElement103,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 800, col: 19, offset: 34768},
																			expr: &seqExpr{
																				pos: position{line: 800, col: 20, offset: 34769},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 21, offset: 34770},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 800, col: 25, offset: 34774},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 26, offset: 34775},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 800, col: 30, offset: 34779},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 31, offset: 34780},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 800, col: 35, offset: 34784,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 783, col: 45, offset: 34014},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 784, col: 9, offset: 34026},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 800, col: 19, offset: 34768},
																		run: (*parser).callonTitleElement115,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 800, col: 19, offset: 34768},
																			expr: &seqExpr{
																				pos: position{line: 800, col: 20, offset: 34769},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 21, offset: 34770},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 800, col: 25, offset: 34774},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 26, offset: 34775},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 800, col: 30, offset: 34779},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 31, offset: 34780},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 800, col: 35, offset: 34784,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 784, col: 33, offset: 34050},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 785, col: 9, offset: 34062},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 800, col: 19, offset: 34768},
																		run: (*parser).callonTitleElement127,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 800, col: 19, offset: 34768},
																			expr: &seqExpr{
																				pos: position{line: 800, col: 20, offset: 34769},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 21, offset: 34770},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 800, col: 25, offset: 34774},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 26, offset: 34775},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 800, col: 30, offset: 34779},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 31, offset: 34780},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 800, col: 35, offset: 34784,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 785, col: 33, offset: 34086},
																	expr: &litMatcher{
																		pos:        position{line: 785, col: 33, offset: 34086},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 786, col: 9, offset: 34099},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 786, col: 20, offset: 34110},
																		expr: &choiceExpr{
																			pos: position{line: 183, col: 21, offset: 6701},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					run: (*parser).callonTitleElement142,
																					expr: &seqExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 183, col: 21, offset: 6701},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 189, col: 17, offset: 6961},
																									run: (*parser).callonTitleElement145,
																									expr: &seqExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												expr: &actionExpr{
																													pos: position{line: 213, col: 14, offset: 7794},
																													run: (*parser).callonTitleElement148,
																													expr: &litMatcher{
																														pos:        position{line: 213, col: 14, offset: 7794},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 28, offset: 6972},
																												expr: &actionExpr{
																													pos: position{line: 229, col: 14, offset: 8391},
																													run: (*parser).callonTitleElement151,
																													expr: &litMatcher{
																														pos:        position{line: 229, col: 14, offset: 8391},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 39, offset: 6983},
																												expr: &actionExpr{
																													pos: position{line: 1039, col: 16, offset: 44628},
																													run: (*parser).callonTitleElement154,
																													expr: &litMatcher{
																														pos:        position{line: 1039, col: 16, offset: 44628},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 189, col: 52, offset: 6996},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 189, col: 56, offset: 7000},
																													expr: &seqExpr{
																														pos: position{line: 189, col: 57, offset: 7001},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 58, offset: 7002},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 62, offset: 7006},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 63, offset: 7007},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 67, offset: 7011},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 68, offset: 7012},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 189, col: 72, offset: 7016,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 183, col: 40, offset: 6720},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 183, col: 44, offset: 6724},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 193, col: 19, offset: 7075},
																									run: (*parser).callonTitleElement168,
																									expr: &labeledExpr{
																										pos:   position{line: 193, col: 19, offset: 7075},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 193, col: 25, offset: 7081},
																											expr: &seqExpr{
																												pos: position{line: 193, col: 26, offset: 7082},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 27, offset: 7083},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 193, col: 31, offset: 7087},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 32, offset: 7088},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 193, col: 36, offset: 7092},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 37, offset: 7093},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 193, col: 41, offset: 7097,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 183, col: 67, offset: 6747},
																								expr: &litMatcher{
																									pos:        position{line: 183, col: 67, offset: 6747},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 183, col: 72, offset: 6752},
																								expr: &choiceExpr{
																									pos: position{line: 1093, col: 7, offset: 45984},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1093, col: 7, offset: 45984},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1093, col: 13, offset: 45990},
																											run: (*parser).callonTitleElement184,
																											expr: &litMatcher{
																												pos:        position{line: 1093, col: 13, offset: 45990},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 185, col: 5, offset: 6836},
																					run: (*parser).callonTitleElement186,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 5, offset: 6836},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 189, col: 17, offset: 6961},
																									run: (*parser).callonTitleElement189,
																									expr: &seqExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												expr: &actionExpr{
																													pos: position{line: 213, col: 14, offset: 7794},
																													run: (*parser).callonTitleElement192,
																													expr: &litMatcher{
																														pos:        position{line: 213, col: 14, offset: 7794},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 28, offset: 6972},
																												expr: &actionExpr{
																													pos: position{line: 229, col: 14, offset: 8391},
																													run: (*parser).callonTitleElement195,
																													expr: &litMatcher{
																														pos:        position{line: 229, col: 14, offset: 8391},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 39, offset: 6983},
																												expr: &actionExpr{
																													pos: position{line: 1039, col: 16, offset: 44628},
																													run: (*parser).callonTitleElement198,
																													expr: &litMatcher{
																														pos:        position{line: 1039, col: 16, offset: 44628},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 189, col: 52, offset: 6996},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 189, col: 56, offset: 7000},
																													expr: &seqExpr{
																														pos: position{line: 189, col: 57, offset: 7001},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 58, offset: 7002},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 62, offset: 7006},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 63, offset: 7007},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 67, offset: 7011},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 68, offset: 7012},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 189, col: 72, offset: 7016,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 24, offset: 6855},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 24, offset: 6855},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 29, offset: 6860},
																								expr: &choiceExpr{
																									pos: position{line: 1093, col: 7, offset: 45984},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1093, col: 7, offset: 45984},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1093, col: 13, offset: 45990},
																											run: (*parser).callonTitleElement215,
																											expr: &litMatcher{
																												pos:        position{line: 1093, col: 13, offset: 45990},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 786, col: 40, offset: 34130},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 788, col: 9, offset: 34236},
														run: (*parser).callonTitleElement218,
														expr: &seqExpr{
															pos: position{line: 788, col: 9, offset: 34236},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 788, col: 9, offset: 34236},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 788, col: 13, offset: 34240},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 800, col: 19, offset: 34768},
																		run: (*parser).callonTitleElement222,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 800, col: 19, offset: 34768},
																			expr: &seqExpr{
																				pos: position{line: 800, col: 20, offset: 34769},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 21, offset: 34770},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 800, col: 25, offset: 34774},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 26, offset: 34775},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 800, col: 30, offset: 34779},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 31, offset: 34780},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 800, col: 35, offset: 34784,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 788, col: 34, offset: 34261},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 789, col: 9, offset: 34273},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 800, col: 19, offset: 34768},
																		run: (*parser).callonTitleElement234,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 800, col: 19, offset: 34768},
																			expr: &seqExpr{
																				pos: position{line: 800, col: 20, offset: 34769},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 21, offset: 34770},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 800, col: 25, offset: 34774},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 26, offset: 34775},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 800, col: 30, offset: 34779},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 31, offset: 34780},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 800, col: 35, offset: 34784,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 789, col: 32, offset: 34296},
																	expr: &litMatcher{
																		pos:        position{line: 789, col: 32, offset: 34296},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 790, col: 9, offset: 34309},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 790, col: 20, offset: 34320},
																		expr: &choiceExpr{
																			pos: position{line: 183, col: 21, offset: 6701},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					run: (*parser).callonTitleElement249,
																					expr: &seqExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 183, col: 21, offset: 6701},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 189, col: 17, offset: 6961},
																									run: (*parser).callonTitleElement252,
																									expr: &seqExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												expr: &actionExpr{
																													pos: position{line: 213, col: 14, offset: 7794},
																													run: (*parser).callonTitleElement255,
																													expr: &litMatcher{
																														pos:        position{line: 213, col: 14, offset: 7794},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 28, offset: 6972},
																												expr: &actionExpr{
																													pos: position{line: 229, col: 14, offset: 8391},
																													run: (*parser).callonTitleElement258,
																													expr: &litMatcher{
																														pos:        position{line: 229, col: 14, offset: 8391},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 39, offset: 6983},
																												expr: &actionExpr{
																													pos: position{line: 1039, col: 16, offset: 44628},
																													run: (*parser).callonTitleElement261,
																													expr: &litMatcher{
																														pos:        position{line: 1039, col: 16, offset: 44628},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 189, col: 52, offset: 6996},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 189, col: 56, offset: 7000},
																													expr: &seqExpr{
																														pos: position{line: 189, col: 57, offset: 7001},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 58, offset: 7002},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 62, offset: 7006},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 63, offset: 7007},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 67, offset: 7011},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 68, offset: 7012},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 189, col: 72, offset: 7016,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 183, col: 40, offset: 6720},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 183, col: 44, offset: 6724},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 193, col: 19, offset: 7075},
																									run: (*parser).callonTitleElement275,
																									expr: &labeledExpr{
																										pos:   position{line: 193, col: 19, offset: 7075},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 193, col: 25, offset: 7081},
																											expr: &seqExpr{
																												pos: position{line: 193, col: 26, offset: 7082},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 27, offset: 7083},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 193, col: 31, offset: 7087},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 32, offset: 7088},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 193, col: 36, offset: 7092},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 37, offset: 7093},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 193, col: 41, offset: 7097,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 183, col: 67, offset: 6747},
																								expr: &litMatcher{
																									pos:        position{line: 183, col: 67, offset: 6747},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 183, col: 72, offset: 6752},
																								expr: &choiceExpr{
																									pos: position{line: 1093, col: 7, offset: 45984},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1093, col: 7, offset: 45984},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1093, col: 13, offset: 45990},
																											run: (*parser).callonTitleElement291,
																											expr: &litMatcher{
																												pos:        position{line: 1093, col: 13, offset: 45990},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 185, col: 5, offset: 6836},
																					run: (*parser).callonTitleElement293,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 5, offset: 6836},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 189, col: 17, offset: 6961},
																									run: (*parser).callonTitleElement296,
																									expr: &seqExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												expr: &actionExpr{
																													pos: position{line: 213, col: 14, offset: 7794},
																													run: (*parser).callonTitleElement299,
																													expr: &litMatcher{
																														pos:        position{line: 213, col: 14, offset: 7794},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 28, offset: 6972},
																												expr: &actionExpr{
																													pos: position{line: 229, col: 14, offset: 8391},
																													run: (*parser).callonTitleElement302,
																													expr: &litMatcher{
																														pos:        position{line: 229, col: 14, offset: 8391},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 39, offset: 6983},
																												expr: &actionExpr{
																													pos: position{line: 1039, col: 16, offset: 44628},
																													run: (*parser).callonTitleElement305,
																													expr: &litMatcher{
																														pos:        position{line: 1039, col: 16, offset: 44628},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 189, col: 52, offset: 6996},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 189, col: 56, offset: 7000},
																													expr: &seqExpr{
																														pos: position{line: 189, col: 57, offset: 7001},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 58, offset: 7002},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 62, offset: 7006},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 63, offset: 7007},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 67, offset: 7011},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 68, offset: 7012},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 189, col: 72, offset: 7016,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 24, offset: 6855},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 24, offset: 6855},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 29, offset: 6860},
																								expr: &choiceExpr{
																									pos: position{line: 1093, col: 7, offset: 45984},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1093, col: 7, offset: 45984},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1093, col: 13, offset: 45990},
																											run: (*parser).callonTitleElement322,
																											expr: &litMatcher{
																												pos:        position{line: 1093, col: 13, offset: 45990},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 790, col: 40, offset: 34340},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 792, col: 9, offset: 34443},
														run: (*parser).callonTitleElement325,
														expr: &seqExpr{
															pos: position{line: 792, col: 9, offset: 34443},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 792, col: 9, offset: 34443},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 792, col: 13, offset: 34447},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 800, col: 19, offset: 34768},
																		run: (*parser).callonTitleElement329,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 800, col: 19, offset: 34768},
																			expr: &seqExpr{
																				pos: position{line: 800, col: 20, offset: 34769},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 21, offset: 34770},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 800, col: 25, offset: 34774},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 26, offset: 34775},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 800, col: 30, offset: 34779},
																						expr: &litMatcher{
																							pos:        position{line: 800, col: 31, offset: 34780},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 800, col: 35, offset: 34784,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 792, col: 34, offset: 34468},
																	expr: &litMatcher{
																		pos:        position{line: 792, col: 34, offset: 34468},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 793, col: 9, offset: 34481},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 793, col: 20, offset: 34492},
																		expr: &choiceExpr{
																			pos: position{line: 183, col: 21, offset: 6701},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					run: (*parser).callonTitleElement344,
																					expr: &seqExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 183, col: 21, offset: 6701},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 189, col: 17, offset: 6961},
																									run: (*parser).callonTitleElement347,
																									expr: &seqExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												expr: &actionExpr{
																													pos: position{line: 213, col: 14, offset: 7794},
																													run: (*parser).callonTitleElement350,
																													expr: &litMatcher{
																														pos:        position{line: 213, col: 14, offset: 7794},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 28, offset: 6972},
																												expr: &actionExpr{
																													pos: position{line: 229, col: 14, offset: 8391},
																													run: (*parser).callonTitleElement353,
																													expr: &litMatcher{
																														pos:        position{line: 229, col: 14, offset: 8391},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 39, offset: 6983},
																												expr: &actionExpr{
																													pos: position{line: 1039, col: 16, offset: 44628},
																													run: (*parser).callonTitleElement356,
																													expr: &litMatcher{
																														pos:        position{line: 1039, col: 16, offset: 44628},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 189, col: 52, offset: 6996},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 189, col: 56, offset: 7000},
																													expr: &seqExpr{
																														pos: position{line: 189, col: 57, offset: 7001},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 58, offset: 7002},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 62, offset: 7006},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 63, offset: 7007},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 67, offset: 7011},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 68, offset: 7012},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 189, col: 72, offset: 7016,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 183, col: 40, offset: 6720},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 183, col: 44, offset: 6724},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 193, col: 19, offset: 7075},
																									run: (*parser).callonTitleElement370,
																									expr: &labeledExpr{
																										pos:   position{line: 193, col: 19, offset: 7075},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 193, col: 25, offset: 7081},
																											expr: &seqExpr{
																												pos: position{line: 193, col: 26, offset: 7082},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 27, offset: 7083},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 193, col: 31, offset: 7087},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 32, offset: 7088},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 193, col: 36, offset: 7092},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 37, offset: 7093},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 193, col: 41, offset: 7097,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 183, col: 67, offset: 6747},
																								expr: &litMatcher{
																									pos:        position{line: 183, col: 67, offset: 6747},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 183, col: 72, offset: 6752},
																								expr: &choiceExpr{
																									pos: position{line: 1093, col: 7, offset: 45984},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1093, col: 7, offset: 45984},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1093, col: 13, offset: 45990},
																											run: (*parser).callonTitleElement386,
																											expr: &litMatcher{
																												pos:        position{line: 1093, col: 13, offset: 45990},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 185, col: 5, offset: 6836},
																					run: (*parser).callonTitleElement388,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 5, offset: 6836},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 189, col: 17, offset: 6961},
																									run: (*parser).callonTitleElement391,
																									expr: &seqExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												expr: &actionExpr{
																													pos: position{line: 213, col: 14, offset: 7794},
																													run: (*parser).callonTitleElement394,
																													expr: &litMatcher{
																														pos:        position{line: 213, col: 14, offset: 7794},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 28, offset: 6972},
																												expr: &actionExpr{
																													pos: position{line: 229, col: 14, offset: 8391},
																													run: (*parser).callonTitleElement397,
																													expr: &litMatcher{
																														pos:        position{line: 229, col: 14, offset: 8391},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 39, offset: 6983},
																												expr: &actionExpr{
																													pos: position{line: 1039, col: 16, offset: 44628},
																													run: (*parser).callonTitleElement400,
																													expr: &litMatcher{
																														pos:        position{line: 1039, col: 16, offset: 44628},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 189, col: 52, offset: 6996},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 189, col: 56, offset: 7000},
																													expr: &seqExpr{
																														pos: position{line: 189, col: 57, offset: 7001},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 58, offset: 7002},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 62, offset: 7006},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 63, offset: 7007},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 67, offset: 7011},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 68, offset: 7012},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 189, col: 72, offset: 7016,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 24, offset: 6855},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 24, offset: 6855},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 29, offset: 6860},
																								expr: &choiceExpr{
																									pos: position{line: 1093, col: 7, offset: 45984},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1093, col: 7, offset: 45984},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1093, col: 13, offset: 45990},
																											run: (*parser).callonTitleElement417,
																											expr: &litMatcher{
																												pos:        position{line: 1093, col: 13, offset: 45990},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 793, col: 40, offset: 34512},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 795, col: 9, offset: 34613},
														run: (*parser).callonTitleElement420,
														expr: &seqExpr{
															pos: position{line: 795, col: 9, offset: 34613},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 795, col: 9, offset: 34613},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 795, col: 13, offset: 34617},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 795, col: 24, offset: 34628},
																		expr: &choiceExpr{
																			pos: position{line: 183, col: 21, offset: 6701},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					run: (*parser).callonTitleElement426,
																					expr: &seqExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 183, col: 21, offset: 6701},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 189, col: 17, offset: 6961},
																									run: (*parser).callonTitleElement429,
																									expr: &seqExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												expr: &actionExpr{
																													pos: position{line: 213, col: 14, offset: 7794},
																													run: (*parser).callonTitleElement432,
																													expr: &litMatcher{
																														pos:        position{line: 213, col: 14, offset: 7794},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 28, offset: 6972},
																												expr: &actionExpr{
																													pos: position{line: 229, col: 14, offset: 8391},
																													run: (*parser).callonTitleElement435,
																													expr: &litMatcher{
																														pos:        position{line: 229, col: 14, offset: 8391},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 39, offset: 6983},
																												expr: &actionExpr{
																													pos: position{line: 1039, col: 16, offset: 44628},
																													run: (*parser).callonTitleElement438,
																													expr: &litMatcher{
																														pos:        position{line: 1039, col: 16, offset: 44628},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 189, col: 52, offset: 6996},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 189, col: 56, offset: 7000},
																													expr: &seqExpr{
																														pos: position{line: 189, col: 57, offset: 7001},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 58, offset: 7002},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 62, offset: 7006},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 63, offset: 7007},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 67, offset: 7011},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 68, offset: 7012},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 189, col: 72, offset: 7016,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 183, col: 40, offset: 6720},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 183, col: 44, offset: 6724},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 193, col: 19, offset: 7075},
																									run: (*parser).callonTitleElement452,
																									expr: &labeledExpr{
																										pos:   position{line: 193, col: 19, offset: 7075},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 193, col: 25, offset: 7081},
																											expr: &seqExpr{
																												pos: position{line: 193, col: 26, offset: 7082},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 27, offset: 7083},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 193, col: 31, offset: 7087},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 32, offset: 7088},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 193, col: 36, offset: 7092},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 37, offset: 7093},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 193, col: 41, offset: 7097,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 183, col: 67, offset: 6747},
																								expr: &litMatcher{
																									pos:        position{line: 183, col: 67, offset: 6747},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 183, col: 72, offset: 6752},
																								expr: &choiceExpr{
																									pos: position{line: 1093, col: 7, offset: 45984},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1093, col: 7, offset: 45984},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1093, col: 13, offset: 45990},
																											run: (*parser).callonTitleElement468,
																											expr: &litMatcher{
																												pos:        position{line: 1093, col: 13, offset: 45990},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 185, col: 5, offset: 6836},
																					run: (*parser).callonTitleElement470,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 5, offset: 6836},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 189, col: 17, offset: 6961},
																									run: (*parser).callonTitleElement473,
																									expr: &seqExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												expr: &actionExpr{
																													pos: position{line: 213, col: 14, offset: 7794},
																													run: (*parser).callonTitleElement476,
																													expr: &litMatcher{
																														pos:        position{line: 213, col: 14, offset: 7794},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 28, offset: 6972},
																												expr: &actionExpr{
																													pos: position{line: 229, col: 14, offset: 8391},
																													run: (*parser).callonTitleElement479,
																													expr: &litMatcher{
																														pos:        position{line: 229, col: 14, offset: 8391},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 39, offset: 6983},
																												expr: &actionExpr{
																													pos: position{line: 1039, col: 16, offset: 44628},
																													run: (*parser).callonTitleElement482,
																													expr: &litMatcher{
																														pos:        position{line: 1039, col: 16, offset: 44628},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 189, col: 52, offset: 6996},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 189, col: 56, offset: 7000},
																													expr: &seqExpr{
																														pos: position{line: 189, col: 57, offset: 7001},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 58, offset: 7002},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 62, offset: 7006},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 63, offset: 7007},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 67, offset: 7011},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 68, offset: 7012},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 189, col: 72, offset: 7016,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 24, offset: 6855},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 24, offset: 6855},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 29, offset: 6860},
																								expr: &choiceExpr{
																									pos: position{line: 1093, col: 7, offset: 45984},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1093, col: 7, offset: 45984},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1093, col: 13, offset: 45990},
																											run: (*parser).callonTitleElement499,
																											expr: &litMatcher{
																												pos:        position{line: 1093, col: 13, offset: 45990},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 795, col: 44, offset: 34648},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 364, col: 71, offset: 13516},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 737, col: 9, offset: 32369},
								run: (*parser).callonTitleElement503,
								expr: &labeledExpr{
									pos:   position{line: 737, col: 9, offset: 32369},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 737, col: 15, offset: 32375},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 752, col: 17, offset: 32827},
												run: (*parser).callonTitleElement506,
												expr: &seqExpr{
													pos: position{line: 752, col: 17, offset: 32827},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 752, col: 17, offset: 32827},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 752, col: 25, offset: 32835},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 756, col: 20, offset: 33004},
																run: (*parser).callonTitleElement510,
																expr: &seqExpr{
																	pos: position{line: 756, col: 20, offset: 33004},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 756, col: 20, offset: 33004},
																			expr: &choiceExpr{
																				pos: position{line: 1087, col: 15, offset: 45869},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1087, col: 15, offset: 45869},
																						val:        "http://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1087, col: 27, offset: 45881},
																						val:        "https://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1087, col: 40, offset: 45894},
																						val:        "ftp://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1087, col: 51, offset: 45905},
																						val:        "irc://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1087, col: 62, offset: 45916},
																						val:        "mailto:",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1075, col: 8, offset: 45632},
																			run: (*parser).callonTitleElement519,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1075, col: 8, offset: 45632},
																				expr: &seqExpr{
																					pos: position{line: 1075, col: 9, offset: 45633},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1075, col: 9, offset: 45633},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1075, col: 18, offset: 45642},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonTitleElement529,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1075, col: 22, offset: 45646},
																							expr: &litMatcher{
																								pos:        position{line: 1075, col: 23, offset: 45647},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1075, col: 27, offset: 45651},
																							expr: &litMatcher{
																								pos:        position{line: 1075, col: 28, offset: 45652},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1075, col: 32, offset: 45656,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 752, col: 47, offset: 32857},
															label: "inlineAttributes",
															expr: &choiceExpr{
																pos: position{line: 760, col: 19, offset: 33074},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 760, col: 19, offset: 33074},
																		run: (*parser).callonTitleElement538,
																		expr: &seqExpr{
																			pos: position{line: 760, col: 19, offset: 33074},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 760, col: 19, offset: 33074},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 760, col: 23, offset: 33078},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 767, col: 22, offset: 33366},
																						run: (*parser).callonTitleElement542,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 767, col: 22, offset: 33366},
																							expr: &seqExpr{
																								pos: position{line: 767, col: 23, offset: 33367},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 767, col: 23, offset: 33367},
																										expr: &litMatcher{
																											pos:        position{line: 767, col: 24, offset: 33368},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 767, col: 28, offset: 33372},
																										expr: &litMatcher{
																											pos:        position{line: 767, col: 29, offset: 33373},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 767, col: 33, offset: 33377,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 761, col: 9, offset: 33111},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 761, col: 20, offset: 33122},
																						expr: &choiceExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									run: (*parser).callonTitleElement553,
																									expr: &seqExpr{
																										pos: position{line: 183, col: 21, offset: 6701},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 183, col: 21, offset: 6701},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													run: (*parser).callonTitleElement556,
																													expr: &seqExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																expr: &actionExpr{
																																	pos: position{line: 213, col: 14, offset: 7794},
																																	run: (*parser).callonTitleElement559,
																																	expr: &litMatcher{
																																		pos:        position{line: 213, col: 14, offset: 7794},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 28, offset: 6972},
																																expr: &actionExpr{
																																	pos: position{line: 229, col: 14, offset: 8391},
																																	run: (*parser).callonTitleElement562,
																																	expr: &litMatcher{
																																		pos:        position{line: 229, col: 14, offset: 8391},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 39, offset: 6983},
																																expr: &actionExpr{
																																	pos: position{line: 1039, col: 16, offset: 44628},
																																	run: (*parser).callonTitleElement565,
																																	expr: &litMatcher{
																																		pos:        position{line: 1039, col: 16, offset: 44628},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 189, col: 52, offset: 6996},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 189, col: 56, offset: 7000},
																																	expr: &seqExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 58, offset: 7002},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 62, offset: 7006},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 63, offset: 7007},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 67, offset: 7011},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 68, offset: 7012},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 189, col: 72, offset: 7016,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 183, col: 40, offset: 6720},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 183, col: 44, offset: 6724},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 193, col: 19, offset: 7075},
																													run: (*parser).callonTitleElement579,
																													expr: &labeledExpr{
																														pos:   position{line: 193, col: 19, offset: 7075},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 193, col: 25, offset: 7081},
																															expr: &seqExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 193, col: 26, offset: 7082},
																																		expr: &litMatcher{
																																			pos:        position{line: 193, col: 27, offset: 7083},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 193, col: 31, offset: 7087},
																																		expr: &litMatcher{
																																			pos:        position{line: 193, col: 32, offset: 7088},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 193, col: 36, offset: 7092},
																																		expr: &litMatcher{
																																			pos:        position{line: 193, col: 37, offset: 7093},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 193, col: 41, offset: 7097,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 183, col: 67, offset: 6747},
																												expr: &litMatcher{
																													pos:        position{line: 183, col: 67, offset: 6747},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 183, col: 72, offset: 6752},
																												expr: &choiceExpr{
																													pos: position{line: 1093, col: 7, offset: 45984},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1093, col: 7, offset: 45984},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1093, col: 13, offset: 45990},
																															run: (*parser).callonTitleElement595,
																															expr: &litMatcher{
																																pos:        position{line: 1093, col: 13, offset: 45990},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 185, col: 5, offset: 6836},
																									run: (*parser).callonTitleElement597,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 5, offset: 6836},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 5, offset: 6836},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													run: (*parser).callonTitleElement600,
																													expr: &seqExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																expr: &actionExpr{
																																	pos: position{line: 213, col: 14, offset: 7794},
																																	run: (*parser).callonTitleElement603,
																																	expr: &litMatcher{
																																		pos:        position{line: 213, col: 14, offset: 7794},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 28, offset: 6972},
																																expr: &actionExpr{
																																	pos: position{line: 229, col: 14, offset: 8391},
																																	run: (*parser).callonTitleElement606,
																																	expr: &litMatcher{
																																		pos:        position{line: 229, col: 14, offset: 8391},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 39, offset: 6983},
																																expr: &actionExpr{
																																	pos: position{line: 1039, col: 16, offset: 44628},
																																	run: (*parser).callonTitleElement609,
																																	expr: &litMatcher{
																																		pos:        position{line: 1039, col: 16, offset: 44628},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 189, col: 52, offset: 6996},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 189, col: 56, offset: 7000},
																																	expr: &seqExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 58, offset: 7002},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 62, offset: 7006},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 63, offset: 7007},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 67, offset: 7011},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 68, offset: 7012},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 189, col: 72, offset: 7016,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 24, offset: 6855},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 24, offset: 6855},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 29, offset: 6860},
																												expr: &choiceExpr{
																													pos: position{line: 1093, col: 7, offset: 45984},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1093, col: 7, offset: 45984},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1093, col: 13, offset: 45990},
																															run: (*parser).callonTitleElement626,
																															expr: &litMatcher{
																																pos:        position{line: 1093, col: 13, offset: 45990},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 761, col: 40, offset: 33142},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 763, col: 5, offset: 33227},
																		run: (*parser).callonTitleElement629,
																		expr: &seqExpr{
																			pos: position{line: 763, col: 5, offset: 33227},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 763, col: 5, offset: 33227},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 763, col: 9, offset: 33231},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 763, col: 20, offset: 33242},
																						expr: &choiceExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									run: (*parser).callonTitleElement635,
																									expr: &seqExpr{
																										pos: position{line: 183, col: 21, offset: 6701},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 183, col: 21, offset: 6701},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													run: (*parser).callonTitleElement638,
																													expr: &seqExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																expr: &actionExpr{
																																	pos: position{line: 213, col: 14, offset: 7794},
																																	run: (*parser).callonTitleElement641,
																																	expr: &litMatcher{
																																		pos:        position{line: 213, col: 14, offset: 7794},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 28, offset: 6972},
																																expr: &actionExpr{
																																	pos: position{line: 229, col: 14, offset: 8391},
																																	run: (*parser).callonTitleElement644,
																																	expr: &litMatcher{
																																		pos:        position{line: 229, col: 14, offset: 8391},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 39, offset: 6983},
																																expr: &actionExpr{
																																	pos: position{line: 1039, col: 16, offset: 44628},
																																	run: (*parser).callonTitleElement647,
																																	expr: &litMatcher{
																																		pos:        position{line: 1039, col: 16, offset: 44628},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 189, col: 52, offset: 6996},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 189, col: 56, offset: 7000},
																																	expr: &seqExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 58, offset: 7002},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 62, offset: 7006},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 63, offset: 7007},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 67, offset: 7011},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 68, offset: 7012},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 189, col: 72, offset: 7016,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 183, col: 40, offset: 6720},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 183, col: 44, offset: 6724},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 193, col: 19, offset: 7075},
																													run: (*parser).callonTitleElement661,
																													expr: &labeledExpr{
																														pos:   position{line: 193, col: 19, offset: 7075},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 193, col: 25, offset: 7081},
																															expr: &seqExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 193, col: 26, offset: 7082},
																																		expr: &litMatcher{
																																			pos:        position{line: 193, col: 27, offset: 7083},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 193, col: 31, offset: 7087},
																																		expr: &litMatcher{
																																			pos:        position{line: 193, col: 32, offset: 7088},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 193, col: 36, offset: 7092},
																																		expr: &litMatcher{
																																			pos:        position{line: 193, col: 37, offset: 7093},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 193, col: 41, offset: 7097,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 183, col: 67, offset: 6747},
																												expr: &litMatcher{
																													pos:        position{line: 183, col: 67, offset: 6747},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 183, col: 72, offset: 6752},
																												expr: &choiceExpr{
																													pos: position{line: 1093, col: 7, offset: 45984},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1093, col: 7, offset: 45984},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1093, col: 13, offset: 45990},
																															run: (*parser).callonTitleElement677,
																															expr: &litMatcher{
																																pos:        position{line: 1093, col: 13, offset: 45990},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 185, col: 5, offset: 6836},
																									run: (*parser).callonTitleElement679,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 5, offset: 6836},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 5, offset: 6836},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													run: (*parser).callonTitleElement682,
																													expr: &seqExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																expr: &actionExpr{
																																	pos: position{line: 213, col: 14, offset: 7794},
																																	run: (*parser).callonTitleElement685,
																																	expr: &litMatcher{
																																		pos:        position{line: 213, col: 14, offset: 7794},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 28, offset: 6972},
																																expr: &actionExpr{
																																	pos: position{line: 229, col: 14, offset: 8391},
																																	run: (*parser).callonTitleElement688,
																																	expr: &litMatcher{
																																		pos:        position{line: 229, col: 14, offset: 8391},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 39, offset: 6983},
																																expr: &actionExpr{
																																	pos: position{line: 1039, col: 16, offset: 44628},
																																	run: (*parser).callonTitleElement691,
																																	expr: &litMatcher{
																																		pos:        position{line: 1039, col: 16, offset: 44628},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 189, col: 52, offset: 6996},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 189, col: 56, offset: 7000},
																																	expr: &seqExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 58, offset: 7002},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 62, offset: 7006},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 63, offset: 7007},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 67, offset: 7011},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 68, offset: 7012},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 189, col: 72, offset: 7016,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 24, offset: 6855},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 24, offset: 6855},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 29, offset: 6860},
																												expr: &choiceExpr{
																													pos: position{line: 1093, col: 7, offset: 45984},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1093, col: 7, offset: 45984},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1093, col: 13, offset: 45990},
																															run: (*parser).callonTitleElement708,
																															expr: &litMatcher{
																																pos:        position{line: 1093, col: 13, offset: 45990},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 763, col: 40, offset: 33262},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 741, col: 17, offset: 32446},
												run: (*parser).callonTitleElement711,
												expr: &seqExpr{
													pos: position{line: 741, col: 17, offset: 32446},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 741, col: 17, offset: 32446},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 747, col: 20, offset: 32693},
																run: (*parser).callonTitleElement714,
																expr: &seqExpr{
																	pos: position{line: 747, col: 20, offset: 32693},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1087, col: 15, offset: 45869},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1087, col: 15, offset: 45869},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1087, col: 27, offset: 45881},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1087, col: 40, offset: 45894},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1087, col: 51, offset: 45905},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1087, col: 62, offset: 45916},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1075, col: 8, offset: 45632},
																			run: (*parser).callonTitleElement722,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1075, col: 8, offset: 45632},
																				expr: &seqExpr{
																					pos: position{line: 1075, col: 9, offset: 45633},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1075, col: 9, offset: 45633},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1075, col: 18, offset: 45642},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonTitleElement732,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1075, col: 22, offset: 45646},
																							expr: &litMatcher{
																								pos:        position{line: 1075, col: 23, offset: 45647},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1075, col: 27, offset: 45651},
																							expr: &litMatcher{
																								pos:        position{line: 1075, col: 28, offset: 45652},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1075, col: 32, offset: 45656,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 741, col: 39, offset: 32468},
															label: "inlineAttributes",
															expr: &choiceExpr{
																pos: position{line: 760, col: 19, offset: 33074},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 760, col: 19, offset: 33074},
																		run: (*parser).callonTitleElement741,
																		expr: &seqExpr{
																			pos: position{line: 760, col: 19, offset: 33074},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 760, col: 19, offset: 33074},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 760, col: 23, offset: 33078},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 767, col: 22, offset: 33366},
																						run: (*parser).callonTitleElement745,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 767, col: 22, offset: 33366},
																							expr: &seqExpr{
																								pos: position{line: 767, col: 23, offset: 33367},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 767, col: 23, offset: 33367},
																										expr: &litMatcher{
																											pos:        position{line: 767, col: 24, offset: 33368},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 767, col: 28, offset: 33372},
																										expr: &litMatcher{
																											pos:        position{line: 767, col: 29, offset: 33373},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 767, col: 33, offset: 33377,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 761, col: 9, offset: 33111},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 761, col: 20, offset: 33122},
																						expr: &choiceExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									run: (*parser).callonTitleElement756,
																									expr: &seqExpr{
																										pos: position{line: 183, col: 21, offset: 6701},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 183, col: 21, offset: 6701},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													run: (*parser).callonTitleElement759,
																													expr: &seqExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																expr: &actionExpr{
																																	pos: position{line: 213, col: 14, offset: 7794},
																																	run: (*parser).callonTitleElement762,
																																	expr: &litMatcher{
																																		pos:        position{line: 213, col: 14, offset: 7794},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 28, offset: 6972},
																																expr: &actionExpr{
																																	pos: position{line: 229, col: 14, offset: 8391},
																																	run: (*parser).callonTitleElement765,
																																	expr: &litMatcher{
																																		pos:        position{line: 229, col: 14, offset: 8391},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 39, offset: 6983},
																																expr: &actionExpr{
																																	pos: position{line: 1039, col: 16, offset: 44628},
																																	run: (*parser).callonTitleElement768,
																																	expr: &litMatcher{
																																		pos:        position{line: 1039, col: 16, offset: 44628},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 189, col: 52, offset: 6996},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 189, col: 56, offset: 7000},
																																	expr: &seqExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 58, offset: 7002},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 62, offset: 7006},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 63, offset: 7007},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 67, offset: 7011},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 68, offset: 7012},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 189, col: 72, offset: 7016,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 183, col: 40, offset: 6720},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 183, col: 44, offset: 6724},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 193, col: 19, offset: 7075},
																													run: (*parser).callonTitleElement782,
																													expr: &labeledExpr{
																														pos:   position{line: 193, col: 19, offset: 7075},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 193, col: 25, offset: 7081},
																															expr: &seqExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 193, col: 26, offset: 7082},
																																		expr: &litMatcher{
																																			pos:        position{line: 193, col: 27, offset: 7083},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 193, col: 31, offset: 7087},
																																		expr: &litMatcher{
																																			pos:        position{line: 193, col: 32, offset: 7088},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 193, col: 36, offset: 7092},
																																		expr: &litMatcher{
																																			pos:        position{line: 193, col: 37, offset: 7093},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 193, col: 41, offset: 7097,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 183, col: 67, offset: 6747},
																												expr: &litMatcher{
																													pos:        position{line: 183, col: 67, offset: 6747},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 183, col: 72, offset: 6752},
																												expr: &choiceExpr{
																													pos: position{line: 1093, col: 7, offset: 45984},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1093, col: 7, offset: 45984},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1093, col: 13, offset: 45990},
																															run: (*parser).callonTitleElement798,
																															expr: &litMatcher{
																																pos:        position{line: 1093, col: 13, offset: 45990},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 185, col: 5, offset: 6836},
																									run: (*parser).callonTitleElement800,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 5, offset: 6836},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 5, offset: 6836},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													run: (*parser).callonTitleElement803,
																													expr: &seqExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																expr: &actionExpr{
																																	pos: position{line: 213, col: 14, offset: 7794},
																																	run: (*parser).callonTitleElement806,
																																	expr: &litMatcher{
																																		pos:        position{line: 213, col: 14, offset: 7794},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 28, offset: 6972},
																																expr: &actionExpr{
																																	pos: position{line: 229, col: 14, offset: 8391},
																																	run: (*parser).callonTitleElement809,
																																	expr: &litMatcher{
																																		pos:        position{line: 229, col: 14, offset: 8391},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 39, offset: 6983},
																																expr: &actionExpr{
																																	pos: position{line: 1039, col: 16, offset: 44628},
																																	run: (*parser).callonTitleElement812,
																																	expr: &litMatcher{
																																		pos:        position{line: 1039, col: 16, offset: 44628},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 189, col: 52, offset: 6996},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 189, col: 56, offset: 7000},
																																	expr: &seqExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 58, offset: 7002},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 62, offset: 7006},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 63, offset: 7007},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 67, offset: 7011},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 68, offset: 7012},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 189, col: 72, offset: 7016,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 24, offset: 6855},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 24, offset: 6855},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 29, offset: 6860},
																												expr: &choiceExpr{
																													pos: position{line: 1093, col: 7, offset: 45984},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1093, col: 7, offset: 45984},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1093, col: 13, offset: 45990},
																															run: (*parser).callonTitleElement829,
																															expr: &litMatcher{
																																pos:        position{line: 1093, col: 13, offset: 45990},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 761, col: 40, offset: 33142},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 763, col: 5, offset: 33227},
																		run: (*parser).callonTitleElement832,
																		expr: &seqExpr{
																			pos: position{line: 763, col: 5, offset: 33227},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 763, col: 5, offset: 33227},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 763, col: 9, offset: 33231},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 763, col: 20, offset: 33242},
																						expr: &choiceExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									run: (*parser).callonTitleElement838,
																									expr: &seqExpr{
																										pos: position{line: 183, col: 21, offset: 6701},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 183, col: 21, offset: 6701},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													run: (*parser).callonTitleElement841,
																													expr: &seqExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																expr: &actionExpr{
																																	pos: position{line: 213, col: 14, offset: 7794},
																																	run: (*parser).callonTitleElement844,
																																	expr: &litMatcher{
																																		pos:        position{line: 213, col: 14, offset: 7794},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 28, offset: 6972},
																																expr: &actionExpr{
																																	pos: position{line: 229, col: 14, offset: 8391},
																																	run: (*parser).callonTitleElement847,
																																	expr: &litMatcher{
																																		pos:        position{line: 229, col: 14, offset: 8391},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 39, offset: 6983},
																																expr: &actionExpr{
																																	pos: position{line: 1039, col: 16, offset: 44628},
																																	run: (*parser).callonTitleElement850,
																																	expr: &litMatcher{
																																		pos:        position{line: 1039, col: 16, offset: 44628},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 189, col: 52, offset: 6996},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 189, col: 56, offset: 7000},
																																	expr: &seqExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 58, offset: 7002},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 62, offset: 7006},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 63, offset: 7007},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 67, offset: 7011},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 68, offset: 7012},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 189, col: 72, offset: 7016,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 183, col: 40, offset: 6720},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 183, col: 44, offset: 6724},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 193, col: 19, offset: 7075},
																													run: (*parser).callonTitleElement864,
																													expr: &labeledExpr{
																														pos:   position{line: 193, col: 19, offset: 7075},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 193, col: 25, offset: 7081},
																															expr: &seqExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 193, col: 26, offset: 7082},
																																		expr: &litMatcher{
																																			pos:        position{line: 193, col: 27, offset: 7083},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 193, col: 31, offset: 7087},
																																		expr: &litMatcher{
																																			pos:        position{line: 193, col: 32, offset: 7088},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 193, col: 36, offset: 7092},
																																		expr: &litMatcher{
																																			pos:        position{line: 193, col: 37, offset: 7093},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 193, col: 41, offset: 7097,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 183, col: 67, offset: 6747},
																												expr: &litMatcher{
																													pos:        position{line: 183, col: 67, offset: 6747},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 183, col: 72, offset: 6752},
																												expr: &choiceExpr{
																													pos: position{line: 1093, col: 7, offset: 45984},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1093, col: 7, offset: 45984},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1093, col: 13, offset: 45990},
																															run: (*parser).callonTitleElement880,
																															expr: &litMatcher{
																																pos:        position{line: 1093, col: 13, offset: 45990},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 185, col: 5, offset: 6836},
																									run: (*parser).callonTitleElement882,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 5, offset: 6836},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 5, offset: 6836},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													run: (*parser).callonTitleElement885,
																													expr: &seqExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																expr: &actionExpr{
																																	pos: position{line: 213, col: 14, offset: 7794},
																																	run: (*parser).callonTitleElement888,
																																	expr: &litMatcher{
																																		pos:        position{line: 213, col: 14, offset: 7794},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 28, offset: 6972},
																																expr: &actionExpr{
																																	pos: position{line: 229, col: 14, offset: 8391},
																																	run: (*parser).callonTitleElement891,
																																	expr: &litMatcher{
																																		pos:        position{line: 229, col: 14, offset: 8391},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 39, offset: 6983},
																																expr: &actionExpr{
																																	pos: position{line: 1039, col: 16, offset: 44628},
																																	run: (*parser).callonTitleElement894,
																																	expr: &litMatcher{
																																		pos:        position{line: 1039, col: 16, offset: 44628},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 189, col: 52, offset: 6996},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 189, col: 56, offset: 7000},
																																	expr: &seqExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 58, offset: 7002},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 62, offset: 7006},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 63, offset: 7007},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 189, col: 67, offset: 7011},
																																				expr: &litMatcher{
																																					pos:        position{line: 189, col: 68, offset: 7012},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 189, col: 72, offset: 7016,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 24, offset: 6855},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 24, offset: 6855},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 29, offset: 6860},
																												expr: &choiceExpr{
																													pos: position{line: 1093, col: 7, offset: 45984},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1093, col: 7, offset: 45984},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1093, col: 13, offset: 45990},
																															run: (*parser).callonTitleElement911,
																															expr: &litMatcher{
																																pos:        position{line: 1093, col: 13, offset: 45990},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 763, col: 40, offset: 33262},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 743, col: 5, offset: 32597},
												run: (*parser).callonTitleElement914,
												expr: &labeledExpr{
													pos:   position{line: 743, col: 5, offset: 32597},
													label: "url",
													expr: &actionExpr{
														pos: position{line: 747, col: 20, offset: 32693},
														run: (*parser).callonTitleElement916,
														expr: &seqExpr{
															pos: position{line: 747, col: 20, offset: 32693},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 1087, col: 15, offset: 45869},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1087, col: 15, offset: 45869},
																			val:        "http://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1087, col: 27, offset: 45881},
																			val:        "https://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1087, col: 40, offset: 45894},
																			val:        "ftp://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1087, col: 51, offset: 45905},
																			val:        "irc://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1087, col: 62, offset: 45916},
																			val:        "mailto:",
																			ignoreCase: false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1075, col: 8, offset: 45632},
																	run: (*parser).callonTitleElement924,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1075, col: 8, offset: 45632},
																		expr: &seqExpr{
																			pos: position{line: 1075, col: 9, offset: 45633},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1075, col: 9, offset: 45633},
																					expr: &choiceExpr{
																						pos: position{line: 1097, col: 12, offset: 46046},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1097, col: 12, offset: 46046},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1097, col: 21, offset: 46055},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1075, col: 18, offset: 45642},
																					expr: &choiceExpr{
																						pos: position{line: 1093, col: 7, offset: 45984},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1093, col: 7, offset: 45984},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1093, col: 13, offset: 45990},
																								run: (*parser).callonTitleElement934,
																								expr: &litMatcher{
																									pos:        position{line: 1093, col: 13, offset: 45990},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1075, col: 22, offset: 45646},
																					expr: &litMatcher{
																						pos:        position{line: 1075, col: 23, offset: 45647},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1075, col: 27, offset: 45651},
																					expr: &litMatcher{
																						pos:        position{line: 1075, col: 28, offset: 45652},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1075, col: 32, offset: 45656,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 109, col: 34, offset: 4042},
								run: (*parser).callonTitleElement941,
								expr: &seqExpr{
									pos: position{line: 109, col: 34, offset: 4042},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 109, col: 34, offset: 4042},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 109, col: 38, offset: 4046},
											label: "name",
											expr: &actionExpr{
												pos: position{line: 116, col: 26, offset: 4341},
												run: (*parser).callonTitleElement945,
												expr: &seqExpr{
													pos: position{line: 116, col: 26, offset: 4341},
													exprs: []interface{}{
														&charClassMatcher{
															pos:        position{line: 116, col: 27, offset: 4342},
															val:        "[_A-Za-z0-9]",
															chars:      []rune{'_'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 116, col: 56, offset: 4371},
															expr: &charClassMatcher{
																pos:        position{line: 116, col: 57, offset: 4372},
																val:        "[-A-Za-z0-9]",
																chars:      []rune{'-'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 109, col: 67, offset: 4075},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 364, col: 123, offset: 13568},
								name: "InlineFootnote",
							},
							&charClassMatcher{
								pos:        position{line: 1069, col: 16, offset: 45364},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
							&actionExpr{
								pos: position{line: 567, col: 14, offset: 22593},
								run: (*parser).callonTitleElement953,
								expr: &seqExpr{
									pos: position{line: 567, col: 14, offset: 22593},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonTitleElement957,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 567, col: 17, offset: 22596},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 567, col: 21, offset: 22600},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonTitleElement963,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 364, col: 166, offset: 13611},
								name: "Word",
							},
						},
					},
				},
			},
		},
		{
			name: "List",
			pos:  position{line: 376, col: 1, offset: 13903},
			expr: &actionExpr{
				pos: position{line: 378, col: 5, offset: 13984},
				run: (*parser).callonList1,
				expr: &labeledExpr{
					pos:   position{line: 378, col: 5, offset: 13984},
					label: "elements",
					expr: &ruleRefExpr{
						pos:  position{line: 378, col: 14, offset: 13993},
						name: "ListItems",
					},
				},
			},
		},
		{
			name: "ListItems",
			pos:  position{line: 382, col: 1, offset: 14059},
			expr: &oneOrMoreExpr{
				pos: position{line: 382, col: 14, offset: 14072},
				expr: &choiceExpr{
					pos: position{line: 382, col: 15, offset: 14073},
					alternatives: []interface{}{
						&ruleRefExpr{
							pos:  position{line: 382, col: 15, offset: 14073},
							name: "OrderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 382, col: 33, offset: 14091},
							name: "UnorderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 382, col: 53, offset: 14111},
							name: "LabeledListItem",
						},
					},
				},
			},
		},
		{
			name: "ListParagraph",
			pos:  position{line: 384, col: 1, offset: 14130},
			expr: &actionExpr{
				pos: position{line: 384, col: 18, offset: 14147},
				run: (*parser).callonListParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 384, col: 18, offset: 14147},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 384, col: 24, offset: 14153},
						expr: &ruleRefExpr{
							pos:  position{line: 384, col: 25, offset: 14154},
							name: "ListParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "ListParagraphLine",
			pos:  position{line: 388, col: 1, offset: 14233},
			expr: &actionExpr{
				pos: position{line: 389, col: 5, offset: 14259},
				run: (*parser).callonListParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 389, col: 5, offset: 14259},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 389, col: 5, offset: 14259},
							expr: &actionExpr{
								pos: position{line: 414, col: 26, offset: 15081},
								run: (*parser).callonListParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 414, col: 26, offset: 15081},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 414, col: 26, offset: 15081},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonListParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 414, col: 30, offset: 15085},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 416, col: 5, offset: 15140},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 416, col: 5, offset: 15140},
														run: (*parser).callonListParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 416, col: 5, offset: 15140},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 418, col: 9, offset: 15253},
														run: (*parser).callonListParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 418, col: 9, offset: 15253},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 420, col: 9, offset: 15364},
														run: (*parser).callonListParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 420, col: 9, offset: 15364},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 422, col: 9, offset: 15473},
														run: (*parser).callonListParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 422, col: 9, offset: 15473},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 9, offset: 15580},
														run: (*parser).callonListParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 424, col: 9, offset: 15580},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 427, col: 9, offset: 15707},
														run: (*parser).callonListParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 427, col: 9, offset: 15707},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 427, col: 9, offset: 15707},
																	expr: &charClassMatcher{
																		pos:        position{line: 427, col: 10, offset: 15708},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 427, col: 18, offset: 15716},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 429, col: 9, offset: 15819},
														run: (*parser).callonListParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 429, col: 9, offset: 15819},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 429, col: 10, offset: 15820},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 429, col: 17, offset: 15827},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 431, col: 9, offset: 15933},
														run: (*parser).callonListParagraphLine32,
														expr: &seqExpr{
															pos: position{line: 431, col: 9, offset: 15933},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 431, col: 10, offset: 15934},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 431, col: 17, offset: 15941},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 433, col: 9, offset: 16047},
														run: (*parser).callonListParagraphLine36,
														expr: &seqExpr{
															pos: position{line: 433, col: 9, offset: 16047},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 433, col: 9, offset: 16047},
																	expr: &charClassMatcher{
																		pos:        position{line: 433, col: 10, offset: 16048},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 433, col: 18, offset: 16056},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 435, col: 9, offset: 16162},
														run: (*parser).callonListParagraphLine41,
														expr: &seqExpr{
															pos: position{line: 435, col: 9, offset: 16162},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 435, col: 9, offset: 16162},
																	expr: &charClassMatcher{
																		pos:        position{line: 435, col: 10, offset: 16163},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 435, col: 18, offset: 16171},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 437, col: 8, offset: 16276},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonListParagraphLine49,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 390, col: 5, offset: 14289},
							expr: &actionExpr{
								pos: position{line: 453, col: 5, offset: 16936},
								run: (*parser).callonListParagraphLine52,
								expr: &seqExpr{
									pos: position{line: 453, col: 5, offset: 16936},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 453, col: 5, offset: 16936},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonListParagraphLine57,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 453, col: 9, offset: 16940},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 454, col: 9, offset: 16957},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 454, col: 9, offset: 16957},
														run: (*parser).callonListParagraphLine61,
														expr: &litMatcher{
															pos:        position{line: 454, col: 9, offset: 16957},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 11, offset: 17126},
														run: (*parser).callonListParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 457, col: 11, offset: 17126},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 460, col: 11, offset: 17295},
														run: (*parser).callonListParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 460, col: 11, offset: 17295},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 463, col: 11, offset: 17464},
														run: (*parser).callonListParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 463, col: 11, offset: 17464},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 466, col: 11, offset: 17630},
														run: (*parser).callonListParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 466, col: 11, offset: 17630},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 469, col: 11, offset: 17794},
														run: (*parser).callonListParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 469, col: 11, offset: 17794},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 471, col: 12, offset: 17941},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonListParagraphLine76,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 391, col: 5, offset: 14321},
							expr: &seqExpr{
								pos: position{line: 391, col: 7, offset: 14323},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 491, col: 24, offset: 19103},
										run: (*parser).callonListParagraphLine80,
										expr: &zeroOrMoreExpr{
											pos: position{line: 491, col: 24, offset: 19103},
											expr: &seqExpr{
												pos: position{line: 491, col: 25, offset: 19104},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 491, col: 25, offset: 19104},
														expr: &choiceExpr{
															pos: position{line: 1097, col: 12, offset: 46046},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 491, col: 34, offset: 19113},
														expr: &litMatcher{
															pos:        position{line: 491, col: 35, offset: 19114},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 491, col: 40, offset: 19119,
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 496, col: 29, offset: 19265},
										run: (*parser).callonListParagraphLine90,
										expr: &choiceExpr{
											pos: position{line: 496, col: 30, offset: 19266},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 496, col: 30, offset: 19266},
													val:        "::::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 496, col: 39, offset: 19275},
													val:        ":::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 496, col: 47, offset: 19283},
													val:        "::",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 392, col: 5, offset: 14374},
							expr: &actionExpr{
								pos: position{line: 399, col: 25, offset: 14525},
								run: (*parser).callonListParagraphLine96,
								expr: &seqExpr{
									pos: position{line: 399, col: 25, offset: 14525},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 399, col: 25, offset: 14525},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 399, col: 29, offset: 14529},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonListParagraphLine102,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 393, col: 5, offset: 14403},
							expr: &actionExpr{
								pos: position{line: 136, col: 21, offset: 5092},
								run: (*parser).callonListParagraphLine110,
								expr: &seqExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 136, col: 21, offset: 5092},
											label: "attr",
											expr: &choiceExpr{
												pos: position{line: 136, col: 27, offset: 5098},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 143, col: 14, offset: 5448},
														run: (*parser).callonListParagraphLine114,
														expr: &seqExpr{
															pos: position{line: 143, col: 14, offset: 5448},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 143, col: 14, offset: 5448},
																	val:        "[[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 143, col: 19, offset: 5453},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 1079, col: 7, offset: 45702},
																		run: (*parser).callonListParagraphLine118,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			expr: &seqExpr{
																				pos: position{line: 1079, col: 8, offset: 45703},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 1079, col: 8, offset: 45703},
																						expr: &choiceExpr{
																							pos: position{line: 1097, col: 12, offset: 46046},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1079, col: 17, offset: 45712},
																						expr: &choiceExpr{
																							pos: position{line: 1093, col: 7, offset: 45984},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1093, col: 7, offset: 45984},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1093, col: 13, offset: 45990},
																									run: (*parser).callonListParagraphLine128,
																									expr: &litMatcher{
																										pos:        position{line: 1093, col: 13, offset: 45990},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1079, col: 21, offset: 45716},
																						expr: &litMatcher{
																							pos:        position{line: 1079, col: 22, offset: 45717},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1079, col: 26, offset: 45721},
																						expr: &litMatcher{
																							pos:        position{line: 1079, col: 27, offset: 45722},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1079, col: 31, offset: 45726},
																						expr: &litMatcher{
																							pos:        position{line: 1079, col: 32, offset: 45727},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1079, col: 37, offset: 45732},
																						expr: &litMatcher{
																							pos:        position{line: 1079, col: 38, offset: 45733},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1079, col: 43, offset: 45738},
																						expr: &litMatcher{
																							pos:        position{line: 1079, col: 44, offset: 45739},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 1079, col: 48, offset: 45743,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 143, col: 27, offset: 5461},
																	val:        "]]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 145, col: 5, offset: 5515},
														run: (*parser).callonListParagraphLine142,
														expr: &seqExpr{
															pos: position{line: 145, col: 5, offset: 5515},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 145, col: 5, offset: 5515},
																	val:        "[#",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 145, col: 10, offset: 5520},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 1079, col: 7, offset: 45702},
																		run: (*parser).callonListParagraphLine146,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			expr: &seqExpr{
																				pos: position{line: 1079, col: 8, offset: 45703},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 1079, col: 8, offset: 45703},
																						expr: &choiceExpr{
																							pos: position{line: 1097, col: 12, offset: 46046},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1079, col: 17, offset: 45712},
																						expr: &choiceExpr{
																							pos: position{line: 1093, col: 7, offset: 45984},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1093, col: 7, offset: 45984},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1093, col: 13, offset: 45990},
																									run: (*parser).callonListParagraphLine156,
																									expr: &litMatcher{
																										pos:        position{line: 1093, col: 13, offset: 45990},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1079, col: 21, offset: 45716},
																						expr: &litMatcher{
																							pos:        position{line: 1079, col: 22, offset: 45717},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1079, col: 26, offset: 45721},
																						expr: &litMatcher{
																							pos:        position{line: 1079, col: 27, offset: 45722},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1079, col: 31, offset: 45726},
																						expr: &litMatcher{
																							pos:        position{line: 1079, col: 32, offset: 45727},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1079, col: 37, offset: 45732},
																						expr: &litMatcher{
																							pos:        position{line: 1079, col: 38, offset: 45733},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1079, col: 43, offset: 45738},
																						expr: &litMatcher{
																							pos:        position{line: 1079, col: 44, offset: 45739},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 1079, col: 48, offset: 45743,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 145, col: 18, offset: 5528},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 155, col: 17, offset: 5831},
														run: (*parser).callonListParagraphLine170,
														expr: &seqExpr{
															pos: position{line: 155, col: 17, offset: 5831},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 155, col: 17, offset: 5831},
																	val:        ".",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 155, col: 21, offset: 5835},
																	expr: &litMatcher{
																		pos:        position{line: 155, col: 22, offset: 5836},
																		val:        ".",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 155, col: 26, offset: 5840},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonListParagraphLine178,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 155, col: 30, offset: 5844},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 159, col: 24, offset: 5949},
																		run: (*parser).callonListParagraphLine181,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 159, col: 24, offset: 5949},
																			expr: &seqExpr{
																				pos: position{line: 159, col: 25, offset: 5950},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 159, col: 25, offset: 5950},
																						expr: &choiceExpr{
																							pos: position{line: 1097, col: 12, offset: 46046},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 159, col: 34, offset: 5959,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 165, col: 16, offset: 6108},
														run: (*parser).callonListParagraphLine189,
														expr: &seqExpr{
															pos: position{line: 165, col: 16, offset: 6108},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 165, col: 16, offset: 6108},
																	val:        "[.",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 165, col: 21, offset: 6113},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonListParagraphLine195,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 165, col: 25, offset: 6117},
																	label: "role",
																	expr: &actionExpr{
																		pos: position{line: 169, col: 23, offset: 6221},
																		run: (*parser).callonListParagraphLine198,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 169, col: 23, offset: 6221},
																			expr: &seqExpr{
																				pos: position{line: 169, col: 24, offset: 6222},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 169, col: 24, offset: 6222},
																						expr: &choiceExpr{
																							pos: position{line: 1097, col: 12, offset: 46046},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 169, col: 33, offset: 6231},
																						expr: &litMatcher{
																							pos:        position{line: 169, col: 34, offset: 6232},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 169, col: 38, offset: 6236,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 165, col: 51, offset: 6143},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 174, col: 30, offset: 6385},
														run: (*parser).callonListParagraphLine209,
														expr: &seqExpr{
															pos: position{line: 174, col: 30, offset: 6385},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 174, col: 30, offset: 6385},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 174, col: 34, offset: 6389},
																	label: "k",
																	expr: &choiceExpr{
																		pos: position{line: 507, col: 19, offset: 19712},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 507, col: 19, offset: 19712},
																				run: (*parser).callonListParagraphLine214,
																				expr: &litMatcher{
																					pos:        position{line: 507, col: 19, offset: 19712},
																					val:        "TIP",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 509, col: 5, offset: 19750},
																				run: (*parser).callonListParagraphLine216,
																				expr: &litMatcher{
																					pos:        position{line: 509, col: 5, offset: 19750},
																					val:        "NOTE",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 511, col: 5, offset: 19790},
																				run: (*parser).callonListParagraphLine218,
																				expr: &litMatcher{
																					pos:        position{line: 511, col: 5, offset: 19790},
																					val:        "IMPORTANT",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 513, col: 5, offset: 19840},
																				run: (*parser).callonListParagraphLine220,
																				expr: &litMatcher{
																					pos:        position{line: 513, col: 5, offset: 19840},
																					val:        "WARNING",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 515, col: 5, offset: 19886},
																				run: (*parser).callonListParagraphLine222,
																				expr: &litMatcher{
																					pos:        position{line: 515, col: 5, offset: 19886},
																					val:        "CAUTION",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 174, col: 53, offset: 6408},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 197, col: 21, offset: 7157},
														run: (*parser).callonListParagraphLine225,
														expr: &litMatcher{
															pos:        position{line: 197, col: 21, offset: 7157},
															val:        "[horizontal]",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 179, col: 19, offset: 6569},
														run: (*parser).callonListParagraphLine227,
														expr: &seqExpr{
															pos: position{line: 179, col: 19, offset: 6569},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 179, col: 19, offset: 6569},
																	val:        "[",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 179, col: 23, offset: 6573},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonListParagraphLine233,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 179, col: 27, offset: 6577},
																	label: "attributes",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 179, col: 38, offset: 6588},
																		expr: &choiceExpr{
																			pos: position{line: 183, col: 21, offset: 6701},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					run: (*parser).callonListParagraphLine238,
																					expr: &seqExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 183, col: 21, offset: 6701},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 189, col: 17, offset: 6961},
																									run: (*parser).callonListParagraphLine241,
																									expr: &seqExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												expr: &actionExpr{
																													pos: position{line: 213, col: 14, offset: 7794},
																													run: (*parser).callonListParagraphLine244,
																													expr: &litMatcher{
																														pos:        position{line: 213, col: 14, offset: 7794},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 28, offset: 6972},
																												expr: &actionExpr{
																													pos: position{line: 229, col: 14, offset: 8391},
																													run: (*parser).callonListParagraphLine247,
																													expr: &litMatcher{
																														pos:        position{line: 229, col: 14, offset: 8391},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 39, offset: 6983},
																												expr: &actionExpr{
																													pos: position{line: 1039, col: 16, offset: 44628},
																													run: (*parser).callonListParagraphLine250,
																													expr: &litMatcher{
																														pos:        position{line: 1039, col: 16, offset: 44628},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 189, col: 52, offset: 6996},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 189, col: 56, offset: 7000},
																													expr: &seqExpr{
																														pos: position{line: 189, col: 57, offset: 7001},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 58, offset: 7002},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 62, offset: 7006},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 63, offset: 7007},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 67, offset: 7011},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 68, offset: 7012},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 189, col: 72, offset: 7016,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 183, col: 40, offset: 6720},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 183, col: 44, offset: 6724},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 193, col: 19, offset: 7075},
																									run: (*parser).callonListParagraphLine264,
																									expr: &labeledExpr{
																										pos:   position{line: 193, col: 19, offset: 7075},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 193, col: 25, offset: 7081},
																											expr: &seqExpr{
																												pos: position{line: 193, col: 26, offset: 7082},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 27, offset: 7083},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 193, col: 31, offset: 7087},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 32, offset: 7088},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 193, col: 36, offset: 7092},
																														expr: &litMatcher{
																															pos:        position{line: 193, col: 37, offset: 7093},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 193, col: 41, offset: 7097,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 183, col: 67, offset: 6747},
																								expr: &litMatcher{
																									pos:        position{line: 183, col: 67, offset: 6747},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 183, col: 72, offset: 6752},
																								expr: &choiceExpr{
																									pos: position{line: 1093, col: 7, offset: 45984},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1093, col: 7, offset: 45984},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1093, col: 13, offset: 45990},
																											run: (*parser).callonListParagraphLine280,
																											expr: &litMatcher{
																												pos:        position{line: 1093, col: 13, offset: 45990},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 185, col: 5, offset: 6836},
																					run: (*parser).callonListParagraphLine282,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 5, offset: 6836},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 189, col: 17, offset: 6961},
																									run: (*parser).callonListParagraphLine285,
																									expr: &seqExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												expr: &actionExpr{
																													pos: position{line: 213, col: 14, offset: 7794},
																													run: (*parser).callonListParagraphLine288,
																													expr: &litMatcher{
																														pos:        position{line: 213, col: 14, offset: 7794},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 28, offset: 6972},
																												expr: &actionExpr{
																													pos: position{line: 229, col: 14, offset: 8391},
																													run: (*parser).callonListParagraphLine291,
																													expr: &litMatcher{
																														pos:        position{line: 229, col: 14, offset: 8391},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 189, col: 39, offset: 6983},
																												expr: &actionExpr{
																													pos: position{line: 1039, col: 16, offset: 44628},
																													run: (*parser).callonListParagraphLine294,
																													expr: &litMatcher{
																														pos:        position{line: 1039, col: 16, offset: 44628},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 189, col: 52, offset: 6996},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 189, col: 56, offset: 7000},
																													expr: &seqExpr{
																														pos: position{line: 189, col: 57, offset: 7001},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 58, offset: 7002},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 62, offset: 7006},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 63, offset: 7007},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 189, col: 67, offset: 7011},
																																expr: &litMatcher{
																																	pos:        position{line: 189, col: 68, offset: 7012},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 189, col: 72, offset: 7016,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 24, offset: 6855},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 24, offset: 6855},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 29, offset: 6860},
																								expr: &choiceExpr{
																									pos: position{line: 1093, col: 7, offset: 45984},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1093, col: 7, offset: 45984},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1093, col: 13, offset: 45990},
																											run: (*parser).callonListParagraphLine311,
																											expr: &litMatcher{
																												pos:        position{line: 1093, col: 13, offset: 45990},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 179, col: 59, offset: 6609},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 136, col: 131, offset: 5202},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonListParagraphLine317,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 394, col: 5, offset: 14427},
							expr: &choiceExpr{
								pos: position{line: 831, col: 19, offset: 36219},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 997, col: 26, offset: 42900},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 839, col: 25, offset: 36636},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 839, col: 25, offset: 36636},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 839, col: 31, offset: 36642},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonListParagraphLine332,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 850, col: 26, offset: 37115},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 850, col: 26, offset: 37115},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 850, col: 33, offset: 37122},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonListParagraphLine344,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 872, col: 26, offset: 38020},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 872, col: 26, offset: 38020},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 872, col: 33, offset: 38027},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonListParagraphLine356,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 973, col: 26, offset: 41955},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 895, col: 24, offset: 38845},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 24, offset: 38845},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 895, col: 31, offset: 38852},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonListParagraphLine369,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 930, col: 26, offset: 40438},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 930, col: 26, offset: 40438},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 930, col: 33, offset: 40445},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonListParagraphLine381,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 395, col: 5, offset: 14449},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 395, col: 11, offset: 14455},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "ContinuedDocumentElement",
			pos:  position{line: 403, col: 1, offset: 14585},
			expr: &actionExpr{
				pos: position{line: 403, col: 28, offset: 14612},
				run: (*parser).callonContinuedDocumentElement1,
				expr: &seqExpr{
					pos: position{line: 403, col: 28, offset: 14612},
					exprs: []interface{}{
						&actionExpr{
							pos: position{line: 399, col: 25, offset: 14525},
							run: (*parser).callonContinuedDocumentElement3,
							expr: &seqExpr{
								pos: position{line: 399, col: 25, offset: 14525},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 399, col: 25, offset: 14525},
										val:        "+",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 399, col: 29, offset: 14529},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonContinuedDocumentElement9,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1101, col: 8, offset: 46086},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1097, col: 12, offset: 46046},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1097, col: 21, offset: 46055},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1099, col: 8, offset: 46075},
												expr: &anyMatcher{
													line: 1099, col: 9, offset: 46076,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 403, col: 49, offset: 14633},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 403, col: 57, offset: 14641},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItem",
			pos:  position{line: 410, col: 1, offset: 14799},
			expr: &actionExpr{
				pos: position{line: 410, col: 20, offset: 14818},
				run: (*parser).callonOrderedListItem1,
				expr: &seqExpr{
					pos: position{line: 410, col: 20, offset: 14818},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 410, col: 20, offset: 14818},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 410, col: 31, offset: 14829},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonOrderedListItem5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5092},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5098},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 143, col: 14, offset: 5448},
															run: (*parser).callonOrderedListItem9,
															expr: &seqExpr{
																pos: position{line: 143, col: 14, offset: 5448},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 143, col: 14, offset: 5448},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 143, col: 19, offset: 5453},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonOrderedListItem13,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonOrderedListItem23,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 143, col: 27, offset: 5461},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 145, col: 5, offset: 5515},
															run: (*parser).callonOrderedListItem37,
															expr: &seqExpr{
																pos: position{line: 145, col: 5, offset: 5515},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 145, col: 5, offset: 5515},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 145, col: 10, offset: 5520},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1079, col: 7, offset: 45702},
																			run: (*parser).callonOrderedListItem41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1079, col: 7, offset: 45702},
																				expr: &seqExpr{
																					pos: position{line: 1079, col: 8, offset: 45703},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 17, offset: 45712},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonOrderedListItem51,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 21, offset: 45716},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 22, offset: 45717},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 26, offset: 45721},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 27, offset: 45722},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 31, offset: 45726},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 32, offset: 45727},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 37, offset: 45732},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 38, offset: 45733},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1079, col: 43, offset: 45738},
																							expr: &litMatcher{
																								pos:        position{line: 1079, col: 44, offset: 45739},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1079, col: 48, offset: 45743,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 145, col: 18, offset: 5528},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 155, col: 17, offset: 5831},
															run: (*parser).callonOrderedListItem65,
															expr: &seqExpr{
																pos: position{line: 155, col: 17, offset: 5831},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 155, col: 17, offset: 5831},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 155, col: 21, offset: 5835},
																		expr: &litMatcher{
																			pos:        position{line: 155, col: 22, offset: 5836},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 155, col: 26, offset: 5840},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonOrderedListItem73,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 155, col: 30, offset: 5844},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 159, col: 24, offset: 5949},
																			run: (*parser).callonOrderedListItem76,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 159, col: 24, offset: 5949},
																				expr: &seqExpr{
																					pos: position{line: 159, col: 25, offset: 5950},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 159, col: 25, offset: 5950},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 159, col: 34, offset: 5959,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 165, col: 16, offset: 6108},
															run: (*parser).callonOrderedListItem84,
															expr: &seqExpr{
																pos: position{line: 165, col: 16, offset: 6108},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 165, col: 16, offset: 6108},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 165, col: 21, offset: 6113},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonOrderedListItem90,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 165, col: 25, offset: 6117},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 169, col: 23, offset: 6221},
																			run: (*parser).callonOrderedListItem93,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 169, col: 23, offset: 6221},
																				expr: &seqExpr{
																					pos: position{line: 169, col: 24, offset: 6222},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 169, col: 24, offset: 6222},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 169, col: 33, offset: 6231},
																							expr: &litMatcher{
																								pos:        position{line: 169, col: 34, offset: 6232},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 169, col: 38, offset: 6236,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 165, col: 51, offset: 6143},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 174, col: 30, offset: 6385},
															run: (*parser).callonOrderedListItem104,
															expr: &seqExpr{
																pos: position{line: 174, col: 30, offset: 6385},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 30, offset: 6385},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 34, offset: 6389},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 507, col: 19, offset: 19712},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 507, col: 19, offset: 19712},
																					run: (*parser).callonOrderedListItem109,
																					expr: &litMatcher{
																						pos:        position{line: 507, col: 19, offset: 19712},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 509, col: 5, offset: 19750},
																					run: (*parser).callonOrderedListItem111,
																					expr: &litMatcher{
																						pos:        position{line: 509, col: 5, offset: 19750},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 511, col: 5, offset: 19790},
																					run: (*parser).callonOrderedListItem113,
																					expr: &litMatcher{
																						pos:        position{line: 511, col: 5, offset: 19790},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 513, col: 5, offset: 19840},
																					run: (*parser).callonOrderedListItem115,
																					expr: &litMatcher{
																						pos:        position{line: 513, col: 5, offset: 19840},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 515, col: 5, offset: 19886},
																					run: (*parser).callonOrderedListItem117,
																					expr: &litMatcher{
																						pos:        position{line: 515, col: 5, offset: 19886},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 53, offset: 6408},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 197, col: 21, offset: 7157},
															run: (*parser).callonOrderedListItem120,
															expr: &litMatcher{
																pos:        position{line: 197, col: 21, offset: 7157},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 179, col: 19, offset: 6569},
															run: (*parser).callonOrderedListItem122,
															expr: &seqExpr{
																pos: position{line: 179, col: 19, offset: 6569},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 179, col: 19, offset: 6569},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 179, col: 23, offset: 6573},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonOrderedListItem128,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 179, col: 27, offset: 6577},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 179, col: 38, offset: 6588},
																			expr: &choiceExpr{
																				pos: position{line: 183, col: 21, offset: 6701},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						run: (*parser).callonOrderedListItem133,
																						expr: &seqExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 183, col: 21, offset: 6701},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonOrderedListItem136,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonOrderedListItem139,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonOrderedListItem142,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonOrderedListItem145,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 183, col: 40, offset: 6720},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 183, col: 44, offset: 6724},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 193, col: 19, offset: 7075},
																										run: (*parser).callonOrderedListItem159,
																										expr: &labeledExpr{
																											pos:   position{line: 193, col: 19, offset: 7075},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 193, col: 25, offset: 7081},
																												expr: &seqExpr{
																													pos: position{line: 193, col: 26, offset: 7082},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 193, col: 26, offset: 7082},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 27, offset: 7083},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 31, offset: 7087},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 32, offset: 7088},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 193, col: 36, offset: 7092},
																															expr: &litMatcher{
																																pos:        position{line: 193, col: 37, offset: 7093},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 193, col: 41, offset: 7097,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 183, col: 67, offset: 6747},
																									expr: &litMatcher{
																										pos:        position{line: 183, col: 67, offset: 6747},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 183, col: 72, offset: 6752},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonOrderedListItem175,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 185, col: 5, offset: 6836},
																						run: (*parser).callonOrderedListItem177,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 5, offset: 6836},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 189, col: 17, offset: 6961},
																										run: (*parser).callonOrderedListItem180,
																										expr: &seqExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													expr: &actionExpr{
																														pos: position{line: 213, col: 14, offset: 7794},
																														run: (*parser).callonOrderedListItem183,
																														expr: &litMatcher{
																															pos:        position{line: 213, col: 14, offset: 7794},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 28, offset: 6972},
																													expr: &actionExpr{
																														pos: position{line: 229, col: 14, offset: 8391},
																														run: (*parser).callonOrderedListItem186,
																														expr: &litMatcher{
																															pos:        position{line: 229, col: 14, offset: 8391},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 189, col: 39, offset: 6983},
																													expr: &actionExpr{
																														pos: position{line: 1039, col: 16, offset: 44628},
																														run: (*parser).callonOrderedListItem189,
																														expr: &litMatcher{
																															pos:        position{line: 1039, col: 16, offset: 44628},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 189, col: 52, offset: 6996},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 189, col: 56, offset: 7000},
																														expr: &seqExpr{
																															pos: position{line: 189, col: 57, offset: 7001},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 58, offset: 7002},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 62, offset: 7006},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 63, offset: 7007},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 67, offset: 7011},
																																	expr: &litMatcher{
																																		pos:        position{line: 189, col: 68, offset: 7012},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 189, col: 72, offset: 7016,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 24, offset: 6855},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 24, offset: 6855},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 29, offset: 6860},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonOrderedListItem206,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 179, col: 59, offset: 6609},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5202},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonOrderedListItem212,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 410, col: 51, offset: 14849},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 414, col: 26, offset: 15081},
								run: (*parser).callonOrderedListItem220,
								expr: &seqExpr{
									pos: position{line: 414, col: 26, offset: 15081},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 414, col: 26, offset: 15081},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonOrderedListItem225,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 414, col: 30, offset: 15085},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 416, col: 5, offset: 15140},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 416, col: 5, offset: 15140},
														run: (*parser).callonOrderedListItem229,
														expr: &litMatcher{
															pos:        position{line: 416, col: 5, offset: 15140},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 418, col: 9, offset: 15253},
														run: (*parser).callonOrderedListItem231,
														expr: &litMatcher{
															pos:        position{line: 418, col: 9, offset: 15253},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 420, col: 9, offset: 15364},
														run: (*parser).callonOrderedListItem233,
														expr: &litMatcher{
															pos:        position{line: 420, col: 9, offset: 15364},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 422, col: 9, offset: 15473},
														run: (*parser).callonOrderedListItem235,
														expr: &litMatcher{
															pos:        position{line: 422, col: 9, offset: 15473},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 9, offset: 15580},
														run: (*parser).callonOrderedListItem237,
														expr: &litMatcher{
															pos:        position{line: 424, col: 9, offset: 15580},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 427, col: 9, offset: 15707},
														run: (*parser).callonOrderedListItem239,
														expr: &seqExpr{
															pos: position{line: 427, col: 9, offset: 15707},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 427, col: 9, offset: 15707},
																	expr: &charClassMatcher{
																		pos:        position{line: 427, col: 10, offset: 15708},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 427, col: 18, offset: 15716},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 429, col: 9, offset: 15819},
														run: (*parser).callonOrderedListItem244,
														expr: &seqExpr{
															pos: position{line: 429, col: 9, offset: 15819},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 429, col: 10, offset: 15820},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 429, col: 17, offset: 15827},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 431, col: 9, offset: 15933},
														run: (*parser).callonOrderedListItem248,
														expr: &seqExpr{
															pos: position{line: 431, col: 9, offset: 15933},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 431, col: 10, offset: 15934},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 431, col: 17, offset: 15941},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 433, col: 9, offset: 16047},
														run: (*parser).callonOrderedListItem252,
														expr: &seqExpr{
															pos: position{line: 433, col: 9, offset: 16047},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 433, col: 9, offset: 16047},
																	expr: &charClassMatcher{
																		pos:        position{line: 433, col: 10, offset: 16048},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 433, col: 18, offset: 16056},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 435, col: 9, offset: 16162},
														run: (*parser).callonOrderedListItem257,
														expr: &seqExpr{
															pos: position{line: 435, col: 9, offset: 16162},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 435, col: 9, offset: 16162},
																	expr: &charClassMatcher{
																		pos:        position{line: 435, col: 10, offset: 16163},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 435, col: 18, offset: 16171},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 437, col: 8, offset: 16276},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonOrderedListItem265,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 410, col: 82, offset: 14880},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 410, col: 91, offset: 14889},
								name: "OrderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 410, col: 115, offset: 14913},
							expr: &actionExpr{
								pos: position{line: 1060, col: 14, offset: 45168},
								run: (*parser).callonOrderedListItem270,
								expr: &seqExpr{
									pos: position{line: 1060, col: 14, offset: 45168},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1060, col: 14, offset: 45168},
											expr: &notExpr{
												pos: position{line: 1099, col: 8, offset: 46075},
												expr: &anyMatcher{
													line: 1099, col: 9, offset: 46076,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1060, col: 19, offset: 45173},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonOrderedListItem278,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItemContent",
			pos:  position{line: 441, col: 1, offset: 16316},
			expr: &actionExpr{
				pos: position{line: 441, col: 27, offset: 16342},
				run: (*parser).callonOrderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 441, col: 27, offset: 16342},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 441, col: 37, offset: 16352},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 441, col: 37, offset: 16352},
								expr: &ruleRefExpr{
									pos:  position{line: 441, col: 37, offset: 16352},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 441, col: 52, offset: 16367},
								expr: &ruleRefExpr{
									pos:  position{line: 441, col: 52, offset: 16367},
									name: "ContinuedDocumentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItem",
			pos:  position{line: 448, col: 1, offset: 16696},
			expr: &actionExpr{
				pos: position{line: 448, col: 22, offset: 16717},
				run: (*parser).callonUnorderedListItem1,
				expr: &seqExpr{
					pos: position{line: 448, col: 22, offset: 16717},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 448, col: 22, offset: 16717},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 453, col: 5, offset: 16936},
								run: (*parser).callonUnorderedListItem4,
								expr: &seqExpr{
									pos: position{line: 453, col: 5, offset: 16936},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 453, col: 5, offset: 16936},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonUnorderedListItem9,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 453, col: 9, offset: 16940},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 454, col: 9, offset: 16957},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 454, col: 9, offset: 16957},
														run: (*parser).callonUnorderedListItem13,
														expr: &litMatcher{
															pos:        position{line: 454, col: 9, offset: 16957},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 11, offset: 17126},
														run: (*parser).callonUnorderedListItem15,
														expr: &litMatcher{
															pos:        position{line: 457, col: 11, offset: 17126},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 460, col: 11, offset: 17295},
														run: (*parser).callonUnorderedListItem17,
														expr: &litMatcher{
															pos:        position{line: 460, col: 11, offset: 17295},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 463, col: 11, offset: 17464},
														run: (*parser).callonUnorderedListItem19,
														expr: &litMatcher{
															pos:        position{line: 463, col: 11, offset: 17464},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 466, col: 11, offset: 17630},
														run: (*parser).callonUnorderedListItem21,
														expr: &litMatcher{
															pos:        position{line: 466, col: 11, offset: 17630},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 469, col: 11, offset: 17794},
														run: (*parser).callonUnorderedListItem23,
														expr: &litMatcher{
															pos:        position{line: 469, col: 11, offset: 17794},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 471, col: 12, offset: 17941},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonUnorderedListItem28,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 448, col: 55, offset: 16750},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 448, col: 64, offset: 16759},
								name: "UnorderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 448, col: 90, offset: 16785},
							expr: &actionExpr{
								pos: position{line: 1060, col: 14, offset: 45168},
								run: (*parser).callonUnorderedListItem33,
								expr: &seqExpr{
									pos: position{line: 1060, col: 14, offset: 45168},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1060, col: 14, offset: 45168},
											expr: &notExpr{
												pos: position{line: 1099, col: 8, offset: 46075},
												expr: &anyMatcher{
													line: 1099, col: 9, offset: 46076,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1060, col: 19, offset: 45173},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonUnorderedListItem41,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItemContent",
			pos:  position{line: 475, col: 1, offset: 17990},
			expr: &actionExpr{
				pos: position{line: 475, col: 29, offset: 18018},
				run: (*parser).callonUnorderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 475, col: 29, offset: 18018},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 475, col: 39, offset: 18028},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 475, col: 39, offset: 18028},
								expr: &ruleRefExpr{
									pos:  position{line: 475, col: 39, offset: 18028},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 475, col: 54, offset: 18043},
								expr: &ruleRefExpr{
									pos:  position{line: 475, col: 54, offset: 18043},
									name: "ContinuedDocumentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItem",
			pos:  position{line: 482, col: 1, offset: 18370},
			expr: &choiceExpr{
				pos: position{line: 483, col: 5, offset: 18394},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 483, col: 5, offset: 18394},
						run: (*parser).callonLabeledListItem2,
						expr: &seqExpr{
							pos: position{line: 483, col: 5, offset: 18394},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 483, col: 5, offset: 18394},
									label: "term",
									expr: &actionExpr{
										pos: position{line: 491, col: 24, offset: 19103},
										run: (*parser).callonLabeledListItem5,
										expr: &zeroOrMoreExpr{
											pos: position{line: 491, col: 24, offset: 19103},
											expr: &seqExpr{
												pos: position{line: 491, col: 25, offset: 19104},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 491, col: 25, offset: 19104},
														expr: &choiceExpr{
															pos: position{line: 1097, col: 12, offset: 46046},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 491, col: 34, offset: 19113},
														expr: &litMatcher{
															pos:        position{line: 491, col: 35, offset: 19114},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 491, col: 40, offset: 19119,
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 483, col: 32, offset: 18421},
									label: "separator",
									expr: &actionExpr{
										pos: position{line: 496, col: 29, offset: 19265},
										run: (*parser).callonLabeledListItem16,
										expr: &choiceExpr{
											pos: position{line: 496, col: 30, offset: 19266},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 496, col: 30, offset: 19266},
													val:        "::::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 496, col: 39, offset: 19275},
													val:        ":::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 496, col: 47, offset: 19283},
													val:        "::",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&oneOrMoreExpr{
									pos: position{line: 483, col: 69, offset: 18458},
									expr: &choiceExpr{
										pos: position{line: 483, col: 70, offset: 18459},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonLabeledListItem24,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
											&litMatcher{
												pos:        position{line: 1097, col: 12, offset: 46046},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1097, col: 21, offset: 46055},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 483, col: 85, offset: 18474},
									label: "description",
									expr: &ruleRefExpr{
										pos:  position{line: 483, col: 98, offset: 18487},
										name: "LabeledListItemDescription",
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 486, col: 10, offset: 18742},
						run: (*parser).callonLabeledListItem30,
						expr: &seqExpr{
							pos: position{line: 486, col: 10, offset: 18742},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 486, col: 10, offset: 18742},
									label: "term",
									expr: &actionExpr{
										pos: position{line: 491, col: 24, offset: 19103},
										run: (*parser).callonLabeledListItem33,
										expr: &zeroOrMoreExpr{
											pos: position{line: 491, col: 24, offset: 19103},
											expr: &seqExpr{
												pos: position{line: 491, col: 25, offset: 19104},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 491, col: 25, offset: 19104},
														expr: &choiceExpr{
															pos: position{line: 1097, col: 12, offset: 46046},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 491, col: 34, offset: 19113},
														expr: &litMatcher{
															pos:        position{line: 491, col: 35, offset: 19114},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 491, col: 40, offset: 19119,
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 486, col: 37, offset: 18769},
									label: "separator",
									expr: &actionExpr{
										pos: position{line: 496, col: 29, offset: 19265},
										run: (*parser).callonLabeledListItem44,
										expr: &choiceExpr{
											pos: position{line: 496, col: 30, offset: 19266},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 496, col: 30, offset: 19266},
													val:        "::::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 496, col: 39, offset: 19275},
													val:        ":::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 496, col: 47, offset: 19283},
													val:        "::",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 486, col: 74, offset: 18806},
									expr: &choiceExpr{
										pos: position{line: 1093, col: 7, offset: 45984},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonLabeledListItem52,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1101, col: 8, offset: 46086},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1097, col: 12, offset: 46046},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1097, col: 21, offset: 46055},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1099, col: 8, offset: 46075},
											expr: &anyMatcher{
												line: 1099, col: 9, offset: 46076,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItemDescription",
			pos:  position{line: 500, col: 1, offset: 19326},
			expr: &actionExpr{
				pos: position{line: 500, col: 31, offset: 19356},
				run: (*parser).callonLabeledListItemDescription1,
				expr: &labeledExpr{
					pos:   position{line: 500, col: 31, offset: 19356},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 500, col: 40, offset: 19365},
						expr: &choiceExpr{
							pos: position{line: 500, col: 41, offset: 19366},
							alternatives: []interface{}{
								&ruleRefExpr{
									pos:  position{line: 500, col: 41, offset: 19366},
									name: "ListParagraph",
								},
								&ruleRefExpr{
									pos:  position{line: 500, col: 57, offset: 19382},
									name: "ContinuedDocumentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Paragraph",
			pos:  position{line: 524, col: 1, offset: 20189},
			expr: &choiceExpr{
				pos: position{line: 526, col: 5, offset: 20236},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 526, col: 5, offset: 20236},
						run: (*parser).callonParagraph2,
						expr: &seqExpr{
							pos: position{line: 526, col: 5, offset: 20236},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 526, col: 5, offset: 20236},
									expr: &seqExpr{
										pos: position{line: 526, col: 7, offset: 20238},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 526, col: 7, offset: 20238},
												expr: &litMatcher{
													pos:        position{line: 526, col: 7, offset: 20238},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 526, col: 12, offset: 20243},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonParagraph11,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 526, col: 16, offset: 20247},
												expr: &choiceExpr{
													pos: position{line: 1097, col: 12, offset: 46046},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 526, col: 26, offset: 20257},
									label: "t",
									expr: &choiceExpr{
										pos: position{line: 507, col: 19, offset: 19712},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 507, col: 19, offset: 19712},
												run: (*parser).callonParagraph19,
												expr: &litMatcher{
													pos:        position{line: 507, col: 19, offset: 19712},
													val:        "TIP",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 509, col: 5, offset: 19750},
												run: (*parser).callonParagraph21,
												expr: &litMatcher{
													pos:        position{line: 509, col: 5, offset: 19750},
													val:        "NOTE",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 511, col: 5, offset: 19790},
												run: (*parser).callonParagraph23,
												expr: &litMatcher{
													pos:        position{line: 511, col: 5, offset: 19790},
													val:        "IMPORTANT",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 513, col: 5, offset: 19840},
												run: (*parser).callonParagraph25,
												expr: &litMatcher{
													pos:        position{line: 513, col: 5, offset: 19840},
													val:        "WARNING",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 515, col: 5, offset: 19886},
												run: (*parser).callonParagraph27,
												expr: &litMatcher{
													pos:        position{line: 515, col: 5, offset: 19886},
													val:        "CAUTION",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 526, col: 45, offset: 20276},
									val:        ": ",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 526, col: 50, offset: 20281},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 526, col: 56, offset: 20287},
										expr: &ruleRefExpr{
											pos:  position{line: 526, col: 57, offset: 20288},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 530, col: 5, offset: 20468},
						run: (*parser).callonParagraph33,
						expr: &seqExpr{
							pos: position{line: 530, col: 5, offset: 20468},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 530, col: 5, offset: 20468},
									expr: &seqExpr{
										pos: position{line: 530, col: 7, offset: 20470},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 530, col: 7, offset: 20470},
												expr: &litMatcher{
													pos:        position{line: 530, col: 7, offset: 20470},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 530, col: 12, offset: 20475},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonParagraph42,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 530, col: 16, offset: 20479},
												expr: &choiceExpr{
													pos: position{line: 1097, col: 12, offset: 46046},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 530, col: 26, offset: 20489},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 530, col: 32, offset: 20495},
										expr: &ruleRefExpr{
											pos:  position{line: 530, col: 33, offset: 20496},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "MasqueradeParagraph",
			pos:  position{line: 533, col: 1, offset: 20580},
			expr: &choiceExpr{
				pos: position{line: 534, col: 5, offset: 20632},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 534, col: 5, offset: 20632},
						run: (*parser).callonMasqueradeParagraph2,
						expr: &seqExpr{
							pos: position{line: 534, col: 5, offset: 20632},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 534, col: 5, offset: 20632},
									label: "attributes",
									expr: &seqExpr{
										pos: position{line: 534, col: 17, offset: 20644},
										exprs: []interface{}{
											&choiceExpr{
												pos: position{line: 141, col: 24, offset: 5400},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 201, col: 20, offset: 7260},
														run: (*parser).callonMasqueradeParagraph7,
														expr: &seqExpr{
															pos: position{line: 201, col: 20, offset: 7260},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 201, col: 20, offset: 7260},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 201, col: 24, offset: 7264},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 213, col: 14, offset: 7794},
																		run: (*parser).callonMasqueradeParagraph11,
																		expr: &litMatcher{
																			pos:        position{line: 213, col: 14, offset: 7794},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 201, col: 41, offset: 7281},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph16,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 201, col: 45, offset: 7285},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 201, col: 49, offset: 7289},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 233, col: 16, offset: 8450},
																		run: (*parser).callonMasqueradeParagraph20,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 233, col: 16, offset: 8450},
																			expr: &seqExpr{
																				pos: position{line: 233, col: 17, offset: 8451},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 233, col: 17, offset: 8451},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 22, offset: 8456},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 23, offset: 8457},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 27, offset: 8461},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 28, offset: 8462},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 233, col: 32, offset: 8466,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 201, col: 70, offset: 7310},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 201, col: 74, offset: 7314},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 237, col: 15, offset: 8520},
																		run: (*parser).callonMasqueradeParagraph36,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 237, col: 15, offset: 8520},
																			expr: &seqExpr{
																				pos: position{line: 237, col: 16, offset: 8521},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 237, col: 16, offset: 8521},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 237, col: 21, offset: 8526},
																						expr: &litMatcher{
																							pos:        position{line: 237, col: 22, offset: 8527},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 237, col: 26, offset: 8531},
																						expr: &litMatcher{
																							pos:        position{line: 237, col: 27, offset: 8532},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 237, col: 31, offset: 8536,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 201, col: 93, offset: 7333},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 201, col: 97, offset: 7337},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph54,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 205, col: 5, offset: 7484},
														run: (*parser).callonMasqueradeParagraph61,
														expr: &seqExpr{
															pos: position{line: 205, col: 5, offset: 7484},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 205, col: 5, offset: 7484},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 205, col: 9, offset: 7488},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 213, col: 14, offset: 7794},
																		run: (*parser).callonMasqueradeParagraph65,
																		expr: &litMatcher{
																			pos:        position{line: 213, col: 14, offset: 7794},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 205, col: 26, offset: 7505},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph70,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 205, col: 30, offset: 7509},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 205, col: 34, offset: 7513},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 233, col: 16, offset: 8450},
																		run: (*parser).callonMasqueradeParagraph74,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 233, col: 16, offset: 8450},
																			expr: &seqExpr{
																				pos: position{line: 233, col: 17, offset: 8451},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 233, col: 17, offset: 8451},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 22, offset: 8456},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 23, offset: 8457},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 27, offset: 8461},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 28, offset: 8462},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 233, col: 32, offset: 8466,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 205, col: 55, offset: 7534},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 205, col: 59, offset: 7538},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph92,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 209, col: 5, offset: 7673},
														run: (*parser).callonMasqueradeParagraph99,
														expr: &seqExpr{
															pos: position{line: 209, col: 5, offset: 7673},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 209, col: 5, offset: 7673},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 209, col: 9, offset: 7677},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 213, col: 14, offset: 7794},
																		run: (*parser).callonMasqueradeParagraph103,
																		expr: &litMatcher{
																			pos:        position{line: 213, col: 14, offset: 7794},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 209, col: 26, offset: 7694},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph108,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 209, col: 30, offset: 7698},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 209, col: 34, offset: 7702},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph114,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 217, col: 20, offset: 7857},
														run: (*parser).callonMasqueradeParagraph121,
														expr: &seqExpr{
															pos: position{line: 217, col: 20, offset: 7857},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 217, col: 20, offset: 7857},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 217, col: 24, offset: 7861},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 229, col: 14, offset: 8391},
																		run: (*parser).callonMasqueradeParagraph125,
																		expr: &litMatcher{
																			pos:        position{line: 229, col: 14, offset: 8391},
																			val:        "verse",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 217, col: 41, offset: 7878},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph130,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 217, col: 45, offset: 7882},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 217, col: 49, offset: 7886},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 233, col: 16, offset: 8450},
																		run: (*parser).callonMasqueradeParagraph134,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 233, col: 16, offset: 8450},
																			expr: &seqExpr{
																				pos: position{line: 233, col: 17, offset: 8451},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 233, col: 17, offset: 8451},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 22, offset: 8456},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 23, offset: 8457},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 27, offset: 8461},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 28, offset: 8462},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 233, col: 32, offset: 8466,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 217, col: 70, offset: 7907},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 217, col: 74, offset: 7911},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 237, col: 15, offset: 8520},
																		run: (*parser).callonMasqueradeParagraph150,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 237, col: 15, offset: 8520},
																			expr: &seqExpr{
																				pos: position{line: 237, col: 16, offset: 8521},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 237, col: 16, offset: 8521},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 237, col: 21, offset: 8526},
																						expr: &litMatcher{
																							pos:        position{line: 237, col: 22, offset: 8527},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 237, col: 26, offset: 8531},
																						expr: &litMatcher{
																							pos:        position{line: 237, col: 27, offset: 8532},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 237, col: 31, offset: 8536,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 217, col: 93, offset: 7930},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 217, col: 97, offset: 7934},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph168,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 221, col: 5, offset: 8081},
														run: (*parser).callonMasqueradeParagraph175,
														expr: &seqExpr{
															pos: position{line: 221, col: 5, offset: 8081},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 221, col: 5, offset: 8081},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 221, col: 9, offset: 8085},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 229, col: 14, offset: 8391},
																		run: (*parser).callonMasqueradeParagraph179,
																		expr: &litMatcher{
																			pos:        position{line: 229, col: 14, offset: 8391},
																			val:        "verse",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 221, col: 26, offset: 8102},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph184,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 221, col: 30, offset: 8106},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 221, col: 34, offset: 8110},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 233, col: 16, offset: 8450},
																		run: (*parser).callonMasqueradeParagraph188,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 233, col: 16, offset: 8450},
																			expr: &seqExpr{
																				pos: position{line: 233, col: 17, offset: 8451},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 233, col: 17, offset: 8451},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 22, offset: 8456},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 23, offset: 8457},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 27, offset: 8461},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 28, offset: 8462},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 233, col: 32, offset: 8466,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 221, col: 55, offset: 8131},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 221, col: 59, offset: 8135},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph206,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 225, col: 5, offset: 8270},
														run: (*parser).callonMasqueradeParagraph213,
														expr: &seqExpr{
															pos: position{line: 225, col: 5, offset: 8270},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 225, col: 5, offset: 8270},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 225, col: 9, offset: 8274},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 229, col: 14, offset: 8391},
																		run: (*parser).callonMasqueradeParagraph217,
																		expr: &litMatcher{
																			pos:        position{line: 229, col: 14, offset: 8391},
																			val:        "verse",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 225, col: 26, offset: 8291},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph222,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 225, col: 30, offset: 8295},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 225, col: 34, offset: 8299},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph228,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 534, col: 37, offset: 20664},
												expr: &actionExpr{
													pos: position{line: 136, col: 21, offset: 5092},
													run: (*parser).callonMasqueradeParagraph236,
													expr: &seqExpr{
														pos: position{line: 136, col: 21, offset: 5092},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 136, col: 21, offset: 5092},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 136, col: 27, offset: 5098},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 143, col: 14, offset: 5448},
																			run: (*parser).callonMasqueradeParagraph240,
																			expr: &seqExpr{
																				pos: position{line: 143, col: 14, offset: 5448},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 143, col: 14, offset: 5448},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 143, col: 19, offset: 5453},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 1079, col: 7, offset: 45702},
																							run: (*parser).callonMasqueradeParagraph244,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1079, col: 7, offset: 45702},
																								expr: &seqExpr{
																									pos: position{line: 1079, col: 8, offset: 45703},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1079, col: 8, offset: 45703},
																											expr: &choiceExpr{
																												pos: position{line: 1097, col: 12, offset: 46046},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 17, offset: 45712},
																											expr: &choiceExpr{
																												pos: position{line: 1093, col: 7, offset: 45984},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1093, col: 7, offset: 45984},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1093, col: 13, offset: 45990},
																														run: (*parser).callonMasqueradeParagraph254,
																														expr: &litMatcher{
																															pos:        position{line: 1093, col: 13, offset: 45990},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 21, offset: 45716},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 22, offset: 45717},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 26, offset: 45721},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 27, offset: 45722},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 31, offset: 45726},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 32, offset: 45727},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 37, offset: 45732},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 38, offset: 45733},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 43, offset: 45738},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 44, offset: 45739},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 1079, col: 48, offset: 45743,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 143, col: 27, offset: 5461},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 145, col: 5, offset: 5515},
																			run: (*parser).callonMasqueradeParagraph268,
																			expr: &seqExpr{
																				pos: position{line: 145, col: 5, offset: 5515},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 145, col: 5, offset: 5515},
																						val:        "[#",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 145, col: 10, offset: 5520},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 1079, col: 7, offset: 45702},
																							run: (*parser).callonMasqueradeParagraph272,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1079, col: 7, offset: 45702},
																								expr: &seqExpr{
																									pos: position{line: 1079, col: 8, offset: 45703},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1079, col: 8, offset: 45703},
																											expr: &choiceExpr{
																												pos: position{line: 1097, col: 12, offset: 46046},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 17, offset: 45712},
																											expr: &choiceExpr{
																												pos: position{line: 1093, col: 7, offset: 45984},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1093, col: 7, offset: 45984},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1093, col: 13, offset: 45990},
																														run: (*parser).callonMasqueradeParagraph282,
																														expr: &litMatcher{
																															pos:        position{line: 1093, col: 13, offset: 45990},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 21, offset: 45716},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 22, offset: 45717},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 26, offset: 45721},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 27, offset: 45722},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 31, offset: 45726},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 32, offset: 45727},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 37, offset: 45732},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 38, offset: 45733},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 43, offset: 45738},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 44, offset: 45739},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 1079, col: 48, offset: 45743,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 145, col: 18, offset: 5528},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 155, col: 17, offset: 5831},
																			run: (*parser).callonMasqueradeParagraph296,
																			expr: &seqExpr{
																				pos: position{line: 155, col: 17, offset: 5831},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 155, col: 17, offset: 5831},
																						val:        ".",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 155, col: 21, offset: 5835},
																						expr: &litMatcher{
																							pos:        position{line: 155, col: 22, offset: 5836},
																							val:        ".",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 155, col: 26, offset: 5840},
																						expr: &choiceExpr{
																							pos: position{line: 1093, col: 7, offset: 45984},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1093, col: 7, offset: 45984},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1093, col: 13, offset: 45990},
																									run: (*parser).callonMasqueradeParagraph304,
																									expr: &litMatcher{
																										pos:        position{line: 1093, col: 13, offset: 45990},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 155, col: 30, offset: 5844},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 159, col: 24, offset: 5949},
																							run: (*parser).callonMasqueradeParagraph307,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 159, col: 24, offset: 5949},
																								expr: &seqExpr{
																									pos: position{line: 159, col: 25, offset: 5950},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 159, col: 25, offset: 5950},
																											expr: &choiceExpr{
																												pos: position{line: 1097, col: 12, offset: 46046},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 159, col: 34, offset: 5959,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 165, col: 16, offset: 6108},
																			run: (*parser).callonMasqueradeParagraph315,
																			expr: &seqExpr{
																				pos: position{line: 165, col: 16, offset: 6108},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 165, col: 16, offset: 6108},
																						val:        "[.",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 165, col: 21, offset: 6113},
																						expr: &choiceExpr{
																							pos: position{line: 1093, col: 7, offset: 45984},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1093, col: 7, offset: 45984},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1093, col: 13, offset: 45990},
																									run: (*parser).callonMasqueradeParagraph321,
																									expr: &litMatcher{
																										pos:        position{line: 1093, col: 13, offset: 45990},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 165, col: 25, offset: 6117},
																						label: "role",
																						expr: &actionExpr{
																							pos: position{line: 169, col: 23, offset: 6221},
																							run: (*parser).callonMasqueradeParagraph324,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 169, col: 23, offset: 6221},
																								expr: &seqExpr{
																									pos: position{line: 169, col: 24, offset: 6222},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 169, col: 24, offset: 6222},
																											expr: &choiceExpr{
																												pos: position{line: 1097, col: 12, offset: 46046},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 169, col: 33, offset: 6231},
																											expr: &litMatcher{
																												pos:        position{line: 169, col: 34, offset: 6232},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 169, col: 38, offset: 6236,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 165, col: 51, offset: 6143},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 174, col: 30, offset: 6385},
																			run: (*parser).callonMasqueradeParagraph335,
																			expr: &seqExpr{
																				pos: position{line: 174, col: 30, offset: 6385},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 174, col: 30, offset: 6385},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 174, col: 34, offset: 6389},
																						label: "k",
																						expr: &choiceExpr{
																							pos: position{line: 507, col: 19, offset: 19712},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 507, col: 19, offset: 19712},
																									run: (*parser).callonMasqueradeParagraph340,
																									expr: &litMatcher{
																										pos:        position{line: 507, col: 19, offset: 19712},
																										val:        "TIP",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 509, col: 5, offset: 19750},
																									run: (*parser).callonMasqueradeParagraph342,
																									expr: &litMatcher{
																										pos:        position{line: 509, col: 5, offset: 19750},
																										val:        "NOTE",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 511, col: 5, offset: 19790},
																									run: (*parser).callonMasqueradeParagraph344,
																									expr: &litMatcher{
																										pos:        position{line: 511, col: 5, offset: 19790},
																										val:        "IMPORTANT",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 513, col: 5, offset: 19840},
																									run: (*parser).callonMasqueradeParagraph346,
																									expr: &litMatcher{
																										pos:        position{line: 513, col: 5, offset: 19840},
																										val:        "WARNING",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 515, col: 5, offset: 19886},
																									run: (*parser).callonMasqueradeParagraph348,
																									expr: &litMatcher{
																										pos:        position{line: 515, col: 5, offset: 19886},
																										val:        "CAUTION",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 174, col: 53, offset: 6408},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 197, col: 21, offset: 7157},
																			run: (*parser).callonMasqueradeParagraph351,
																			expr: &litMatcher{
																				pos:        position{line: 197, col: 21, offset: 7157},
																				val:        "[horizontal]",
																				ignoreCase: false,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 179, col: 19, offset: 6569},
																			run: (*parser).callonMasqueradeParagraph353,
																			expr: &seqExpr{
																				pos: position{line: 179, col: 19, offset: 6569},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 179, col: 19, offset: 6569},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 179, col: 23, offset: 6573},
																						expr: &choiceExpr{
																							pos: position{line: 1093, col: 7, offset: 45984},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1093, col: 7, offset: 45984},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1093, col: 13, offset: 45990},
																									run: (*parser).callonMasqueradeParagraph359,
																									expr: &litMatcher{
																										pos:        position{line: 1093, col: 13, offset: 45990},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 179, col: 27, offset: 6577},
																						label: "attributes",
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 179, col: 38, offset: 6588},
																							expr: &choiceExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 183, col: 21, offset: 6701},
																										run: (*parser).callonMasqueradeParagraph364,
																										expr: &seqExpr{
																											pos: position{line: 183, col: 21, offset: 6701},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 183, col: 21, offset: 6701},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														run: (*parser).callonMasqueradeParagraph367,
																														expr: &seqExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 17, offset: 6961},
																																	expr: &actionExpr{
																																		pos: position{line: 213, col: 14, offset: 7794},
																																		run: (*parser).callonMasqueradeParagraph370,
																																		expr: &litMatcher{
																																			pos:        position{line: 213, col: 14, offset: 7794},
																																			val:        "quote",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 28, offset: 6972},
																																	expr: &actionExpr{
																																		pos: position{line: 229, col: 14, offset: 8391},
																																		run: (*parser).callonMasqueradeParagraph373,
																																		expr: &litMatcher{
																																			pos:        position{line: 229, col: 14, offset: 8391},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 39, offset: 6983},
																																	expr: &actionExpr{
																																		pos: position{line: 1039, col: 16, offset: 44628},
																																		run: (*parser).callonMasqueradeParagraph376,
																																		expr: &litMatcher{
																																			pos:        position{line: 1039, col: 16, offset: 44628},
																																			val:        "literal",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 189, col: 52, offset: 6996},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 189, col: 56, offset: 7000},
																																		expr: &seqExpr{
																																			pos: position{line: 189, col: 57, offset: 7001},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 189, col: 57, offset: 7001},
																																					expr: &litMatcher{
																																						pos:        position{line: 189, col: 58, offset: 7002},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 189, col: 62, offset: 7006},
																																					expr: &litMatcher{
																																						pos:        position{line: 189, col: 63, offset: 7007},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 189, col: 67, offset: 7011},
																																					expr: &litMatcher{
																																						pos:        position{line: 189, col: 68, offset: 7012},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 189, col: 72, offset: 7016,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&litMatcher{
																													pos:        position{line: 183, col: 40, offset: 6720},
																													val:        "=",
																													ignoreCase: false,
																												},
																												&labeledExpr{
																													pos:   position{line: 183, col: 44, offset: 6724},
																													label: "value",
																													expr: &actionExpr{
																														pos: position{line: 193, col: 19, offset: 7075},
																														run: (*parser).callonMasqueradeParagraph390,
																														expr: &labeledExpr{
																															pos:   position{line: 193, col: 19, offset: 7075},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 193, col: 25, offset: 7081},
																																expr: &seqExpr{
																																	pos: position{line: 193, col: 26, offset: 7082},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 193, col: 26, offset: 7082},
																																			expr: &litMatcher{
																																				pos:        position{line: 193, col: 27, offset: 7083},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 193, col: 31, offset: 7087},
																																			expr: &litMatcher{
																																				pos:        position{line: 193, col: 32, offset: 7088},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 193, col: 36, offset: 7092},
																																			expr: &litMatcher{
																																				pos:        position{line: 193, col: 37, offset: 7093},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 193, col: 41, offset: 7097,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 183, col: 67, offset: 6747},
																													expr: &litMatcher{
																														pos:        position{line: 183, col: 67, offset: 6747},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 183, col: 72, offset: 6752},
																													expr: &choiceExpr{
																														pos: position{line: 1093, col: 7, offset: 45984},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1093, col: 7, offset: 45984},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1093, col: 13, offset: 45990},
																																run: (*parser).callonMasqueradeParagraph406,
																																expr: &litMatcher{
																																	pos:        position{line: 1093, col: 13, offset: 45990},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 185, col: 5, offset: 6836},
																										run: (*parser).callonMasqueradeParagraph408,
																										expr: &seqExpr{
																											pos: position{line: 185, col: 5, offset: 6836},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 185, col: 5, offset: 6836},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														run: (*parser).callonMasqueradeParagraph411,
																														expr: &seqExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 17, offset: 6961},
																																	expr: &actionExpr{
																																		pos: position{line: 213, col: 14, offset: 7794},
																																		run: (*parser).callonMasqueradeParagraph414,
																																		expr: &litMatcher{
																																			pos:        position{line: 213, col: 14, offset: 7794},
																																			val:        "quote",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 28, offset: 6972},
																																	expr: &actionExpr{
																																		pos: position{line: 229, col: 14, offset: 8391},
																																		run: (*parser).callonMasqueradeParagraph417,
																																		expr: &litMatcher{
																																			pos:        position{line: 229, col: 14, offset: 8391},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 39, offset: 6983},
																																	expr: &actionExpr{
																																		pos: position{line: 1039, col: 16, offset: 44628},
																																		run: (*parser).callonMasqueradeParagraph420,
																																		expr: &litMatcher{
																																			pos:        position{line: 1039, col: 16, offset: 44628},
																																			val:        "literal",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 189, col: 52, offset: 6996},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 189, col: 56, offset: 7000},
																																		expr: &seqExpr{
																																			pos: position{line: 189, col: 57, offset: 7001},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 189, col: 57, offset: 7001},
																																					expr: &litMatcher{
																																						pos:        position{line: 189, col: 58, offset: 7002},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 189, col: 62, offset: 7006},
																																					expr: &litMatcher{
																																						pos:        position{line: 189, col: 63, offset: 7007},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 189, col: 67, offset: 7011},
																																					expr: &litMatcher{
																																						pos:        position{line: 189, col: 68, offset: 7012},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 189, col: 72, offset: 7016,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 185, col: 24, offset: 6855},
																													expr: &litMatcher{
																														pos:        position{line: 185, col: 24, offset: 6855},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 185, col: 29, offset: 6860},
																													expr: &choiceExpr{
																														pos: position{line: 1093, col: 7, offset: 45984},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1093, col: 7, offset: 45984},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1093, col: 13, offset: 45990},
																																run: (*parser).callonMasqueradeParagraph437,
																																expr: &litMatcher{
																																	pos:        position{line: 1093, col: 13, offset: 45990},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 179, col: 59, offset: 6609},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 136, col: 131, offset: 5202},
																expr: &choiceExpr{
																	pos: position{line: 1093, col: 7, offset: 45984},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1093, col: 7, offset: 45984},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1093, col: 13, offset: 45990},
																			run: (*parser).callonMasqueradeParagraph443,
																			expr: &litMatcher{
																				pos:        position{line: 1093, col: 13, offset: 45990},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 1101, col: 8, offset: 46086},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1097, col: 12, offset: 46046},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1097, col: 21, offset: 46055},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 1099, col: 8, offset: 46075},
																		expr: &anyMatcher{
																			line: 1099, col: 9, offset: 46076,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 534, col: 56, offset: 20683},
									expr: &seqExpr{
										pos: position{line: 534, col: 58, offset: 20685},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 534, col: 58, offset: 20685},
												expr: &litMatcher{
													pos:        position{line: 534, col: 58, offset: 20685},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 534, col: 63, offset: 20690},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonMasqueradeParagraph457,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 534, col: 67, offset: 20694},
												expr: &choiceExpr{
													pos: position{line: 1097, col: 12, offset: 46046},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 534, col: 77, offset: 20704},
									label: "t",
									expr: &choiceExpr{
										pos: position{line: 507, col: 19, offset: 19712},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 507, col: 19, offset: 19712},
												run: (*parser).callonMasqueradeParagraph465,
												expr: &litMatcher{
													pos:        position{line: 507, col: 19, offset: 19712},
													val:        "TIP",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 509, col: 5, offset: 19750},
												run: (*parser).callonMasqueradeParagraph467,
												expr: &litMatcher{
													pos:        position{line: 509, col: 5, offset: 19750},
													val:        "NOTE",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 511, col: 5, offset: 19790},
												run: (*parser).callonMasqueradeParagraph469,
												expr: &litMatcher{
													pos:        position{line: 511, col: 5, offset: 19790},
													val:        "IMPORTANT",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 513, col: 5, offset: 19840},
												run: (*parser).callonMasqueradeParagraph471,
												expr: &litMatcher{
													pos:        position{line: 513, col: 5, offset: 19840},
													val:        "WARNING",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 515, col: 5, offset: 19886},
												run: (*parser).callonMasqueradeParagraph473,
												expr: &litMatcher{
													pos:        position{line: 515, col: 5, offset: 19886},
													val:        "CAUTION",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 534, col: 96, offset: 20723},
									val:        ": ",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 534, col: 101, offset: 20728},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 534, col: 107, offset: 20734},
										expr: &ruleRefExpr{
											pos:  position{line: 534, col: 108, offset: 20735},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 538, col: 5, offset: 20946},
						run: (*parser).callonMasqueradeParagraph479,
						expr: &seqExpr{
							pos: position{line: 538, col: 5, offset: 20946},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 538, col: 5, offset: 20946},
									label: "attributes",
									expr: &seqExpr{
										pos: position{line: 538, col: 17, offset: 20958},
										exprs: []interface{}{
											&choiceExpr{
												pos: position{line: 141, col: 24, offset: 5400},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 201, col: 20, offset: 7260},
														run: (*parser).callonMasqueradeParagraph484,
														expr: &seqExpr{
															pos: position{line: 201, col: 20, offset: 7260},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 201, col: 20, offset: 7260},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 201, col: 24, offset: 7264},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 213, col: 14, offset: 7794},
																		run: (*parser).callonMasqueradeParagraph488,
																		expr: &litMatcher{
																			pos:        position{line: 213, col: 14, offset: 7794},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 201, col: 41, offset: 7281},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph493,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 201, col: 45, offset: 7285},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 201, col: 49, offset: 7289},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 233, col: 16, offset: 8450},
																		run: (*parser).callonMasqueradeParagraph497,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 233, col: 16, offset: 8450},
																			expr: &seqExpr{
																				pos: position{line: 233, col: 17, offset: 8451},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 233, col: 17, offset: 8451},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 22, offset: 8456},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 23, offset: 8457},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 27, offset: 8461},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 28, offset: 8462},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 233, col: 32, offset: 8466,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 201, col: 70, offset: 7310},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 201, col: 74, offset: 7314},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 237, col: 15, offset: 8520},
																		run: (*parser).callonMasqueradeParagraph513,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 237, col: 15, offset: 8520},
																			expr: &seqExpr{
																				pos: position{line: 237, col: 16, offset: 8521},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 237, col: 16, offset: 8521},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 237, col: 21, offset: 8526},
																						expr: &litMatcher{
																							pos:        position{line: 237, col: 22, offset: 8527},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 237, col: 26, offset: 8531},
																						expr: &litMatcher{
																							pos:        position{line: 237, col: 27, offset: 8532},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 237, col: 31, offset: 8536,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 201, col: 93, offset: 7333},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 201, col: 97, offset: 7337},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph531,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 205, col: 5, offset: 7484},
														run: (*parser).callonMasqueradeParagraph538,
														expr: &seqExpr{
															pos: position{line: 205, col: 5, offset: 7484},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 205, col: 5, offset: 7484},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 205, col: 9, offset: 7488},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 213, col: 14, offset: 7794},
																		run: (*parser).callonMasqueradeParagraph542,
																		expr: &litMatcher{
																			pos:        position{line: 213, col: 14, offset: 7794},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 205, col: 26, offset: 7505},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph547,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 205, col: 30, offset: 7509},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 205, col: 34, offset: 7513},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 233, col: 16, offset: 8450},
																		run: (*parser).callonMasqueradeParagraph551,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 233, col: 16, offset: 8450},
																			expr: &seqExpr{
																				pos: position{line: 233, col: 17, offset: 8451},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 233, col: 17, offset: 8451},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 22, offset: 8456},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 23, offset: 8457},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 27, offset: 8461},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 28, offset: 8462},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 233, col: 32, offset: 8466,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 205, col: 55, offset: 7534},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 205, col: 59, offset: 7538},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph569,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 209, col: 5, offset: 7673},
														run: (*parser).callonMasqueradeParagraph576,
														expr: &seqExpr{
															pos: position{line: 209, col: 5, offset: 7673},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 209, col: 5, offset: 7673},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 209, col: 9, offset: 7677},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 213, col: 14, offset: 7794},
																		run: (*parser).callonMasqueradeParagraph580,
																		expr: &litMatcher{
																			pos:        position{line: 213, col: 14, offset: 7794},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 209, col: 26, offset: 7694},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph585,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 209, col: 30, offset: 7698},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 209, col: 34, offset: 7702},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph591,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 217, col: 20, offset: 7857},
														run: (*parser).callonMasqueradeParagraph598,
														expr: &seqExpr{
															pos: position{line: 217, col: 20, offset: 7857},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 217, col: 20, offset: 7857},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 217, col: 24, offset: 7861},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 229, col: 14, offset: 8391},
																		run: (*parser).callonMasqueradeParagraph602,
																		expr: &litMatcher{
																			pos:        position{line: 229, col: 14, offset: 8391},
																			val:        "verse",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 217, col: 41, offset: 7878},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph607,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 217, col: 45, offset: 7882},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 217, col: 49, offset: 7886},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 233, col: 16, offset: 8450},
																		run: (*parser).callonMasqueradeParagraph611,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 233, col: 16, offset: 8450},
																			expr: &seqExpr{
																				pos: position{line: 233, col: 17, offset: 8451},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 233, col: 17, offset: 8451},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 22, offset: 8456},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 23, offset: 8457},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 27, offset: 8461},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 28, offset: 8462},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 233, col: 32, offset: 8466,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 217, col: 70, offset: 7907},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 217, col: 74, offset: 7911},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 237, col: 15, offset: 8520},
																		run: (*parser).callonMasqueradeParagraph627,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 237, col: 15, offset: 8520},
																			expr: &seqExpr{
																				pos: position{line: 237, col: 16, offset: 8521},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 237, col: 16, offset: 8521},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 237, col: 21, offset: 8526},
																						expr: &litMatcher{
																							pos:        position{line: 237, col: 22, offset: 8527},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 237, col: 26, offset: 8531},
																						expr: &litMatcher{
																							pos:        position{line: 237, col: 27, offset: 8532},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 237, col: 31, offset: 8536,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 217, col: 93, offset: 7930},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 217, col: 97, offset: 7934},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph645,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 221, col: 5, offset: 8081},
														run: (*parser).callonMasqueradeParagraph652,
														expr: &seqExpr{
															pos: position{line: 221, col: 5, offset: 8081},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 221, col: 5, offset: 8081},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 221, col: 9, offset: 8085},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 229, col: 14, offset: 8391},
																		run: (*parser).callonMasqueradeParagraph656,
																		expr: &litMatcher{
																			pos:        position{line: 229, col: 14, offset: 8391},
																			val:        "verse",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 221, col: 26, offset: 8102},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph661,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 221, col: 30, offset: 8106},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 221, col: 34, offset: 8110},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 233, col: 16, offset: 8450},
																		run: (*parser).callonMasqueradeParagraph665,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 233, col: 16, offset: 8450},
																			expr: &seqExpr{
																				pos: position{line: 233, col: 17, offset: 8451},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 233, col: 17, offset: 8451},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 22, offset: 8456},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 23, offset: 8457},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 233, col: 27, offset: 8461},
																						expr: &litMatcher{
																							pos:        position{line: 233, col: 28, offset: 8462},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 233, col: 32, offset: 8466,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 221, col: 55, offset: 8131},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 221, col: 59, offset: 8135},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph683,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 225, col: 5, offset: 8270},
														run: (*parser).callonMasqueradeParagraph690,
														expr: &seqExpr{
															pos: position{line: 225, col: 5, offset: 8270},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 225, col: 5, offset: 8270},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 225, col: 9, offset: 8274},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 229, col: 14, offset: 8391},
																		run: (*parser).callonMasqueradeParagraph694,
																		expr: &litMatcher{
																			pos:        position{line: 229, col: 14, offset: 8391},
																			val:        "verse",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 225, col: 26, offset: 8291},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph699,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 225, col: 30, offset: 8295},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 225, col: 34, offset: 8299},
																	expr: &choiceExpr{
																		pos: position{line: 1093, col: 7, offset: 45984},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1093, col: 7, offset: 45984},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1093, col: 13, offset: 45990},
																				run: (*parser).callonMasqueradeParagraph705,
																				expr: &litMatcher{
																					pos:        position{line: 1093, col: 13, offset: 45990},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 538, col: 37, offset: 20978},
												expr: &actionExpr{
													pos: position{line: 136, col: 21, offset: 5092},
													run: (*parser).callonMasqueradeParagraph713,
													expr: &seqExpr{
														pos: position{line: 136, col: 21, offset: 5092},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 136, col: 21, offset: 5092},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 136, col: 27, offset: 5098},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 143, col: 14, offset: 5448},
																			run: (*parser).callonMasqueradeParagraph717,
																			expr: &seqExpr{
																				pos: position{line: 143, col: 14, offset: 5448},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 143, col: 14, offset: 5448},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 143, col: 19, offset: 5453},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 1079, col: 7, offset: 45702},
																							run: (*parser).callonMasqueradeParagraph721,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1079, col: 7, offset: 45702},
																								expr: &seqExpr{
																									pos: position{line: 1079, col: 8, offset: 45703},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1079, col: 8, offset: 45703},
																											expr: &choiceExpr{
																												pos: position{line: 1097, col: 12, offset: 46046},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 17, offset: 45712},
																											expr: &choiceExpr{
																												pos: position{line: 1093, col: 7, offset: 45984},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1093, col: 7, offset: 45984},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1093, col: 13, offset: 45990},
																														run: (*parser).callonMasqueradeParagraph731,
																														expr: &litMatcher{
																															pos:        position{line: 1093, col: 13, offset: 45990},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 21, offset: 45716},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 22, offset: 45717},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 26, offset: 45721},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 27, offset: 45722},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 31, offset: 45726},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 32, offset: 45727},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 37, offset: 45732},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 38, offset: 45733},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 43, offset: 45738},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 44, offset: 45739},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 1079, col: 48, offset: 45743,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 143, col: 27, offset: 5461},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 145, col: 5, offset: 5515},
																			run: (*parser).callonMasqueradeParagraph745,
																			expr: &seqExpr{
																				pos: position{line: 145, col: 5, offset: 5515},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 145, col: 5, offset: 5515},
																						val:        "[#",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 145, col: 10, offset: 5520},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 1079, col: 7, offset: 45702},
																							run: (*parser).callonMasqueradeParagraph749,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1079, col: 7, offset: 45702},
																								expr: &seqExpr{
																									pos: position{line: 1079, col: 8, offset: 45703},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1079, col: 8, offset: 45703},
																											expr: &choiceExpr{
																												pos: position{line: 1097, col: 12, offset: 46046},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 17, offset: 45712},
																											expr: &choiceExpr{
																												pos: position{line: 1093, col: 7, offset: 45984},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1093, col: 7, offset: 45984},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1093, col: 13, offset: 45990},
																														run: (*parser).callonMasqueradeParagraph759,
																														expr: &litMatcher{
																															pos:        position{line: 1093, col: 13, offset: 45990},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 21, offset: 45716},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 22, offset: 45717},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 26, offset: 45721},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 27, offset: 45722},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 31, offset: 45726},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 32, offset: 45727},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 37, offset: 45732},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 38, offset: 45733},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1079, col: 43, offset: 45738},
																											expr: &litMatcher{
																												pos:        position{line: 1079, col: 44, offset: 45739},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 1079, col: 48, offset: 45743,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 145, col: 18, offset: 5528},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 155, col: 17, offset: 5831},
																			run: (*parser).callonMasqueradeParagraph773,
																			expr: &seqExpr{
																				pos: position{line: 155, col: 17, offset: 5831},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 155, col: 17, offset: 5831},
																						val:        ".",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 155, col: 21, offset: 5835},
																						expr: &litMatcher{
																							pos:        position{line: 155, col: 22, offset: 5836},
																							val:        ".",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 155, col: 26, offset: 5840},
																						expr: &choiceExpr{
																							pos: position{line: 1093, col: 7, offset: 45984},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1093, col: 7, offset: 45984},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1093, col: 13, offset: 45990},
																									run: (*parser).callonMasqueradeParagraph781,
																									expr: &litMatcher{
																										pos:        position{line: 1093, col: 13, offset: 45990},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 155, col: 30, offset: 5844},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 159, col: 24, offset: 5949},
																							run: (*parser).callonMasqueradeParagraph784,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 159, col: 24, offset: 5949},
																								expr: &seqExpr{
																									pos: position{line: 159, col: 25, offset: 5950},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 159, col: 25, offset: 5950},
																											expr: &choiceExpr{
																												pos: position{line: 1097, col: 12, offset: 46046},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 159, col: 34, offset: 5959,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 165, col: 16, offset: 6108},
																			run: (*parser).callonMasqueradeParagraph792,
																			expr: &seqExpr{
																				pos: position{line: 165, col: 16, offset: 6108},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 165, col: 16, offset: 6108},
																						val:        "[.",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 165, col: 21, offset: 6113},
																						expr: &choiceExpr{
																							pos: position{line: 1093, col: 7, offset: 45984},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1093, col: 7, offset: 45984},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1093, col: 13, offset: 45990},
																									run: (*parser).callonMasqueradeParagraph798,
																									expr: &litMatcher{
																										pos:        position{line: 1093, col: 13, offset: 45990},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 165, col: 25, offset: 6117},
																						label: "role",
																						expr: &actionExpr{
																							pos: position{line: 169, col: 23, offset: 6221},
																							run: (*parser).callonMasqueradeParagraph801,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 169, col: 23, offset: 6221},
																								expr: &seqExpr{
																									pos: position{line: 169, col: 24, offset: 6222},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 169, col: 24, offset: 6222},
																											expr: &choiceExpr{
																												pos: position{line: 1097, col: 12, offset: 46046},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1097, col: 12, offset: 46046},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1097, col: 21, offset: 46055},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 169, col: 33, offset: 6231},
																											expr: &litMatcher{
																												pos:        position{line: 169, col: 34, offset: 6232},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 169, col: 38, offset: 6236,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 165, col: 51, offset: 6143},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 174, col: 30, offset: 6385},
																			run: (*parser).callonMasqueradeParagraph812,
																			expr: &seqExpr{
																				pos: position{line: 174, col: 30, offset: 6385},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 174, col: 30, offset: 6385},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 174, col: 34, offset: 6389},
																						label: "k",
																						expr: &choiceExpr{
																							pos: position{line: 507, col: 19, offset: 19712},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 507, col: 19, offset: 19712},
																									run: (*parser).callonMasqueradeParagraph817,
																									expr: &litMatcher{
																										pos:        position{line: 507, col: 19, offset: 19712},
																										val:        "TIP",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 509, col: 5, offset: 19750},
																									run: (*parser).callonMasqueradeParagraph819,
																									expr: &litMatcher{
																										pos:        position{line: 509, col: 5, offset: 19750},
																										val:        "NOTE",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 511, col: 5, offset: 19790},
																									run: (*parser).callonMasqueradeParagraph821,
																									expr: &litMatcher{
																										pos:        position{line: 511, col: 5, offset: 19790},
																										val:        "IMPORTANT",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 513, col: 5, offset: 19840},
																									run: (*parser).callonMasqueradeParagraph823,
																									expr: &litMatcher{
																										pos:        position{line: 513, col: 5, offset: 19840},
																										val:        "WARNING",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 515, col: 5, offset: 19886},
																									run: (*parser).callonMasqueradeParagraph825,
																									expr: &litMatcher{
																										pos:        position{line: 515, col: 5, offset: 19886},
																										val:        "CAUTION",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 174, col: 53, offset: 6408},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 197, col: 21, offset: 7157},
																			run: (*parser).callonMasqueradeParagraph828,
																			expr: &litMatcher{
																				pos:        position{line: 197, col: 21, offset: 7157},
																				val:        "[horizontal]",
																				ignoreCase: false,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 179, col: 19, offset: 6569},
																			run: (*parser).callonMasqueradeParagraph830,
																			expr: &seqExpr{
																				pos: position{line: 179, col: 19, offset: 6569},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 179, col: 19, offset: 6569},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 179, col: 23, offset: 6573},
																						expr: &choiceExpr{
																							pos: position{line: 1093, col: 7, offset: 45984},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1093, col: 7, offset: 45984},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1093, col: 13, offset: 45990},
																									run: (*parser).callonMasqueradeParagraph836,
																									expr: &litMatcher{
																										pos:        position{line: 1093, col: 13, offset: 45990},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 179, col: 27, offset: 6577},
																						label: "attributes",
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 179, col: 38, offset: 6588},
																							expr: &choiceExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 183, col: 21, offset: 6701},
																										run: (*parser).callonMasqueradeParagraph841,
																										expr: &seqExpr{
																											pos: position{line: 183, col: 21, offset: 6701},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 183, col: 21, offset: 6701},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														run: (*parser).callonMasqueradeParagraph844,
																														expr: &seqExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 17, offset: 6961},
																																	expr: &actionExpr{
																																		pos: position{line: 213, col: 14, offset: 7794},
																																		run: (*parser).callonMasqueradeParagraph847,
																																		expr: &litMatcher{
																																			pos:        position{line: 213, col: 14, offset: 7794},
																																			val:        "quote",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 28, offset: 6972},
																																	expr: &actionExpr{
																																		pos: position{line: 229, col: 14, offset: 8391},
																																		run: (*parser).callonMasqueradeParagraph850,
																																		expr: &litMatcher{
																																			pos:        position{line: 229, col: 14, offset: 8391},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 39, offset: 6983},
																																	expr: &actionExpr{
																																		pos: position{line: 1039, col: 16, offset: 44628},
																																		run: (*parser).callonMasqueradeParagraph853,
																																		expr: &litMatcher{
																																			pos:        position{line: 1039, col: 16, offset: 44628},
																																			val:        "literal",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 189, col: 52, offset: 6996},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 189, col: 56, offset: 7000},
																																		expr: &seqExpr{
																																			pos: position{line: 189, col: 57, offset: 7001},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 189, col: 57, offset: 7001},
																																					expr: &litMatcher{
																																						pos:        position{line: 189, col: 58, offset: 7002},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 189, col: 62, offset: 7006},
																																					expr: &litMatcher{
																																						pos:        position{line: 189, col: 63, offset: 7007},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 189, col: 67, offset: 7011},
																																					expr: &litMatcher{
																																						pos:        position{line: 189, col: 68, offset: 7012},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 189, col: 72, offset: 7016,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&litMatcher{
																													pos:        position{line: 183, col: 40, offset: 6720},
																													val:        "=",
																													ignoreCase: false,
																												},
																												&labeledExpr{
																													pos:   position{line: 183, col: 44, offset: 6724},
																													label: "value",
																													expr: &actionExpr{
																														pos: position{line: 193, col: 19, offset: 7075},
																														run: (*parser).callonMasqueradeParagraph867,
																														expr: &labeledExpr{
																															pos:   position{line: 193, col: 19, offset: 7075},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 193, col: 25, offset: 7081},
																																expr: &seqExpr{
																																	pos: position{line: 193, col: 26, offset: 7082},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 193, col: 26, offset: 7082},
																																			expr: &litMatcher{
																																				pos:        position{line: 193, col: 27, offset: 7083},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 193, col: 31, offset: 7087},
																																			expr: &litMatcher{
																																				pos:        position{line: 193, col: 32, offset: 7088},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 193, col: 36, offset: 7092},
																																			expr: &litMatcher{
																																				pos:        position{line: 193, col: 37, offset: 7093},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 193, col: 41, offset: 7097,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 183, col: 67, offset: 6747},
																													expr: &litMatcher{
																														pos:        position{line: 183, col: 67, offset: 6747},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 183, col: 72, offset: 6752},
																													expr: &choiceExpr{
																														pos: position{line: 1093, col: 7, offset: 45984},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1093, col: 7, offset: 45984},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1093, col: 13, offset: 45990},
																																run: (*parser).callonMasqueradeParagraph883,
																																expr: &litMatcher{
																																	pos:        position{line: 1093, col: 13, offset: 45990},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 185, col: 5, offset: 6836},
																										run: (*parser).callonMasqueradeParagraph885,
																										expr: &seqExpr{
																											pos: position{line: 185, col: 5, offset: 6836},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 185, col: 5, offset: 6836},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														run: (*parser).callonMasqueradeParagraph888,
																														expr: &seqExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 189, col: 17, offset: 6961},
																																	expr: &actionExpr{
																																		pos: position{line: 213, col: 14, offset: 7794},
																																		run: (*parser).callonMasqueradeParagraph891,
																																		expr: &litMatcher{
																																			pos:        position{line: 213, col: 14, offset: 7794},
																																			val:        "quote",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 28, offset: 6972},
																																	expr: &actionExpr{
																																		pos: position{line: 229, col: 14, offset: 8391},
																																		run: (*parser).callonMasqueradeParagraph894,
																																		expr: &litMatcher{
																																			pos:        position{line: 229, col: 14, offset: 8391},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 189, col: 39, offset: 6983},
																																	expr: &actionExpr{
																																		pos: position{line: 1039, col: 16, offset: 44628},
																																		run: (*parser).callonMasqueradeParagraph897,
																																		expr: &litMatcher{
																																			pos:        position{line: 1039, col: 16, offset: 44628},
																																			val:        "literal",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 189, col: 52, offset: 6996},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 189, col: 56, offset: 7000},
																																		expr: &seqExpr{
																																			pos: position{line: 189, col: 57, offset: 7001},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 189, col: 57, offset: 7001},
																																					expr: &litMatcher{
																																						pos:        position{line: 189, col: 58, offset: 7002},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 189, col: 62, offset: 7006},
																																					expr: &litMatcher{
																																						pos:        position{line: 189, col: 63, offset: 7007},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 189, col: 67, offset: 7011},
																																					expr: &litMatcher{
																																						pos:        position{line: 189, col: 68, offset: 7012},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 189, col: 72, offset: 7016,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 185, col: 24, offset: 6855},
																													expr: &litMatcher{
																														pos:        position{line: 185, col: 24, offset: 6855},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 185, col: 29, offset: 6860},
																													expr: &choiceExpr{
																														pos: position{line: 1093, col: 7, offset: 45984},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1093, col: 7, offset: 45984},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1093, col: 13, offset: 45990},
																																run: (*parser).callonMasqueradeParagraph914,
																																expr: &litMatcher{
																																	pos:        position{line: 1093, col: 13, offset: 45990},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 179, col: 59, offset: 6609},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 136, col: 131, offset: 5202},
																expr: &choiceExpr{
																	pos: position{line: 1093, col: 7, offset: 45984},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1093, col: 7, offset: 45984},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1093, col: 13, offset: 45990},
																			run: (*parser).callonMasqueradeParagraph920,
																			expr: &litMatcher{
																				pos:        position{line: 1093, col: 13, offset: 45990},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 1101, col: 8, offset: 46086},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1097, col: 12, offset: 46046},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1097, col: 21, offset: 46055},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 1099, col: 8, offset: 46075},
																		expr: &anyMatcher{
																			line: 1099, col: 9, offset: 46076,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 538, col: 56, offset: 20997},
									expr: &seqExpr{
										pos: position{line: 538, col: 58, offset: 20999},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 538, col: 58, offset: 20999},
												expr: &litMatcher{
													pos:        position{line: 538, col: 58, offset: 20999},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 538, col: 63, offset: 21004},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonMasqueradeParagraph934,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 538, col: 67, offset: 21008},
												expr: &choiceExpr{
													pos: position{line: 1097, col: 12, offset: 46046},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 538, col: 77, offset: 21018},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 538, col: 83, offset: 21024},
										expr: &ruleRefExpr{
											pos:  position{line: 538, col: 84, offset: 21025},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElements",
			pos:  position{line: 542, col: 1, offset: 21140},
			expr: &choiceExpr{
				pos: position{line: 543, col: 5, offset: 21163},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 543, col: 5, offset: 21163},
						run: (*parser).callonInlineElements2,
						expr: &labeledExpr{
							pos:   position{line: 543, col: 5, offset: 21163},
							label: "comment",
							expr: &actionExpr{
								pos: position{line: 983, col: 22, offset: 42292},
								run: (*parser).callonInlineElements4,
								expr: &seqExpr{
									pos: position{line: 983, col: 22, offset: 42292},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 983, col: 22, offset: 42292},
											expr: &litMatcher{
												pos:        position{line: 973, col: 26, offset: 41955},
												val:        "////",
												ignoreCase: false,
											},
										},
										&litMatcher{
											pos:        position{line: 983, col: 45, offset: 42315},
											val:        "//",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 983, col: 50, offset: 42320},
											label: "content",
											expr: &actionExpr{
												pos: position{line: 987, col: 29, offset: 42448},
												run: (*parser).callonInlineElements10,
												expr: &zeroOrMoreExpr{
													pos: position{line: 987, col: 29, offset: 42448},
													expr: &seqExpr{
														pos: position{line: 987, col: 30, offset: 42449},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 987, col: 30, offset: 42449},
																expr: &choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
															&anyMatcher{
																line: 987, col: 35, offset: 42454,
															},
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 545, col: 9, offset: 21264},
						run: (*parser).callonInlineElements25,
						expr: &seqExpr{
							pos: position{line: 545, col: 9, offset: 21264},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 545, col: 9, offset: 21264},
									expr: &actionExpr{
										pos: position{line: 1060, col: 14, offset: 45168},
										run: (*parser).callonInlineElements28,
										expr: &seqExpr{
											pos: position{line: 1060, col: 14, offset: 45168},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 1060, col: 14, offset: 45168},
													expr: &notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 1060, col: 19, offset: 45173},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonInlineElements36,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1101, col: 8, offset: 46086},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1099, col: 8, offset: 46075},
															expr: &anyMatcher{
																line: 1099, col: 9, offset: 46076,
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 545, col: 20, offset: 21275},
									expr: &choiceExpr{
										pos: position{line: 831, col: 19, offset: 36219},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 997, col: 26, offset: 42900},
												val:        "....",
												ignoreCase: false,
											},
											&seqExpr{
												pos: position{line: 839, col: 25, offset: 36636},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 839, col: 25, offset: 36636},
														val:        "```",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 839, col: 31, offset: 36642},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonInlineElements51,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1101, col: 8, offset: 46086},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1099, col: 8, offset: 46075},
																expr: &anyMatcher{
																	line: 1099, col: 9, offset: 46076,
																},
															},
														},
													},
												},
											},
											&seqExpr{
												pos: position{line: 850, col: 26, offset: 37115},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 850, col: 26, offset: 37115},
														val:        "----",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 850, col: 33, offset: 37122},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonInlineElements63,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1101, col: 8, offset: 46086},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1099, col: 8, offset: 46075},
																expr: &anyMatcher{
																	line: 1099, col: 9, offset: 46076,
																},
															},
														},
													},
												},
											},
											&seqExpr{
												pos: position{line: 872, col: 26, offset: 38020},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 872, col: 26, offset: 38020},
														val:        "====",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 872, col: 33, offset: 38027},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonInlineElements75,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1101, col: 8, offset: 46086},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1099, col: 8, offset: 46075},
																expr: &anyMatcher{
																	line: 1099, col: 9, offset: 46076,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 973, col: 26, offset: 41955},
												val:        "////",
												ignoreCase: false,
											},
											&seqExpr{
												pos: position{line: 895, col: 24, offset: 38845},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 24, offset: 38845},
														val:        "____",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 895, col: 31, offset: 38852},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonInlineElements88,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1101, col: 8, offset: 46086},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1099, col: 8, offset: 46075},
																expr: &anyMatcher{
																	line: 1099, col: 9, offset: 46076,
																},
															},
														},
													},
												},
											},
											&seqExpr{
												pos: position{line: 930, col: 26, offset: 40438},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 930, col: 26, offset: 40438},
														val:        "****",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 930, col: 33, offset: 40445},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonInlineElements100,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1101, col: 8, offset: 46086},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1099, col: 8, offset: 46075},
																expr: &anyMatcher{
																	line: 1099, col: 9, offset: 46076,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 545, col: 36, offset: 21291},
									label: "elements",
									expr: &oneOrMoreExpr{
										pos: position{line: 545, col: 45, offset: 21300},
										expr: &ruleRefExpr{
											pos:  position{line: 545, col: 46, offset: 21301},
											name: "InlineElement",
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 545, col: 62, offset: 21317},
									label: "linebreak",
									expr: &zeroOrOneExpr{
										pos: position{line: 545, col: 72, offset: 21327},
										expr: &actionExpr{
											pos: position{line: 567, col: 14, offset: 22593},
											run: (*parser).callonInlineElements112,
											expr: &seqExpr{
												pos: position{line: 567, col: 14, offset: 22593},
												exprs: []interface{}{
													&choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonInlineElements116,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 567, col: 17, offset: 22596},
														val:        "+",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 567, col: 21, offset: 22600},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonInlineElements122,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1101, col: 8, offset: 46086},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1099, col: 8, offset: 46075},
																expr: &anyMatcher{
																	line: 1099, col: 9, offset: 46076,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&zeroOrOneExpr{
									pos: position{line: 545, col: 85, offset: 21340},
									expr: &choiceExpr{
										pos: position{line: 1101, col: 8, offset: 46086},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1097, col: 12, offset: 46046},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1097, col: 21, offset: 46055},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1099, col: 8, offset: 46075},
												expr: &anyMatcher{
													line: 1099, col: 9, offset: 46076,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElement",
			pos:  position{line: 549, col: 1, offset: 21478},
			expr: &actionExpr{
				pos: position{line: 549, col: 18, offset: 21495},
				run: (*parser).callonInlineElement1,
				expr: &seqExpr{
					pos: position{line: 549, col: 18, offset: 21495},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 549, col: 18, offset: 21495},
							expr: &choiceExpr{
								pos: position{line: 1101, col: 8, offset: 46086},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1097, col: 12, offset: 46046},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1097, col: 21, offset: 46055},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1099, col: 8, offset: 46075},
										expr: &anyMatcher{
											line: 1099, col: 9, offset: 46076,
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 549, col: 23, offset: 21500},
							expr: &actionExpr{
								pos: position{line: 567, col: 14, offset: 22593},
								run: (*parser).callonInlineElement10,
								expr: &seqExpr{
									pos: position{line: 567, col: 14, offset: 22593},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonInlineElement14,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 567, col: 17, offset: 22596},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 567, col: 21, offset: 22600},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonInlineElement20,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 549, col: 34, offset: 21511},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 549, col: 43, offset: 21520},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 549, col: 43, offset: 21520},
										name: "QuotedText",
									},
									&actionExpr{
										pos: position{line: 724, col: 19, offset: 31990},
										run: (*parser).callonInlineElement30,
										expr: &seqExpr{
											pos: position{line: 724, col: 19, offset: 31990},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 724, col: 19, offset: 31990},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 724, col: 24, offset: 31995},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														run: (*parser).callonInlineElement34,
														expr: &oneOrMoreExpr{
															pos: position{line: 1079, col: 7, offset: 45702},
															expr: &seqExpr{
																pos: position{line: 1079, col: 8, offset: 45703},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1079, col: 8, offset: 45703},
																		expr: &choiceExpr{
																			pos: position{line: 1097, col: 12, offset: 46046},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 17, offset: 45712},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonInlineElement44,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 21, offset: 45716},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 22, offset: 45717},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 26, offset: 45721},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 27, offset: 45722},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 31, offset: 45726},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 32, offset: 45727},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 37, offset: 45732},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 38, offset: 45733},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 43, offset: 45738},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 44, offset: 45739},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1079, col: 48, offset: 45743,
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 724, col: 32, offset: 32003},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonInlineElement60,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 724, col: 36, offset: 32007},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 724, col: 40, offset: 32011},
													label: "label",
													expr: &actionExpr{
														pos: position{line: 730, col: 24, offset: 32213},
														run: (*parser).callonInlineElement64,
														expr: &oneOrMoreExpr{
															pos: position{line: 730, col: 24, offset: 32213},
															expr: &seqExpr{
																pos: position{line: 730, col: 25, offset: 32214},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 730, col: 25, offset: 32214},
																		expr: &litMatcher{
																			pos:        position{line: 730, col: 26, offset: 32215},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 730, col: 31, offset: 32220,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 724, col: 68, offset: 32039},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 726, col: 5, offset: 32114},
										run: (*parser).callonInlineElement71,
										expr: &seqExpr{
											pos: position{line: 726, col: 5, offset: 32114},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 726, col: 5, offset: 32114},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 726, col: 10, offset: 32119},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														run: (*parser).callonInlineElement75,
														expr: &oneOrMoreExpr{
															pos: position{line: 1079, col: 7, offset: 45702},
															expr: &seqExpr{
																pos: position{line: 1079, col: 8, offset: 45703},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1079, col: 8, offset: 45703},
																		expr: &choiceExpr{
																			pos: position{line: 1097, col: 12, offset: 46046},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 17, offset: 45712},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonInlineElement85,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 21, offset: 45716},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 22, offset: 45717},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 26, offset: 45721},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 27, offset: 45722},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 31, offset: 45726},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 32, offset: 45727},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 37, offset: 45732},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 38, offset: 45733},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 43, offset: 45738},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 44, offset: 45739},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1079, col: 48, offset: 45743,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 726, col: 18, offset: 32127},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 549, col: 73, offset: 21550},
										name: "Passthrough",
									},
									&actionExpr{
										pos: position{line: 778, col: 16, offset: 33707},
										run: (*parser).callonInlineElement100,
										expr: &seqExpr{
											pos: position{line: 778, col: 16, offset: 33707},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 778, col: 16, offset: 33707},
													val:        "image:",
													ignoreCase: false,
												},
												&notExpr{
													pos: position{line: 778, col: 25, offset: 33716},
													expr: &litMatcher{
														pos:        position{line: 778, col: 26, offset: 33717},
														val:        ":",
														ignoreCase: false,
													},
												},
												&labeledExpr{
													pos:   position{line: 778, col: 30, offset: 33721},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1075, col: 8, offset: 45632},
														run: (*parser).callonInlineElement106,
														expr: &oneOrMoreExpr{
															pos: position{line: 1075, col: 8, offset: 45632},
															expr: &seqExpr{
																pos: position{line: 1075, col: 9, offset: 45633},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1075, col: 9, offset: 45633},
																		expr: &choiceExpr{
																			pos: position{line: 1097, col: 12, offset: 46046},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1075, col: 18, offset: 45642},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonInlineElement116,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1075, col: 22, offset: 45646},
																		expr: &litMatcher{
																			pos:        position{line: 1075, col: 23, offset: 45647},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1075, col: 27, offset: 45651},
																		expr: &litMatcher{
																			pos:        position{line: 1075, col: 28, offset: 45652},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1075, col: 32, offset: 45656,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 778, col: 41, offset: 33732},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 783, col: 20, offset: 33989},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 783, col: 20, offset: 33989},
																run: (*parser).callonInlineElement125,
																expr: &seqExpr{
																	pos: position{line: 783, col: 20, offset: 33989},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 783, col: 20, offset: 33989},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 783, col: 24, offset: 33993},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonInlineElement129,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 783, col: 45, offset: 34014},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 784, col: 9, offset: 34026},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonInlineElement141,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 784, col: 33, offset: 34050},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 785, col: 9, offset: 34062},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonInlineElement153,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 785, col: 33, offset: 34086},
																			expr: &litMatcher{
																				pos:        position{line: 785, col: 33, offset: 34086},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 786, col: 9, offset: 34099},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 786, col: 20, offset: 34110},
																				expr: &choiceExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							run: (*parser).callonInlineElement168,
																							expr: &seqExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 183, col: 21, offset: 6701},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElement171,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElement174,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElement177,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElement180,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 183, col: 40, offset: 6720},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 183, col: 44, offset: 6724},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 193, col: 19, offset: 7075},
																											run: (*parser).callonInlineElement194,
																											expr: &labeledExpr{
																												pos:   position{line: 193, col: 19, offset: 7075},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 193, col: 25, offset: 7081},
																													expr: &seqExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 27, offset: 7083},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 31, offset: 7087},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 32, offset: 7088},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 36, offset: 7092},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 37, offset: 7093},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 193, col: 41, offset: 7097,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 183, col: 67, offset: 6747},
																										expr: &litMatcher{
																											pos:        position{line: 183, col: 67, offset: 6747},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 183, col: 72, offset: 6752},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElement210,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							run: (*parser).callonInlineElement212,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 5, offset: 6836},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElement215,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElement218,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElement221,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElement224,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 24, offset: 6855},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 24, offset: 6855},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 29, offset: 6860},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElement241,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 786, col: 40, offset: 34130},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 788, col: 9, offset: 34236},
																run: (*parser).callonInlineElement244,
																expr: &seqExpr{
																	pos: position{line: 788, col: 9, offset: 34236},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 788, col: 9, offset: 34236},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 788, col: 13, offset: 34240},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonInlineElement248,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 788, col: 34, offset: 34261},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 789, col: 9, offset: 34273},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonInlineElement260,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 789, col: 32, offset: 34296},
																			expr: &litMatcher{
																				pos:        position{line: 789, col: 32, offset: 34296},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 790, col: 9, offset: 34309},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 790, col: 20, offset: 34320},
																				expr: &choiceExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							run: (*parser).callonInlineElement275,
																							expr: &seqExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 183, col: 21, offset: 6701},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElement278,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElement281,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElement284,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElement287,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 183, col: 40, offset: 6720},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 183, col: 44, offset: 6724},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 193, col: 19, offset: 7075},
																											run: (*parser).callonInlineElement301,
																											expr: &labeledExpr{
																												pos:   position{line: 193, col: 19, offset: 7075},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 193, col: 25, offset: 7081},
																													expr: &seqExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 27, offset: 7083},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 31, offset: 7087},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 32, offset: 7088},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 36, offset: 7092},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 37, offset: 7093},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 193, col: 41, offset: 7097,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 183, col: 67, offset: 6747},
																										expr: &litMatcher{
																											pos:        position{line: 183, col: 67, offset: 6747},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 183, col: 72, offset: 6752},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElement317,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							run: (*parser).callonInlineElement319,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 5, offset: 6836},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElement322,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElement325,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElement328,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElement331,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 24, offset: 6855},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 24, offset: 6855},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 29, offset: 6860},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElement348,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 790, col: 40, offset: 34340},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 792, col: 9, offset: 34443},
																run: (*parser).callonInlineElement351,
																expr: &seqExpr{
																	pos: position{line: 792, col: 9, offset: 34443},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 792, col: 9, offset: 34443},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 792, col: 13, offset: 34447},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonInlineElement355,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 792, col: 34, offset: 34468},
																			expr: &litMatcher{
																				pos:        position{line: 792, col: 34, offset: 34468},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 793, col: 9, offset: 34481},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 793, col: 20, offset: 34492},
																				expr: &choiceExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							run: (*parser).callonInlineElement370,
																							expr: &seqExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 183, col: 21, offset: 6701},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElement373,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElement376,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElement379,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElement382,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 183, col: 40, offset: 6720},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 183, col: 44, offset: 6724},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 193, col: 19, offset: 7075},
																											run: (*parser).callonInlineElement396,
																											expr: &labeledExpr{
																												pos:   position{line: 193, col: 19, offset: 7075},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 193, col: 25, offset: 7081},
																													expr: &seqExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 27, offset: 7083},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 31, offset: 7087},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 32, offset: 7088},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 36, offset: 7092},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 37, offset: 7093},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 193, col: 41, offset: 7097,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 183, col: 67, offset: 6747},
																										expr: &litMatcher{
																											pos:        position{line: 183, col: 67, offset: 6747},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 183, col: 72, offset: 6752},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElement412,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							run: (*parser).callonInlineElement414,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 5, offset: 6836},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElement417,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElement420,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElement423,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElement426,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 24, offset: 6855},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 24, offset: 6855},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 29, offset: 6860},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElement443,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 793, col: 40, offset: 34512},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 795, col: 9, offset: 34613},
																run: (*parser).callonInlineElement446,
																expr: &seqExpr{
																	pos: position{line: 795, col: 9, offset: 34613},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 795, col: 9, offset: 34613},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 795, col: 13, offset: 34617},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 795, col: 24, offset: 34628},
																				expr: &choiceExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							run: (*parser).callonInlineElement452,
																							expr: &seqExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 183, col: 21, offset: 6701},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElement455,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElement458,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElement461,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElement464,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 183, col: 40, offset: 6720},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 183, col: 44, offset: 6724},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 193, col: 19, offset: 7075},
																											run: (*parser).callonInlineElement478,
																											expr: &labeledExpr{
																												pos:   position{line: 193, col: 19, offset: 7075},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 193, col: 25, offset: 7081},
																													expr: &seqExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 27, offset: 7083},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 31, offset: 7087},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 32, offset: 7088},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 36, offset: 7092},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 37, offset: 7093},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 193, col: 41, offset: 7097,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 183, col: 67, offset: 6747},
																										expr: &litMatcher{
																											pos:        position{line: 183, col: 67, offset: 6747},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 183, col: 72, offset: 6752},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElement494,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							run: (*parser).callonInlineElement496,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 5, offset: 6836},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElement499,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElement502,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElement505,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElement508,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 24, offset: 6855},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 24, offset: 6855},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 29, offset: 6860},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElement525,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 795, col: 44, offset: 34648},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 737, col: 9, offset: 32369},
										run: (*parser).callonInlineElement528,
										expr: &labeledExpr{
											pos:   position{line: 737, col: 9, offset: 32369},
											label: "link",
											expr: &choiceExpr{
												pos: position{line: 737, col: 15, offset: 32375},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 752, col: 17, offset: 32827},
														run: (*parser).callonInlineElement531,
														expr: &seqExpr{
															pos: position{line: 752, col: 17, offset: 32827},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 752, col: 17, offset: 32827},
																	val:        "link:",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 752, col: 25, offset: 32835},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 756, col: 20, offset: 33004},
																		run: (*parser).callonInlineElement535,
																		expr: &seqExpr{
																			pos: position{line: 756, col: 20, offset: 33004},
																			exprs: []interface{}{
																				&zeroOrOneExpr{
																					pos: position{line: 756, col: 20, offset: 33004},
																					expr: &choiceExpr{
																						pos: position{line: 1087, col: 15, offset: 45869},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1087, col: 15, offset: 45869},
																								val:        "http://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1087, col: 27, offset: 45881},
																								val:        "https://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1087, col: 40, offset: 45894},
																								val:        "ftp://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1087, col: 51, offset: 45905},
																								val:        "irc://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1087, col: 62, offset: 45916},
																								val:        "mailto:",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1075, col: 8, offset: 45632},
																					run: (*parser).callonInlineElement544,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1075, col: 8, offset: 45632},
																						expr: &seqExpr{
																							pos: position{line: 1075, col: 9, offset: 45633},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1075, col: 9, offset: 45633},
																									expr: &choiceExpr{
																										pos: position{line: 1097, col: 12, offset: 46046},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1097, col: 12, offset: 46046},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1097, col: 21, offset: 46055},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1075, col: 18, offset: 45642},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonInlineElement554,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1075, col: 22, offset: 45646},
																									expr: &litMatcher{
																										pos:        position{line: 1075, col: 23, offset: 45647},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1075, col: 27, offset: 45651},
																									expr: &litMatcher{
																										pos:        position{line: 1075, col: 28, offset: 45652},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1075, col: 32, offset: 45656,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 752, col: 47, offset: 32857},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 760, col: 19, offset: 33074},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 760, col: 19, offset: 33074},
																				run: (*parser).callonInlineElement563,
																				expr: &seqExpr{
																					pos: position{line: 760, col: 19, offset: 33074},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 760, col: 19, offset: 33074},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 760, col: 23, offset: 33078},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 767, col: 22, offset: 33366},
																								run: (*parser).callonInlineElement567,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 767, col: 22, offset: 33366},
																									expr: &seqExpr{
																										pos: position{line: 767, col: 23, offset: 33367},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 767, col: 23, offset: 33367},
																												expr: &litMatcher{
																													pos:        position{line: 767, col: 24, offset: 33368},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 767, col: 28, offset: 33372},
																												expr: &litMatcher{
																													pos:        position{line: 767, col: 29, offset: 33373},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 767, col: 33, offset: 33377,
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 761, col: 9, offset: 33111},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 761, col: 20, offset: 33122},
																								expr: &choiceExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 183, col: 21, offset: 6701},
																											run: (*parser).callonInlineElement578,
																											expr: &seqExpr{
																												pos: position{line: 183, col: 21, offset: 6701},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 183, col: 21, offset: 6701},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElement581,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElement584,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElement587,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElement590,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 183, col: 40, offset: 6720},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 183, col: 44, offset: 6724},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 193, col: 19, offset: 7075},
																															run: (*parser).callonInlineElement604,
																															expr: &labeledExpr{
																																pos:   position{line: 193, col: 19, offset: 7075},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 193, col: 25, offset: 7081},
																																	expr: &seqExpr{
																																		pos: position{line: 193, col: 26, offset: 7082},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 193, col: 26, offset: 7082},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 27, offset: 7083},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 31, offset: 7087},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 32, offset: 7088},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 36, offset: 7092},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 37, offset: 7093},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 193, col: 41, offset: 7097,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 183, col: 67, offset: 6747},
																														expr: &litMatcher{
																															pos:        position{line: 183, col: 67, offset: 6747},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 183, col: 72, offset: 6752},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElement620,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 185, col: 5, offset: 6836},
																											run: (*parser).callonInlineElement622,
																											expr: &seqExpr{
																												pos: position{line: 185, col: 5, offset: 6836},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 185, col: 5, offset: 6836},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElement625,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElement628,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElement631,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElement634,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 185, col: 24, offset: 6855},
																														expr: &litMatcher{
																															pos:        position{line: 185, col: 24, offset: 6855},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 185, col: 29, offset: 6860},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElement651,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 761, col: 40, offset: 33142},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 763, col: 5, offset: 33227},
																				run: (*parser).callonInlineElement654,
																				expr: &seqExpr{
																					pos: position{line: 763, col: 5, offset: 33227},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 763, col: 5, offset: 33227},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 763, col: 9, offset: 33231},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 763, col: 20, offset: 33242},
																								expr: &choiceExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 183, col: 21, offset: 6701},
																											run: (*parser).callonInlineElement660,
																											expr: &seqExpr{
																												pos: position{line: 183, col: 21, offset: 6701},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 183, col: 21, offset: 6701},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElement663,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElement666,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElement669,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElement672,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 183, col: 40, offset: 6720},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 183, col: 44, offset: 6724},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 193, col: 19, offset: 7075},
																															run: (*parser).callonInlineElement686,
																															expr: &labeledExpr{
																																pos:   position{line: 193, col: 19, offset: 7075},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 193, col: 25, offset: 7081},
																																	expr: &seqExpr{
																																		pos: position{line: 193, col: 26, offset: 7082},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 193, col: 26, offset: 7082},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 27, offset: 7083},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 31, offset: 7087},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 32, offset: 7088},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 36, offset: 7092},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 37, offset: 7093},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 193, col: 41, offset: 7097,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 183, col: 67, offset: 6747},
																														expr: &litMatcher{
																															pos:        position{line: 183, col: 67, offset: 6747},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 183, col: 72, offset: 6752},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElement702,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 185, col: 5, offset: 6836},
																											run: (*parser).callonInlineElement704,
																											expr: &seqExpr{
																												pos: position{line: 185, col: 5, offset: 6836},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 185, col: 5, offset: 6836},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElement707,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElement710,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElement713,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElement716,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 185, col: 24, offset: 6855},
																														expr: &litMatcher{
																															pos:        position{line: 185, col: 24, offset: 6855},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 185, col: 29, offset: 6860},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElement733,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 763, col: 40, offset: 33262},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 741, col: 17, offset: 32446},
														run: (*parser).callonInlineElement736,
														expr: &seqExpr{
															pos: position{line: 741, col: 17, offset: 32446},
															exprs: []interface{}{
																&labeledExpr{
																	pos:   position{line: 741, col: 17, offset: 32446},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 747, col: 20, offset: 32693},
																		run: (*parser).callonInlineElement739,
																		expr: &seqExpr{
																			pos: position{line: 747, col: 20, offset: 32693},
																			exprs: []interface{}{
																				&choiceExpr{
																					pos: position{line: 1087, col: 15, offset: 45869},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1087, col: 15, offset: 45869},
																							val:        "http://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1087, col: 27, offset: 45881},
																							val:        "https://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1087, col: 40, offset: 45894},
																							val:        "ftp://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1087, col: 51, offset: 45905},
																							val:        "irc://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1087, col: 62, offset: 45916},
																							val:        "mailto:",
																							ignoreCase: false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1075, col: 8, offset: 45632},
																					run: (*parser).callonInlineElement747,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1075, col: 8, offset: 45632},
																						expr: &seqExpr{
																							pos: position{line: 1075, col: 9, offset: 45633},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1075, col: 9, offset: 45633},
																									expr: &choiceExpr{
																										pos: position{line: 1097, col: 12, offset: 46046},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1097, col: 12, offset: 46046},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1097, col: 21, offset: 46055},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1075, col: 18, offset: 45642},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonInlineElement757,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1075, col: 22, offset: 45646},
																									expr: &litMatcher{
																										pos:        position{line: 1075, col: 23, offset: 45647},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1075, col: 27, offset: 45651},
																									expr: &litMatcher{
																										pos:        position{line: 1075, col: 28, offset: 45652},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1075, col: 32, offset: 45656,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 741, col: 39, offset: 32468},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 760, col: 19, offset: 33074},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 760, col: 19, offset: 33074},
																				run: (*parser).callonInlineElement766,
																				expr: &seqExpr{
																					pos: position{line: 760, col: 19, offset: 33074},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 760, col: 19, offset: 33074},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 760, col: 23, offset: 33078},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 767, col: 22, offset: 33366},
																								run: (*parser).callonInlineElement770,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 767, col: 22, offset: 33366},
																									expr: &seqExpr{
																										pos: position{line: 767, col: 23, offset: 33367},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 767, col: 23, offset: 33367},
																												expr: &litMatcher{
																													pos:        position{line: 767, col: 24, offset: 33368},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 767, col: 28, offset: 33372},
																												expr: &litMatcher{
																													pos:        position{line: 767, col: 29, offset: 33373},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 767, col: 33, offset: 33377,
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 761, col: 9, offset: 33111},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 761, col: 20, offset: 33122},
																								expr: &choiceExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 183, col: 21, offset: 6701},
																											run: (*parser).callonInlineElement781,
																											expr: &seqExpr{
																												pos: position{line: 183, col: 21, offset: 6701},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 183, col: 21, offset: 6701},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElement784,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElement787,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElement790,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElement793,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 183, col: 40, offset: 6720},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 183, col: 44, offset: 6724},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 193, col: 19, offset: 7075},
																															run: (*parser).callonInlineElement807,
																															expr: &labeledExpr{
																																pos:   position{line: 193, col: 19, offset: 7075},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 193, col: 25, offset: 7081},
																																	expr: &seqExpr{
																																		pos: position{line: 193, col: 26, offset: 7082},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 193, col: 26, offset: 7082},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 27, offset: 7083},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 31, offset: 7087},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 32, offset: 7088},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 36, offset: 7092},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 37, offset: 7093},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 193, col: 41, offset: 7097,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 183, col: 67, offset: 6747},
																														expr: &litMatcher{
																															pos:        position{line: 183, col: 67, offset: 6747},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 183, col: 72, offset: 6752},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElement823,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 185, col: 5, offset: 6836},
																											run: (*parser).callonInlineElement825,
																											expr: &seqExpr{
																												pos: position{line: 185, col: 5, offset: 6836},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 185, col: 5, offset: 6836},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElement828,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElement831,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElement834,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElement837,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 185, col: 24, offset: 6855},
																														expr: &litMatcher{
																															pos:        position{line: 185, col: 24, offset: 6855},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 185, col: 29, offset: 6860},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElement854,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 761, col: 40, offset: 33142},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 763, col: 5, offset: 33227},
																				run: (*parser).callonInlineElement857,
																				expr: &seqExpr{
																					pos: position{line: 763, col: 5, offset: 33227},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 763, col: 5, offset: 33227},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 763, col: 9, offset: 33231},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 763, col: 20, offset: 33242},
																								expr: &choiceExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 183, col: 21, offset: 6701},
																											run: (*parser).callonInlineElement863,
																											expr: &seqExpr{
																												pos: position{line: 183, col: 21, offset: 6701},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 183, col: 21, offset: 6701},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElement866,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElement869,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElement872,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElement875,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 183, col: 40, offset: 6720},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 183, col: 44, offset: 6724},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 193, col: 19, offset: 7075},
																															run: (*parser).callonInlineElement889,
																															expr: &labeledExpr{
																																pos:   position{line: 193, col: 19, offset: 7075},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 193, col: 25, offset: 7081},
																																	expr: &seqExpr{
																																		pos: position{line: 193, col: 26, offset: 7082},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 193, col: 26, offset: 7082},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 27, offset: 7083},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 31, offset: 7087},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 32, offset: 7088},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 36, offset: 7092},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 37, offset: 7093},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 193, col: 41, offset: 7097,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 183, col: 67, offset: 6747},
																														expr: &litMatcher{
																															pos:        position{line: 183, col: 67, offset: 6747},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 183, col: 72, offset: 6752},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElement905,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 185, col: 5, offset: 6836},
																											run: (*parser).callonInlineElement907,
																											expr: &seqExpr{
																												pos: position{line: 185, col: 5, offset: 6836},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 185, col: 5, offset: 6836},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElement910,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElement913,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElement916,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElement919,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 185, col: 24, offset: 6855},
																														expr: &litMatcher{
																															pos:        position{line: 185, col: 24, offset: 6855},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 185, col: 29, offset: 6860},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElement936,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 763, col: 40, offset: 33262},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 743, col: 5, offset: 32597},
														run: (*parser).callonInlineElement939,
														expr: &labeledExpr{
															pos:   position{line: 743, col: 5, offset: 32597},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 747, col: 20, offset: 32693},
																run: (*parser).callonInlineElement941,
																expr: &seqExpr{
																	pos: position{line: 747, col: 20, offset: 32693},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1087, col: 15, offset: 45869},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1087, col: 15, offset: 45869},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1087, col: 27, offset: 45881},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1087, col: 40, offset: 45894},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1087, col: 51, offset: 45905},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1087, col: 62, offset: 45916},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1075, col: 8, offset: 45632},
																			run: (*parser).callonInlineElement949,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1075, col: 8, offset: 45632},
																				expr: &seqExpr{
																					pos: position{line: 1075, col: 9, offset: 45633},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1075, col: 9, offset: 45633},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1075, col: 18, offset: 45642},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonInlineElement959,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1075, col: 22, offset: 45646},
																							expr: &litMatcher{
																								pos:        position{line: 1075, col: 23, offset: 45647},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1075, col: 27, offset: 45651},
																							expr: &litMatcher{
																								pos:        position{line: 1075, col: 28, offset: 45652},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1075, col: 32, offset: 45656,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 109, col: 34, offset: 4042},
										run: (*parser).callonInlineElement966,
										expr: &seqExpr{
											pos: position{line: 109, col: 34, offset: 4042},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 109, col: 34, offset: 4042},
													val:        "{",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 109, col: 38, offset: 4046},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonInlineElement970,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 109, col: 67, offset: 4075},
													val:        "}",
													ignoreCase: false,
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 549, col: 140, offset: 21617},
										name: "InlineFootnote",
									},
									&actionExpr{
										pos: position{line: 149, col: 20, offset: 5599},
										run: (*parser).callonInlineElement977,
										expr: &seqExpr{
											pos: position{line: 149, col: 20, offset: 5599},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 149, col: 20, offset: 5599},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 149, col: 25, offset: 5604},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														run: (*parser).callonInlineElement981,
														expr: &oneOrMoreExpr{
															pos: position{line: 1079, col: 7, offset: 45702},
															expr: &seqExpr{
																pos: position{line: 1079, col: 8, offset: 45703},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1079, col: 8, offset: 45703},
																		expr: &choiceExpr{
																			pos: position{line: 1097, col: 12, offset: 46046},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 17, offset: 45712},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonInlineElement991,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 21, offset: 45716},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 22, offset: 45717},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 26, offset: 45721},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 27, offset: 45722},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 31, offset: 45726},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 32, offset: 45727},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 37, offset: 45732},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 38, offset: 45733},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 43, offset: 45738},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 44, offset: 45739},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1079, col: 48, offset: 45743,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 149, col: 33, offset: 5612},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 149, col: 38, offset: 5617},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonInlineElement1008,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
									&charClassMatcher{
										pos:        position{line: 1069, col: 16, offset: 45364},
										val:        "[()[]]",
										chars:      []rune{'(', ')', '[', ']'},
										ignoreCase: false,
										inverted:   false,
									},
									&actionExpr{
										pos: position{line: 567, col: 14, offset: 22593},
										run: (*parser).callonInlineElement1011,
										expr: &seqExpr{
											pos: position{line: 567, col: 14, offset: 22593},
											exprs: []interface{}{
												&choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonInlineElement1015,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 567, col: 17, offset: 22596},
													val:        "+",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 567, col: 21, offset: 22600},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonInlineElement1021,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1101, col: 8, offset: 46086},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1099, col: 8, offset: 46075},
															expr: &anyMatcher{
																line: 1099, col: 9, offset: 46076,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 549, col: 201, offset: 21678},
										name: "Word",
									},
									&zeroOrMoreExpr{
										pos: position{line: 549, col: 208, offset: 21685},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonInlineElement1032,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementsWithoutSubtitution",
			pos:  position{line: 556, col: 1, offset: 21939},
			expr: &actionExpr{
				pos: position{line: 556, col: 37, offset: 21975},
				run: (*parser).callonInlineElementsWithoutSubtitution1,
				expr: &seqExpr{
					pos: position{line: 556, col: 37, offset: 21975},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 556, col: 37, offset: 21975},
							expr: &actionExpr{
								pos: position{line: 1060, col: 14, offset: 45168},
								run: (*parser).callonInlineElementsWithoutSubtitution4,
								expr: &seqExpr{
									pos: position{line: 1060, col: 14, offset: 45168},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1060, col: 14, offset: 45168},
											expr: &notExpr{
												pos: position{line: 1099, col: 8, offset: 46075},
												expr: &anyMatcher{
													line: 1099, col: 9, offset: 46076,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1060, col: 19, offset: 45173},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonInlineElementsWithoutSubtitution12,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 556, col: 48, offset: 21986},
							expr: &choiceExpr{
								pos: position{line: 831, col: 19, offset: 36219},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 997, col: 26, offset: 42900},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 839, col: 25, offset: 36636},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 839, col: 25, offset: 36636},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 839, col: 31, offset: 36642},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonInlineElementsWithoutSubtitution27,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 850, col: 26, offset: 37115},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 850, col: 26, offset: 37115},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 850, col: 33, offset: 37122},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonInlineElementsWithoutSubtitution39,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 872, col: 26, offset: 38020},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 872, col: 26, offset: 38020},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 872, col: 33, offset: 38027},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonInlineElementsWithoutSubtitution51,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 973, col: 26, offset: 41955},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 895, col: 24, offset: 38845},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 24, offset: 38845},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 895, col: 31, offset: 38852},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonInlineElementsWithoutSubtitution64,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 930, col: 26, offset: 40438},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 930, col: 26, offset: 40438},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 930, col: 33, offset: 40445},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonInlineElementsWithoutSubtitution76,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 556, col: 64, offset: 22002},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 556, col: 73, offset: 22011},
								expr: &ruleRefExpr{
									pos:  position{line: 556, col: 74, offset: 22012},
									name: "InlineElementWithoutSubtitution",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 556, col: 108, offset: 22046},
							label: "linebreak",
							expr: &zeroOrOneExpr{
								pos: position{line: 556, col: 118, offset: 22056},
								expr: &actionExpr{
									pos: position{line: 567, col: 14, offset: 22593},
									run: (*parser).callonInlineElementsWithoutSubtitution88,
									expr: &seqExpr{
										pos: position{line: 567, col: 14, offset: 22593},
										exprs: []interface{}{
											&choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonInlineElementsWithoutSubtitution92,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 567, col: 17, offset: 22596},
												val:        "+",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 567, col: 21, offset: 22600},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonInlineElementsWithoutSubtitution98,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&zeroOrOneExpr{
							pos: position{line: 556, col: 131, offset: 22069},
							expr: &choiceExpr{
								pos: position{line: 1101, col: 8, offset: 46086},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1097, col: 12, offset: 46046},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1097, col: 21, offset: 46055},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1099, col: 8, offset: 46075},
										expr: &anyMatcher{
											line: 1099, col: 9, offset: 46076,
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementWithoutSubtitution",
			pos:  position{line: 560, col: 1, offset: 22199},
			expr: &actionExpr{
				pos: position{line: 560, col: 36, offset: 22234},
				run: (*parser).callonInlineElementWithoutSubtitution1,
				expr: &seqExpr{
					pos: position{line: 560, col: 36, offset: 22234},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 560, col: 36, offset: 22234},
							expr: &choiceExpr{
								pos: position{line: 1101, col: 8, offset: 46086},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1097, col: 12, offset: 46046},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1097, col: 21, offset: 46055},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1099, col: 8, offset: 46075},
										expr: &anyMatcher{
											line: 1099, col: 9, offset: 46076,
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 560, col: 41, offset: 22239},
							expr: &actionExpr{
								pos: position{line: 567, col: 14, offset: 22593},
								run: (*parser).callonInlineElementWithoutSubtitution10,
								expr: &seqExpr{
									pos: position{line: 567, col: 14, offset: 22593},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonInlineElementWithoutSubtitution14,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 567, col: 17, offset: 22596},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 567, col: 21, offset: 22600},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonInlineElementWithoutSubtitution20,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 560, col: 52, offset: 22250},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 560, col: 61, offset: 22259},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 560, col: 61, offset: 22259},
										name: "QuotedText",
									},
									&actionExpr{
										pos: position{line: 724, col: 19, offset: 31990},
										run: (*parser).callonInlineElementWithoutSubtitution30,
										expr: &seqExpr{
											pos: position{line: 724, col: 19, offset: 31990},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 724, col: 19, offset: 31990},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 724, col: 24, offset: 31995},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														run: (*parser).callonInlineElementWithoutSubtitution34,
														expr: &oneOrMoreExpr{
															pos: position{line: 1079, col: 7, offset: 45702},
															expr: &seqExpr{
																pos: position{line: 1079, col: 8, offset: 45703},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1079, col: 8, offset: 45703},
																		expr: &choiceExpr{
																			pos: position{line: 1097, col: 12, offset: 46046},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 17, offset: 45712},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonInlineElementWithoutSubtitution44,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 21, offset: 45716},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 22, offset: 45717},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 26, offset: 45721},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 27, offset: 45722},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 31, offset: 45726},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 32, offset: 45727},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 37, offset: 45732},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 38, offset: 45733},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 43, offset: 45738},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 44, offset: 45739},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1079, col: 48, offset: 45743,
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 724, col: 32, offset: 32003},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonInlineElementWithoutSubtitution60,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 724, col: 36, offset: 32007},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 724, col: 40, offset: 32011},
													label: "label",
													expr: &actionExpr{
														pos: position{line: 730, col: 24, offset: 32213},
														run: (*parser).callonInlineElementWithoutSubtitution64,
														expr: &oneOrMoreExpr{
															pos: position{line: 730, col: 24, offset: 32213},
															expr: &seqExpr{
																pos: position{line: 730, col: 25, offset: 32214},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 730, col: 25, offset: 32214},
																		expr: &litMatcher{
																			pos:        position{line: 730, col: 26, offset: 32215},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 730, col: 31, offset: 32220,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 724, col: 68, offset: 32039},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 726, col: 5, offset: 32114},
										run: (*parser).callonInlineElementWithoutSubtitution71,
										expr: &seqExpr{
											pos: position{line: 726, col: 5, offset: 32114},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 726, col: 5, offset: 32114},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 726, col: 10, offset: 32119},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														run: (*parser).callonInlineElementWithoutSubtitution75,
														expr: &oneOrMoreExpr{
															pos: position{line: 1079, col: 7, offset: 45702},
															expr: &seqExpr{
																pos: position{line: 1079, col: 8, offset: 45703},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1079, col: 8, offset: 45703},
																		expr: &choiceExpr{
																			pos: position{line: 1097, col: 12, offset: 46046},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 17, offset: 45712},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonInlineElementWithoutSubtitution85,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 21, offset: 45716},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 22, offset: 45717},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 26, offset: 45721},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 27, offset: 45722},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 31, offset: 45726},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 32, offset: 45727},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 37, offset: 45732},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 38, offset: 45733},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 43, offset: 45738},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 44, offset: 45739},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1079, col: 48, offset: 45743,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 726, col: 18, offset: 32127},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 560, col: 91, offset: 22289},
										name: "Passthrough",
									},
									&actionExpr{
										pos: position{line: 778, col: 16, offset: 33707},
										run: (*parser).callonInlineElementWithoutSubtitution100,
										expr: &seqExpr{
											pos: position{line: 778, col: 16, offset: 33707},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 778, col: 16, offset: 33707},
													val:        "image:",
													ignoreCase: false,
												},
												&notExpr{
													pos: position{line: 778, col: 25, offset: 33716},
													expr: &litMatcher{
														pos:        position{line: 778, col: 26, offset: 33717},
														val:        ":",
														ignoreCase: false,
													},
												},
												&labeledExpr{
													pos:   position{line: 778, col: 30, offset: 33721},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1075, col: 8, offset: 45632},
														run: (*parser).callonInlineElementWithoutSubtitution106,
														expr: &oneOrMoreExpr{
															pos: position{line: 1075, col: 8, offset: 45632},
															expr: &seqExpr{
																pos: position{line: 1075, col: 9, offset: 45633},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1075, col: 9, offset: 45633},
																		expr: &choiceExpr{
																			pos: position{line: 1097, col: 12, offset: 46046},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1075, col: 18, offset: 45642},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonInlineElementWithoutSubtitution116,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1075, col: 22, offset: 45646},
																		expr: &litMatcher{
																			pos:        position{line: 1075, col: 23, offset: 45647},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1075, col: 27, offset: 45651},
																		expr: &litMatcher{
																			pos:        position{line: 1075, col: 28, offset: 45652},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1075, col: 32, offset: 45656,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 778, col: 41, offset: 33732},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 783, col: 20, offset: 33989},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 783, col: 20, offset: 33989},
																run: (*parser).callonInlineElementWithoutSubtitution125,
																expr: &seqExpr{
																	pos: position{line: 783, col: 20, offset: 33989},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 783, col: 20, offset: 33989},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 783, col: 24, offset: 33993},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonInlineElementWithoutSubtitution129,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 783, col: 45, offset: 34014},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 784, col: 9, offset: 34026},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonInlineElementWithoutSubtitution141,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 784, col: 33, offset: 34050},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 785, col: 9, offset: 34062},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonInlineElementWithoutSubtitution153,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 785, col: 33, offset: 34086},
																			expr: &litMatcher{
																				pos:        position{line: 785, col: 33, offset: 34086},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 786, col: 9, offset: 34099},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 786, col: 20, offset: 34110},
																				expr: &choiceExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							run: (*parser).callonInlineElementWithoutSubtitution168,
																							expr: &seqExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 183, col: 21, offset: 6701},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElementWithoutSubtitution171,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElementWithoutSubtitution174,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElementWithoutSubtitution177,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElementWithoutSubtitution180,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 183, col: 40, offset: 6720},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 183, col: 44, offset: 6724},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 193, col: 19, offset: 7075},
																											run: (*parser).callonInlineElementWithoutSubtitution194,
																											expr: &labeledExpr{
																												pos:   position{line: 193, col: 19, offset: 7075},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 193, col: 25, offset: 7081},
																													expr: &seqExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 27, offset: 7083},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 31, offset: 7087},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 32, offset: 7088},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 36, offset: 7092},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 37, offset: 7093},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 193, col: 41, offset: 7097,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 183, col: 67, offset: 6747},
																										expr: &litMatcher{
																											pos:        position{line: 183, col: 67, offset: 6747},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 183, col: 72, offset: 6752},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElementWithoutSubtitution210,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							run: (*parser).callonInlineElementWithoutSubtitution212,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 5, offset: 6836},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElementWithoutSubtitution215,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElementWithoutSubtitution218,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElementWithoutSubtitution221,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElementWithoutSubtitution224,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 24, offset: 6855},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 24, offset: 6855},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 29, offset: 6860},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElementWithoutSubtitution241,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 786, col: 40, offset: 34130},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 788, col: 9, offset: 34236},
																run: (*parser).callonInlineElementWithoutSubtitution244,
																expr: &seqExpr{
																	pos: position{line: 788, col: 9, offset: 34236},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 788, col: 9, offset: 34236},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 788, col: 13, offset: 34240},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonInlineElementWithoutSubtitution248,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 788, col: 34, offset: 34261},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 789, col: 9, offset: 34273},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonInlineElementWithoutSubtitution260,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 789, col: 32, offset: 34296},
																			expr: &litMatcher{
																				pos:        position{line: 789, col: 32, offset: 34296},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 790, col: 9, offset: 34309},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 790, col: 20, offset: 34320},
																				expr: &choiceExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							run: (*parser).callonInlineElementWithoutSubtitution275,
																							expr: &seqExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 183, col: 21, offset: 6701},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElementWithoutSubtitution278,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElementWithoutSubtitution281,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElementWithoutSubtitution284,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElementWithoutSubtitution287,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 183, col: 40, offset: 6720},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 183, col: 44, offset: 6724},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 193, col: 19, offset: 7075},
																											run: (*parser).callonInlineElementWithoutSubtitution301,
																											expr: &labeledExpr{
																												pos:   position{line: 193, col: 19, offset: 7075},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 193, col: 25, offset: 7081},
																													expr: &seqExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 27, offset: 7083},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 31, offset: 7087},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 32, offset: 7088},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 36, offset: 7092},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 37, offset: 7093},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 193, col: 41, offset: 7097,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 183, col: 67, offset: 6747},
																										expr: &litMatcher{
																											pos:        position{line: 183, col: 67, offset: 6747},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 183, col: 72, offset: 6752},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElementWithoutSubtitution317,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							run: (*parser).callonInlineElementWithoutSubtitution319,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 5, offset: 6836},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElementWithoutSubtitution322,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElementWithoutSubtitution325,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElementWithoutSubtitution328,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElementWithoutSubtitution331,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 24, offset: 6855},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 24, offset: 6855},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 29, offset: 6860},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElementWithoutSubtitution348,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 790, col: 40, offset: 34340},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 792, col: 9, offset: 34443},
																run: (*parser).callonInlineElementWithoutSubtitution351,
																expr: &seqExpr{
																	pos: position{line: 792, col: 9, offset: 34443},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 792, col: 9, offset: 34443},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 792, col: 13, offset: 34447},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 800, col: 19, offset: 34768},
																				run: (*parser).callonInlineElementWithoutSubtitution355,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 800, col: 19, offset: 34768},
																					expr: &seqExpr{
																						pos: position{line: 800, col: 20, offset: 34769},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 800, col: 20, offset: 34769},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 21, offset: 34770},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 25, offset: 34774},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 26, offset: 34775},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 800, col: 30, offset: 34779},
																								expr: &litMatcher{
																									pos:        position{line: 800, col: 31, offset: 34780},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 800, col: 35, offset: 34784,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 792, col: 34, offset: 34468},
																			expr: &litMatcher{
																				pos:        position{line: 792, col: 34, offset: 34468},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 793, col: 9, offset: 34481},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 793, col: 20, offset: 34492},
																				expr: &choiceExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							run: (*parser).callonInlineElementWithoutSubtitution370,
																							expr: &seqExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 183, col: 21, offset: 6701},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElementWithoutSubtitution373,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElementWithoutSubtitution376,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElementWithoutSubtitution379,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElementWithoutSubtitution382,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 183, col: 40, offset: 6720},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 183, col: 44, offset: 6724},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 193, col: 19, offset: 7075},
																											run: (*parser).callonInlineElementWithoutSubtitution396,
																											expr: &labeledExpr{
																												pos:   position{line: 193, col: 19, offset: 7075},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 193, col: 25, offset: 7081},
																													expr: &seqExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 27, offset: 7083},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 31, offset: 7087},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 32, offset: 7088},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 36, offset: 7092},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 37, offset: 7093},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 193, col: 41, offset: 7097,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 183, col: 67, offset: 6747},
																										expr: &litMatcher{
																											pos:        position{line: 183, col: 67, offset: 6747},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 183, col: 72, offset: 6752},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElementWithoutSubtitution412,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							run: (*parser).callonInlineElementWithoutSubtitution414,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 5, offset: 6836},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElementWithoutSubtitution417,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElementWithoutSubtitution420,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElementWithoutSubtitution423,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElementWithoutSubtitution426,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 24, offset: 6855},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 24, offset: 6855},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 29, offset: 6860},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElementWithoutSubtitution443,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 793, col: 40, offset: 34512},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 795, col: 9, offset: 34613},
																run: (*parser).callonInlineElementWithoutSubtitution446,
																expr: &seqExpr{
																	pos: position{line: 795, col: 9, offset: 34613},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 795, col: 9, offset: 34613},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 795, col: 13, offset: 34617},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 795, col: 24, offset: 34628},
																				expr: &choiceExpr{
																					pos: position{line: 183, col: 21, offset: 6701},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 183, col: 21, offset: 6701},
																							run: (*parser).callonInlineElementWithoutSubtitution452,
																							expr: &seqExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 183, col: 21, offset: 6701},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElementWithoutSubtitution455,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElementWithoutSubtitution458,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElementWithoutSubtitution461,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElementWithoutSubtitution464,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 183, col: 40, offset: 6720},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 183, col: 44, offset: 6724},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 193, col: 19, offset: 7075},
																											run: (*parser).callonInlineElementWithoutSubtitution478,
																											expr: &labeledExpr{
																												pos:   position{line: 193, col: 19, offset: 7075},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 193, col: 25, offset: 7081},
																													expr: &seqExpr{
																														pos: position{line: 193, col: 26, offset: 7082},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 193, col: 26, offset: 7082},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 27, offset: 7083},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 31, offset: 7087},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 32, offset: 7088},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 193, col: 36, offset: 7092},
																																expr: &litMatcher{
																																	pos:        position{line: 193, col: 37, offset: 7093},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 193, col: 41, offset: 7097,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 183, col: 67, offset: 6747},
																										expr: &litMatcher{
																											pos:        position{line: 183, col: 67, offset: 6747},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 183, col: 72, offset: 6752},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElementWithoutSubtitution494,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 185, col: 5, offset: 6836},
																							run: (*parser).callonInlineElementWithoutSubtitution496,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 5, offset: 6836},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 189, col: 17, offset: 6961},
																											run: (*parser).callonInlineElementWithoutSubtitution499,
																											expr: &seqExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 189, col: 17, offset: 6961},
																														expr: &actionExpr{
																															pos: position{line: 213, col: 14, offset: 7794},
																															run: (*parser).callonInlineElementWithoutSubtitution502,
																															expr: &litMatcher{
																																pos:        position{line: 213, col: 14, offset: 7794},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 28, offset: 6972},
																														expr: &actionExpr{
																															pos: position{line: 229, col: 14, offset: 8391},
																															run: (*parser).callonInlineElementWithoutSubtitution505,
																															expr: &litMatcher{
																																pos:        position{line: 229, col: 14, offset: 8391},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 189, col: 39, offset: 6983},
																														expr: &actionExpr{
																															pos: position{line: 1039, col: 16, offset: 44628},
																															run: (*parser).callonInlineElementWithoutSubtitution508,
																															expr: &litMatcher{
																																pos:        position{line: 1039, col: 16, offset: 44628},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 189, col: 52, offset: 6996},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 189, col: 56, offset: 7000},
																															expr: &seqExpr{
																																pos: position{line: 189, col: 57, offset: 7001},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 57, offset: 7001},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 58, offset: 7002},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 62, offset: 7006},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 63, offset: 7007},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 67, offset: 7011},
																																		expr: &litMatcher{
																																			pos:        position{line: 189, col: 68, offset: 7012},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 189, col: 72, offset: 7016,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 24, offset: 6855},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 24, offset: 6855},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 29, offset: 6860},
																										expr: &choiceExpr{
																											pos: position{line: 1093, col: 7, offset: 45984},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1093, col: 7, offset: 45984},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1093, col: 13, offset: 45990},
																													run: (*parser).callonInlineElementWithoutSubtitution525,
																													expr: &litMatcher{
																														pos:        position{line: 1093, col: 13, offset: 45990},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 795, col: 44, offset: 34648},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 737, col: 9, offset: 32369},
										run: (*parser).callonInlineElementWithoutSubtitution528,
										expr: &labeledExpr{
											pos:   position{line: 737, col: 9, offset: 32369},
											label: "link",
											expr: &choiceExpr{
												pos: position{line: 737, col: 15, offset: 32375},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 752, col: 17, offset: 32827},
														run: (*parser).callonInlineElementWithoutSubtitution531,
														expr: &seqExpr{
															pos: position{line: 752, col: 17, offset: 32827},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 752, col: 17, offset: 32827},
																	val:        "link:",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 752, col: 25, offset: 32835},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 756, col: 20, offset: 33004},
																		run: (*parser).callonInlineElementWithoutSubtitution535,
																		expr: &seqExpr{
																			pos: position{line: 756, col: 20, offset: 33004},
																			exprs: []interface{}{
																				&zeroOrOneExpr{
																					pos: position{line: 756, col: 20, offset: 33004},
																					expr: &choiceExpr{
																						pos: position{line: 1087, col: 15, offset: 45869},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1087, col: 15, offset: 45869},
																								val:        "http://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1087, col: 27, offset: 45881},
																								val:        "https://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1087, col: 40, offset: 45894},
																								val:        "ftp://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1087, col: 51, offset: 45905},
																								val:        "irc://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1087, col: 62, offset: 45916},
																								val:        "mailto:",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1075, col: 8, offset: 45632},
																					run: (*parser).callonInlineElementWithoutSubtitution544,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1075, col: 8, offset: 45632},
																						expr: &seqExpr{
																							pos: position{line: 1075, col: 9, offset: 45633},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1075, col: 9, offset: 45633},
																									expr: &choiceExpr{
																										pos: position{line: 1097, col: 12, offset: 46046},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1097, col: 12, offset: 46046},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1097, col: 21, offset: 46055},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1075, col: 18, offset: 45642},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonInlineElementWithoutSubtitution554,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1075, col: 22, offset: 45646},
																									expr: &litMatcher{
																										pos:        position{line: 1075, col: 23, offset: 45647},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1075, col: 27, offset: 45651},
																									expr: &litMatcher{
																										pos:        position{line: 1075, col: 28, offset: 45652},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1075, col: 32, offset: 45656,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 752, col: 47, offset: 32857},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 760, col: 19, offset: 33074},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 760, col: 19, offset: 33074},
																				run: (*parser).callonInlineElementWithoutSubtitution563,
																				expr: &seqExpr{
																					pos: position{line: 760, col: 19, offset: 33074},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 760, col: 19, offset: 33074},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 760, col: 23, offset: 33078},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 767, col: 22, offset: 33366},
																								run: (*parser).callonInlineElementWithoutSubtitution567,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 767, col: 22, offset: 33366},
																									expr: &seqExpr{
																										pos: position{line: 767, col: 23, offset: 33367},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 767, col: 23, offset: 33367},
																												expr: &litMatcher{
																													pos:        position{line: 767, col: 24, offset: 33368},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 767, col: 28, offset: 33372},
																												expr: &litMatcher{
																													pos:        position{line: 767, col: 29, offset: 33373},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 767, col: 33, offset: 33377,
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 761, col: 9, offset: 33111},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 761, col: 20, offset: 33122},
																								expr: &choiceExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 183, col: 21, offset: 6701},
																											run: (*parser).callonInlineElementWithoutSubtitution578,
																											expr: &seqExpr{
																												pos: position{line: 183, col: 21, offset: 6701},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 183, col: 21, offset: 6701},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElementWithoutSubtitution581,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElementWithoutSubtitution584,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElementWithoutSubtitution587,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElementWithoutSubtitution590,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 183, col: 40, offset: 6720},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 183, col: 44, offset: 6724},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 193, col: 19, offset: 7075},
																															run: (*parser).callonInlineElementWithoutSubtitution604,
																															expr: &labeledExpr{
																																pos:   position{line: 193, col: 19, offset: 7075},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 193, col: 25, offset: 7081},
																																	expr: &seqExpr{
																																		pos: position{line: 193, col: 26, offset: 7082},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 193, col: 26, offset: 7082},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 27, offset: 7083},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 31, offset: 7087},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 32, offset: 7088},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 36, offset: 7092},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 37, offset: 7093},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 193, col: 41, offset: 7097,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 183, col: 67, offset: 6747},
																														expr: &litMatcher{
																															pos:        position{line: 183, col: 67, offset: 6747},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 183, col: 72, offset: 6752},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElementWithoutSubtitution620,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 185, col: 5, offset: 6836},
																											run: (*parser).callonInlineElementWithoutSubtitution622,
																											expr: &seqExpr{
																												pos: position{line: 185, col: 5, offset: 6836},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 185, col: 5, offset: 6836},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElementWithoutSubtitution625,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElementWithoutSubtitution628,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElementWithoutSubtitution631,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElementWithoutSubtitution634,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 185, col: 24, offset: 6855},
																														expr: &litMatcher{
																															pos:        position{line: 185, col: 24, offset: 6855},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 185, col: 29, offset: 6860},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElementWithoutSubtitution651,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 761, col: 40, offset: 33142},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 763, col: 5, offset: 33227},
																				run: (*parser).callonInlineElementWithoutSubtitution654,
																				expr: &seqExpr{
																					pos: position{line: 763, col: 5, offset: 33227},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 763, col: 5, offset: 33227},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 763, col: 9, offset: 33231},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 763, col: 20, offset: 33242},
																								expr: &choiceExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 183, col: 21, offset: 6701},
																											run: (*parser).callonInlineElementWithoutSubtitution660,
																											expr: &seqExpr{
																												pos: position{line: 183, col: 21, offset: 6701},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 183, col: 21, offset: 6701},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElementWithoutSubtitution663,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElementWithoutSubtitution666,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElementWithoutSubtitution669,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElementWithoutSubtitution672,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 183, col: 40, offset: 6720},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 183, col: 44, offset: 6724},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 193, col: 19, offset: 7075},
																															run: (*parser).callonInlineElementWithoutSubtitution686,
																															expr: &labeledExpr{
																																pos:   position{line: 193, col: 19, offset: 7075},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 193, col: 25, offset: 7081},
																																	expr: &seqExpr{
																																		pos: position{line: 193, col: 26, offset: 7082},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 193, col: 26, offset: 7082},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 27, offset: 7083},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 31, offset: 7087},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 32, offset: 7088},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 36, offset: 7092},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 37, offset: 7093},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 193, col: 41, offset: 7097,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 183, col: 67, offset: 6747},
																														expr: &litMatcher{
																															pos:        position{line: 183, col: 67, offset: 6747},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 183, col: 72, offset: 6752},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElementWithoutSubtitution702,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 185, col: 5, offset: 6836},
																											run: (*parser).callonInlineElementWithoutSubtitution704,
																											expr: &seqExpr{
																												pos: position{line: 185, col: 5, offset: 6836},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 185, col: 5, offset: 6836},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElementWithoutSubtitution707,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElementWithoutSubtitution710,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElementWithoutSubtitution713,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElementWithoutSubtitution716,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 185, col: 24, offset: 6855},
																														expr: &litMatcher{
																															pos:        position{line: 185, col: 24, offset: 6855},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 185, col: 29, offset: 6860},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElementWithoutSubtitution733,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 763, col: 40, offset: 33262},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 741, col: 17, offset: 32446},
														run: (*parser).callonInlineElementWithoutSubtitution736,
														expr: &seqExpr{
															pos: position{line: 741, col: 17, offset: 32446},
															exprs: []interface{}{
																&labeledExpr{
																	pos:   position{line: 741, col: 17, offset: 32446},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 747, col: 20, offset: 32693},
																		run: (*parser).callonInlineElementWithoutSubtitution739,
																		expr: &seqExpr{
																			pos: position{line: 747, col: 20, offset: 32693},
																			exprs: []interface{}{
																				&choiceExpr{
																					pos: position{line: 1087, col: 15, offset: 45869},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1087, col: 15, offset: 45869},
																							val:        "http://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1087, col: 27, offset: 45881},
																							val:        "https://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1087, col: 40, offset: 45894},
																							val:        "ftp://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1087, col: 51, offset: 45905},
																							val:        "irc://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1087, col: 62, offset: 45916},
																							val:        "mailto:",
																							ignoreCase: false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1075, col: 8, offset: 45632},
																					run: (*parser).callonInlineElementWithoutSubtitution747,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1075, col: 8, offset: 45632},
																						expr: &seqExpr{
																							pos: position{line: 1075, col: 9, offset: 45633},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1075, col: 9, offset: 45633},
																									expr: &choiceExpr{
																										pos: position{line: 1097, col: 12, offset: 46046},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1097, col: 12, offset: 46046},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1097, col: 21, offset: 46055},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1075, col: 18, offset: 45642},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonInlineElementWithoutSubtitution757,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1075, col: 22, offset: 45646},
																									expr: &litMatcher{
																										pos:        position{line: 1075, col: 23, offset: 45647},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1075, col: 27, offset: 45651},
																									expr: &litMatcher{
																										pos:        position{line: 1075, col: 28, offset: 45652},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1075, col: 32, offset: 45656,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 741, col: 39, offset: 32468},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 760, col: 19, offset: 33074},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 760, col: 19, offset: 33074},
																				run: (*parser).callonInlineElementWithoutSubtitution766,
																				expr: &seqExpr{
																					pos: position{line: 760, col: 19, offset: 33074},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 760, col: 19, offset: 33074},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 760, col: 23, offset: 33078},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 767, col: 22, offset: 33366},
																								run: (*parser).callonInlineElementWithoutSubtitution770,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 767, col: 22, offset: 33366},
																									expr: &seqExpr{
																										pos: position{line: 767, col: 23, offset: 33367},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 767, col: 23, offset: 33367},
																												expr: &litMatcher{
																													pos:        position{line: 767, col: 24, offset: 33368},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 767, col: 28, offset: 33372},
																												expr: &litMatcher{
																													pos:        position{line: 767, col: 29, offset: 33373},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 767, col: 33, offset: 33377,
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 761, col: 9, offset: 33111},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 761, col: 20, offset: 33122},
																								expr: &choiceExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 183, col: 21, offset: 6701},
																											run: (*parser).callonInlineElementWithoutSubtitution781,
																											expr: &seqExpr{
																												pos: position{line: 183, col: 21, offset: 6701},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 183, col: 21, offset: 6701},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElementWithoutSubtitution784,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElementWithoutSubtitution787,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElementWithoutSubtitution790,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElementWithoutSubtitution793,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 183, col: 40, offset: 6720},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 183, col: 44, offset: 6724},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 193, col: 19, offset: 7075},
																															run: (*parser).callonInlineElementWithoutSubtitution807,
																															expr: &labeledExpr{
																																pos:   position{line: 193, col: 19, offset: 7075},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 193, col: 25, offset: 7081},
																																	expr: &seqExpr{
																																		pos: position{line: 193, col: 26, offset: 7082},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 193, col: 26, offset: 7082},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 27, offset: 7083},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 31, offset: 7087},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 32, offset: 7088},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 36, offset: 7092},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 37, offset: 7093},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 193, col: 41, offset: 7097,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 183, col: 67, offset: 6747},
																														expr: &litMatcher{
																															pos:        position{line: 183, col: 67, offset: 6747},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 183, col: 72, offset: 6752},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElementWithoutSubtitution823,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 185, col: 5, offset: 6836},
																											run: (*parser).callonInlineElementWithoutSubtitution825,
																											expr: &seqExpr{
																												pos: position{line: 185, col: 5, offset: 6836},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 185, col: 5, offset: 6836},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElementWithoutSubtitution828,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElementWithoutSubtitution831,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElementWithoutSubtitution834,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElementWithoutSubtitution837,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 185, col: 24, offset: 6855},
																														expr: &litMatcher{
																															pos:        position{line: 185, col: 24, offset: 6855},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 185, col: 29, offset: 6860},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElementWithoutSubtitution854,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 761, col: 40, offset: 33142},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 763, col: 5, offset: 33227},
																				run: (*parser).callonInlineElementWithoutSubtitution857,
																				expr: &seqExpr{
																					pos: position{line: 763, col: 5, offset: 33227},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 763, col: 5, offset: 33227},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 763, col: 9, offset: 33231},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 763, col: 20, offset: 33242},
																								expr: &choiceExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 183, col: 21, offset: 6701},
																											run: (*parser).callonInlineElementWithoutSubtitution863,
																											expr: &seqExpr{
																												pos: position{line: 183, col: 21, offset: 6701},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 183, col: 21, offset: 6701},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElementWithoutSubtitution866,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElementWithoutSubtitution869,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElementWithoutSubtitution872,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElementWithoutSubtitution875,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 183, col: 40, offset: 6720},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 183, col: 44, offset: 6724},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 193, col: 19, offset: 7075},
																															run: (*parser).callonInlineElementWithoutSubtitution889,
																															expr: &labeledExpr{
																																pos:   position{line: 193, col: 19, offset: 7075},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 193, col: 25, offset: 7081},
																																	expr: &seqExpr{
																																		pos: position{line: 193, col: 26, offset: 7082},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 193, col: 26, offset: 7082},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 27, offset: 7083},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 31, offset: 7087},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 32, offset: 7088},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 193, col: 36, offset: 7092},
																																				expr: &litMatcher{
																																					pos:        position{line: 193, col: 37, offset: 7093},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 193, col: 41, offset: 7097,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 183, col: 67, offset: 6747},
																														expr: &litMatcher{
																															pos:        position{line: 183, col: 67, offset: 6747},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 183, col: 72, offset: 6752},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElementWithoutSubtitution905,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 185, col: 5, offset: 6836},
																											run: (*parser).callonInlineElementWithoutSubtitution907,
																											expr: &seqExpr{
																												pos: position{line: 185, col: 5, offset: 6836},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 185, col: 5, offset: 6836},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															run: (*parser).callonInlineElementWithoutSubtitution910,
																															expr: &seqExpr{
																																pos: position{line: 189, col: 17, offset: 6961},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 189, col: 17, offset: 6961},
																																		expr: &actionExpr{
																																			pos: position{line: 213, col: 14, offset: 7794},
																																			run: (*parser).callonInlineElementWithoutSubtitution913,
																																			expr: &litMatcher{
																																				pos:        position{line: 213, col: 14, offset: 7794},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 28, offset: 6972},
																																		expr: &actionExpr{
																																			pos: position{line: 229, col: 14, offset: 8391},
																																			run: (*parser).callonInlineElementWithoutSubtitution916,
																																			expr: &litMatcher{
																																				pos:        position{line: 229, col: 14, offset: 8391},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 189, col: 39, offset: 6983},
																																		expr: &actionExpr{
																																			pos: position{line: 1039, col: 16, offset: 44628},
																																			run: (*parser).callonInlineElementWithoutSubtitution919,
																																			expr: &litMatcher{
																																				pos:        position{line: 1039, col: 16, offset: 44628},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 189, col: 52, offset: 6996},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 189, col: 56, offset: 7000},
																																			expr: &seqExpr{
																																				pos: position{line: 189, col: 57, offset: 7001},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 189, col: 57, offset: 7001},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 58, offset: 7002},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 62, offset: 7006},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 63, offset: 7007},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 189, col: 67, offset: 7011},
																																						expr: &litMatcher{
																																							pos:        position{line: 189, col: 68, offset: 7012},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 189, col: 72, offset: 7016,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 185, col: 24, offset: 6855},
																														expr: &litMatcher{
																															pos:        position{line: 185, col: 24, offset: 6855},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 185, col: 29, offset: 6860},
																														expr: &choiceExpr{
																															pos: position{line: 1093, col: 7, offset: 45984},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1093, col: 7, offset: 45984},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1093, col: 13, offset: 45990},
																																	run: (*parser).callonInlineElementWithoutSubtitution936,
																																	expr: &litMatcher{
																																		pos:        position{line: 1093, col: 13, offset: 45990},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 763, col: 40, offset: 33262},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 743, col: 5, offset: 32597},
														run: (*parser).callonInlineElementWithoutSubtitution939,
														expr: &labeledExpr{
															pos:   position{line: 743, col: 5, offset: 32597},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 747, col: 20, offset: 32693},
																run: (*parser).callonInlineElementWithoutSubtitution941,
																expr: &seqExpr{
																	pos: position{line: 747, col: 20, offset: 32693},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1087, col: 15, offset: 45869},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1087, col: 15, offset: 45869},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1087, col: 27, offset: 45881},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1087, col: 40, offset: 45894},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1087, col: 51, offset: 45905},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1087, col: 62, offset: 45916},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1075, col: 8, offset: 45632},
																			run: (*parser).callonInlineElementWithoutSubtitution949,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1075, col: 8, offset: 45632},
																				expr: &seqExpr{
																					pos: position{line: 1075, col: 9, offset: 45633},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1075, col: 9, offset: 45633},
																							expr: &choiceExpr{
																								pos: position{line: 1097, col: 12, offset: 46046},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1097, col: 12, offset: 46046},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1097, col: 21, offset: 46055},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1075, col: 18, offset: 45642},
																							expr: &choiceExpr{
																								pos: position{line: 1093, col: 7, offset: 45984},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1093, col: 7, offset: 45984},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1093, col: 13, offset: 45990},
																										run: (*parser).callonInlineElementWithoutSubtitution959,
																										expr: &litMatcher{
																											pos:        position{line: 1093, col: 13, offset: 45990},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1075, col: 22, offset: 45646},
																							expr: &litMatcher{
																								pos:        position{line: 1075, col: 23, offset: 45647},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1075, col: 27, offset: 45651},
																							expr: &litMatcher{
																								pos:        position{line: 1075, col: 28, offset: 45652},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1075, col: 32, offset: 45656,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 149, col: 20, offset: 5599},
										run: (*parser).callonInlineElementWithoutSubtitution966,
										expr: &seqExpr{
											pos: position{line: 149, col: 20, offset: 5599},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 149, col: 20, offset: 5599},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 149, col: 25, offset: 5604},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														run: (*parser).callonInlineElementWithoutSubtitution970,
														expr: &oneOrMoreExpr{
															pos: position{line: 1079, col: 7, offset: 45702},
															expr: &seqExpr{
																pos: position{line: 1079, col: 8, offset: 45703},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1079, col: 8, offset: 45703},
																		expr: &choiceExpr{
																			pos: position{line: 1097, col: 12, offset: 46046},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 17, offset: 45712},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonInlineElementWithoutSubtitution980,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 21, offset: 45716},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 22, offset: 45717},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 26, offset: 45721},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 27, offset: 45722},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 31, offset: 45726},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 32, offset: 45727},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 37, offset: 45732},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 38, offset: 45733},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 43, offset: 45738},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 44, offset: 45739},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1079, col: 48, offset: 45743,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 149, col: 33, offset: 5612},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 149, col: 38, offset: 5617},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonInlineElementWithoutSubtitution997,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
									&charClassMatcher{
										pos:        position{line: 1069, col: 16, offset: 45364},
										val:        "[()[]]",
										chars:      []rune{'(', ')', '[', ']'},
										ignoreCase: false,
										inverted:   false,
									},
									&ruleRefExpr{
										pos:  position{line: 560, col: 157, offset: 22355},
										name: "Word",
									},
									&zeroOrMoreExpr{
										pos: position{line: 560, col: 164, offset: 22362},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonInlineElementWithoutSubtitution1004,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedText",
			pos:  position{line: 574, col: 1, offset: 22888},
			expr: &choiceExpr{
				pos: position{line: 574, col: 15, offset: 22902},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 574, col: 15, offset: 22902},
						name: "BoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 574, col: 26, offset: 22913},
						name: "ItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 574, col: 39, offset: 22926},
						name: "MonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 574, col: 55, offset: 22942},
						name: "SubscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 574, col: 71, offset: 22958},
						name: "SuperscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 575, col: 13, offset: 22988},
						name: "EscapedBoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 575, col: 31, offset: 23006},
						name: "EscapedItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 575, col: 51, offset: 23026},
						name: "EscapedMonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 575, col: 74, offset: 23049},
						name: "EscapedSubscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 575, col: 97, offset: 23072},
						name: "EscapedSuperscriptText",
					},
				},
			},
		},
		{
			name: "SubScriptOrSuperScriptText",
			pos:  position{line: 577, col: 1, offset: 23096},
			expr: &choiceExpr{
				pos: position{line: 577, col: 31, offset: 23126},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 577, col: 31, offset: 23126},
						name: "SubscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 577, col: 47, offset: 23142},
						name: "SuperscriptText",
					},
				},
			},
		},
		{
			name: "BoldText",
			pos:  position{line: 579, col: 1, offset: 23252},
			expr: &choiceExpr{
				pos: position{line: 580, col: 5, offset: 23269},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 580, col: 5, offset: 23269},
						run: (*parser).callonBoldText2,
						expr: &seqExpr{
							pos: position{line: 580, col: 5, offset: 23269},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 580, col: 5, offset: 23269},
									expr: &litMatcher{
										pos:        position{line: 580, col: 6, offset: 23270},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 580, col: 11, offset: 23275},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 580, col: 16, offset: 23280},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 580, col: 25, offset: 23289},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 580, col: 44, offset: 23308},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 582, col: 9, offset: 23441},
						run: (*parser).callonBoldText10,
						expr: &seqExpr{
							pos: position{line: 582, col: 9, offset: 23441},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 582, col: 9, offset: 23441},
									expr: &litMatcher{
										pos:        position{line: 582, col: 10, offset: 23442},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 582, col: 15, offset: 23447},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 582, col: 20, offset: 23452},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 582, col: 29, offset: 23461},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 582, col: 48, offset: 23480},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 585, col: 9, offset: 23657},
						run: (*parser).callonBoldText18,
						expr: &seqExpr{
							pos: position{line: 585, col: 9, offset: 23657},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 585, col: 9, offset: 23657},
									expr: &litMatcher{
										pos:        position{line: 585, col: 10, offset: 23658},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 585, col: 14, offset: 23662},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 585, col: 18, offset: 23666},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 585, col: 27, offset: 23675},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 585, col: 46, offset: 23694},
									val:        "*",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 585, col: 50, offset: 23698},
									expr: &charClassMatcher{
										pos:        position{line: 1067, col: 13, offset: 45336},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedBoldText",
			pos:  position{line: 589, col: 1, offset: 23892},
			expr: &choiceExpr{
				pos: position{line: 590, col: 5, offset: 23916},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 590, col: 5, offset: 23916},
						run: (*parser).callonEscapedBoldText2,
						expr: &seqExpr{
							pos: position{line: 590, col: 5, offset: 23916},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 590, col: 5, offset: 23916},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 603, col: 25, offset: 24720},
										run: (*parser).callonEscapedBoldText5,
										expr: &seqExpr{
											pos: position{line: 603, col: 25, offset: 24720},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 603, col: 25, offset: 24720},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 603, col: 30, offset: 24725},
													expr: &litMatcher{
														pos:        position{line: 603, col: 30, offset: 24725},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 590, col: 40, offset: 23951},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 590, col: 45, offset: 23956},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 590, col: 54, offset: 23965},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 590, col: 73, offset: 23984},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 592, col: 9, offset: 24140},
						run: (*parser).callonEscapedBoldText14,
						expr: &seqExpr{
							pos: position{line: 592, col: 9, offset: 24140},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 592, col: 9, offset: 24140},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 599, col: 25, offset: 24651},
										run: (*parser).callonEscapedBoldText17,
										expr: &seqExpr{
											pos: position{line: 599, col: 25, offset: 24651},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 599, col: 25, offset: 24651},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 599, col: 29, offset: 24655},
													expr: &litMatcher{
														pos:        position{line: 599, col: 29, offset: 24655},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 592, col: 44, offset: 24175},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 592, col: 49, offset: 24180},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 592, col: 58, offset: 24189},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 592, col: 77, offset: 24208},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 595, col: 9, offset: 24407},
						run: (*parser).callonEscapedBoldText26,
						expr: &seqExpr{
							pos: position{line: 595, col: 9, offset: 24407},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 595, col: 9, offset: 24407},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 599, col: 25, offset: 24651},
										run: (*parser).callonEscapedBoldText29,
										expr: &seqExpr{
											pos: position{line: 599, col: 25, offset: 24651},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 599, col: 25, offset: 24651},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 599, col: 29, offset: 24655},
													expr: &litMatcher{
														pos:        position{line: 599, col: 29, offset: 24655},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 595, col: 44, offset: 24442},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 595, col: 48, offset: 24446},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 595, col: 57, offset: 24455},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 595, col: 76, offset: 24474},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ItalicText",
			pos:  position{line: 607, col: 1, offset: 24766},
			expr: &choiceExpr{
				pos: position{line: 608, col: 5, offset: 24785},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 608, col: 5, offset: 24785},
						run: (*parser).callonItalicText2,
						expr: &seqExpr{
							pos: position{line: 608, col: 5, offset: 24785},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 608, col: 5, offset: 24785},
									expr: &litMatcher{
										pos:        position{line: 608, col: 6, offset: 24786},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 608, col: 11, offset: 24791},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 608, col: 16, offset: 24796},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 608, col: 25, offset: 24805},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 608, col: 44, offset: 24824},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 610, col: 9, offset: 24913},
						run: (*parser).callonItalicText10,
						expr: &seqExpr{
							pos: position{line: 610, col: 9, offset: 24913},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 610, col: 9, offset: 24913},
									expr: &litMatcher{
										pos:        position{line: 610, col: 10, offset: 24914},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 610, col: 15, offset: 24919},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 610, col: 20, offset: 24924},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 610, col: 29, offset: 24933},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 610, col: 48, offset: 24952},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 613, col: 9, offset: 25131},
						run: (*parser).callonItalicText18,
						expr: &seqExpr{
							pos: position{line: 613, col: 9, offset: 25131},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 613, col: 9, offset: 25131},
									expr: &litMatcher{
										pos:        position{line: 613, col: 10, offset: 25132},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 613, col: 14, offset: 25136},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 613, col: 18, offset: 25140},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 613, col: 27, offset: 25149},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 613, col: 46, offset: 25168},
									val:        "_",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 613, col: 50, offset: 25172},
									expr: &charClassMatcher{
										pos:        position{line: 1067, col: 13, offset: 45336},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedItalicText",
			pos:  position{line: 617, col: 1, offset: 25367},
			expr: &choiceExpr{
				pos: position{line: 618, col: 5, offset: 25393},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 618, col: 5, offset: 25393},
						run: (*parser).callonEscapedItalicText2,
						expr: &seqExpr{
							pos: position{line: 618, col: 5, offset: 25393},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 618, col: 5, offset: 25393},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 603, col: 25, offset: 24720},
										run: (*parser).callonEscapedItalicText5,
										expr: &seqExpr{
											pos: position{line: 603, col: 25, offset: 24720},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 603, col: 25, offset: 24720},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 603, col: 30, offset: 24725},
													expr: &litMatcher{
														pos:        position{line: 603, col: 30, offset: 24725},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 618, col: 40, offset: 25428},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 618, col: 45, offset: 25433},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 618, col: 54, offset: 25442},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 618, col: 73, offset: 25461},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 620, col: 9, offset: 25617},
						run: (*parser).callonEscapedItalicText14,
						expr: &seqExpr{
							pos: position{line: 620, col: 9, offset: 25617},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 620, col: 9, offset: 25617},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 599, col: 25, offset: 24651},
										run: (*parser).callonEscapedItalicText17,
										expr: &seqExpr{
											pos: position{line: 599, col: 25, offset: 24651},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 599, col: 25, offset: 24651},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 599, col: 29, offset: 24655},
													expr: &litMatcher{
														pos:        position{line: 599, col: 29, offset: 24655},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 620, col: 44, offset: 25652},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 620, col: 49, offset: 25657},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 620, col: 58, offset: 25666},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 620, col: 77, offset: 25685},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 623, col: 9, offset: 25884},
						run: (*parser).callonEscapedItalicText26,
						expr: &seqExpr{
							pos: position{line: 623, col: 9, offset: 25884},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 623, col: 9, offset: 25884},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 599, col: 25, offset: 24651},
										run: (*parser).callonEscapedItalicText29,
										expr: &seqExpr{
											pos: position{line: 599, col: 25, offset: 24651},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 599, col: 25, offset: 24651},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 599, col: 29, offset: 24655},
													expr: &litMatcher{
														pos:        position{line: 599, col: 29, offset: 24655},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 623, col: 44, offset: 25919},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 623, col: 48, offset: 25923},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 623, col: 57, offset: 25932},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 623, col: 76, offset: 25951},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "MonospaceText",
			pos:  position{line: 627, col: 1, offset: 26104},
			expr: &choiceExpr{
				pos: position{line: 628, col: 5, offset: 26126},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 628, col: 5, offset: 26126},
						run: (*parser).callonMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 628, col: 5, offset: 26126},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 628, col: 5, offset: 26126},
									expr: &litMatcher{
										pos:        position{line: 628, col: 6, offset: 26127},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 628, col: 11, offset: 26132},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 628, col: 16, offset: 26137},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 628, col: 25, offset: 26146},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 628, col: 44, offset: 26165},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 630, col: 9, offset: 26303},
						run: (*parser).callonMonospaceText10,
						expr: &seqExpr{
							pos: position{line: 630, col: 9, offset: 26303},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 630, col: 9, offset: 26303},
									expr: &litMatcher{
										pos:        position{line: 630, col: 10, offset: 26304},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 630, col: 15, offset: 26309},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 630, col: 20, offset: 26314},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 630, col: 29, offset: 26323},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 630, col: 48, offset: 26342},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 633, col: 9, offset: 26524},
						run: (*parser).callonMonospaceText18,
						expr: &seqExpr{
							pos: position{line: 633, col: 9, offset: 26524},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 633, col: 9, offset: 26524},
									expr: &litMatcher{
										pos:        position{line: 633, col: 10, offset: 26525},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 633, col: 14, offset: 26529},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 633, col: 18, offset: 26533},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 633, col: 27, offset: 26542},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 633, col: 46, offset: 26561},
									val:        "`",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 633, col: 50, offset: 26565},
									expr: &charClassMatcher{
										pos:        position{line: 1067, col: 13, offset: 45336},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedMonospaceText",
			pos:  position{line: 637, col: 1, offset: 26763},
			expr: &choiceExpr{
				pos: position{line: 638, col: 5, offset: 26792},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 638, col: 5, offset: 26792},
						run: (*parser).callonEscapedMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 638, col: 5, offset: 26792},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 638, col: 5, offset: 26792},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 603, col: 25, offset: 24720},
										run: (*parser).callonEscapedMonospaceText5,
										expr: &seqExpr{
											pos: position{line: 603, col: 25, offset: 24720},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 603, col: 25, offset: 24720},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 603, col: 30, offset: 24725},
													expr: &litMatcher{
														pos:        position{line: 603, col: 30, offset: 24725},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 638, col: 40, offset: 26827},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 638, col: 45, offset: 26832},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 638, col: 54, offset: 26841},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 638, col: 73, offset: 26860},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 640, col: 9, offset: 27016},
						run: (*parser).callonEscapedMonospaceText14,
						expr: &seqExpr{
							pos: position{line: 640, col: 9, offset: 27016},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 640, col: 9, offset: 27016},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 599, col: 25, offset: 24651},
										run: (*parser).callonEscapedMonospaceText17,
										expr: &seqExpr{
											pos: position{line: 599, col: 25, offset: 24651},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 599, col: 25, offset: 24651},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 599, col: 29, offset: 24655},
													expr: &litMatcher{
														pos:        position{line: 599, col: 29, offset: 24655},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 640, col: 44, offset: 27051},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 640, col: 49, offset: 27056},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 640, col: 58, offset: 27065},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 640, col: 77, offset: 27084},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 643, col: 9, offset: 27283},
						run: (*parser).callonEscapedMonospaceText26,
						expr: &seqExpr{
							pos: position{line: 643, col: 9, offset: 27283},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 643, col: 9, offset: 27283},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 599, col: 25, offset: 24651},
										run: (*parser).callonEscapedMonospaceText29,
										expr: &seqExpr{
											pos: position{line: 599, col: 25, offset: 24651},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 599, col: 25, offset: 24651},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 599, col: 29, offset: 24655},
													expr: &litMatcher{
														pos:        position{line: 599, col: 29, offset: 24655},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 643, col: 44, offset: 27318},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 643, col: 48, offset: 27322},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 643, col: 57, offset: 27331},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 643, col: 76, offset: 27350},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SubscriptText",
			pos:  position{line: 647, col: 1, offset: 27503},
			expr: &choiceExpr{
				pos: position{line: 648, col: 5, offset: 27525},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 648, col: 5, offset: 27525},
						run: (*parser).callonSubscriptText2,
						expr: &seqExpr{
							pos: position{line: 648, col: 5, offset: 27525},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 648, col: 5, offset: 27525},
									expr: &litMatcher{
										pos:        position{line: 648, col: 6, offset: 27526},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 648, col: 11, offset: 27531},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 648, col: 16, offset: 27536},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 648, col: 25, offset: 27545},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 648, col: 44, offset: 27564},
									val:        "~~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 650, col: 9, offset: 27702},
						run: (*parser).callonSubscriptText10,
						expr: &seqExpr{
							pos: position{line: 650, col: 9, offset: 27702},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 650, col: 9, offset: 27702},
									expr: &litMatcher{
										pos:        position{line: 650, col: 10, offset: 27703},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 650, col: 15, offset: 27708},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 650, col: 20, offset: 27713},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 650, col: 29, offset: 27722},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 650, col: 48, offset: 27741},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 653, col: 9, offset: 27923},
						run: (*parser).callonSubscriptText18,
						expr: &seqExpr{
							pos: position{line: 653, col: 9, offset: 27923},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 653, col: 9, offset: 27923},
									expr: &litMatcher{
										pos:        position{line: 653, col: 10, offset: 27924},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 653, col: 14, offset: 27928},
									val:        "~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 653, col: 18, offset: 27932},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 653, col: 27, offset: 27941},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 653, col: 46, offset: 27960},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedSubscriptText",
			pos:  position{line: 657, col: 1, offset: 28152},
			expr: &choiceExpr{
				pos: position{line: 658, col: 5, offset: 28181},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 658, col: 5, offset: 28181},
						run: (*parser).callonEscapedSubscriptText2,
						expr: &seqExpr{
							pos: position{line: 658, col: 5, offset: 28181},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 658, col: 5, offset: 28181},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 603, col: 25, offset: 24720},
										run: (*parser).callonEscapedSubscriptText5,
										expr: &seqExpr{
											pos: position{line: 603, col: 25, offset: 24720},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 603, col: 25, offset: 24720},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 603, col: 30, offset: 24725},
													expr: &litMatcher{
														pos:        position{line: 603, col: 30, offset: 24725},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 658, col: 40, offset: 28216},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 658, col: 45, offset: 28221},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 658, col: 54, offset: 28230},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 658, col: 73, offset: 28249},
									val:        "~~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 660, col: 9, offset: 28405},
						run: (*parser).callonEscapedSubscriptText14,
						expr: &seqExpr{
							pos: position{line: 660, col: 9, offset: 28405},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 660, col: 9, offset: 28405},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 599, col: 25, offset: 24651},
										run: (*parser).callonEscapedSubscriptText17,
										expr: &seqExpr{
											pos: position{line: 599, col: 25, offset: 24651},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 599, col: 25, offset: 24651},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 599, col: 29, offset: 24655},
													expr: &litMatcher{
														pos:        position{line: 599, col: 29, offset: 24655},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 660, col: 44, offset: 28440},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 660, col: 49, offset: 28445},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 660, col: 58, offset: 28454},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 660, col: 77, offset: 28473},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 663, col: 9, offset: 28672},
						run: (*parser).callonEscapedSubscriptText26,
						expr: &seqExpr{
							pos: position{line: 663, col: 9, offset: 28672},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 663, col: 9, offset: 28672},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 599, col: 25, offset: 24651},
										run: (*parser).callonEscapedSubscriptText29,
										expr: &seqExpr{
											pos: position{line: 599, col: 25, offset: 24651},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 599, col: 25, offset: 24651},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 599, col: 29, offset: 24655},
													expr: &litMatcher{
														pos:        position{line: 599, col: 29, offset: 24655},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 663, col: 44, offset: 28707},
									val:        "~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 663, col: 48, offset: 28711},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 663, col: 57, offset: 28720},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 663, col: 76, offset: 28739},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SuperscriptText",
			pos:  position{line: 667, col: 1, offset: 28892},
			expr: &choiceExpr{
				pos: position{line: 668, col: 5, offset: 28916},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 668, col: 5, offset: 28916},
						run: (*parser).callonSuperscriptText2,
						expr: &seqExpr{
							pos: position{line: 668, col: 5, offset: 28916},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 668, col: 5, offset: 28916},
									expr: &litMatcher{
										pos:        position{line: 668, col: 6, offset: 28917},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 668, col: 11, offset: 28922},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 668, col: 16, offset: 28927},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 668, col: 25, offset: 28936},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 668, col: 44, offset: 28955},
									val:        "^^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 670, col: 9, offset: 29095},
						run: (*parser).callonSuperscriptText10,
						expr: &seqExpr{
							pos: position{line: 670, col: 9, offset: 29095},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 670, col: 9, offset: 29095},
									expr: &litMatcher{
										pos:        position{line: 670, col: 10, offset: 29096},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 670, col: 15, offset: 29101},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 670, col: 20, offset: 29106},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 670, col: 29, offset: 29115},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 670, col: 48, offset: 29134},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 673, col: 9, offset: 29318},
						run: (*parser).callonSuperscriptText18,
						expr: &seqExpr{
							pos: position{line: 673, col: 9, offset: 29318},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 673, col: 9, offset: 29318},
									expr: &litMatcher{
										pos:        position{line: 673, col: 10, offset: 29319},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 673, col: 14, offset: 29323},
									val:        "^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 673, col: 18, offset: 29327},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 673, col: 27, offset: 29336},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 673, col: 46, offset: 29355},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedSuperscriptText",
			pos:  position{line: 677, col: 1, offset: 29549},
			expr: &choiceExpr{
				pos: position{line: 678, col: 5, offset: 29580},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 678, col: 5, offset: 29580},
						run: (*parser).callonEscapedSuperscriptText2,
						expr: &seqExpr{
							pos: position{line: 678, col: 5, offset: 29580},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 678, col: 5, offset: 29580},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 603, col: 25, offset: 24720},
										run: (*parser).callonEscapedSuperscriptText5,
										expr: &seqExpr{
											pos: position{line: 603, col: 25, offset: 24720},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 603, col: 25, offset: 24720},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 603, col: 30, offset: 24725},
													expr: &litMatcher{
														pos:        position{line: 603, col: 30, offset: 24725},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 678, col: 40, offset: 29615},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 678, col: 45, offset: 29620},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 678, col: 54, offset: 29629},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 678, col: 73, offset: 29648},
									val:        "^^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 680, col: 9, offset: 29804},
						run: (*parser).callonEscapedSuperscriptText14,
						expr: &seqExpr{
							pos: position{line: 680, col: 9, offset: 29804},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 680, col: 9, offset: 29804},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 599, col: 25, offset: 24651},
										run: (*parser).callonEscapedSuperscriptText17,
										expr: &seqExpr{
											pos: position{line: 599, col: 25, offset: 24651},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 599, col: 25, offset: 24651},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 599, col: 29, offset: 24655},
													expr: &litMatcher{
														pos:        position{line: 599, col: 29, offset: 24655},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 680, col: 44, offset: 29839},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 680, col: 49, offset: 29844},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 680, col: 58, offset: 29853},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 680, col: 77, offset: 29872},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 683, col: 9, offset: 30071},
						run: (*parser).callonEscapedSuperscriptText26,
						expr: &seqExpr{
							pos: position{line: 683, col: 9, offset: 30071},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 683, col: 9, offset: 30071},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 599, col: 25, offset: 24651},
										run: (*parser).callonEscapedSuperscriptText29,
										expr: &seqExpr{
											pos: position{line: 599, col: 25, offset: 24651},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 599, col: 25, offset: 24651},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 599, col: 29, offset: 24655},
													expr: &litMatcher{
														pos:        position{line: 599, col: 29, offset: 24655},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 683, col: 44, offset: 30106},
									val:        "^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 683, col: 48, offset: 30110},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 683, col: 57, offset: 30119},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 683, col: 76, offset: 30138},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContent",
			pos:  position{line: 687, col: 1, offset: 30291},
			expr: &seqExpr{
				pos: position{line: 687, col: 22, offset: 30312},
				exprs: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 687, col: 22, offset: 30312},
						name: "QuotedTextContentElement",
					},
					&zeroOrMoreExpr{
						pos: position{line: 687, col: 47, offset: 30337},
						expr: &seqExpr{
							pos: position{line: 687, col: 48, offset: 30338},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 687, col: 48, offset: 30338},
									expr: &choiceExpr{
										pos: position{line: 1093, col: 7, offset: 45984},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonQuotedTextContent8,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 687, col: 52, offset: 30342},
									name: "QuotedTextContentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContentElement",
			pos:  position{line: 689, col: 1, offset: 30370},
			expr: &choiceExpr{
				pos: position{line: 689, col: 29, offset: 30398},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 689, col: 29, offset: 30398},
						name: "QuotedText",
					},
					&oneOrMoreExpr{
						pos: position{line: 691, col: 19, offset: 30575},
						expr: &seqExpr{
							pos: position{line: 691, col: 20, offset: 30576},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 691, col: 20, offset: 30576},
									expr: &choiceExpr{
										pos: position{line: 1097, col: 12, offset: 46046},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1097, col: 12, offset: 46046},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1097, col: 21, offset: 46055},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 691, col: 29, offset: 30585},
									expr: &choiceExpr{
										pos: position{line: 1093, col: 7, offset: 45984},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonQuotedTextContentElement12,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 691, col: 33, offset: 30589},
									expr: &litMatcher{
										pos:        position{line: 691, col: 34, offset: 30590},
										val:        "*",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 691, col: 38, offset: 30594},
									expr: &litMatcher{
										pos:        position{line: 691, col: 39, offset: 30595},
										val:        "_",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 691, col: 43, offset: 30599},
									expr: &litMatcher{
										pos:        position{line: 691, col: 44, offset: 30600},
										val:        "`",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 691, col: 48, offset: 30604},
									expr: &litMatcher{
										pos:        position{line: 691, col: 49, offset: 30605},
										val:        "~",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 691, col: 53, offset: 30609},
									expr: &litMatcher{
										pos:        position{line: 691, col: 54, offset: 30610},
										val:        "^",
										ignoreCase: false,
									},
								},
								&anyMatcher{
									line: 691, col: 57, offset: 30613,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 693, col: 29, offset: 30694},
						run: (*parser).callonQuotedTextContentElement25,
						expr: &oneOrMoreExpr{
							pos: position{line: 693, col: 29, offset: 30694},
							expr: &seqExpr{
								pos: position{line: 693, col: 30, offset: 30695},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 693, col: 30, offset: 30695},
										expr: &choiceExpr{
											pos: position{line: 1097, col: 12, offset: 46046},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 693, col: 39, offset: 30704},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonQuotedTextContentElement35,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&anyMatcher{
										line: 693, col: 44, offset: 30709,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Passthrough",
			pos:  position{line: 703, col: 1, offset: 31134},
			expr: &choiceExpr{
				pos: position{line: 703, col: 16, offset: 31149},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 709, col: 26, offset: 31391},
						run: (*parser).callonPassthrough2,
						expr: &seqExpr{
							pos: position{line: 709, col: 26, offset: 31391},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 709, col: 26, offset: 31391},
									val:        "+++",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 709, col: 32, offset: 31397},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 709, col: 40, offset: 31405},
										expr: &seqExpr{
											pos: position{line: 709, col: 41, offset: 31406},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 709, col: 41, offset: 31406},
													expr: &litMatcher{
														pos:        position{line: 709, col: 42, offset: 31407},
														val:        "+++",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 709, col: 48, offset: 31413,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 709, col: 52, offset: 31417},
									val:        "+++",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 705, col: 26, offset: 31240},
						run: (*parser).callonPassthrough12,
						expr: &seqExpr{
							pos: position{line: 705, col: 26, offset: 31240},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 705, col: 26, offset: 31240},
									val:        "+",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 705, col: 30, offset: 31244},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 705, col: 38, offset: 31252},
										expr: &seqExpr{
											pos: position{line: 705, col: 39, offset: 31253},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 705, col: 39, offset: 31253},
													expr: &choiceExpr{
														pos: position{line: 1097, col: 12, offset: 46046},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 705, col: 48, offset: 31262},
													expr: &litMatcher{
														pos:        position{line: 705, col: 49, offset: 31263},
														val:        "+",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 705, col: 53, offset: 31267,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 705, col: 57, offset: 31271},
									val:        "+",
									ignoreCase: false,
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 703, col: 64, offset: 31197},
						name: "PassthroughMacro",
					},
				},
			},
		},
		{
			name: "PassthroughMacro",
			pos:  position{line: 713, col: 1, offset: 31514},
			expr: &choiceExpr{
				pos: position{line: 713, col: 21, offset: 31534},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 713, col: 21, offset: 31534},
						run: (*parser).callonPassthroughMacro2,
						expr: &seqExpr{
							pos: position{line: 713, col: 21, offset: 31534},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 713, col: 21, offset: 31534},
									val:        "pass:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 713, col: 30, offset: 31543},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 713, col: 38, offset: 31551},
										expr: &seqExpr{
											pos: position{line: 719, col: 31, offset: 31851},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 719, col: 31, offset: 31851},
													expr: &litMatcher{
														pos:        position{line: 719, col: 32, offset: 31852},
														val:        "]",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 719, col: 36, offset: 31856,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 713, col: 67, offset: 31580},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 715, col: 5, offset: 31671},
						run: (*parser).callonPassthroughMacro12,
						expr: &seqExpr{
							pos: position{line: 715, col: 5, offset: 31671},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 715, col: 5, offset: 31671},
									val:        "pass:q[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 715, col: 15, offset: 31681},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 715, col: 23, offset: 31689},
										expr: &choiceExpr{
											pos: position{line: 715, col: 24, offset: 31690},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 715, col: 24, offset: 31690},
													name: "QuotedText",
												},
												&seqExpr{
													pos: position{line: 719, col: 31, offset: 31851},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 719, col: 31, offset: 31851},
															expr: &litMatcher{
																pos:        position{line: 719, col: 32, offset: 31852},
																val:        "]",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 719, col: 36, offset: 31856,
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 715, col: 65, offset: 31731},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineFootnote",
			pos:  position{line: 807, col: 1, offset: 35092},
			expr: &choiceExpr{
				pos: position{line: 807, col: 19, offset: 35110},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 807, col: 19, offset: 35110},
						run: (*parser).callonInlineFootnote2,
						expr: &seqExpr{
							pos: position{line: 807, col: 19, offset: 35110},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 807, col: 19, offset: 35110},
									val:        "footnote:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 807, col: 32, offset: 35123},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 807, col: 41, offset: 35132},
										name: "FootnoteContent",
									},
								},
								&litMatcher{
									pos:        position{line: 807, col: 58, offset: 35149},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 809, col: 9, offset: 35232},
						run: (*parser).callonInlineFootnote8,
						expr: &seqExpr{
							pos: position{line: 809, col: 9, offset: 35232},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 809, col: 9, offset: 35232},
									val:        "footnoteref:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 809, col: 25, offset: 35248},
									label: "ref",
									expr: &actionExpr{
										pos: position{line: 815, col: 16, offset: 35561},
										run: (*parser).callonInlineFootnote12,
										expr: &zeroOrMoreExpr{
											pos: position{line: 815, col: 16, offset: 35561},
											expr: &seqExpr{
												pos: position{line: 815, col: 17, offset: 35562},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 815, col: 17, offset: 35562},
														expr: &litMatcher{
															pos:        position{line: 815, col: 18, offset: 35563},
															val:        ",",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 815, col: 22, offset: 35567},
														expr: &litMatcher{
															pos:        position{line: 815, col: 23, offset: 35568},
															val:        "]",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 815, col: 27, offset: 35572},
														expr: &choiceExpr{
															pos: position{line: 1101, col: 8, offset: 46086},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1099, col: 8, offset: 46075},
																	expr: &anyMatcher{
																		line: 1099, col: 9, offset: 46076,
																	},
																},
															},
														},
													},
													&anyMatcher{
														line: 815, col: 32, offset: 35577,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 809, col: 43, offset: 35266},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 809, col: 47, offset: 35270},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 809, col: 56, offset: 35279},
										name: "FootnoteContent",
									},
								},
								&litMatcher{
									pos:        position{line: 809, col: 73, offset: 35296},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 811, col: 9, offset: 35389},
						run: (*parser).callonInlineFootnote30,
						expr: &seqExpr{
							pos: position{line: 811, col: 9, offset: 35389},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 811, col: 9, offset: 35389},
									val:        "footnoteref:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 811, col: 25, offset: 35405},
									label: "ref",
									expr: &actionExpr{
										pos: position{line: 815, col: 16, offset: 35561},
										run: (*parser).callonInlineFootnote34,
										expr: &zeroOrMoreExpr{
											pos: position{line: 815, col: 16, offset: 35561},
											expr: &seqExpr{
												pos: position{line: 815, col: 17, offset: 35562},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 815, col: 17, offset: 35562},
														expr: &litMatcher{
															pos:        position{line: 815, col: 18, offset: 35563},
															val:        ",",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 815, col: 22, offset: 35567},
														expr: &litMatcher{
															pos:        position{line: 815, col: 23, offset: 35568},
															val:        "]",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 815, col: 27, offset: 35572},
														expr: &choiceExpr{
															pos: position{line: 1101, col: 8, offset: 46086},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1099, col: 8, offset: 46075},
																	expr: &anyMatcher{
																		line: 1099, col: 9, offset: 46076,
																	},
																},
															},
														},
													},
													&anyMatcher{
														line: 815, col: 32, offset: 35577,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 811, col: 43, offset: 35423},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FootnoteContent",
			pos:  position{line: 819, col: 1, offset: 35661},
			expr: &actionExpr{
				pos: position{line: 819, col: 20, offset: 35680},
				run: (*parser).callonFootnoteContent1,
				expr: &labeledExpr{
					pos:   position{line: 819, col: 20, offset: 35680},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 819, col: 29, offset: 35689},
						expr: &seqExpr{
							pos: position{line: 819, col: 30, offset: 35690},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 819, col: 30, offset: 35690},
									expr: &litMatcher{
										pos:        position{line: 819, col: 31, offset: 35691},
										val:        "]",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 819, col: 35, offset: 35695},
									expr: &choiceExpr{
										pos: position{line: 1101, col: 8, offset: 46086},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1097, col: 12, offset: 46046},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1097, col: 21, offset: 46055},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1099, col: 8, offset: 46075},
												expr: &anyMatcher{
													line: 1099, col: 9, offset: 46076,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 819, col: 40, offset: 35700},
									expr: &choiceExpr{
										pos: position{line: 1093, col: 7, offset: 45984},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonFootnoteContent16,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 819, col: 44, offset: 35704},
									expr: &actionExpr{
										pos: position{line: 149, col: 20, offset: 5599},
										run: (*parser).callonFootnoteContent19,
										expr: &seqExpr{
											pos: position{line: 149, col: 20, offset: 5599},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 149, col: 20, offset: 5599},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 149, col: 25, offset: 5604},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1079, col: 7, offset: 45702},
														run: (*parser).callonFootnoteContent23,
														expr: &oneOrMoreExpr{
															pos: position{line: 1079, col: 7, offset: 45702},
															expr: &seqExpr{
																pos: position{line: 1079, col: 8, offset: 45703},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1079, col: 8, offset: 45703},
																		expr: &choiceExpr{
																			pos: position{line: 1097, col: 12, offset: 46046},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1097, col: 12, offset: 46046},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1097, col: 21, offset: 46055},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 17, offset: 45712},
																		expr: &choiceExpr{
																			pos: position{line: 1093, col: 7, offset: 45984},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1093, col: 7, offset: 45984},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1093, col: 13, offset: 45990},
																					run: (*parser).callonFootnoteContent33,
																					expr: &litMatcher{
																						pos:        position{line: 1093, col: 13, offset: 45990},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 21, offset: 45716},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 22, offset: 45717},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 26, offset: 45721},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 27, offset: 45722},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 31, offset: 45726},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 32, offset: 45727},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 37, offset: 45732},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 38, offset: 45733},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1079, col: 43, offset: 45738},
																		expr: &litMatcher{
																			pos:        position{line: 1079, col: 44, offset: 45739},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1079, col: 48, offset: 45743,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 149, col: 33, offset: 5612},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 149, col: 38, offset: 5617},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonFootnoteContent50,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 819, col: 61, offset: 35721},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 819, col: 75, offset: 35735},
									expr: &choiceExpr{
										pos: position{line: 1093, col: 7, offset: 45984},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonFootnoteContent56,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DelimitedBlock",
			pos:  position{line: 827, col: 1, offset: 36050},
			expr: &choiceExpr{
				pos: position{line: 827, col: 19, offset: 36068},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 827, col: 19, offset: 36068},
						name: "FencedBlock",
					},
					&actionExpr{
						pos: position{line: 853, col: 17, offset: 37182},
						run: (*parser).callonDelimitedBlock3,
						expr: &seqExpr{
							pos: position{line: 853, col: 17, offset: 37182},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 850, col: 26, offset: 37115},
									val:        "----",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 850, col: 33, offset: 37122},
									expr: &choiceExpr{
										pos: position{line: 1093, col: 7, offset: 45984},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonDelimitedBlock9,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1101, col: 8, offset: 46086},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1097, col: 12, offset: 46046},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1097, col: 21, offset: 46055},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1099, col: 8, offset: 46075},
											expr: &anyMatcher{
												line: 1099, col: 9, offset: 46076,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 853, col: 39, offset: 37204},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 853, col: 47, offset: 37212},
										expr: &actionExpr{
											pos: position{line: 857, col: 24, offset: 37382},
											run: (*parser).callonDelimitedBlock18,
											expr: &labeledExpr{
												pos:   position{line: 857, col: 24, offset: 37382},
												label: "lines",
												expr: &oneOrMoreExpr{
													pos: position{line: 857, col: 30, offset: 37388},
													expr: &actionExpr{
														pos: position{line: 861, col: 21, offset: 37491},
														run: (*parser).callonDelimitedBlock21,
														expr: &seqExpr{
															pos: position{line: 861, col: 21, offset: 37491},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 861, col: 21, offset: 37491},
																	expr: &seqExpr{
																		pos: position{line: 850, col: 26, offset: 37115},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 850, col: 26, offset: 37115},
																				val:        "----",
																				ignoreCase: false,
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 850, col: 33, offset: 37122},
																				expr: &choiceExpr{
																					pos: position{line: 1093, col: 7, offset: 45984},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1093, col: 7, offset: 45984},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1093, col: 13, offset: 45990},
																							run: (*parser).callonDelimitedBlock29,
																							expr: &litMatcher{
																								pos:        position{line: 1093, col: 13, offset: 45990},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1101, col: 8, offset: 46086},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1097, col: 12, offset: 46046},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1097, col: 21, offset: 46055},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1099, col: 8, offset: 46075},
																						expr: &anyMatcher{
																							line: 1099, col: 9, offset: 46076,
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 861, col: 44, offset: 37514},
																	expr: &notExpr{
																		pos: position{line: 1099, col: 8, offset: 46075},
																		expr: &anyMatcher{
																			line: 1099, col: 9, offset: 46076,
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 861, col: 49, offset: 37519},
																	label: "line",
																	expr: &actionExpr{
																		pos: position{line: 865, col: 28, offset: 37630},
																		run: (*parser).callonDelimitedBlock40,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 865, col: 28, offset: 37630},
																			expr: &seqExpr{
																				pos: position{line: 865, col: 29, offset: 37631},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 865, col: 29, offset: 37631},
																						expr: &seqExpr{
																							pos: position{line: 850, col: 26, offset: 37115},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 850, col: 26, offset: 37115},
																									val:        "----",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 850, col: 33, offset: 37122},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonDelimitedBlock49,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&choiceExpr{
																									pos: position{line: 1101, col: 8, offset: 46086},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1097, col: 12, offset: 46046},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 1097, col: 21, offset: 46055},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																										&notExpr{
																											pos: position{line: 1099, col: 8, offset: 46075},
																											expr: &anyMatcher{
																												line: 1099, col: 9, offset: 46076,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 865, col: 52, offset: 37654},
																						expr: &choiceExpr{
																							pos: position{line: 1101, col: 8, offset: 46086},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1097, col: 12, offset: 46046},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1097, col: 21, offset: 46055},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1099, col: 8, offset: 46075},
																									expr: &anyMatcher{
																										line: 1099, col: 9, offset: 46076,
																									},
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 865, col: 57, offset: 37659,
																					},
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1101, col: 8, offset: 46086},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1097, col: 12, offset: 46046},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1097, col: 21, offset: 46055},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1099, col: 8, offset: 46075},
																			expr: &anyMatcher{
																				line: 1099, col: 9, offset: 46076,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 853, col: 71, offset: 37236},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 850, col: 26, offset: 37115},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 850, col: 26, offset: 37115},
													val:        "----",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 850, col: 33, offset: 37122},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonDelimitedBlock74,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1101, col: 8, offset: 46086},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1099, col: 8, offset: 46075},
															expr: &anyMatcher{
																line: 1099, col: 9, offset: 46076,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1099, col: 8, offset: 46075},
											expr: &anyMatcher{
												line: 1099, col: 9, offset: 46076,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 827, col: 48, offset: 36097},
						name: "ExampleBlock",
					},
					&actionExpr{
						pos: position{line: 975, col: 17, offset: 41979},
						run: (*parser).callonDelimitedBlock84,
						expr: &seqExpr{
							pos: position{line: 975, col: 17, offset: 41979},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 973, col: 26, offset: 41955},
									val:        "////",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 975, col: 39, offset: 42001},
									expr: &choiceExpr{
										pos: position{line: 1093, col: 7, offset: 45984},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonDelimitedBlock90,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1097, col: 12, offset: 46046},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1097, col: 12, offset: 46046},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1097, col: 21, offset: 46055},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 975, col: 51, offset: 42013},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 975, col: 59, offset: 42021},
										expr: &actionExpr{
											pos: position{line: 979, col: 21, offset: 42198},
											run: (*parser).callonDelimitedBlock97,
											expr: &seqExpr{
												pos: position{line: 979, col: 21, offset: 42198},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 979, col: 21, offset: 42198},
														expr: &seqExpr{
															pos: position{line: 979, col: 22, offset: 42199},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 979, col: 22, offset: 42199},
																	expr: &litMatcher{
																		pos:        position{line: 973, col: 26, offset: 41955},
																		val:        "////",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 979, col: 45, offset: 42222},
																	expr: &choiceExpr{
																		pos: position{line: 1101, col: 8, offset: 46086},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1097, col: 12, offset: 46046},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1097, col: 21, offset: 46055},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1099, col: 8, offset: 46075},
																				expr: &anyMatcher{
																					line: 1099, col: 9, offset: 46076,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 979, col: 50, offset: 42227,
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1101, col: 8, offset: 46086},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1099, col: 8, offset: 46075},
																expr: &anyMatcher{
																	line: 1099, col: 9, offset: 46076,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 975, col: 81, offset: 42043},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 975, col: 82, offset: 42044},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 973, col: 26, offset: 41955},
													val:        "////",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 975, col: 104, offset: 42066},
													expr: &choiceExpr{
														pos: position{line: 1093, col: 7, offset: 45984},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1093, col: 7, offset: 45984},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1093, col: 13, offset: 45990},
																run: (*parser).callonDelimitedBlock121,
																expr: &litMatcher{
																	pos:        position{line: 1093, col: 13, offset: 45990},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1101, col: 8, offset: 46086},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1097, col: 12, offset: 46046},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1097, col: 21, offset: 46055},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1099, col: 8, offset: 46075},
															expr: &anyMatcher{
																line: 1099, col: 9, offset: 46076,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1099, col: 8, offset: 46075},
											expr: &anyMatcher{
												line: 1099, col: 9, offset: 46076,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 828, col: 34, offset: 36144},
						name: "VerseBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 828, col: 47, offset: 36157},
						name: "QuoteBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 829, col: 19, offset: 36187},
						name: "SidebarBlock",
					},
				},
			},
		},
		{
			name: "FencedBlock",
			pos:  position{line: 841, col: 1, offset: 36651},
			expr: &actionExpr{
				pos: position{line: 841, col: 16, offset: 36666},
				run: (*parser).callonFencedBlock1,
				expr: &seqExpr{
					pos: position{line: 841, col: 16, offset: 36666},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 839, col: 25, offset: 36636},
							val:        "```",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 839, col: 31, offset: 36642},
							expr: &choiceExpr{
								pos: position{line: 1093, col: 7, offset: 45984},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1093, col: 7, offset: 45984},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1093, col: 13, offset: 45990},
										run: (*parser).callonFencedBlock7,
										expr: &litMatcher{
											pos:        position{line: 1093, col: 13, offset: 45990},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 841, col: 37, offset: 36687},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 841, col: 45, offset: 36695},
								expr: &ruleRefExpr{
									pos:  position{line: 841, col: 46, offset: 36696},
									name: "FencedBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 841, col: 68, offset: 36718},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 839, col: 25, offset: 36636},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 839, col: 25, offset: 36636},
											val:        "```",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 839, col: 31, offset: 36642},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonFencedBlock23,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FencedBlockContent",
			pos:  position{line: 845, col: 1, offset: 36837},
			expr: &choiceExpr{
				pos: position{line: 845, col: 23, offset: 36859},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 845, col: 23, offset: 36859},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 845, col: 30, offset: 36866},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 1060, col: 14, offset: 45168},
						run: (*parser).callonFencedBlockContent4,
						expr: &seqExpr{
							pos: position{line: 1060, col: 14, offset: 45168},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 1060, col: 14, offset: 45168},
									expr: &notExpr{
										pos: position{line: 1099, col: 8, offset: 46075},
										expr: &anyMatcher{
											line: 1099, col: 9, offset: 46076,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 1060, col: 19, offset: 45173},
									expr: &choiceExpr{
										pos: position{line: 1093, col: 7, offset: 45984},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonFencedBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1101, col: 8, offset: 46086},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1097, col: 12, offset: 46046},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1097, col: 21, offset: 46055},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1099, col: 8, offset: 46075},
											expr: &anyMatcher{
												line: 1099, col: 9, offset: 46076,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ExampleBlock",
			pos:  position{line: 874, col: 1, offset: 38036},
			expr: &actionExpr{
				pos: position{line: 874, col: 17, offset: 38052},
				run: (*parser).callonExampleBlock1,
				expr: &seqExpr{
					pos: position{line: 874, col: 17, offset: 38052},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 872, col: 26, offset: 38020},
							val:        "====",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 872, col: 33, offset: 38027},
							expr: &choiceExpr{
								pos: position{line: 1093, col: 7, offset: 45984},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1093, col: 7, offset: 45984},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1093, col: 13, offset: 45990},
										run: (*parser).callonExampleBlock7,
										expr: &litMatcher{
											pos:        position{line: 1093, col: 13, offset: 45990},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 874, col: 39, offset: 38074},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 874, col: 47, offset: 38082},
								expr: &choiceExpr{
									pos: position{line: 874, col: 48, offset: 38083},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 874, col: 48, offset: 38083},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 874, col: 55, offset: 38090},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 1060, col: 14, offset: 45168},
											run: (*parser).callonExampleBlock19,
											expr: &seqExpr{
												pos: position{line: 1060, col: 14, offset: 45168},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 1060, col: 14, offset: 45168},
														expr: &notExpr{
															pos: position{line: 1099, col: 8, offset: 46075},
															expr: &anyMatcher{
																line: 1099, col: 9, offset: 46076,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 1060, col: 19, offset: 45173},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonExampleBlock27,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1101, col: 8, offset: 46086},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1099, col: 8, offset: 46075},
																expr: &anyMatcher{
																	line: 1099, col: 9, offset: 46076,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 874, col: 86, offset: 38121},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 872, col: 26, offset: 38020},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 872, col: 26, offset: 38020},
											val:        "====",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 872, col: 33, offset: 38027},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonExampleBlock40,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "BlockParagraph",
			pos:  position{line: 879, col: 1, offset: 38260},
			expr: &actionExpr{
				pos: position{line: 879, col: 20, offset: 38279},
				run: (*parser).callonBlockParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 879, col: 20, offset: 38279},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 879, col: 26, offset: 38285},
						expr: &ruleRefExpr{
							pos:  position{line: 879, col: 27, offset: 38286},
							name: "BlockParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "BlockParagraphLine",
			pos:  position{line: 883, col: 1, offset: 38371},
			expr: &actionExpr{
				pos: position{line: 883, col: 23, offset: 38393},
				run: (*parser).callonBlockParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 883, col: 23, offset: 38393},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 883, col: 23, offset: 38393},
							expr: &actionExpr{
								pos: position{line: 414, col: 26, offset: 15081},
								run: (*parser).callonBlockParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 414, col: 26, offset: 15081},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 414, col: 26, offset: 15081},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonBlockParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 414, col: 30, offset: 15085},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 416, col: 5, offset: 15140},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 416, col: 5, offset: 15140},
														run: (*parser).callonBlockParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 416, col: 5, offset: 15140},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 418, col: 9, offset: 15253},
														run: (*parser).callonBlockParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 418, col: 9, offset: 15253},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 420, col: 9, offset: 15364},
														run: (*parser).callonBlockParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 420, col: 9, offset: 15364},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 422, col: 9, offset: 15473},
														run: (*parser).callonBlockParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 422, col: 9, offset: 15473},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 9, offset: 15580},
														run: (*parser).callonBlockParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 424, col: 9, offset: 15580},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 427, col: 9, offset: 15707},
														run: (*parser).callonBlockParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 427, col: 9, offset: 15707},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 427, col: 9, offset: 15707},
																	expr: &charClassMatcher{
																		pos:        position{line: 427, col: 10, offset: 15708},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 427, col: 18, offset: 15716},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 429, col: 9, offset: 15819},
														run: (*parser).callonBlockParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 429, col: 9, offset: 15819},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 429, col: 10, offset: 15820},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 429, col: 17, offset: 15827},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 431, col: 9, offset: 15933},
														run: (*parser).callonBlockParagraphLine32,
														expr: &seqExpr{
															pos: position{line: 431, col: 9, offset: 15933},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 431, col: 10, offset: 15934},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 431, col: 17, offset: 15941},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 433, col: 9, offset: 16047},
														run: (*parser).callonBlockParagraphLine36,
														expr: &seqExpr{
															pos: position{line: 433, col: 9, offset: 16047},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 433, col: 9, offset: 16047},
																	expr: &charClassMatcher{
																		pos:        position{line: 433, col: 10, offset: 16048},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 433, col: 18, offset: 16056},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 435, col: 9, offset: 16162},
														run: (*parser).callonBlockParagraphLine41,
														expr: &seqExpr{
															pos: position{line: 435, col: 9, offset: 16162},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 435, col: 9, offset: 16162},
																	expr: &charClassMatcher{
																		pos:        position{line: 435, col: 10, offset: 16163},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 435, col: 18, offset: 16171},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 437, col: 8, offset: 16276},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonBlockParagraphLine49,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 884, col: 9, offset: 38427},
							expr: &actionExpr{
								pos: position{line: 453, col: 5, offset: 16936},
								run: (*parser).callonBlockParagraphLine52,
								expr: &seqExpr{
									pos: position{line: 453, col: 5, offset: 16936},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 453, col: 5, offset: 16936},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonBlockParagraphLine57,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 453, col: 9, offset: 16940},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 454, col: 9, offset: 16957},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 454, col: 9, offset: 16957},
														run: (*parser).callonBlockParagraphLine61,
														expr: &litMatcher{
															pos:        position{line: 454, col: 9, offset: 16957},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 11, offset: 17126},
														run: (*parser).callonBlockParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 457, col: 11, offset: 17126},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 460, col: 11, offset: 17295},
														run: (*parser).callonBlockParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 460, col: 11, offset: 17295},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 463, col: 11, offset: 17464},
														run: (*parser).callonBlockParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 463, col: 11, offset: 17464},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 466, col: 11, offset: 17630},
														run: (*parser).callonBlockParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 466, col: 11, offset: 17630},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 469, col: 11, offset: 17794},
														run: (*parser).callonBlockParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 469, col: 11, offset: 17794},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 471, col: 12, offset: 17941},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonBlockParagraphLine76,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 885, col: 9, offset: 38463},
							expr: &seqExpr{
								pos: position{line: 885, col: 11, offset: 38465},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 491, col: 24, offset: 19103},
										run: (*parser).callonBlockParagraphLine80,
										expr: &zeroOrMoreExpr{
											pos: position{line: 491, col: 24, offset: 19103},
											expr: &seqExpr{
												pos: position{line: 491, col: 25, offset: 19104},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 491, col: 25, offset: 19104},
														expr: &choiceExpr{
															pos: position{line: 1097, col: 12, offset: 46046},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 491, col: 34, offset: 19113},
														expr: &litMatcher{
															pos:        position{line: 491, col: 35, offset: 19114},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 491, col: 40, offset: 19119,
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 496, col: 29, offset: 19265},
										run: (*parser).callonBlockParagraphLine90,
										expr: &choiceExpr{
											pos: position{line: 496, col: 30, offset: 19266},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 496, col: 30, offset: 19266},
													val:        "::::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 496, col: 39, offset: 19275},
													val:        ":::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 496, col: 47, offset: 19283},
													val:        "::",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 886, col: 9, offset: 38520},
							expr: &actionExpr{
								pos: position{line: 399, col: 25, offset: 14525},
								run: (*parser).callonBlockParagraphLine96,
								expr: &seqExpr{
									pos: position{line: 399, col: 25, offset: 14525},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 399, col: 25, offset: 14525},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 399, col: 29, offset: 14529},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonBlockParagraphLine102,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 887, col: 9, offset: 38553},
							expr: &choiceExpr{
								pos: position{line: 831, col: 19, offset: 36219},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 997, col: 26, offset: 42900},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 839, col: 25, offset: 36636},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 839, col: 25, offset: 36636},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 839, col: 31, offset: 36642},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonBlockParagraphLine117,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 850, col: 26, offset: 37115},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 850, col: 26, offset: 37115},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 850, col: 33, offset: 37122},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonBlockParagraphLine129,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 872, col: 26, offset: 38020},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 872, col: 26, offset: 38020},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 872, col: 33, offset: 38027},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonBlockParagraphLine141,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 973, col: 26, offset: 41955},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 895, col: 24, offset: 38845},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 24, offset: 38845},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 895, col: 31, offset: 38852},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonBlockParagraphLine154,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 930, col: 26, offset: 40438},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 930, col: 26, offset: 40438},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 930, col: 33, offset: 40445},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonBlockParagraphLine166,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 888, col: 9, offset: 38580},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 888, col: 15, offset: 38586},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlock",
			pos:  position{line: 897, col: 1, offset: 38886},
			expr: &actionExpr{
				pos: position{line: 897, col: 15, offset: 38900},
				run: (*parser).callonQuoteBlock1,
				expr: &seqExpr{
					pos: position{line: 897, col: 15, offset: 38900},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 897, col: 15, offset: 38900},
							label: "attributes",
							expr: &seqExpr{
								pos: position{line: 897, col: 27, offset: 38912},
								exprs: []interface{}{
									&choiceExpr{
										pos: position{line: 201, col: 20, offset: 7260},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 201, col: 20, offset: 7260},
												run: (*parser).callonQuoteBlock6,
												expr: &seqExpr{
													pos: position{line: 201, col: 20, offset: 7260},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 201, col: 20, offset: 7260},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 201, col: 24, offset: 7264},
															label: "kind",
															expr: &actionExpr{
																pos: position{line: 213, col: 14, offset: 7794},
																run: (*parser).callonQuoteBlock10,
																expr: &litMatcher{
																	pos:        position{line: 213, col: 14, offset: 7794},
																	val:        "quote",
																	ignoreCase: false,
																},
															},
														},
														&zeroOrMoreExpr{
															pos: position{line: 201, col: 41, offset: 7281},
															expr: &choiceExpr{
																pos: position{line: 1093, col: 7, offset: 45984},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1093, col: 7, offset: 45984},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1093, col: 13, offset: 45990},
																		run: (*parser).callonQuoteBlock15,
																		expr: &litMatcher{
																			pos:        position{line: 1093, col: 13, offset: 45990},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 201, col: 45, offset: 7285},
															val:        ",",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 201, col: 49, offset: 7289},
															label: "author",
															expr: &actionExpr{
																pos: position{line: 233, col: 16, offset: 8450},
																run: (*parser).callonQuoteBlock19,
																expr: &zeroOrMoreExpr{
																	pos: position{line: 233, col: 16, offset: 8450},
																	expr: &seqExpr{
																		pos: position{line: 233, col: 17, offset: 8451},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 233, col: 17, offset: 8451},
																				expr: &choiceExpr{
																					pos: position{line: 1101, col: 8, offset: 46086},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1097, col: 12, offset: 46046},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1097, col: 21, offset: 46055},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1099, col: 8, offset: 46075},
																							expr: &anyMatcher{
																								line: 1099, col: 9, offset: 46076,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 233, col: 22, offset: 8456},
																				expr: &litMatcher{
																					pos:        position{line: 233, col: 23, offset: 8457},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 233, col: 27, offset: 8461},
																				expr: &litMatcher{
																					pos:        position{line: 233, col: 28, offset: 8462},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 233, col: 32, offset: 8466,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 201, col: 70, offset: 7310},
															val:        ",",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 201, col: 74, offset: 7314},
															label: "title",
															expr: &actionExpr{
																pos: position{line: 237, col: 15, offset: 8520},
																run: (*parser).callonQuoteBlock35,
																expr: &zeroOrMoreExpr{
																	pos: position{line: 237, col: 15, offset: 8520},
																	expr: &seqExpr{
																		pos: position{line: 237, col: 16, offset: 8521},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 237, col: 16, offset: 8521},
																				expr: &choiceExpr{
																					pos: position{line: 1101, col: 8, offset: 46086},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1097, col: 12, offset: 46046},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1097, col: 21, offset: 46055},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1099, col: 8, offset: 46075},
																							expr: &anyMatcher{
																								line: 1099, col: 9, offset: 46076,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 237, col: 21, offset: 8526},
																				expr: &litMatcher{
																					pos:        position{line: 237, col: 22, offset: 8527},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 237, col: 26, offset: 8531},
																				expr: &litMatcher{
																					pos:        position{line: 237, col: 27, offset: 8532},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 237, col: 31, offset: 8536,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 201, col: 93, offset: 7333},
															val:        "]",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 201, col: 97, offset: 7337},
															expr: &choiceExpr{
																pos: position{line: 1093, col: 7, offset: 45984},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1093, col: 7, offset: 45984},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1093, col: 13, offset: 45990},
																		run: (*parser).callonQuoteBlock53,
																		expr: &litMatcher{
																			pos:        position{line: 1093, col: 13, offset: 45990},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1101, col: 8, offset: 46086},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1099, col: 8, offset: 46075},
																	expr: &anyMatcher{
																		line: 1099, col: 9, offset: 46076,
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 205, col: 5, offset: 7484},
												run: (*parser).callonQuoteBlock60,
												expr: &seqExpr{
													pos: position{line: 205, col: 5, offset: 7484},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 205, col: 5, offset: 7484},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 205, col: 9, offset: 7488},
															label: "kind",
															expr: &actionExpr{
																pos: position{line: 213, col: 14, offset: 7794},
																run: (*parser).callonQuoteBlock64,
																expr: &litMatcher{
																	pos:        position{line: 213, col: 14, offset: 7794},
																	val:        "quote",
																	ignoreCase: false,
																},
															},
														},
														&zeroOrMoreExpr{
															pos: position{line: 205, col: 26, offset: 7505},
															expr: &choiceExpr{
																pos: position{line: 1093, col: 7, offset: 45984},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1093, col: 7, offset: 45984},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1093, col: 13, offset: 45990},
																		run: (*parser).callonQuoteBlock69,
																		expr: &litMatcher{
																			pos:        position{line: 1093, col: 13, offset: 45990},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 205, col: 30, offset: 7509},
															val:        ",",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 205, col: 34, offset: 7513},
															label: "author",
															expr: &actionExpr{
																pos: position{line: 233, col: 16, offset: 8450},
																run: (*parser).callonQuoteBlock73,
																expr: &zeroOrMoreExpr{
																	pos: position{line: 233, col: 16, offset: 8450},
																	expr: &seqExpr{
																		pos: position{line: 233, col: 17, offset: 8451},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 233, col: 17, offset: 8451},
																				expr: &choiceExpr{
																					pos: position{line: 1101, col: 8, offset: 46086},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1097, col: 12, offset: 46046},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1097, col: 21, offset: 46055},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1099, col: 8, offset: 46075},
																							expr: &anyMatcher{
																								line: 1099, col: 9, offset: 46076,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 233, col: 22, offset: 8456},
																				expr: &litMatcher{
																					pos:        position{line: 233, col: 23, offset: 8457},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 233, col: 27, offset: 8461},
																				expr: &litMatcher{
																					pos:        position{line: 233, col: 28, offset: 8462},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 233, col: 32, offset: 8466,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 205, col: 55, offset: 7534},
															val:        "]",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 205, col: 59, offset: 7538},
															expr: &choiceExpr{
																pos: position{line: 1093, col: 7, offset: 45984},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1093, col: 7, offset: 45984},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1093, col: 13, offset: 45990},
																		run: (*parser).callonQuoteBlock91,
																		expr: &litMatcher{
																			pos:        position{line: 1093, col: 13, offset: 45990},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1101, col: 8, offset: 46086},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1099, col: 8, offset: 46075},
																	expr: &anyMatcher{
																		line: 1099, col: 9, offset: 46076,
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 209, col: 5, offset: 7673},
												run: (*parser).callonQuoteBlock98,
												expr: &seqExpr{
													pos: position{line: 209, col: 5, offset: 7673},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 209, col: 5, offset: 7673},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 209, col: 9, offset: 7677},
															label: "kind",
															expr: &actionExpr{
																pos: position{line: 213, col: 14, offset: 7794},
																run: (*parser).callonQuoteBlock102,
																expr: &litMatcher{
																	pos:        position{line: 213, col: 14, offset: 7794},
																	val:        "quote",
																	ignoreCase: false,
																},
															},
														},
														&zeroOrMoreExpr{
															pos: position{line: 209, col: 26, offset: 7694},
															expr: &choiceExpr{
																pos: position{line: 1093, col: 7, offset: 45984},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1093, col: 7, offset: 45984},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1093, col: 13, offset: 45990},
																		run: (*parser).callonQuoteBlock107,
																		expr: &litMatcher{
																			pos:        position{line: 1093, col: 13, offset: 45990},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 209, col: 30, offset: 7698},
															val:        "]",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 209, col: 34, offset: 7702},
															expr: &choiceExpr{
																pos: position{line: 1093, col: 7, offset: 45984},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1093, col: 7, offset: 45984},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1093, col: 13, offset: 45990},
																		run: (*parser).callonQuoteBlock113,
																		expr: &litMatcher{
																			pos:        position{line: 1093, col: 13, offset: 45990},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1101, col: 8, offset: 46086},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1099, col: 8, offset: 46075},
																	expr: &anyMatcher{
																		line: 1099, col: 9, offset: 46076,
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&zeroOrMoreExpr{
										pos: position{line: 897, col: 43, offset: 38928},
										expr: &actionExpr{
											pos: position{line: 136, col: 21, offset: 5092},
											run: (*parser).callonQuoteBlock121,
											expr: &seqExpr{
												pos: position{line: 136, col: 21, offset: 5092},
												exprs: []interface{}{
													&labeledExpr{
														pos:   position{line: 136, col: 21, offset: 5092},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 136, col: 27, offset: 5098},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 143, col: 14, offset: 5448},
																	run: (*parser).callonQuoteBlock125,
																	expr: &seqExpr{
																		pos: position{line: 143, col: 14, offset: 5448},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 143, col: 14, offset: 5448},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 143, col: 19, offset: 5453},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1079, col: 7, offset: 45702},
																					run: (*parser).callonQuoteBlock129,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1079, col: 7, offset: 45702},
																						expr: &seqExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1079, col: 8, offset: 45703},
																									expr: &choiceExpr{
																										pos: position{line: 1097, col: 12, offset: 46046},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1097, col: 12, offset: 46046},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1097, col: 21, offset: 46055},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 17, offset: 45712},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonQuoteBlock139,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 21, offset: 45716},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 22, offset: 45717},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 26, offset: 45721},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 27, offset: 45722},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 31, offset: 45726},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 32, offset: 45727},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 37, offset: 45732},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 38, offset: 45733},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 43, offset: 45738},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 44, offset: 45739},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1079, col: 48, offset: 45743,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 143, col: 27, offset: 5461},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 145, col: 5, offset: 5515},
																	run: (*parser).callonQuoteBlock153,
																	expr: &seqExpr{
																		pos: position{line: 145, col: 5, offset: 5515},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 145, col: 5, offset: 5515},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 145, col: 10, offset: 5520},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1079, col: 7, offset: 45702},
																					run: (*parser).callonQuoteBlock157,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1079, col: 7, offset: 45702},
																						expr: &seqExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1079, col: 8, offset: 45703},
																									expr: &choiceExpr{
																										pos: position{line: 1097, col: 12, offset: 46046},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1097, col: 12, offset: 46046},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1097, col: 21, offset: 46055},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 17, offset: 45712},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonQuoteBlock167,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 21, offset: 45716},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 22, offset: 45717},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 26, offset: 45721},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 27, offset: 45722},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 31, offset: 45726},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 32, offset: 45727},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 37, offset: 45732},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 38, offset: 45733},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 43, offset: 45738},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 44, offset: 45739},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1079, col: 48, offset: 45743,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 145, col: 18, offset: 5528},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 155, col: 17, offset: 5831},
																	run: (*parser).callonQuoteBlock181,
																	expr: &seqExpr{
																		pos: position{line: 155, col: 17, offset: 5831},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 155, col: 17, offset: 5831},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 155, col: 21, offset: 5835},
																				expr: &litMatcher{
																					pos:        position{line: 155, col: 22, offset: 5836},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 155, col: 26, offset: 5840},
																				expr: &choiceExpr{
																					pos: position{line: 1093, col: 7, offset: 45984},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1093, col: 7, offset: 45984},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1093, col: 13, offset: 45990},
																							run: (*parser).callonQuoteBlock189,
																							expr: &litMatcher{
																								pos:        position{line: 1093, col: 13, offset: 45990},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 155, col: 30, offset: 5844},
																				label: "title",
																				expr: &actionExpr{
																					pos: position{line: 159, col: 24, offset: 5949},
																					run: (*parser).callonQuoteBlock192,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 159, col: 24, offset: 5949},
																						expr: &seqExpr{
																							pos: position{line: 159, col: 25, offset: 5950},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 159, col: 25, offset: 5950},
																									expr: &choiceExpr{
																										pos: position{line: 1097, col: 12, offset: 46046},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1097, col: 12, offset: 46046},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1097, col: 21, offset: 46055},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 159, col: 34, offset: 5959,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 165, col: 16, offset: 6108},
																	run: (*parser).callonQuoteBlock200,
																	expr: &seqExpr{
																		pos: position{line: 165, col: 16, offset: 6108},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 165, col: 16, offset: 6108},
																				val:        "[.",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 165, col: 21, offset: 6113},
																				expr: &choiceExpr{
																					pos: position{line: 1093, col: 7, offset: 45984},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1093, col: 7, offset: 45984},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1093, col: 13, offset: 45990},
																							run: (*parser).callonQuoteBlock206,
																							expr: &litMatcher{
																								pos:        position{line: 1093, col: 13, offset: 45990},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 165, col: 25, offset: 6117},
																				label: "role",
																				expr: &actionExpr{
																					pos: position{line: 169, col: 23, offset: 6221},
																					run: (*parser).callonQuoteBlock209,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 169, col: 23, offset: 6221},
																						expr: &seqExpr{
																							pos: position{line: 169, col: 24, offset: 6222},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 169, col: 24, offset: 6222},
																									expr: &choiceExpr{
																										pos: position{line: 1097, col: 12, offset: 46046},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1097, col: 12, offset: 46046},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1097, col: 21, offset: 46055},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 169, col: 33, offset: 6231},
																									expr: &litMatcher{
																										pos:        position{line: 169, col: 34, offset: 6232},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 169, col: 38, offset: 6236,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 165, col: 51, offset: 6143},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 174, col: 30, offset: 6385},
																	run: (*parser).callonQuoteBlock220,
																	expr: &seqExpr{
																		pos: position{line: 174, col: 30, offset: 6385},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 174, col: 30, offset: 6385},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 174, col: 34, offset: 6389},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 507, col: 19, offset: 19712},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 507, col: 19, offset: 19712},
																							run: (*parser).callonQuoteBlock225,
																							expr: &litMatcher{
																								pos:        position{line: 507, col: 19, offset: 19712},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 509, col: 5, offset: 19750},
																							run: (*parser).callonQuoteBlock227,
																							expr: &litMatcher{
																								pos:        position{line: 509, col: 5, offset: 19750},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 511, col: 5, offset: 19790},
																							run: (*parser).callonQuoteBlock229,
																							expr: &litMatcher{
																								pos:        position{line: 511, col: 5, offset: 19790},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 513, col: 5, offset: 19840},
																							run: (*parser).callonQuoteBlock231,
																							expr: &litMatcher{
																								pos:        position{line: 513, col: 5, offset: 19840},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 515, col: 5, offset: 19886},
																							run: (*parser).callonQuoteBlock233,
																							expr: &litMatcher{
																								pos:        position{line: 515, col: 5, offset: 19886},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 174, col: 53, offset: 6408},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 197, col: 21, offset: 7157},
																	run: (*parser).callonQuoteBlock236,
																	expr: &litMatcher{
																		pos:        position{line: 197, col: 21, offset: 7157},
																		val:        "[horizontal]",
																		ignoreCase: false,
																	},
																},
																&actionExpr{
																	pos: position{line: 179, col: 19, offset: 6569},
																	run: (*parser).callonQuoteBlock238,
																	expr: &seqExpr{
																		pos: position{line: 179, col: 19, offset: 6569},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 179, col: 19, offset: 6569},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 179, col: 23, offset: 6573},
																				expr: &choiceExpr{
																					pos: position{line: 1093, col: 7, offset: 45984},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1093, col: 7, offset: 45984},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1093, col: 13, offset: 45990},
																							run: (*parser).callonQuoteBlock244,
																							expr: &litMatcher{
																								pos:        position{line: 1093, col: 13, offset: 45990},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 179, col: 27, offset: 6577},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 179, col: 38, offset: 6588},
																					expr: &choiceExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								run: (*parser).callonQuoteBlock249,
																								expr: &seqExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 183, col: 21, offset: 6701},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												run: (*parser).callonQuoteBlock252,
																												expr: &seqExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															expr: &actionExpr{
																																pos: position{line: 213, col: 14, offset: 7794},
																																run: (*parser).callonQuoteBlock255,
																																expr: &litMatcher{
																																	pos:        position{line: 213, col: 14, offset: 7794},
																																	val:        "quote",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 189, col: 28, offset: 6972},
																															expr: &actionExpr{
																																pos: position{line: 229, col: 14, offset: 8391},
																																run: (*parser).callonQuoteBlock258,
																																expr: &litMatcher{
																																	pos:        position{line: 229, col: 14, offset: 8391},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 189, col: 39, offset: 6983},
																															expr: &actionExpr{
																																pos: position{line: 1039, col: 16, offset: 44628},
																																run: (*parser).callonQuoteBlock261,
																																expr: &litMatcher{
																																	pos:        position{line: 1039, col: 16, offset: 44628},
																																	val:        "literal",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 189, col: 52, offset: 6996},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 189, col: 56, offset: 7000},
																																expr: &seqExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 189, col: 57, offset: 7001},
																																			expr: &litMatcher{
																																				pos:        position{line: 189, col: 58, offset: 7002},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 189, col: 62, offset: 7006},
																																			expr: &litMatcher{
																																				pos:        position{line: 189, col: 63, offset: 7007},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 189, col: 67, offset: 7011},
																																			expr: &litMatcher{
																																				pos:        position{line: 189, col: 68, offset: 7012},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 189, col: 72, offset: 7016,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 183, col: 40, offset: 6720},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 183, col: 44, offset: 6724},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 193, col: 19, offset: 7075},
																												run: (*parser).callonQuoteBlock275,
																												expr: &labeledExpr{
																													pos:   position{line: 193, col: 19, offset: 7075},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 193, col: 25, offset: 7081},
																														expr: &seqExpr{
																															pos: position{line: 193, col: 26, offset: 7082},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 193, col: 26, offset: 7082},
																																	expr: &litMatcher{
																																		pos:        position{line: 193, col: 27, offset: 7083},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 193, col: 31, offset: 7087},
																																	expr: &litMatcher{
																																		pos:        position{line: 193, col: 32, offset: 7088},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 193, col: 36, offset: 7092},
																																	expr: &litMatcher{
																																		pos:        position{line: 193, col: 37, offset: 7093},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 193, col: 41, offset: 7097,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 183, col: 67, offset: 6747},
																											expr: &litMatcher{
																												pos:        position{line: 183, col: 67, offset: 6747},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 183, col: 72, offset: 6752},
																											expr: &choiceExpr{
																												pos: position{line: 1093, col: 7, offset: 45984},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1093, col: 7, offset: 45984},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1093, col: 13, offset: 45990},
																														run: (*parser).callonQuoteBlock291,
																														expr: &litMatcher{
																															pos:        position{line: 1093, col: 13, offset: 45990},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								run: (*parser).callonQuoteBlock293,
																								expr: &seqExpr{
																									pos: position{line: 185, col: 5, offset: 6836},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 185, col: 5, offset: 6836},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												run: (*parser).callonQuoteBlock296,
																												expr: &seqExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															expr: &actionExpr{
																																pos: position{line: 213, col: 14, offset: 7794},
																																run: (*parser).callonQuoteBlock299,
																																expr: &litMatcher{
																																	pos:        position{line: 213, col: 14, offset: 7794},
																																	val:        "quote",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 189, col: 28, offset: 6972},
																															expr: &actionExpr{
																																pos: position{line: 229, col: 14, offset: 8391},
																																run: (*parser).callonQuoteBlock302,
																																expr: &litMatcher{
																																	pos:        position{line: 229, col: 14, offset: 8391},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 189, col: 39, offset: 6983},
																															expr: &actionExpr{
																																pos: position{line: 1039, col: 16, offset: 44628},
																																run: (*parser).callonQuoteBlock305,
																																expr: &litMatcher{
																																	pos:        position{line: 1039, col: 16, offset: 44628},
																																	val:        "literal",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 189, col: 52, offset: 6996},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 189, col: 56, offset: 7000},
																																expr: &seqExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 189, col: 57, offset: 7001},
																																			expr: &litMatcher{
																																				pos:        position{line: 189, col: 58, offset: 7002},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 189, col: 62, offset: 7006},
																																			expr: &litMatcher{
																																				pos:        position{line: 189, col: 63, offset: 7007},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 189, col: 67, offset: 7011},
																																			expr: &litMatcher{
																																				pos:        position{line: 189, col: 68, offset: 7012},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 189, col: 72, offset: 7016,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 185, col: 24, offset: 6855},
																											expr: &litMatcher{
																												pos:        position{line: 185, col: 24, offset: 6855},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 185, col: 29, offset: 6860},
																											expr: &choiceExpr{
																												pos: position{line: 1093, col: 7, offset: 45984},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1093, col: 7, offset: 45984},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1093, col: 13, offset: 45990},
																														run: (*parser).callonQuoteBlock322,
																														expr: &litMatcher{
																															pos:        position{line: 1093, col: 13, offset: 45990},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 179, col: 59, offset: 6609},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 136, col: 131, offset: 5202},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonQuoteBlock328,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1101, col: 8, offset: 46086},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1099, col: 8, offset: 46075},
																expr: &anyMatcher{
																	line: 1099, col: 9, offset: 46076,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 895, col: 24, offset: 38845},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 895, col: 31, offset: 38852},
							expr: &choiceExpr{
								pos: position{line: 1093, col: 7, offset: 45984},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1093, col: 7, offset: 45984},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1093, col: 13, offset: 45990},
										run: (*parser).callonQuoteBlock339,
										expr: &litMatcher{
											pos:        position{line: 1093, col: 13, offset: 45990},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 897, col: 82, offset: 38967},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 897, col: 90, offset: 38975},
								expr: &ruleRefExpr{
									pos:  position{line: 897, col: 91, offset: 38976},
									name: "QuoteBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 897, col: 113, offset: 38998},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 895, col: 24, offset: 38845},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 895, col: 24, offset: 38845},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 895, col: 31, offset: 38852},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonQuoteBlock355,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlockContent",
			pos:  position{line: 901, col: 1, offset: 39143},
			expr: &actionExpr{
				pos: position{line: 902, col: 5, offset: 39169},
				run: (*parser).callonQuoteBlockContent1,
				expr: &seqExpr{
					pos: position{line: 902, col: 5, offset: 39169},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 902, col: 5, offset: 39169},
							expr: &seqExpr{
								pos: position{line: 895, col: 24, offset: 38845},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 24, offset: 38845},
										val:        "____",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 895, col: 31, offset: 38852},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonQuoteBlockContent9,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1101, col: 8, offset: 46086},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1097, col: 12, offset: 46046},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1097, col: 21, offset: 46055},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1099, col: 8, offset: 46075},
												expr: &anyMatcher{
													line: 1099, col: 9, offset: 46076,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 902, col: 26, offset: 39190},
							expr: &notExpr{
								pos: position{line: 1099, col: 8, offset: 46075},
								expr: &anyMatcher{
									line: 1099, col: 9, offset: 46076,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 902, col: 31, offset: 39195},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 902, col: 40, offset: 39204},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlock",
			pos:  position{line: 911, col: 1, offset: 39502},
			expr: &actionExpr{
				pos: position{line: 911, col: 15, offset: 39516},
				run: (*parser).callonVerseBlock1,
				expr: &seqExpr{
					pos: position{line: 911, col: 15, offset: 39516},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 911, col: 15, offset: 39516},
							label: "attributes",
							expr: &seqExpr{
								pos: position{line: 911, col: 27, offset: 39528},
								exprs: []interface{}{
									&choiceExpr{
										pos: position{line: 217, col: 20, offset: 7857},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 217, col: 20, offset: 7857},
												run: (*parser).callonVerseBlock6,
												expr: &seqExpr{
													pos: position{line: 217, col: 20, offset: 7857},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 217, col: 20, offset: 7857},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 217, col: 24, offset: 7861},
															label: "kind",
															expr: &actionExpr{
																pos: position{line: 229, col: 14, offset: 8391},
																run: (*parser).callonVerseBlock10,
																expr: &litMatcher{
																	pos:        position{line: 229, col: 14, offset: 8391},
																	val:        "verse",
																	ignoreCase: false,
																},
															},
														},
														&zeroOrMoreExpr{
															pos: position{line: 217, col: 41, offset: 7878},
															expr: &choiceExpr{
																pos: position{line: 1093, col: 7, offset: 45984},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1093, col: 7, offset: 45984},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1093, col: 13, offset: 45990},
																		run: (*parser).callonVerseBlock15,
																		expr: &litMatcher{
																			pos:        position{line: 1093, col: 13, offset: 45990},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 217, col: 45, offset: 7882},
															val:        ",",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 217, col: 49, offset: 7886},
															label: "author",
															expr: &actionExpr{
																pos: position{line: 233, col: 16, offset: 8450},
																run: (*parser).callonVerseBlock19,
																expr: &zeroOrMoreExpr{
																	pos: position{line: 233, col: 16, offset: 8450},
																	expr: &seqExpr{
																		pos: position{line: 233, col: 17, offset: 8451},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 233, col: 17, offset: 8451},
																				expr: &choiceExpr{
																					pos: position{line: 1101, col: 8, offset: 46086},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1097, col: 12, offset: 46046},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1097, col: 21, offset: 46055},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1099, col: 8, offset: 46075},
																							expr: &anyMatcher{
																								line: 1099, col: 9, offset: 46076,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 233, col: 22, offset: 8456},
																				expr: &litMatcher{
																					pos:        position{line: 233, col: 23, offset: 8457},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 233, col: 27, offset: 8461},
																				expr: &litMatcher{
																					pos:        position{line: 233, col: 28, offset: 8462},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 233, col: 32, offset: 8466,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 217, col: 70, offset: 7907},
															val:        ",",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 217, col: 74, offset: 7911},
															label: "title",
															expr: &actionExpr{
																pos: position{line: 237, col: 15, offset: 8520},
																run: (*parser).callonVerseBlock35,
																expr: &zeroOrMoreExpr{
																	pos: position{line: 237, col: 15, offset: 8520},
																	expr: &seqExpr{
																		pos: position{line: 237, col: 16, offset: 8521},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 237, col: 16, offset: 8521},
																				expr: &choiceExpr{
																					pos: position{line: 1101, col: 8, offset: 46086},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1097, col: 12, offset: 46046},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1097, col: 21, offset: 46055},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1099, col: 8, offset: 46075},
																							expr: &anyMatcher{
																								line: 1099, col: 9, offset: 46076,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 237, col: 21, offset: 8526},
																				expr: &litMatcher{
																					pos:        position{line: 237, col: 22, offset: 8527},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 237, col: 26, offset: 8531},
																				expr: &litMatcher{
																					pos:        position{line: 237, col: 27, offset: 8532},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 237, col: 31, offset: 8536,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 217, col: 93, offset: 7930},
															val:        "]",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 217, col: 97, offset: 7934},
															expr: &choiceExpr{
																pos: position{line: 1093, col: 7, offset: 45984},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1093, col: 7, offset: 45984},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1093, col: 13, offset: 45990},
																		run: (*parser).callonVerseBlock53,
																		expr: &litMatcher{
																			pos:        position{line: 1093, col: 13, offset: 45990},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1101, col: 8, offset: 46086},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1099, col: 8, offset: 46075},
																	expr: &anyMatcher{
																		line: 1099, col: 9, offset: 46076,
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 221, col: 5, offset: 8081},
												run: (*parser).callonVerseBlock60,
												expr: &seqExpr{
													pos: position{line: 221, col: 5, offset: 8081},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 221, col: 5, offset: 8081},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 221, col: 9, offset: 8085},
															label: "kind",
															expr: &actionExpr{
																pos: position{line: 229, col: 14, offset: 8391},
																run: (*parser).callonVerseBlock64,
																expr: &litMatcher{
																	pos:        position{line: 229, col: 14, offset: 8391},
																	val:        "verse",
																	ignoreCase: false,
																},
															},
														},
														&zeroOrMoreExpr{
															pos: position{line: 221, col: 26, offset: 8102},
															expr: &choiceExpr{
																pos: position{line: 1093, col: 7, offset: 45984},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1093, col: 7, offset: 45984},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1093, col: 13, offset: 45990},
																		run: (*parser).callonVerseBlock69,
																		expr: &litMatcher{
																			pos:        position{line: 1093, col: 13, offset: 45990},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 221, col: 30, offset: 8106},
															val:        ",",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 221, col: 34, offset: 8110},
															label: "author",
															expr: &actionExpr{
																pos: position{line: 233, col: 16, offset: 8450},
																run: (*parser).callonVerseBlock73,
																expr: &zeroOrMoreExpr{
																	pos: position{line: 233, col: 16, offset: 8450},
																	expr: &seqExpr{
																		pos: position{line: 233, col: 17, offset: 8451},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 233, col: 17, offset: 8451},
																				expr: &choiceExpr{
																					pos: position{line: 1101, col: 8, offset: 46086},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1097, col: 12, offset: 46046},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1097, col: 21, offset: 46055},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1099, col: 8, offset: 46075},
																							expr: &anyMatcher{
																								line: 1099, col: 9, offset: 46076,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 233, col: 22, offset: 8456},
																				expr: &litMatcher{
																					pos:        position{line: 233, col: 23, offset: 8457},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 233, col: 27, offset: 8461},
																				expr: &litMatcher{
																					pos:        position{line: 233, col: 28, offset: 8462},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 233, col: 32, offset: 8466,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 221, col: 55, offset: 8131},
															val:        "]",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 221, col: 59, offset: 8135},
															expr: &choiceExpr{
																pos: position{line: 1093, col: 7, offset: 45984},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1093, col: 7, offset: 45984},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1093, col: 13, offset: 45990},
																		run: (*parser).callonVerseBlock91,
																		expr: &litMatcher{
																			pos:        position{line: 1093, col: 13, offset: 45990},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1101, col: 8, offset: 46086},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1099, col: 8, offset: 46075},
																	expr: &anyMatcher{
																		line: 1099, col: 9, offset: 46076,
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 225, col: 5, offset: 8270},
												run: (*parser).callonVerseBlock98,
												expr: &seqExpr{
													pos: position{line: 225, col: 5, offset: 8270},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 225, col: 5, offset: 8270},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 225, col: 9, offset: 8274},
															label: "kind",
															expr: &actionExpr{
																pos: position{line: 229, col: 14, offset: 8391},
																run: (*parser).callonVerseBlock102,
																expr: &litMatcher{
																	pos:        position{line: 229, col: 14, offset: 8391},
																	val:        "verse",
																	ignoreCase: false,
																},
															},
														},
														&zeroOrMoreExpr{
															pos: position{line: 225, col: 26, offset: 8291},
															expr: &choiceExpr{
																pos: position{line: 1093, col: 7, offset: 45984},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1093, col: 7, offset: 45984},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1093, col: 13, offset: 45990},
																		run: (*parser).callonVerseBlock107,
																		expr: &litMatcher{
																			pos:        position{line: 1093, col: 13, offset: 45990},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 225, col: 30, offset: 8295},
															val:        "]",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 225, col: 34, offset: 8299},
															expr: &choiceExpr{
																pos: position{line: 1093, col: 7, offset: 45984},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1093, col: 7, offset: 45984},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1093, col: 13, offset: 45990},
																		run: (*parser).callonVerseBlock113,
																		expr: &litMatcher{
																			pos:        position{line: 1093, col: 13, offset: 45990},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1101, col: 8, offset: 46086},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1097, col: 12, offset: 46046},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1097, col: 21, offset: 46055},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1099, col: 8, offset: 46075},
																	expr: &anyMatcher{
																		line: 1099, col: 9, offset: 46076,
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&zeroOrMoreExpr{
										pos: position{line: 911, col: 43, offset: 39544},
										expr: &actionExpr{
											pos: position{line: 136, col: 21, offset: 5092},
											run: (*parser).callonVerseBlock121,
											expr: &seqExpr{
												pos: position{line: 136, col: 21, offset: 5092},
												exprs: []interface{}{
													&labeledExpr{
														pos:   position{line: 136, col: 21, offset: 5092},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 136, col: 27, offset: 5098},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 143, col: 14, offset: 5448},
																	run: (*parser).callonVerseBlock125,
																	expr: &seqExpr{
																		pos: position{line: 143, col: 14, offset: 5448},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 143, col: 14, offset: 5448},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 143, col: 19, offset: 5453},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1079, col: 7, offset: 45702},
																					run: (*parser).callonVerseBlock129,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1079, col: 7, offset: 45702},
																						expr: &seqExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1079, col: 8, offset: 45703},
																									expr: &choiceExpr{
																										pos: position{line: 1097, col: 12, offset: 46046},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1097, col: 12, offset: 46046},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1097, col: 21, offset: 46055},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 17, offset: 45712},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonVerseBlock139,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 21, offset: 45716},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 22, offset: 45717},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 26, offset: 45721},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 27, offset: 45722},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 31, offset: 45726},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 32, offset: 45727},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 37, offset: 45732},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 38, offset: 45733},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 43, offset: 45738},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 44, offset: 45739},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1079, col: 48, offset: 45743,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 143, col: 27, offset: 5461},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 145, col: 5, offset: 5515},
																	run: (*parser).callonVerseBlock153,
																	expr: &seqExpr{
																		pos: position{line: 145, col: 5, offset: 5515},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 145, col: 5, offset: 5515},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 145, col: 10, offset: 5520},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1079, col: 7, offset: 45702},
																					run: (*parser).callonVerseBlock157,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1079, col: 7, offset: 45702},
																						expr: &seqExpr{
																							pos: position{line: 1079, col: 8, offset: 45703},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1079, col: 8, offset: 45703},
																									expr: &choiceExpr{
																										pos: position{line: 1097, col: 12, offset: 46046},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1097, col: 12, offset: 46046},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1097, col: 21, offset: 46055},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 17, offset: 45712},
																									expr: &choiceExpr{
																										pos: position{line: 1093, col: 7, offset: 45984},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1093, col: 7, offset: 45984},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1093, col: 13, offset: 45990},
																												run: (*parser).callonVerseBlock167,
																												expr: &litMatcher{
																													pos:        position{line: 1093, col: 13, offset: 45990},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 21, offset: 45716},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 22, offset: 45717},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 26, offset: 45721},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 27, offset: 45722},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 31, offset: 45726},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 32, offset: 45727},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 37, offset: 45732},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 38, offset: 45733},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1079, col: 43, offset: 45738},
																									expr: &litMatcher{
																										pos:        position{line: 1079, col: 44, offset: 45739},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1079, col: 48, offset: 45743,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 145, col: 18, offset: 5528},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 155, col: 17, offset: 5831},
																	run: (*parser).callonVerseBlock181,
																	expr: &seqExpr{
																		pos: position{line: 155, col: 17, offset: 5831},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 155, col: 17, offset: 5831},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 155, col: 21, offset: 5835},
																				expr: &litMatcher{
																					pos:        position{line: 155, col: 22, offset: 5836},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 155, col: 26, offset: 5840},
																				expr: &choiceExpr{
																					pos: position{line: 1093, col: 7, offset: 45984},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1093, col: 7, offset: 45984},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1093, col: 13, offset: 45990},
																							run: (*parser).callonVerseBlock189,
																							expr: &litMatcher{
																								pos:        position{line: 1093, col: 13, offset: 45990},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 155, col: 30, offset: 5844},
																				label: "title",
																				expr: &actionExpr{
																					pos: position{line: 159, col: 24, offset: 5949},
																					run: (*parser).callonVerseBlock192,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 159, col: 24, offset: 5949},
																						expr: &seqExpr{
																							pos: position{line: 159, col: 25, offset: 5950},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 159, col: 25, offset: 5950},
																									expr: &choiceExpr{
																										pos: position{line: 1097, col: 12, offset: 46046},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1097, col: 12, offset: 46046},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1097, col: 21, offset: 46055},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 159, col: 34, offset: 5959,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 165, col: 16, offset: 6108},
																	run: (*parser).callonVerseBlock200,
																	expr: &seqExpr{
																		pos: position{line: 165, col: 16, offset: 6108},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 165, col: 16, offset: 6108},
																				val:        "[.",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 165, col: 21, offset: 6113},
																				expr: &choiceExpr{
																					pos: position{line: 1093, col: 7, offset: 45984},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1093, col: 7, offset: 45984},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1093, col: 13, offset: 45990},
																							run: (*parser).callonVerseBlock206,
																							expr: &litMatcher{
																								pos:        position{line: 1093, col: 13, offset: 45990},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 165, col: 25, offset: 6117},
																				label: "role",
																				expr: &actionExpr{
																					pos: position{line: 169, col: 23, offset: 6221},
																					run: (*parser).callonVerseBlock209,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 169, col: 23, offset: 6221},
																						expr: &seqExpr{
																							pos: position{line: 169, col: 24, offset: 6222},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 169, col: 24, offset: 6222},
																									expr: &choiceExpr{
																										pos: position{line: 1097, col: 12, offset: 46046},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1097, col: 12, offset: 46046},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1097, col: 21, offset: 46055},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 169, col: 33, offset: 6231},
																									expr: &litMatcher{
																										pos:        position{line: 169, col: 34, offset: 6232},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 169, col: 38, offset: 6236,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 165, col: 51, offset: 6143},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 174, col: 30, offset: 6385},
																	run: (*parser).callonVerseBlock220,
																	expr: &seqExpr{
																		pos: position{line: 174, col: 30, offset: 6385},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 174, col: 30, offset: 6385},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 174, col: 34, offset: 6389},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 507, col: 19, offset: 19712},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 507, col: 19, offset: 19712},
																							run: (*parser).callonVerseBlock225,
																							expr: &litMatcher{
																								pos:        position{line: 507, col: 19, offset: 19712},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 509, col: 5, offset: 19750},
																							run: (*parser).callonVerseBlock227,
																							expr: &litMatcher{
																								pos:        position{line: 509, col: 5, offset: 19750},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 511, col: 5, offset: 19790},
																							run: (*parser).callonVerseBlock229,
																							expr: &litMatcher{
																								pos:        position{line: 511, col: 5, offset: 19790},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 513, col: 5, offset: 19840},
																							run: (*parser).callonVerseBlock231,
																							expr: &litMatcher{
																								pos:        position{line: 513, col: 5, offset: 19840},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 515, col: 5, offset: 19886},
																							run: (*parser).callonVerseBlock233,
																							expr: &litMatcher{
																								pos:        position{line: 515, col: 5, offset: 19886},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 174, col: 53, offset: 6408},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 197, col: 21, offset: 7157},
																	run: (*parser).callonVerseBlock236,
																	expr: &litMatcher{
																		pos:        position{line: 197, col: 21, offset: 7157},
																		val:        "[horizontal]",
																		ignoreCase: false,
																	},
																},
																&actionExpr{
																	pos: position{line: 179, col: 19, offset: 6569},
																	run: (*parser).callonVerseBlock238,
																	expr: &seqExpr{
																		pos: position{line: 179, col: 19, offset: 6569},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 179, col: 19, offset: 6569},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 179, col: 23, offset: 6573},
																				expr: &choiceExpr{
																					pos: position{line: 1093, col: 7, offset: 45984},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1093, col: 7, offset: 45984},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1093, col: 13, offset: 45990},
																							run: (*parser).callonVerseBlock244,
																							expr: &litMatcher{
																								pos:        position{line: 1093, col: 13, offset: 45990},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 179, col: 27, offset: 6577},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 179, col: 38, offset: 6588},
																					expr: &choiceExpr{
																						pos: position{line: 183, col: 21, offset: 6701},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 183, col: 21, offset: 6701},
																								run: (*parser).callonVerseBlock249,
																								expr: &seqExpr{
																									pos: position{line: 183, col: 21, offset: 6701},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 183, col: 21, offset: 6701},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												run: (*parser).callonVerseBlock252,
																												expr: &seqExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															expr: &actionExpr{
																																pos: position{line: 213, col: 14, offset: 7794},
																																run: (*parser).callonVerseBlock255,
																																expr: &litMatcher{
																																	pos:        position{line: 213, col: 14, offset: 7794},
																																	val:        "quote",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 189, col: 28, offset: 6972},
																															expr: &actionExpr{
																																pos: position{line: 229, col: 14, offset: 8391},
																																run: (*parser).callonVerseBlock258,
																																expr: &litMatcher{
																																	pos:        position{line: 229, col: 14, offset: 8391},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 189, col: 39, offset: 6983},
																															expr: &actionExpr{
																																pos: position{line: 1039, col: 16, offset: 44628},
																																run: (*parser).callonVerseBlock261,
																																expr: &litMatcher{
																																	pos:        position{line: 1039, col: 16, offset: 44628},
																																	val:        "literal",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 189, col: 52, offset: 6996},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 189, col: 56, offset: 7000},
																																expr: &seqExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 189, col: 57, offset: 7001},
																																			expr: &litMatcher{
																																				pos:        position{line: 189, col: 58, offset: 7002},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 189, col: 62, offset: 7006},
																																			expr: &litMatcher{
																																				pos:        position{line: 189, col: 63, offset: 7007},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 189, col: 67, offset: 7011},
																																			expr: &litMatcher{
																																				pos:        position{line: 189, col: 68, offset: 7012},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 189, col: 72, offset: 7016,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 183, col: 40, offset: 6720},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 183, col: 44, offset: 6724},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 193, col: 19, offset: 7075},
																												run: (*parser).callonVerseBlock275,
																												expr: &labeledExpr{
																													pos:   position{line: 193, col: 19, offset: 7075},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 193, col: 25, offset: 7081},
																														expr: &seqExpr{
																															pos: position{line: 193, col: 26, offset: 7082},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 193, col: 26, offset: 7082},
																																	expr: &litMatcher{
																																		pos:        position{line: 193, col: 27, offset: 7083},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 193, col: 31, offset: 7087},
																																	expr: &litMatcher{
																																		pos:        position{line: 193, col: 32, offset: 7088},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 193, col: 36, offset: 7092},
																																	expr: &litMatcher{
																																		pos:        position{line: 193, col: 37, offset: 7093},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 193, col: 41, offset: 7097,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 183, col: 67, offset: 6747},
																											expr: &litMatcher{
																												pos:        position{line: 183, col: 67, offset: 6747},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 183, col: 72, offset: 6752},
																											expr: &choiceExpr{
																												pos: position{line: 1093, col: 7, offset: 45984},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1093, col: 7, offset: 45984},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1093, col: 13, offset: 45990},
																														run: (*parser).callonVerseBlock291,
																														expr: &litMatcher{
																															pos:        position{line: 1093, col: 13, offset: 45990},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 185, col: 5, offset: 6836},
																								run: (*parser).callonVerseBlock293,
																								expr: &seqExpr{
																									pos: position{line: 185, col: 5, offset: 6836},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 185, col: 5, offset: 6836},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 189, col: 17, offset: 6961},
																												run: (*parser).callonVerseBlock296,
																												expr: &seqExpr{
																													pos: position{line: 189, col: 17, offset: 6961},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 189, col: 17, offset: 6961},
																															expr: &actionExpr{
																																pos: position{line: 213, col: 14, offset: 7794},
																																run: (*parser).callonVerseBlock299,
																																expr: &litMatcher{
																																	pos:        position{line: 213, col: 14, offset: 7794},
																																	val:        "quote",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 189, col: 28, offset: 6972},
																															expr: &actionExpr{
																																pos: position{line: 229, col: 14, offset: 8391},
																																run: (*parser).callonVerseBlock302,
																																expr: &litMatcher{
																																	pos:        position{line: 229, col: 14, offset: 8391},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 189, col: 39, offset: 6983},
																															expr: &actionExpr{
																																pos: position{line: 1039, col: 16, offset: 44628},
																																run: (*parser).callonVerseBlock305,
																																expr: &litMatcher{
																																	pos:        position{line: 1039, col: 16, offset: 44628},
																																	val:        "literal",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 189, col: 52, offset: 6996},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 189, col: 56, offset: 7000},
																																expr: &seqExpr{
																																	pos: position{line: 189, col: 57, offset: 7001},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 189, col: 57, offset: 7001},
																																			expr: &litMatcher{
																																				pos:        position{line: 189, col: 58, offset: 7002},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 189, col: 62, offset: 7006},
																																			expr: &litMatcher{
																																				pos:        position{line: 189, col: 63, offset: 7007},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 189, col: 67, offset: 7011},
																																			expr: &litMatcher{
																																				pos:        position{line: 189, col: 68, offset: 7012},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 189, col: 72, offset: 7016,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 185, col: 24, offset: 6855},
																											expr: &litMatcher{
																												pos:        position{line: 185, col: 24, offset: 6855},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 185, col: 29, offset: 6860},
																											expr: &choiceExpr{
																												pos: position{line: 1093, col: 7, offset: 45984},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1093, col: 7, offset: 45984},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1093, col: 13, offset: 45990},
																														run: (*parser).callonVerseBlock322,
																														expr: &litMatcher{
																															pos:        position{line: 1093, col: 13, offset: 45990},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 179, col: 59, offset: 6609},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 136, col: 131, offset: 5202},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonVerseBlock328,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1101, col: 8, offset: 46086},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1097, col: 12, offset: 46046},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1097, col: 21, offset: 46055},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1099, col: 8, offset: 46075},
																expr: &anyMatcher{
																	line: 1099, col: 9, offset: 46076,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 895, col: 24, offset: 38845},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 895, col: 31, offset: 38852},
							expr: &choiceExpr{
								pos: position{line: 1093, col: 7, offset: 45984},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1093, col: 7, offset: 45984},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1093, col: 13, offset: 45990},
										run: (*parser).callonVerseBlock339,
										expr: &litMatcher{
											pos:        position{line: 1093, col: 13, offset: 45990},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 911, col: 82, offset: 39583},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 911, col: 90, offset: 39591},
								expr: &ruleRefExpr{
									pos:  position{line: 911, col: 91, offset: 39592},
									name: "VerseBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 911, col: 112, offset: 39613},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 895, col: 24, offset: 38845},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 895, col: 24, offset: 38845},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 895, col: 31, offset: 38852},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonVerseBlock355,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockContent",
			pos:  position{line: 915, col: 1, offset: 39758},
			expr: &actionExpr{
				pos: position{line: 915, col: 22, offset: 39779},
				run: (*parser).callonVerseBlockContent1,
				expr: &labeledExpr{
					pos:   position{line: 915, col: 22, offset: 39779},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 915, col: 28, offset: 39785},
						expr: &ruleRefExpr{
							pos:  position{line: 915, col: 29, offset: 39786},
							name: "VerseBlockLine",
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLine",
			pos:  position{line: 919, col: 1, offset: 39866},
			expr: &actionExpr{
				pos: position{line: 919, col: 19, offset: 39884},
				run: (*parser).callonVerseBlockLine1,
				expr: &seqExpr{
					pos: position{line: 919, col: 19, offset: 39884},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 919, col: 19, offset: 39884},
							expr: &seqExpr{
								pos: position{line: 895, col: 24, offset: 38845},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 24, offset: 38845},
										val:        "____",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 895, col: 31, offset: 38852},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonVerseBlockLine9,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1101, col: 8, offset: 46086},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1097, col: 12, offset: 46046},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1097, col: 21, offset: 46055},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1099, col: 8, offset: 46075},
												expr: &anyMatcher{
													line: 1099, col: 9, offset: 46076,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 919, col: 40, offset: 39905},
							expr: &notExpr{
								pos: position{line: 1099, col: 8, offset: 46075},
								expr: &anyMatcher{
									line: 1099, col: 9, offset: 46076,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 919, col: 45, offset: 39910},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 919, col: 51, offset: 39916},
								name: "VerseBlockLineContent",
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLineContent",
			pos:  position{line: 923, col: 1, offset: 39992},
			expr: &actionExpr{
				pos: position{line: 923, col: 26, offset: 40017},
				run: (*parser).callonVerseBlockLineContent1,
				expr: &labeledExpr{
					pos:   position{line: 923, col: 26, offset: 40017},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 923, col: 35, offset: 40026},
						expr: &seqExpr{
							pos: position{line: 923, col: 36, offset: 40027},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 923, col: 36, offset: 40027},
									expr: &seqExpr{
										pos: position{line: 895, col: 24, offset: 38845},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 24, offset: 38845},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 895, col: 31, offset: 38852},
												expr: &choiceExpr{
													pos: position{line: 1093, col: 7, offset: 45984},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1093, col: 7, offset: 45984},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1093, col: 13, offset: 45990},
															run: (*parser).callonVerseBlockLineContent11,
															expr: &litMatcher{
																pos:        position{line: 1093, col: 13, offset: 45990},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 923, col: 57, offset: 40048},
									expr: &choiceExpr{
										pos: position{line: 1101, col: 8, offset: 46086},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1097, col: 12, offset: 46046},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1097, col: 21, offset: 46055},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1099, col: 8, offset: 46075},
												expr: &anyMatcher{
													line: 1099, col: 9, offset: 46076,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 923, col: 62, offset: 40053},
									expr: &choiceExpr{
										pos: position{line: 1093, col: 7, offset: 45984},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonVerseBlockLineContent27,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 923, col: 66, offset: 40057},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 923, col: 80, offset: 40071},
									expr: &choiceExpr{
										pos: position{line: 1093, col: 7, offset: 45984},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonVerseBlockLineContent33,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlock",
			pos:  position{line: 932, col: 1, offset: 40454},
			expr: &actionExpr{
				pos: position{line: 932, col: 17, offset: 40470},
				run: (*parser).callonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 932, col: 17, offset: 40470},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 930, col: 26, offset: 40438},
							val:        "****",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 930, col: 33, offset: 40445},
							expr: &choiceExpr{
								pos: position{line: 1093, col: 7, offset: 45984},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1093, col: 7, offset: 45984},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1093, col: 13, offset: 45990},
										run: (*parser).callonSidebarBlock7,
										expr: &litMatcher{
											pos:        position{line: 1093, col: 13, offset: 45990},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 932, col: 39, offset: 40492},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 932, col: 47, offset: 40500},
								expr: &ruleRefExpr{
									pos:  position{line: 932, col: 48, offset: 40501},
									name: "SidebarBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 932, col: 72, offset: 40525},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 930, col: 26, offset: 40438},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 930, col: 26, offset: 40438},
											val:        "****",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 930, col: 33, offset: 40445},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonSidebarBlock23,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlockContent",
			pos:  position{line: 936, col: 1, offset: 40646},
			expr: &choiceExpr{
				pos: position{line: 936, col: 24, offset: 40669},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 936, col: 24, offset: 40669},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 936, col: 31, offset: 40676},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 1060, col: 14, offset: 45168},
						run: (*parser).callonSidebarBlockContent4,
						expr: &seqExpr{
							pos: position{line: 1060, col: 14, offset: 45168},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 1060, col: 14, offset: 45168},
									expr: &notExpr{
										pos: position{line: 1099, col: 8, offset: 46075},
										expr: &anyMatcher{
											line: 1099, col: 9, offset: 46076,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 1060, col: 19, offset: 45173},
									expr: &choiceExpr{
										pos: position{line: 1093, col: 7, offset: 45984},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1093, col: 7, offset: 45984},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1093, col: 13, offset: 45990},
												run: (*parser).callonSidebarBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 1093, col: 13, offset: 45990},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1101, col: 8, offset: 46086},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1097, col: 12, offset: 46046},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1097, col: 21, offset: 46055},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1099, col: 8, offset: 46075},
											expr: &anyMatcher{
												line: 1099, col: 9, offset: 46076,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 936, col: 60, offset: 40705},
						name: "NonSidebarBlock",
					},
				},
			},
		},
		{
			name: "NonSidebarBlock",
			pos:  position{line: 938, col: 1, offset: 40722},
			expr: &actionExpr{
				pos: position{line: 938, col: 20, offset: 40741},
				run: (*parser).callonNonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 938, col: 20, offset: 40741},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 938, col: 20, offset: 40741},
							expr: &ruleRefExpr{
								pos:  position{line: 938, col: 21, offset: 40742},
								name: "SidebarBlock",
							},
						},
						&labeledExpr{
							pos:   position{line: 938, col: 34, offset: 40755},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 938, col: 43, offset: 40764},
								name: "DelimitedBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "Table",
			pos:  position{line: 945, col: 1, offset: 40997},
			expr: &actionExpr{
				pos: position{line: 945, col: 10, offset: 41006},
				run: (*parser).callonTable1,
				expr: &seqExpr{
					pos: position{line: 945, col: 10, offset: 41006},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 954, col: 19, offset: 41272},
							val:        "|===",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 954, col: 26, offset: 41279},
							expr: &choiceExpr{
								pos: position{line: 1093, col: 7, offset: 45984},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1093, col: 7, offset: 45984},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1093, col: 13, offset: 45990},
										run: (*parser).callonTable7,
										expr: &litMatcher{
											pos:        position{line: 1093, col: 13, offset: 45990},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 946, col: 9, offset: 41029},
							label: "header",
							expr: &zeroOrOneExpr{
								pos: position{line: 946, col: 16, offset: 41036},
								expr: &ruleRefExpr{
									pos:  position{line: 946, col: 17, offset: 41037},
									name: "TableLineHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 947, col: 9, offset: 41063},
							label: "lines",
							expr: &zeroOrMoreExpr{
								pos: position{line: 947, col: 15, offset: 41069},
								expr: &ruleRefExpr{
									pos:  position{line: 947, col: 16, offset: 41070},
									name: "TableLine",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 948, col: 10, offset: 41091},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 954, col: 19, offset: 41272},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 954, col: 19, offset: 41272},
											val:        "|===",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 954, col: 26, offset: 41279},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonTable26,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLineHeader",
			pos:  position{line: 957, col: 1, offset: 41351},
			expr: &actionExpr{
				pos: position{line: 957, col: 20, offset: 41370},
				run: (*parser).callonTableLineHeader1,
				expr: &seqExpr{
					pos: position{line: 957, col: 20, offset: 41370},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 957, col: 20, offset: 41370},
							expr: &seqExpr{
								pos: position{line: 954, col: 19, offset: 41272},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 954, col: 19, offset: 41272},
										val:        "|===",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 954, col: 26, offset: 41279},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonTableLineHeader9,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1101, col: 8, offset: 46086},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1097, col: 12, offset: 46046},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1097, col: 21, offset: 46055},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1099, col: 8, offset: 46075},
												expr: &anyMatcher{
													line: 1099, col: 9, offset: 46076,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 957, col: 36, offset: 41386},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 957, col: 42, offset: 41392},
								expr: &ruleRefExpr{
									pos:  position{line: 957, col: 43, offset: 41393},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
						&actionExpr{
							pos: position{line: 1060, col: 14, offset: 45168},
							run: (*parser).callonTableLineHeader24,
							expr: &seqExpr{
								pos: position{line: 1060, col: 14, offset: 45168},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 1060, col: 14, offset: 45168},
										expr: &notExpr{
											pos: position{line: 1099, col: 8, offset: 46075},
											expr: &anyMatcher{
												line: 1099, col: 9, offset: 46076,
											},
										},
									},
									&zeroOrMoreExpr{
										pos: position{line: 1060, col: 19, offset: 45173},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonTableLineHeader32,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1101, col: 8, offset: 46086},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1097, col: 12, offset: 46046},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1097, col: 21, offset: 46055},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1099, col: 8, offset: 46075},
												expr: &anyMatcher{
													line: 1099, col: 9, offset: 46076,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLine",
			pos:  position{line: 961, col: 1, offset: 41477},
			expr: &actionExpr{
				pos: position{line: 961, col: 14, offset: 41490},
				run: (*parser).callonTableLine1,
				expr: &seqExpr{
					pos: position{line: 961, col: 14, offset: 41490},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 961, col: 14, offset: 41490},
							expr: &seqExpr{
								pos: position{line: 954, col: 19, offset: 41272},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 954, col: 19, offset: 41272},
										val:        "|===",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 954, col: 26, offset: 41279},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonTableLine9,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1101, col: 8, offset: 46086},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1097, col: 12, offset: 46046},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1097, col: 21, offset: 46055},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1099, col: 8, offset: 46075},
												expr: &anyMatcher{
													line: 1099, col: 9, offset: 46076,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 961, col: 30, offset: 41506},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 961, col: 36, offset: 41512},
								expr: &ruleRefExpr{
									pos:  position{line: 961, col: 37, offset: 41513},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1101, col: 8, offset: 46086},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1097, col: 12, offset: 46046},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1097, col: 21, offset: 46055},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1099, col: 8, offset: 46075},
									expr: &anyMatcher{
										line: 1099, col: 9, offset: 46076,
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 961, col: 53, offset: 41529},
							expr: &actionExpr{
								pos: position{line: 1060, col: 14, offset: 45168},
								run: (*parser).callonTableLine25,
								expr: &seqExpr{
									pos: position{line: 1060, col: 14, offset: 45168},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1060, col: 14, offset: 45168},
											expr: &notExpr{
												pos: position{line: 1099, col: 8, offset: 46075},
												expr: &anyMatcher{
													line: 1099, col: 9, offset: 46076,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1060, col: 19, offset: 45173},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonTableLine33,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1101, col: 8, offset: 46086},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1099, col: 8, offset: 46075},
													expr: &anyMatcher{
														line: 1099, col: 9, offset: 46076,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableCell",
			pos:  position{line: 965, col: 1, offset: 41598},
			expr: &actionExpr{
				pos: position{line: 965, col: 14, offset: 41611},
				run: (*parser).callonTableCell1,
				expr: &seqExpr{
					pos: position{line: 965, col: 14, offset: 41611},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 952, col: 23, offset: 41245},
							val:        "|",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 952, col: 27, offset: 41249},
							expr: &choiceExpr{
								pos: position{line: 1093, col: 7, offset: 45984},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1093, col: 7, offset: 45984},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1093, col: 13, offset: 45990},
										run: (*parser).callonTableCell7,
										expr: &litMatcher{
											pos:        position{line: 1093, col: 13, offset: 45990},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 965, col: 33, offset: 41630},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 965, col: 42, offset: 41639},
								expr: &seqExpr{
									pos: position{line: 965, col: 43, offset: 41640},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 965, col: 43, offset: 41640},
											expr: &seqExpr{
												pos: position{line: 952, col: 23, offset: 41245},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 952, col: 23, offset: 41245},
														val:        "|",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 952, col: 27, offset: 41249},
														expr: &choiceExpr{
															pos: position{line: 1093, col: 7, offset: 45984},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1093, col: 7, offset: 45984},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1093, col: 13, offset: 45990},
																	run: (*parser).callonTableCell18,
																	expr: &litMatcher{
																		pos:        position{line: 1093, col: 13, offset: 45990},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 965, col: 63, offset: 41660},
											expr: &choiceExpr{
												pos: position{line: 1101, col: 8, offset: 46086},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1097, col: 12, offset: 46046},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1097, col: 21, offset: 46055},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1099, col: 8, offset: 46075},
														expr: &anyMatcher{
															line: 1099, col: 9, offset: 46076,
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 965, col: 68, offset: 41665},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonTableCell29,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&ruleRefExpr{
											pos:  position{line: 965, col: 72, offset: 41669},
											name: "InlineElement",
										},
										&zeroOrMoreExpr{
											pos: position{line: 965, col: 86, offset: 41683},
											expr: &choiceExpr{
												pos: position{line: 1093, col: 7, offset: 45984},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1093, col: 7, offset: 45984},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1093, col: 13, offset: 45990},
														run: (*parser).callonTableCell35,
														expr: &litMatcher{
															pos:        position{line: 1093, col: 13, offset: 45990},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Word",
			pos:  position{line: 1071, col: 1, offset: 45387},
			expr: &actionExpr{
				pos: position{line: 1071, col: 9, offset: 45395},
				run: (*parser).callonWord1,
				expr: &choiceExpr{
					pos: position{line: 1071, col: 10, offset: 45396},
					alternatives: []interface{}{
						&oneOrMoreExpr{
							pos: position{line: 1071, col: 10, offset: 45396},
							expr: &seqExpr{
								pos: position{line: 1071, col: 11, offset: 45397},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 1071, col: 11, offset: 45397},
										expr: &choiceExpr{
											pos: position{line: 1097, col: 12, offset: 46046},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1097, col: 12, offset: 46046},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1097, col: 21, offset: 46055},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 1071, col: 20, offset: 45406},
										expr: &choiceExpr{
											pos: position{line: 1093, col: 7, offset: 45984},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1093, col: 7, offset: 45984},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1093, col: 13, offset: 45990},
													run: (*parser).callonWord12,
													expr: &litMatcher{
														pos:        position{line: 1093, col: 13, offset: 45990},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 1071, col: 24, offset: 45410},
										expr: &charClassMatcher{
											pos:        position{line: 1069, col: 16, offset: 45364},
											val:        "[()[]]",
											chars:      []rune{'(', ')', '[', ']'},
											ignoreCase: false,
											inverted:   false,
										},
									},
									&notExpr{
										pos: position{line: 1071, col: 37, offset: 45423},
										expr: &litMatcher{
											pos:        position{line: 1071, col: 38, offset: 45424},
											val:        ".",
											ignoreCase: false,
										},
									},
									&notExpr{
										pos: position{line: 1071, col: 42, offset: 45428},
										expr: &ruleRefExpr{
											pos:  position{line: 1071, col: 43, offset: 45429},
											name: "SubScriptOrSuperScriptText",
										},
									},
									&anyMatcher{
										line: 1071, col: 70, offset: 45456,
									},
								},
							},
						},
						&oneOrMoreExpr{
							pos: position{line: 1071, col: 77, offset: 45463},
							expr: &litMatcher{
								pos:        position{line: 1071, col: 77, offset: 45463},
								val:        ".",
								ignoreCase: false,
							},
						},
					},
				},
			},
		},
		{
			name: "WS",
			pos:  position{line: 1093, col: 1, offset: 45978},
			expr: &choiceExpr{
				pos: position{line: 1093, col: 7, offset: 45984},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 1093, col: 7, offset: 45984},
						val:        " ",
						ignoreCase: false,
					},
					&actionExpr{
						pos: position{line: 1093, col: 13, offset: 45990},
						run: (*parser).callonWS3,
						expr: &litMatcher{
							pos:        position{line: 1093, col: 13, offset: 45990},
							val:        "\t",
							ignoreCase: false,
						},
					},
				},
			},
		},
		{
			name: "NEWLINE",
			pos:  position{line: 1097, col: 1, offset: 46035},
			expr: &choiceExpr{
				pos: position{line: 1097, col: 12, offset: 46046},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 1097, col: 12, offset: 46046},
						val:        "\r\n",
						ignoreCase: false,
					},
					&charClassMatcher{
						pos:        position{line: 1097, col: 21, offset: 46055},
						val:        "[\\r\\n]",
						chars:      []rune{'\r', '\n'},
						ignoreCase: false,
						inverted:   false,
					},
				},
			},
		},
	},
}

func (c *current) onDocument1(frontMatter, documentHeader, blocks interface{}) (interface{}, error) {
	return types.NewDocument(frontMatter, documentHeader, blocks.([]interface{}))
}

func (p *parser) callonDocument1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocument1(stack["frontMatter"], stack["documentHeader"], stack["blocks"])
}

func (c *current) onDocumentBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock23()
}

func (c *current) onDocumentBlock13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock13()
}

func (c *current) onDocumentBlock9(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock9(stack["id"])
}

func (c *current) onDocumentBlock51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock51()
}

func (c *current) onDocumentBlock41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock41()
}

func (c *current) onDocumentBlock37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock37(stack["id"])
}

func (c *current) onDocumentBlock73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock73()
}

func (c *current) onDocumentBlock76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock76()
}

func (c *current) onDocumentBlock65(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentBlock65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock65(stack["title"])
}

func (c *current) onDocumentBlock90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock90()
}

func (c *current) onDocumentBlock93() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock93()
}

func (c *current) onDocumentBlock84(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentBlock84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock84(stack["role"])
}

func (c *current) onDocumentBlock109() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentBlock109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock109()
}

func (c *current) onDocumentBlock111() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock111()
}

func (c *current) onDocumentBlock113() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock113()
}

func (c *current) onDocumentBlock115() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock115()
}

func (c *current) onDocumentBlock117() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock117()
}

func (c *current) onDocumentBlock104(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentBlock104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock104(stack["k"])
}

func (c *current) onDocumentBlock120() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentBlock120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock120()
}

func (c *current) onDocumentBlock128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock128()
}

func (c *current) onDocumentBlock139() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock139()
}

func (c *current) onDocumentBlock142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock142()
}

func (c *current) onDocumentBlock145() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock145()
}

func (c *current) onDocumentBlock136(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock136(stack["key"])
}

func (c *current) onDocumentBlock159(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock159(stack["value"])
}

func (c *current) onDocumentBlock175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock175()
}

func (c *current) onDocumentBlock133(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock133(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock183()
}

func (c *current) onDocumentBlock186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock186()
}

func (c *current) onDocumentBlock189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock189()
}

func (c *current) onDocumentBlock180(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock180(stack["key"])
}

func (c *current) onDocumentBlock206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock206()
}

func (c *current) onDocumentBlock177(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock177(stack["key"])
}

func (c *current) onDocumentBlock122(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock122(stack["attributes"])
}

func (c *current) onDocumentBlock212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock212()
}

func (c *current) onDocumentBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock5(stack["attr"])
}

func (c *current) onDocumentBlock1(attributes, block interface{}) (interface{}, error) {
	return types.WithAttributes(block, attributes.([]interface{}))

}

func (p *parser) callonDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1(stack["attributes"], stack["block"])
}

func (c *current) onFrontMatter10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter10()
}

func (c *current) onFrontMatter1(content interface{}) (interface{}, error) {
	return types.NewYamlFrontMatter(content.(string))
}

func (p *parser) callonFrontMatter1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter1(stack["content"])
}

func (c *current) onDocumentHeader13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader13()
}

func (c *current) onDocumentHeader24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader24()
}

func (c *current) onDocumentHeader42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader42()
}

func (c *current) onDocumentHeader48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader48()
}

func (c *current) onDocumentHeader27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader27()
}

func (c *current) onDocumentHeader67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader67()
}

func (c *current) onDocumentHeader73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader73()
}

func (c *current) onDocumentHeader52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader52()
}

func (c *current) onDocumentHeader92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader92()
}

func (c *current) onDocumentHeader98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader98()
}

func (c *current) onDocumentHeader77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader77()
}

func (c *current) onDocumentHeader102(email interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader102(stack["email"])
}

func (c *current) onDocumentHeader121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader121()
}

func (c *current) onDocumentHeader128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader128()
}

func (c *current) onDocumentHeader19(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader19(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader8(authors interface{}) (interface{}, error) {
	return types.NewDocumentAuthors(authors.([]interface{}))
}

func (p *parser) callonDocumentHeader8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader8(stack["authors"])
}

func (c *current) onDocumentHeader140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader140()
}

func (c *current) onDocumentHeader149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader149()
}

func (c *current) onDocumentHeader167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader167()
}

func (c *current) onDocumentHeader173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader173()
}

func (c *current) onDocumentHeader152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader152()
}

func (c *current) onDocumentHeader246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader246()
}

func (c *current) onDocumentHeader253() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader253()
}

func (c *current) onDocumentHeader144(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader144(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader135(author interface{}) (interface{}, error) {
	return []types.DocumentAuthor{author.(types.DocumentAuthor)}, nil
}

func (p *parser) callonDocumentHeader135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader135(stack["author"])
}

func (c *current) onDocumentHeader262() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader262()
}

func (c *current) onDocumentHeader272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader272()
}

func (c *current) onDocumentHeader269() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader269() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader269()
}

func (c *current) onDocumentHeader291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader291()
}

func (c *current) onDocumentHeader309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader309()
}

func (c *current) onDocumentHeader287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader287()
}

func (c *current) onDocumentHeader317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader317()
}

func (c *current) onDocumentHeader333() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader333()
}

func (c *current) onDocumentHeader257(revnumber, revdate, revremark interface{}) (interface{}, error) {
	return types.NewDocumentRevision(revnumber, revdate, revremark)
}

func (p *parser) callonDocumentHeader257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader257(stack["revnumber"], stack["revdate"], stack["revremark"])
}

func (c *current) onDocumentHeader355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader355()
}

func (c *current) onDocumentHeader364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader364()
}

func (c *current) onDocumentHeader351(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentHeader351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader351(stack["name"])
}

func (c *current) onDocumentHeader375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader375()
}

func (c *current) onDocumentHeader384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader384()
}

func (c *current) onDocumentHeader387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader387()
}

func (c *current) onDocumentHeader371(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentHeader371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader371(stack["name"], stack["value"])
}

func (c *current) onDocumentHeader1(header, authors, revision, otherAttributes interface{}) (interface{}, error) {

	return types.NewDocumentHeader(header, authors, revision, otherAttributes.([]interface{}))
}

func (p *parser) callonDocumentHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader1(stack["header"], stack["authors"], stack["revision"], stack["otherAttributes"])
}

func (c *current) onDocumentElement16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement16()
}

func (c *current) onDocumentElement8() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement8()
}

func (c *current) onDocumentElement27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement27()
}

func (c *current) onDocumentElement36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement36()
}

func (c *current) onDocumentElement23(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentElement23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement23(stack["name"])
}

func (c *current) onDocumentElement47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement47()
}

func (c *current) onDocumentElement56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement56()
}

func (c *current) onDocumentElement59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement59()
}

func (c *current) onDocumentElement43(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentElement43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement43(stack["name"], stack["value"])
}

func (c *current) onDocumentElement76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement76()
}

func (c *current) onDocumentElement85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement85()
}

func (c *current) onDocumentElement72(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentElement72() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement72(stack["name"])
}

func (c *current) onDocumentElement96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement96()
}

func (c *current) onDocumentElement105() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement105()
}

func (c *current) onDocumentElement92(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentElement92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement92(stack["name"])
}

func (c *current) onDocumentElement133() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement133()
}

func (c *current) onDocumentElement123() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement123()
}

func (c *current) onDocumentElement146() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement146()
}

func (c *current) onDocumentElement158() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement158()
}

func (c *current) onDocumentElement170() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement170()
}

func (c *current) onDocumentElement191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement191()
}

func (c *current) onDocumentElement194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement194()
}

func (c *current) onDocumentElement197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement197()
}

func (c *current) onDocumentElement188(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement188(stack["key"])
}

func (c *current) onDocumentElement211(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement211(stack["value"])
}

func (c *current) onDocumentElement227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement227()
}

func (c *current) onDocumentElement185(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement185(stack["key"], stack["value"])
}

func (c *current) onDocumentElement235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement235()
}

func (c *current) onDocumentElement238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement238()
}

func (c *current) onDocumentElement241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement241()
}

func (c *current) onDocumentElement232(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement232(stack["key"])
}

func (c *current) onDocumentElement258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement258()
}

func (c *current) onDocumentElement229(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement229(stack["key"])
}

func (c *current) onDocumentElement142(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentElement142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement142(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onDocumentElement265() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement265() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement265()
}

func (c *current) onDocumentElement277() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement277() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement277()
}

func (c *current) onDocumentElement298() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement298()
}

func (c *current) onDocumentElement301() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement301()
}

func (c *current) onDocumentElement304() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement304()
}

func (c *current) onDocumentElement295(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement295(stack["key"])
}

func (c *current) onDocumentElement318(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement318(stack["value"])
}

func (c *current) onDocumentElement334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement334()
}

func (c *current) onDocumentElement292(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement292(stack["key"], stack["value"])
}

func (c *current) onDocumentElement342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement342()
}

func (c *current) onDocumentElement345() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement345() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement345()
}

func (c *current) onDocumentElement348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement348()
}

func (c *current) onDocumentElement339(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement339(stack["key"])
}

func (c *current) onDocumentElement365() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement365() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement365()
}

func (c *current) onDocumentElement336(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement336(stack["key"])
}

func (c *current) onDocumentElement261(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentElement261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement261(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onDocumentElement372() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement372()
}

func (c *current) onDocumentElement393() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement393() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement393()
}

func (c *current) onDocumentElement396() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement396()
}

func (c *current) onDocumentElement399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement399()
}

func (c *current) onDocumentElement390(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement390(stack["key"])
}

func (c *current) onDocumentElement413(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement413(stack["value"])
}

func (c *current) onDocumentElement429() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement429()
}

func (c *current) onDocumentElement387(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement387(stack["key"], stack["value"])
}

func (c *current) onDocumentElement437() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement437() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement437()
}

func (c *current) onDocumentElement440() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement440()
}

func (c *current) onDocumentElement443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement443()
}

func (c *current) onDocumentElement434(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement434() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement434(stack["key"])
}

func (c *current) onDocumentElement460() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement460() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement460()
}

func (c *current) onDocumentElement431(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement431(stack["key"])
}

func (c *current) onDocumentElement368(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentElement368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement368(stack["alt"], stack["otherAttrs"])
}

func (c *current) onDocumentElement475() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement475() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement475()
}

func (c *current) onDocumentElement478() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement478() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement478()
}

func (c *current) onDocumentElement481() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement481()
}

func (c *current) onDocumentElement472(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement472() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement472(stack["key"])
}

func (c *current) onDocumentElement495(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement495() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement495(stack["value"])
}

func (c *current) onDocumentElement511() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement511()
}

func (c *current) onDocumentElement469(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement469(stack["key"], stack["value"])
}

func (c *current) onDocumentElement519() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement519()
}

func (c *current) onDocumentElement522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement522()
}

func (c *current) onDocumentElement525() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement525()
}

func (c *current) onDocumentElement516(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement516() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement516(stack["key"])
}

func (c *current) onDocumentElement542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement542()
}

func (c *current) onDocumentElement513(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement513() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement513(stack["key"])
}

func (c *current) onDocumentElement463(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentElement463() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement463(stack["otherAttrs"])
}

func (c *current) onDocumentElement548() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement548() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement548()
}

func (c *current) onDocumentElement119(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewBlockImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonDocumentElement119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement119(stack["path"], stack["inlineAttributes"])
}

func (c *current) onDocumentElement566() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement566() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement566()
}

func (c *current) onDocumentElement562() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement562() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement562()
}

func (c *current) onDocumentElement598() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement598() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement598()
}

func (c *current) onDocumentElement590() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement590() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement590()
}

func (c *current) onDocumentElement587() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement587() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement587()
}

func (c *current) onDocumentElement584(otherLine interface{}) (interface{}, error) {
	return otherLine, nil // do not include the trailing 'EOL'

}

func (p *parser) callonDocumentElement584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement584(stack["otherLine"])
}

func (c *current) onDocumentElement559(firstLine, otherLines interface{}) (interface{}, error) {

	return append([]interface{}{firstLine}, otherLines.([]interface{})...), nil

}

func (p *parser) callonDocumentElement559() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement559(stack["firstLine"], stack["otherLines"])
}

func (c *current) onDocumentElement557(lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithSpacesOnFirstLine, lines.([]interface{}))
}

func (p *parser) callonDocumentElement557() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement557(stack["lines"])
}

func (c *current) onDocumentElement625() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement625() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement625()
}

func (c *current) onDocumentElement637() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement637() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement637()
}

func (c *current) onDocumentElement634(line interface{}) (interface{}, error) {

	return line, nil // do not include the trailing 'EOL'

}

func (p *parser) callonDocumentElement634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement634(stack["line"])
}

func (c *current) onDocumentElement631(lines interface{}) (interface{}, error) {
	return lines.([]interface{}), nil

}

func (p *parser) callonDocumentElement631() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement631(stack["lines"])
}

func (c *current) onDocumentElement661() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement661() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement661()
}

func (c *current) onDocumentElement619(lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithDelimiter, lines.([]interface{}))
}

func (p *parser) callonDocumentElement619() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement619(stack["lines"])
}

func (c *current) onDocumentElement680() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement680() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement680()
}

func (c *current) onDocumentElement674() (interface{}, error) {
	return types.NewLiteralAttribute()
}

func (p *parser) callonDocumentElement674() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement674()
}

func (c *current) onDocumentElement704() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement704()
}

func (c *current) onDocumentElement694() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement694() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement694()
}

func (c *current) onDocumentElement690(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentElement690() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement690(stack["id"])
}

func (c *current) onDocumentElement732() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement732() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement732()
}

func (c *current) onDocumentElement722() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement722() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement722()
}

func (c *current) onDocumentElement718(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentElement718() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement718(stack["id"])
}

func (c *current) onDocumentElement754() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement754() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement754()
}

func (c *current) onDocumentElement757() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement757() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement757()
}

func (c *current) onDocumentElement746(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentElement746() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement746(stack["title"])
}

func (c *current) onDocumentElement771() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement771() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement771()
}

func (c *current) onDocumentElement774() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement774() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement774()
}

func (c *current) onDocumentElement765(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentElement765() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement765(stack["role"])
}

func (c *current) onDocumentElement790() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentElement790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement790()
}

func (c *current) onDocumentElement792() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentElement792() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement792()
}

func (c *current) onDocumentElement794() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentElement794() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement794()
}

func (c *current) onDocumentElement796() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentElement796() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement796()
}

func (c *current) onDocumentElement798() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentElement798() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement798()
}

func (c *current) onDocumentElement785(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentElement785() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement785(stack["k"])
}

func (c *current) onDocumentElement801() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentElement801() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement801()
}

func (c *current) onDocumentElement809() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement809() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement809()
}

func (c *current) onDocumentElement820() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement820() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement820()
}

func (c *current) onDocumentElement823() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement823() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement823()
}

func (c *current) onDocumentElement826() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement826() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement826()
}

func (c *current) onDocumentElement817(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement817() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement817(stack["key"])
}

func (c *current) onDocumentElement840(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement840() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement840(stack["value"])
}

func (c *current) onDocumentElement856() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement856() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement856()
}

func (c *current) onDocumentElement814(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement814() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement814(stack["key"], stack["value"])
}

func (c *current) onDocumentElement864() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement864() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement864()
}

func (c *current) onDocumentElement867() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement867() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement867()
}

func (c *current) onDocumentElement870() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement870() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement870()
}

func (c *current) onDocumentElement861(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement861() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement861(stack["key"])
}

func (c *current) onDocumentElement887() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement887() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement887()
}

func (c *current) onDocumentElement858(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement858() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement858(stack["key"])
}

func (c *current) onDocumentElement803(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentElement803() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement803(stack["attributes"])
}

func (c *current) onDocumentElement893() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement893() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement893()
}

func (c *current) onDocumentElement686(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentElement686() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement686(stack["attr"])
}

func (c *current) onDocumentElement918() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement918() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement918()
}

func (c *current) onDocumentElement910() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement910() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement910()
}

func (c *current) onDocumentElement907() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement907()
}

func (c *current) onDocumentElement904(line interface{}) (interface{}, error) {
	return line, nil // do not include the trailing 'EOL'

}

func (p *parser) callonDocumentElement904() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement904(stack["line"])
}

func (c *current) onDocumentElement901(lines interface{}) (interface{}, error) {

	return lines.([]interface{}), nil

}

func (p *parser) callonDocumentElement901() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement901(stack["lines"])
}

func (c *current) onDocumentElement670(attributes, lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithAttribute, lines.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonDocumentElement670() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement670(stack["attributes"], stack["lines"])
}

func (c *current) onDocumentElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonDocumentElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1(stack["element"])
}

func (c *current) onSection1(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1(stack["section"])
}

func (c *current) onSection01(header, elements interface{}) (interface{}, error) {
	return types.NewSection(0, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection01() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection01(stack["header"], stack["elements"])
}

func (c *current) onSection0Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title7()
}

func (c *current) onSection0Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title27()
}

func (c *current) onSection0Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title17()
}

func (c *current) onSection0Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title44()
}

func (c *current) onSection0Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection0Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title13(stack["id"])
}

func (c *current) onSection0Title1(elements, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection0Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title1(stack["elements"], stack["id"])
}

func (c *current) onSection0TitleWithAttributes23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes23()
}

func (c *current) onSection0TitleWithAttributes13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes13()
}

func (c *current) onSection0TitleWithAttributes9(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0TitleWithAttributes9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes9(stack["id"])
}

func (c *current) onSection0TitleWithAttributes51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes51()
}

func (c *current) onSection0TitleWithAttributes41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes41()
}

func (c *current) onSection0TitleWithAttributes37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0TitleWithAttributes37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes37(stack["id"])
}

func (c *current) onSection0TitleWithAttributes73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes73()
}

func (c *current) onSection0TitleWithAttributes76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes76()
}

func (c *current) onSection0TitleWithAttributes65(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection0TitleWithAttributes65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes65(stack["title"])
}

func (c *current) onSection0TitleWithAttributes90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes90()
}

func (c *current) onSection0TitleWithAttributes93() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes93()
}

func (c *current) onSection0TitleWithAttributes84(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection0TitleWithAttributes84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes84(stack["role"])
}

func (c *current) onSection0TitleWithAttributes109() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection0TitleWithAttributes109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes109()
}

func (c *current) onSection0TitleWithAttributes111() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection0TitleWithAttributes111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes111()
}

func (c *current) onSection0TitleWithAttributes113() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection0TitleWithAttributes113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes113()
}

func (c *current) onSection0TitleWithAttributes115() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection0TitleWithAttributes115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes115()
}

func (c *current) onSection0TitleWithAttributes117() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0TitleWithAttributes117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes117()
}

func (c *current) onSection0TitleWithAttributes104(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0TitleWithAttributes104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes104(stack["k"])
}

func (c *current) onSection0TitleWithAttributes120() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0TitleWithAttributes120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes120()
}

func (c *current) onSection0TitleWithAttributes128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes128()
}

func (c *current) onSection0TitleWithAttributes139() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes139()
}

func (c *current) onSection0TitleWithAttributes142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes142()
}

func (c *current) onSection0TitleWithAttributes145() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes145()
}

func (c *current) onSection0TitleWithAttributes136(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes136(stack["key"])
}

func (c *current) onSection0TitleWithAttributes159(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes159(stack["value"])
}

func (c *current) onSection0TitleWithAttributes175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes175()
}

func (c *current) onSection0TitleWithAttributes133(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection0TitleWithAttributes133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes133(stack["key"], stack["value"])
}

func (c *current) onSection0TitleWithAttributes183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes183()
}

func (c *current) onSection0TitleWithAttributes186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes186()
}

func (c *current) onSection0TitleWithAttributes189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes189()
}

func (c *current) onSection0TitleWithAttributes180(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes180(stack["key"])
}

func (c *current) onSection0TitleWithAttributes206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes206()
}

func (c *current) onSection0TitleWithAttributes177(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection0TitleWithAttributes177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes177(stack["key"])
}

func (c *current) onSection0TitleWithAttributes122(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0TitleWithAttributes122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes122(stack["attributes"])
}

func (c *current) onSection0TitleWithAttributes212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes212()
}

func (c *current) onSection0TitleWithAttributes5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection0TitleWithAttributes5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes5(stack["attr"])
}

func (c *current) onSection0TitleWithAttributes1(attributes, title interface{}) (interface{}, error) {
	return types.WithAttributes(title, attributes.([]interface{}))

}

func (p *parser) callonSection0TitleWithAttributes1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes1(stack["attributes"], stack["title"])
}

func (c *current) onSection0Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element9()
}

func (c *current) onSection0Element31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element31()
}

func (c *current) onSection0Element21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element21()
}

func (c *current) onSection0Element17(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element17(stack["id"])
}

func (c *current) onSection0Element59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element59()
}

func (c *current) onSection0Element49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element49()
}

func (c *current) onSection0Element45(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Element45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element45(stack["id"])
}

func (c *current) onSection0Element81() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element81()
}

func (c *current) onSection0Element84() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element84()
}

func (c *current) onSection0Element73(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection0Element73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element73(stack["title"])
}

func (c *current) onSection0Element98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element98()
}

func (c *current) onSection0Element101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element101()
}

func (c *current) onSection0Element92(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection0Element92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element92(stack["role"])
}

func (c *current) onSection0Element117() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection0Element117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element117()
}

func (c *current) onSection0Element119() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection0Element119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element119()
}

func (c *current) onSection0Element121() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection0Element121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element121()
}

func (c *current) onSection0Element123() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection0Element123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element123()
}

func (c *current) onSection0Element125() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0Element125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element125()
}

func (c *current) onSection0Element112(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0Element112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element112(stack["k"])
}

func (c *current) onSection0Element128() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0Element128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element128()
}

func (c *current) onSection0Element136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element136()
}

func (c *current) onSection0Element147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element147()
}

func (c *current) onSection0Element150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element150()
}

func (c *current) onSection0Element153() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element153()
}

func (c *current) onSection0Element144(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element144(stack["key"])
}

func (c *current) onSection0Element167(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element167(stack["value"])
}

func (c *current) onSection0Element183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element183()
}

func (c *current) onSection0Element141(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection0Element141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element141(stack["key"], stack["value"])
}

func (c *current) onSection0Element191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element191()
}

func (c *current) onSection0Element194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element194()
}

func (c *current) onSection0Element197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element197()
}

func (c *current) onSection0Element188(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element188(stack["key"])
}

func (c *current) onSection0Element214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element214()
}

func (c *current) onSection0Element185(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection0Element185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element185(stack["key"])
}

func (c *current) onSection0Element130(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0Element130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element130(stack["attributes"])
}

func (c *current) onSection0Element220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element220()
}

func (c *current) onSection0Element13(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection0Element13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element13(stack["attr"])
}

func (c *current) onSection0Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection0Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection11(header, elements interface{}) (interface{}, error) {
	return types.NewSection(1, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection11(stack["header"], stack["elements"])
}

func (c *current) onSection1Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title7()
}

func (c *current) onSection1Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title27()
}

func (c *current) onSection1Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title17()
}

func (c *current) onSection1Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title44()
}

func (c *current) onSection1Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection1Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title13(stack["id"])
}

func (c *current) onSection1Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection1Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title1(stack["elements"], stack["id"])
}

func (c *current) onSection1Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element9()
}

func (c *current) onSection1Element31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element31()
}

func (c *current) onSection1Element21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element21()
}

func (c *current) onSection1Element17(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element17(stack["id"])
}

func (c *current) onSection1Element59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element59()
}

func (c *current) onSection1Element49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element49()
}

func (c *current) onSection1Element45(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Element45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element45(stack["id"])
}

func (c *current) onSection1Element81() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element81()
}

func (c *current) onSection1Element84() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element84()
}

func (c *current) onSection1Element73(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection1Element73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element73(stack["title"])
}

func (c *current) onSection1Element98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element98()
}

func (c *current) onSection1Element101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element101()
}

func (c *current) onSection1Element92(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection1Element92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element92(stack["role"])
}

func (c *current) onSection1Element117() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection1Element117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element117()
}

func (c *current) onSection1Element119() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection1Element119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element119()
}

func (c *current) onSection1Element121() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection1Element121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element121()
}

func (c *current) onSection1Element123() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection1Element123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element123()
}

func (c *current) onSection1Element125() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection1Element125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element125()
}

func (c *current) onSection1Element112(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection1Element112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element112(stack["k"])
}

func (c *current) onSection1Element128() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection1Element128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element128()
}

func (c *current) onSection1Element136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element136()
}

func (c *current) onSection1Element147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element147()
}

func (c *current) onSection1Element150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element150()
}

func (c *current) onSection1Element153() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element153()
}

func (c *current) onSection1Element144(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element144(stack["key"])
}

func (c *current) onSection1Element167(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element167(stack["value"])
}

func (c *current) onSection1Element183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element183()
}

func (c *current) onSection1Element141(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection1Element141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element141(stack["key"], stack["value"])
}

func (c *current) onSection1Element191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element191()
}

func (c *current) onSection1Element194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element194()
}

func (c *current) onSection1Element197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element197()
}

func (c *current) onSection1Element188(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element188(stack["key"])
}

func (c *current) onSection1Element214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element214()
}

func (c *current) onSection1Element185(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection1Element185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element185(stack["key"])
}

func (c *current) onSection1Element130(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection1Element130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element130(stack["attributes"])
}

func (c *current) onSection1Element220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element220()
}

func (c *current) onSection1Element13(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection1Element13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element13(stack["attr"])
}

func (c *current) onSection1Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection1Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection21(header, elements interface{}) (interface{}, error) {
	return types.NewSection(2, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection21(stack["header"], stack["elements"])
}

func (c *current) onSection2Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title7()
}

func (c *current) onSection2Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title27()
}

func (c *current) onSection2Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title17()
}

func (c *current) onSection2Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title44()
}

func (c *current) onSection2Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection2Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title13(stack["id"])
}

func (c *current) onSection2Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection2Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title1(stack["elements"], stack["id"])
}

func (c *current) onSection2Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element9()
}

func (c *current) onSection2Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element17()
}

func (c *current) onSection2Element39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element39()
}

func (c *current) onSection2Element29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element29()
}

func (c *current) onSection2Element25(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element25(stack["id"])
}

func (c *current) onSection2Element67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element67()
}

func (c *current) onSection2Element57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element57()
}

func (c *current) onSection2Element53(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Element53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element53(stack["id"])
}

func (c *current) onSection2Element89() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element89() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element89()
}

func (c *current) onSection2Element92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element92()
}

func (c *current) onSection2Element81(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection2Element81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element81(stack["title"])
}

func (c *current) onSection2Element106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element106()
}

func (c *current) onSection2Element109() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element109()
}

func (c *current) onSection2Element100(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection2Element100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element100(stack["role"])
}

func (c *current) onSection2Element125() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection2Element125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element125()
}

func (c *current) onSection2Element127() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection2Element127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element127()
}

func (c *current) onSection2Element129() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection2Element129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element129()
}

func (c *current) onSection2Element131() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection2Element131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element131()
}

func (c *current) onSection2Element133() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection2Element133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element133()
}

func (c *current) onSection2Element120(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection2Element120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element120(stack["k"])
}

func (c *current) onSection2Element136() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection2Element136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element136()
}

func (c *current) onSection2Element144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element144()
}

func (c *current) onSection2Element155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element155()
}

func (c *current) onSection2Element158() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element158()
}

func (c *current) onSection2Element161() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element161()
}

func (c *current) onSection2Element152(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element152(stack["key"])
}

func (c *current) onSection2Element175(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element175(stack["value"])
}

func (c *current) onSection2Element191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element191()
}

func (c *current) onSection2Element149(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection2Element149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element149(stack["key"], stack["value"])
}

func (c *current) onSection2Element199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element199()
}

func (c *current) onSection2Element202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element202()
}

func (c *current) onSection2Element205() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element205() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element205()
}

func (c *current) onSection2Element196(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element196(stack["key"])
}

func (c *current) onSection2Element222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element222()
}

func (c *current) onSection2Element193(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection2Element193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element193(stack["key"])
}

func (c *current) onSection2Element138(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection2Element138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element138(stack["attributes"])
}

func (c *current) onSection2Element228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element228()
}

func (c *current) onSection2Element21(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection2Element21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element21(stack["attr"])
}

func (c *current) onSection2Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection2Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection31(header, elements interface{}) (interface{}, error) {
	return types.NewSection(3, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection31(stack["header"], stack["elements"])
}

func (c *current) onSection3Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title7()
}

func (c *current) onSection3Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title27()
}

func (c *current) onSection3Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title17()
}

func (c *current) onSection3Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title44()
}

func (c *current) onSection3Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection3Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title13(stack["id"])
}

func (c *current) onSection3Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection3Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title1(stack["elements"], stack["id"])
}

func (c *current) onSection3Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element9()
}

func (c *current) onSection3Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element17()
}

func (c *current) onSection3Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element25()
}

func (c *current) onSection3Element47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element47()
}

func (c *current) onSection3Element37() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element37()
}

func (c *current) onSection3Element33(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Element33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element33(stack["id"])
}

func (c *current) onSection3Element75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element75()
}

func (c *current) onSection3Element65() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element65()
}

func (c *current) onSection3Element61(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Element61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element61(stack["id"])
}

func (c *current) onSection3Element97() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element97()
}

func (c *current) onSection3Element100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element100()
}

func (c *current) onSection3Element89(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection3Element89() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element89(stack["title"])
}

func (c *current) onSection3Element114() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element114()
}

func (c *current) onSection3Element117() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element117()
}

func (c *current) onSection3Element108(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection3Element108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element108(stack["role"])
}

func (c *current) onSection3Element133() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection3Element133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element133()
}

func (c *current) onSection3Element135() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection3Element135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element135()
}

func (c *current) onSection3Element137() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection3Element137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element137()
}

func (c *current) onSection3Element139() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection3Element139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element139()
}

func (c *current) onSection3Element141() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection3Element141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element141()
}

func (c *current) onSection3Element128(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection3Element128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element128(stack["k"])
}

func (c *current) onSection3Element144() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection3Element144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element144()
}

func (c *current) onSection3Element152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element152()
}

func (c *current) onSection3Element163() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element163()
}

func (c *current) onSection3Element166() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element166()
}

func (c *current) onSection3Element169() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element169()
}

func (c *current) onSection3Element160(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element160(stack["key"])
}

func (c *current) onSection3Element183(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element183(stack["value"])
}

func (c *current) onSection3Element199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element199()
}

func (c *current) onSection3Element157(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection3Element157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element157(stack["key"], stack["value"])
}

func (c *current) onSection3Element207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element207()
}

func (c *current) onSection3Element210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element210()
}

func (c *current) onSection3Element213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element213()
}

func (c *current) onSection3Element204(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element204(stack["key"])
}

func (c *current) onSection3Element230() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element230()
}

func (c *current) onSection3Element201(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection3Element201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element201(stack["key"])
}

func (c *current) onSection3Element146(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection3Element146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element146(stack["attributes"])
}

func (c *current) onSection3Element236() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element236()
}

func (c *current) onSection3Element29(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection3Element29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element29(stack["attr"])
}

func (c *current) onSection3Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection3Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection41(header, elements interface{}) (interface{}, error) {
	return types.NewSection(4, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection41(stack["header"], stack["elements"])
}

func (c *current) onSection4Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title7()
}

func (c *current) onSection4Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title27()
}

func (c *current) onSection4Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title17()
}

func (c *current) onSection4Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title44()
}

func (c *current) onSection4Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection4Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title13(stack["id"])
}

func (c *current) onSection4Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection4Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title1(stack["elements"], stack["id"])
}

func (c *current) onSection4Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element9()
}

func (c *current) onSection4Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element17()
}

func (c *current) onSection4Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element25()
}

func (c *current) onSection4Element33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element33()
}

func (c *current) onSection4Element55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element55()
}

func (c *current) onSection4Element45() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element45()
}

func (c *current) onSection4Element41(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Element41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element41(stack["id"])
}

func (c *current) onSection4Element83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element83()
}

func (c *current) onSection4Element73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element73()
}

func (c *current) onSection4Element69(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Element69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element69(stack["id"])
}

func (c *current) onSection4Element105() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element105()
}

func (c *current) onSection4Element108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element108()
}

func (c *current) onSection4Element97(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection4Element97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element97(stack["title"])
}

func (c *current) onSection4Element122() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element122()
}

func (c *current) onSection4Element125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element125()
}

func (c *current) onSection4Element116(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection4Element116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element116(stack["role"])
}

func (c *current) onSection4Element141() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection4Element141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element141()
}

func (c *current) onSection4Element143() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection4Element143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element143()
}

func (c *current) onSection4Element145() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection4Element145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element145()
}

func (c *current) onSection4Element147() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection4Element147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element147()
}

func (c *current) onSection4Element149() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection4Element149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element149()
}

func (c *current) onSection4Element136(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection4Element136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element136(stack["k"])
}

func (c *current) onSection4Element152() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection4Element152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element152()
}

func (c *current) onSection4Element160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element160()
}

func (c *current) onSection4Element171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element171()
}

func (c *current) onSection4Element174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element174()
}

func (c *current) onSection4Element177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element177()
}

func (c *current) onSection4Element168(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element168(stack["key"])
}

func (c *current) onSection4Element191(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element191(stack["value"])
}

func (c *current) onSection4Element207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element207()
}

func (c *current) onSection4Element165(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection4Element165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element165(stack["key"], stack["value"])
}

func (c *current) onSection4Element215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element215()
}

func (c *current) onSection4Element218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element218()
}

func (c *current) onSection4Element221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element221()
}

func (c *current) onSection4Element212(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element212(stack["key"])
}

func (c *current) onSection4Element238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element238()
}

func (c *current) onSection4Element209(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection4Element209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element209(stack["key"])
}

func (c *current) onSection4Element154(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection4Element154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element154(stack["attributes"])
}

func (c *current) onSection4Element244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element244()
}

func (c *current) onSection4Element37(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection4Element37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element37(stack["attr"])
}

func (c *current) onSection4Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection4Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection51(header, elements interface{}) (interface{}, error) {
	return types.NewSection(5, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection51(stack["header"], stack["elements"])
}

func (c *current) onSection5Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title7()
}

func (c *current) onSection5Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title27()
}

func (c *current) onSection5Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title17()
}

func (c *current) onSection5Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title44()
}

func (c *current) onSection5Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection5Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title13(stack["id"])
}

func (c *current) onSection5Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection5Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title1(stack["elements"], stack["id"])
}

func (c *current) onSection5Element33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element33()
}

func (c *current) onSection5Element23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element23()
}

func (c *current) onSection5Element19(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Element19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element19(stack["id"])
}

func (c *current) onSection5Element61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element61()
}

func (c *current) onSection5Element51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element51()
}

func (c *current) onSection5Element47(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Element47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element47(stack["id"])
}

func (c *current) onSection5Element83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element83()
}

func (c *current) onSection5Element86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element86()
}

func (c *current) onSection5Element75(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection5Element75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element75(stack["title"])
}

func (c *current) onSection5Element100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element100()
}

func (c *current) onSection5Element103() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element103()
}

func (c *current) onSection5Element94(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection5Element94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element94(stack["role"])
}

func (c *current) onSection5Element119() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection5Element119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element119()
}

func (c *current) onSection5Element121() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection5Element121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element121()
}

func (c *current) onSection5Element123() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection5Element123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element123()
}

func (c *current) onSection5Element125() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection5Element125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element125()
}

func (c *current) onSection5Element127() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection5Element127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element127()
}

func (c *current) onSection5Element114(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection5Element114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element114(stack["k"])
}

func (c *current) onSection5Element130() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection5Element130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element130()
}

func (c *current) onSection5Element138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element138()
}

func (c *current) onSection5Element149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element149()
}

func (c *current) onSection5Element152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element152()
}

func (c *current) onSection5Element155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element155()
}

func (c *current) onSection5Element146(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element146(stack["key"])
}

func (c *current) onSection5Element169(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element169(stack["value"])
}

func (c *current) onSection5Element185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element185()
}

func (c *current) onSection5Element143(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection5Element143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element143(stack["key"], stack["value"])
}

func (c *current) onSection5Element193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element193()
}

func (c *current) onSection5Element196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element196()
}

func (c *current) onSection5Element199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element199()
}

func (c *current) onSection5Element190(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element190(stack["key"])
}

func (c *current) onSection5Element216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element216()
}

func (c *current) onSection5Element187(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection5Element187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element187(stack["key"])
}

func (c *current) onSection5Element132(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection5Element132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element132(stack["attributes"])
}

func (c *current) onSection5Element222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element222()
}

func (c *current) onSection5Element15(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection5Element15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element15(stack["attr"])
}

func (c *current) onSection5Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection5Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element1(stack["attributes"], stack["element"])
}

func (c *current) onTitleElements12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements12()
}

func (c *current) onTitleElements29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements29()
}

func (c *current) onTitleElements19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements19()
}

func (c *current) onTitleElements46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements46()
}

func (c *current) onTitleElements15(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonTitleElements15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements15(stack["id"])
}

func (c *current) onTitleElements52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements52()
}

func (c *current) onTitleElements1(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonTitleElements1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements1(stack["elements"])
}

func (c *current) onTitleElement18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement18()
}

func (c *current) onTitleElement8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement8()
}

func (c *current) onTitleElement34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement34()
}

func (c *current) onTitleElement38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement38()
}

func (c *current) onTitleElement4(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonTitleElement4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement4(stack["id"], stack["label"])
}

func (c *current) onTitleElement59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement59()
}

func (c *current) onTitleElement49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement49()
}

func (c *current) onTitleElement45(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonTitleElement45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement45(stack["id"])
}

func (c *current) onTitleElement90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement90()
}

func (c *current) onTitleElement80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement80()
}

func (c *current) onTitleElement103() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement103()
}

func (c *current) onTitleElement115() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement115()
}

func (c *current) onTitleElement127() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement127()
}

func (c *current) onTitleElement148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement148()
}

func (c *current) onTitleElement151() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement151()
}

func (c *current) onTitleElement154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement154()
}

func (c *current) onTitleElement145(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement145(stack["key"])
}

func (c *current) onTitleElement168(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement168(stack["value"])
}

func (c *current) onTitleElement184() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement184()
}

func (c *current) onTitleElement142(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement142(stack["key"], stack["value"])
}

func (c *current) onTitleElement192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement192()
}

func (c *current) onTitleElement195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement195()
}

func (c *current) onTitleElement198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement198()
}

func (c *current) onTitleElement189(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement189(stack["key"])
}

func (c *current) onTitleElement215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement215()
}

func (c *current) onTitleElement186(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement186(stack["key"])
}

func (c *current) onTitleElement99(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement99(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onTitleElement222() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement222()
}

func (c *current) onTitleElement234() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement234()
}

func (c *current) onTitleElement255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement255()
}

func (c *current) onTitleElement258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement258()
}

func (c *current) onTitleElement261() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement261()
}

func (c *current) onTitleElement252(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement252(stack["key"])
}

func (c *current) onTitleElement275(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement275(stack["value"])
}

func (c *current) onTitleElement291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement291()
}

func (c *current) onTitleElement249(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement249(stack["key"], stack["value"])
}

func (c *current) onTitleElement299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement299()
}

func (c *current) onTitleElement302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement302()
}

func (c *current) onTitleElement305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement305()
}

func (c *current) onTitleElement296(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement296(stack["key"])
}

func (c *current) onTitleElement322() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement322()
}

func (c *current) onTitleElement293(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement293(stack["key"])
}

func (c *current) onTitleElement218(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement218(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onTitleElement329() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement329()
}

func (c *current) onTitleElement350() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement350() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement350()
}

func (c *current) onTitleElement353() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement353()
}

func (c *current) onTitleElement356() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement356()
}

func (c *current) onTitleElement347(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement347(stack["key"])
}

func (c *current) onTitleElement370(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement370(stack["value"])
}

func (c *current) onTitleElement386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement386()
}

func (c *current) onTitleElement344(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement344(stack["key"], stack["value"])
}

func (c *current) onTitleElement394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement394()
}

func (c *current) onTitleElement397() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement397() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement397()
}

func (c *current) onTitleElement400() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement400()
}

func (c *current) onTitleElement391(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement391() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement391(stack["key"])
}

func (c *current) onTitleElement417() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement417()
}

func (c *current) onTitleElement388(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement388(stack["key"])
}

func (c *current) onTitleElement325(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement325(stack["alt"], stack["otherAttrs"])
}

func (c *current) onTitleElement432() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement432()
}

func (c *current) onTitleElement435() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement435()
}

func (c *current) onTitleElement438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement438()
}

func (c *current) onTitleElement429(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement429(stack["key"])
}

func (c *current) onTitleElement452(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement452(stack["value"])
}

func (c *current) onTitleElement468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement468()
}

func (c *current) onTitleElement426(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement426(stack["key"], stack["value"])
}

func (c *current) onTitleElement476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement476()
}

func (c *current) onTitleElement479() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement479() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement479()
}

func (c *current) onTitleElement482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement482()
}

func (c *current) onTitleElement473(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement473(stack["key"])
}

func (c *current) onTitleElement499() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement499() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement499()
}

func (c *current) onTitleElement470(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement470() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement470(stack["key"])
}

func (c *current) onTitleElement420(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement420(stack["otherAttrs"])
}

func (c *current) onTitleElement74(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement74(stack["path"], stack["inlineAttributes"])
}

func (c *current) onTitleElement529() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement529() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement529()
}

func (c *current) onTitleElement519() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement519()
}

func (c *current) onTitleElement510() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement510() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement510()
}

func (c *current) onTitleElement542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement542()
}

func (c *current) onTitleElement559() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement559() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement559()
}

func (c *current) onTitleElement562() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement562() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement562()
}

func (c *current) onTitleElement565() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement565() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement565()
}

func (c *current) onTitleElement556(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement556() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement556(stack["key"])
}

func (c *current) onTitleElement579(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement579() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement579(stack["value"])
}

func (c *current) onTitleElement595() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement595() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement595()
}

func (c *current) onTitleElement553(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement553() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement553(stack["key"], stack["value"])
}

func (c *current) onTitleElement603() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement603() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement603()
}

func (c *current) onTitleElement606() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement606() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement606()
}

func (c *current) onTitleElement609() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement609() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement609()
}

func (c *current) onTitleElement600(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement600() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement600(stack["key"])
}

func (c *current) onTitleElement626() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement626() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement626()
}

func (c *current) onTitleElement597(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement597() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement597(stack["key"])
}

func (c *current) onTitleElement538(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement538(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement641() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement641() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement641()
}

func (c *current) onTitleElement644() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement644() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement644()
}

func (c *current) onTitleElement647() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement647() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement647()
}

func (c *current) onTitleElement638(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement638() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement638(stack["key"])
}

func (c *current) onTitleElement661(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement661() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement661(stack["value"])
}

func (c *current) onTitleElement677() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement677() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement677()
}

func (c *current) onTitleElement635(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement635() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement635(stack["key"], stack["value"])
}

func (c *current) onTitleElement685() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement685() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement685()
}

func (c *current) onTitleElement688() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement688() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement688()
}

func (c *current) onTitleElement691() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement691() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement691()
}

func (c *current) onTitleElement682(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement682() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement682(stack["key"])
}

func (c *current) onTitleElement708() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement708() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement708()
}

func (c *current) onTitleElement679(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement679() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement679(stack["key"])
}

func (c *current) onTitleElement629(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement629() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement629(stack["otherAttrs"])
}

func (c *current) onTitleElement506(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement506(stack["url"], stack["inlineAttributes"])
}

func (c *current) onTitleElement732() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement732() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement732()
}

func (c *current) onTitleElement722() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement722() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement722()
}

func (c *current) onTitleElement714() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement714() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement714()
}

func (c *current) onTitleElement745() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement745() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement745()
}

func (c *current) onTitleElement762() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement762() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement762()
}

func (c *current) onTitleElement765() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement765() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement765()
}

func (c *current) onTitleElement768() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement768() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement768()
}

func (c *current) onTitleElement759(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement759() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement759(stack["key"])
}

func (c *current) onTitleElement782(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement782() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement782(stack["value"])
}

func (c *current) onTitleElement798() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement798() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement798()
}

func (c *current) onTitleElement756(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement756() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement756(stack["key"], stack["value"])
}

func (c *current) onTitleElement806() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement806() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement806()
}

func (c *current) onTitleElement809() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement809() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement809()
}

func (c *current) onTitleElement812() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement812() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement812()
}

func (c *current) onTitleElement803(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement803() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement803(stack["key"])
}

func (c *current) onTitleElement829() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement829() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement829()
}

func (c *current) onTitleElement800(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement800() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement800(stack["key"])
}

func (c *current) onTitleElement741(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement741() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement741(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement844() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement844() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement844()
}

func (c *current) onTitleElement847() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement847() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement847()
}

func (c *current) onTitleElement850() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement850() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement850()
}

func (c *current) onTitleElement841(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement841() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement841(stack["key"])
}

func (c *current) onTitleElement864(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement864() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement864(stack["value"])
}

func (c *current) onTitleElement880() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement880() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement880()
}

func (c *current) onTitleElement838(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement838() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement838(stack["key"], stack["value"])
}

func (c *current) onTitleElement888() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement888() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement888()
}

func (c *current) onTitleElement891() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement891() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement891()
}

func (c *current) onTitleElement894() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement894() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement894()
}

func (c *current) onTitleElement885(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement885() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement885(stack["key"])
}

func (c *current) onTitleElement911() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement911() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement911()
}

func (c *current) onTitleElement882(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement882() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement882(stack["key"])
}

func (c *current) onTitleElement832(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement832() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement832(stack["otherAttrs"])
}

func (c *current) onTitleElement711(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement711() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement711(stack["url"], stack["inlineAttributes"])
}

func (c *current) onTitleElement934() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement934() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement934()
}

func (c *current) onTitleElement924() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement924() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement924()
}

func (c *current) onTitleElement916() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement916() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement916()
}

func (c *current) onTitleElement914(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonTitleElement914() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement914(stack["url"])
}

func (c *current) onTitleElement503(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonTitleElement503() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement503(stack["link"])
}

func (c *current) onTitleElement945() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement945() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement945()
}

func (c *current) onTitleElement941(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonTitleElement941() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement941(stack["name"])
}

func (c *current) onTitleElement957() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement957() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement957()
}

func (c *current) onTitleElement963() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement963() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement963()
}

func (c *current) onTitleElement953() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonTitleElement953() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement953()
}

func (c *current) onTitleElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonTitleElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1(stack["element"])
}

func (c *current) onList1(elements interface{}) (interface{}, error) {
	return types.NewList(elements.([]interface{}))
}

func (p *parser) callonList1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList1(stack["elements"])
}

func (c *current) onListParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}))
}

func (p *parser) callonListParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph1(stack["lines"])
}

func (c *current) onListParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine9()
}

func (c *current) onListParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonListParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine13()
}

func (c *current) onListParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonListParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine15()
}

func (c *current) onListParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonListParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine17()
}

func (c *current) onListParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonListParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine19()
}

func (c *current) onListParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonListParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine21()
}

func (c *current) onListParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonListParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine23()
}

func (c *current) onListParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonListParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine28()
}

func (c *current) onListParagraphLine32() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonListParagraphLine32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine32()
}

func (c *current) onListParagraphLine36() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonListParagraphLine36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine36()
}

func (c *current) onListParagraphLine41() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonListParagraphLine41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine41()
}

func (c *current) onListParagraphLine49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine49()
}

func (c *current) onListParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine4(stack["prefix"])
}

func (c *current) onListParagraphLine57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine57()
}

func (c *current) onListParagraphLine61() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonListParagraphLine61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine61()
}

func (c *current) onListParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonListParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine63()
}

func (c *current) onListParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonListParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine65()
}

func (c *current) onListParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonListParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine67()
}

func (c *current) onListParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonListParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine69()
}

func (c *current) onListParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonListParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine71()
}

func (c *current) onListParagraphLine76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine76()
}

func (c *current) onListParagraphLine52(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine52(stack["prefix"])
}

func (c *current) onListParagraphLine80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine80()
}

func (c *current) onListParagraphLine90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine90()
}

func (c *current) onListParagraphLine102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine102()
}

func (c *current) onListParagraphLine96() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonListParagraphLine96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine96()
}

func (c *current) onListParagraphLine128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine128()
}

func (c *current) onListParagraphLine118() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine118()
}

func (c *current) onListParagraphLine114(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine114(stack["id"])
}

func (c *current) onListParagraphLine156() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine156()
}

func (c *current) onListParagraphLine146() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine146()
}

func (c *current) onListParagraphLine142(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine142(stack["id"])
}

func (c *current) onListParagraphLine178() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine178()
}

func (c *current) onListParagraphLine181() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine181()
}

func (c *current) onListParagraphLine170(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonListParagraphLine170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine170(stack["title"])
}

func (c *current) onListParagraphLine195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine195()
}

func (c *current) onListParagraphLine198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine198()
}

func (c *current) onListParagraphLine189(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonListParagraphLine189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine189(stack["role"])
}

func (c *current) onListParagraphLine214() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonListParagraphLine214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine214()
}

func (c *current) onListParagraphLine216() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonListParagraphLine216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine216()
}

func (c *current) onListParagraphLine218() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonListParagraphLine218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine218()
}

func (c *current) onListParagraphLine220() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonListParagraphLine220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine220()
}

func (c *current) onListParagraphLine222() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonListParagraphLine222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine222()
}

func (c *current) onListParagraphLine209(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonListParagraphLine209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine209(stack["k"])
}

func (c *current) onListParagraphLine225() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonListParagraphLine225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine225()
}

func (c *current) onListParagraphLine233() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine233()
}

func (c *current) onListParagraphLine244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine244()
}

func (c *current) onListParagraphLine247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine247()
}

func (c *current) onListParagraphLine250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine250()
}

func (c *current) onListParagraphLine241(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine241(stack["key"])
}

func (c *current) onListParagraphLine264(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine264(stack["value"])
}

func (c *current) onListParagraphLine280() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine280() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine280()
}

func (c *current) onListParagraphLine238(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonListParagraphLine238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine238(stack["key"], stack["value"])
}

func (c *current) onListParagraphLine288() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine288() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine288()
}

func (c *current) onListParagraphLine291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine291()
}

func (c *current) onListParagraphLine294() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine294()
}

func (c *current) onListParagraphLine285(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine285(stack["key"])
}

func (c *current) onListParagraphLine311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine311()
}

func (c *current) onListParagraphLine282(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonListParagraphLine282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine282(stack["key"])
}

func (c *current) onListParagraphLine227(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonListParagraphLine227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine227(stack["attributes"])
}

func (c *current) onListParagraphLine317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine317()
}

func (c *current) onListParagraphLine110(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonListParagraphLine110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine110(stack["attr"])
}

func (c *current) onListParagraphLine332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine332()
}

func (c *current) onListParagraphLine344() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine344()
}

func (c *current) onListParagraphLine356() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine356()
}

func (c *current) onListParagraphLine369() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine369()
}

func (c *current) onListParagraphLine381() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine381()
}

func (c *current) onListParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonListParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine1(stack["line"])
}

func (c *current) onContinuedDocumentElement9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonContinuedDocumentElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement9()
}

func (c *current) onContinuedDocumentElement3() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonContinuedDocumentElement3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement3()
}

func (c *current) onContinuedDocumentElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonContinuedDocumentElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement1(stack["element"])
}

func (c *current) onOrderedListItem23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem23()
}

func (c *current) onOrderedListItem13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem13()
}

func (c *current) onOrderedListItem9(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem9(stack["id"])
}

func (c *current) onOrderedListItem51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem51()
}

func (c *current) onOrderedListItem41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem41()
}

func (c *current) onOrderedListItem37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem37(stack["id"])
}

func (c *current) onOrderedListItem73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem73()
}

func (c *current) onOrderedListItem76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem76()
}

func (c *current) onOrderedListItem65(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonOrderedListItem65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem65(stack["title"])
}

func (c *current) onOrderedListItem90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem90()
}

func (c *current) onOrderedListItem93() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem93()
}

func (c *current) onOrderedListItem84(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonOrderedListItem84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem84(stack["role"])
}

func (c *current) onOrderedListItem109() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonOrderedListItem109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem109()
}

func (c *current) onOrderedListItem111() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonOrderedListItem111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem111()
}

func (c *current) onOrderedListItem113() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonOrderedListItem113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem113()
}

func (c *current) onOrderedListItem115() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonOrderedListItem115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem115()
}

func (c *current) onOrderedListItem117() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonOrderedListItem117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem117()
}

func (c *current) onOrderedListItem104(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonOrderedListItem104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem104(stack["k"])
}

func (c *current) onOrderedListItem120() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonOrderedListItem120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem120()
}

func (c *current) onOrderedListItem128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem128()
}

func (c *current) onOrderedListItem139() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem139()
}

func (c *current) onOrderedListItem142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem142()
}

func (c *current) onOrderedListItem145() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem145()
}

func (c *current) onOrderedListItem136(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem136(stack["key"])
}

func (c *current) onOrderedListItem159(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem159(stack["value"])
}

func (c *current) onOrderedListItem175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem175()
}

func (c *current) onOrderedListItem133(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonOrderedListItem133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem133(stack["key"], stack["value"])
}

func (c *current) onOrderedListItem183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem183()
}

func (c *current) onOrderedListItem186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem186()
}

func (c *current) onOrderedListItem189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem189()
}

func (c *current) onOrderedListItem180(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem180(stack["key"])
}

func (c *current) onOrderedListItem206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem206()
}

func (c *current) onOrderedListItem177(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonOrderedListItem177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem177(stack["key"])
}

func (c *current) onOrderedListItem122(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem122(stack["attributes"])
}

func (c *current) onOrderedListItem212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem212()
}

func (c *current) onOrderedListItem5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonOrderedListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem5(stack["attr"])
}

func (c *current) onOrderedListItem225() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem225()
}

func (c *current) onOrderedListItem229() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonOrderedListItem229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem229()
}

func (c *current) onOrderedListItem231() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonOrderedListItem231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem231()
}

func (c *current) onOrderedListItem233() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonOrderedListItem233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem233()
}

func (c *current) onOrderedListItem235() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonOrderedListItem235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem235()
}

func (c *current) onOrderedListItem237() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonOrderedListItem237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem237()
}

func (c *current) onOrderedListItem239() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonOrderedListItem239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem239()
}

func (c *current) onOrderedListItem244() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonOrderedListItem244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem244()
}

func (c *current) onOrderedListItem248() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonOrderedListItem248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem248()
}

func (c *current) onOrderedListItem252() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonOrderedListItem252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem252()
}

func (c *current) onOrderedListItem257() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonOrderedListItem257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem257()
}

func (c *current) onOrderedListItem265() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem265() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem265()
}

func (c *current) onOrderedListItem220(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonOrderedListItem220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem220(stack["prefix"])
}

func (c *current) onOrderedListItem278() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem278()
}

func (c *current) onOrderedListItem270() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonOrderedListItem270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem270()
}

func (c *current) onOrderedListItem1(attributes, prefix, content interface{}) (interface{}, error) {
	return types.NewOrderedListItem(prefix.(types.OrderedListItemPrefix), content.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem1(stack["attributes"], stack["prefix"], stack["content"])
}

func (c *current) onOrderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonOrderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItemContent1(stack["elements"])
}

func (c *current) onUnorderedListItem9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem9()
}

func (c *current) onUnorderedListItem13() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonUnorderedListItem13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem13()
}

func (c *current) onUnorderedListItem15() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonUnorderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem15()
}

func (c *current) onUnorderedListItem17() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonUnorderedListItem17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem17()
}

func (c *current) onUnorderedListItem19() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonUnorderedListItem19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem19()
}

func (c *current) onUnorderedListItem21() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonUnorderedListItem21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem21()
}

func (c *current) onUnorderedListItem23() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonUnorderedListItem23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem23()
}

func (c *current) onUnorderedListItem28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem28()
}

func (c *current) onUnorderedListItem4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonUnorderedListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem4(stack["prefix"])
}

func (c *current) onUnorderedListItem41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem41()
}

func (c *current) onUnorderedListItem33() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonUnorderedListItem33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem33()
}

func (c *current) onUnorderedListItem1(prefix, content interface{}) (interface{}, error) {
	return types.NewUnorderedListItem(prefix.(types.UnorderedListItemPrefix), content.([]interface{}))
}

func (p *parser) callonUnorderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem1(stack["prefix"], stack["content"])
}

func (c *current) onUnorderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonUnorderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItemContent1(stack["elements"])
}

func (c *current) onLabeledListItem5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem5()
}

func (c *current) onLabeledListItem16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem16()
}

func (c *current) onLabeledListItem24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem24()
}

func (c *current) onLabeledListItem2(term, separator, description interface{}) (interface{}, error) {
	// level is '1' for a '::' separator, '2' for a ':::' separator and '3' for a '::::' separator
	return types.NewLabeledListItem(len(separator.(string))-1, term.(string), description.([]interface{}))

}

func (p *parser) callonLabeledListItem2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem2(stack["term"], stack["separator"], stack["description"])
}

func (c *current) onLabeledListItem33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem33()
}

func (c *current) onLabeledListItem44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem44()
}

func (c *current) onLabeledListItem52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem52()
}

func (c *current) onLabeledListItem30(term, separator interface{}) (interface{}, error) {
	// here, WS is optional since there is no description afterwards
	// level is '1' for a '::' separator, '2' for a ':::' separator and '3' for a '::::' separator
	return types.NewLabeledListItem(len(separator.(string))-1, term.(string), nil)

}

func (p *parser) callonLabeledListItem30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem30(stack["term"], stack["separator"])
}

func (c *current) onLabeledListItemDescription1(elements interface{}) (interface{}, error) {
	// TODO: replace with (ListParagraph+ ContinuedDocumentElement*) and use a single rule for all item contents ?
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonLabeledListItemDescription1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription1(stack["elements"])
}

func (c *current) onParagraph11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph11()
}

func (c *current) onParagraph19() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph19()
}

func (c *current) onParagraph21() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph21()
}

func (c *current) onParagraph23() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph23()
}

func (c *current) onParagraph25() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph25()
}

func (c *current) onParagraph27() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph27()
}

func (c *current) onParagraph2(t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind))

}

func (p *parser) callonParagraph2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph2(stack["t"], stack["lines"])
}

func (c *current) onParagraph42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph42()
}

func (c *current) onParagraph33(lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}))

}

func (p *parser) callonParagraph33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph33(stack["lines"])
}

func (c *current) onMasqueradeParagraph11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph11()
}

func (c *current) onMasqueradeParagraph16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph16()
}

func (c *current) onMasqueradeParagraph20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph20()
}

func (c *current) onMasqueradeParagraph36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph36()
}

func (c *current) onMasqueradeParagraph54() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph54()
}

func (c *current) onMasqueradeParagraph7(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonMasqueradeParagraph7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph7(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onMasqueradeParagraph65() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph65()
}

func (c *current) onMasqueradeParagraph70() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph70() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph70()
}

func (c *current) onMasqueradeParagraph74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph74()
}

func (c *current) onMasqueradeParagraph92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph92()
}

func (c *current) onMasqueradeParagraph61(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonMasqueradeParagraph61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph61(stack["kind"], stack["author"])
}

func (c *current) onMasqueradeParagraph103() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph103()
}

func (c *current) onMasqueradeParagraph108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph108()
}

func (c *current) onMasqueradeParagraph114() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph114()
}

func (c *current) onMasqueradeParagraph99(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonMasqueradeParagraph99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph99(stack["kind"])
}

func (c *current) onMasqueradeParagraph125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph125()
}

func (c *current) onMasqueradeParagraph130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph130()
}

func (c *current) onMasqueradeParagraph134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph134()
}

func (c *current) onMasqueradeParagraph150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph150()
}

func (c *current) onMasqueradeParagraph168() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph168()
}

func (c *current) onMasqueradeParagraph121(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonMasqueradeParagraph121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph121(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onMasqueradeParagraph179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph179()
}

func (c *current) onMasqueradeParagraph184() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph184()
}

func (c *current) onMasqueradeParagraph188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph188()
}

func (c *current) onMasqueradeParagraph206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph206()
}

func (c *current) onMasqueradeParagraph175(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonMasqueradeParagraph175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph175(stack["kind"], stack["author"])
}

func (c *current) onMasqueradeParagraph217() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph217()
}

func (c *current) onMasqueradeParagraph222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph222()
}

func (c *current) onMasqueradeParagraph228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph228()
}

func (c *current) onMasqueradeParagraph213(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonMasqueradeParagraph213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph213(stack["kind"])
}

func (c *current) onMasqueradeParagraph254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph254()
}

func (c *current) onMasqueradeParagraph244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph244()
}

func (c *current) onMasqueradeParagraph240(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonMasqueradeParagraph240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph240(stack["id"])
}

func (c *current) onMasqueradeParagraph282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph282()
}

func (c *current) onMasqueradeParagraph272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph272()
}

func (c *current) onMasqueradeParagraph268(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonMasqueradeParagraph268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph268(stack["id"])
}

func (c *current) onMasqueradeParagraph304() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph304()
}

func (c *current) onMasqueradeParagraph307() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph307()
}

func (c *current) onMasqueradeParagraph296(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonMasqueradeParagraph296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph296(stack["title"])
}

func (c *current) onMasqueradeParagraph321() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph321()
}

func (c *current) onMasqueradeParagraph324() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph324()
}

func (c *current) onMasqueradeParagraph315(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonMasqueradeParagraph315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph315(stack["role"])
}

func (c *current) onMasqueradeParagraph340() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonMasqueradeParagraph340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph340()
}

func (c *current) onMasqueradeParagraph342() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonMasqueradeParagraph342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph342()
}

func (c *current) onMasqueradeParagraph344() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonMasqueradeParagraph344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph344()
}

func (c *current) onMasqueradeParagraph346() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonMasqueradeParagraph346() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph346()
}

func (c *current) onMasqueradeParagraph348() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonMasqueradeParagraph348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph348()
}

func (c *current) onMasqueradeParagraph335(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonMasqueradeParagraph335() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph335(stack["k"])
}

func (c *current) onMasqueradeParagraph351() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonMasqueradeParagraph351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph351()
}

func (c *current) onMasqueradeParagraph359() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph359() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph359()
}

func (c *current) onMasqueradeParagraph370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph370()
}

func (c *current) onMasqueradeParagraph373() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph373() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph373()
}

func (c *current) onMasqueradeParagraph376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph376()
}

func (c *current) onMasqueradeParagraph367(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph367(stack["key"])
}

func (c *current) onMasqueradeParagraph390(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph390(stack["value"])
}

func (c *current) onMasqueradeParagraph406() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph406()
}

func (c *current) onMasqueradeParagraph364(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonMasqueradeParagraph364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph364(stack["key"], stack["value"])
}

func (c *current) onMasqueradeParagraph414() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph414()
}

func (c *current) onMasqueradeParagraph417() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph417()
}

func (c *current) onMasqueradeParagraph420() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph420()
}

func (c *current) onMasqueradeParagraph411(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph411(stack["key"])
}

func (c *current) onMasqueradeParagraph437() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph437() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph437()
}

func (c *current) onMasqueradeParagraph408(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonMasqueradeParagraph408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph408(stack["key"])
}

func (c *current) onMasqueradeParagraph353(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonMasqueradeParagraph353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph353(stack["attributes"])
}

func (c *current) onMasqueradeParagraph443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph443()
}

func (c *current) onMasqueradeParagraph236(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonMasqueradeParagraph236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph236(stack["attr"])
}

func (c *current) onMasqueradeParagraph457() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph457() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph457()
}

func (c *current) onMasqueradeParagraph465() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonMasqueradeParagraph465() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph465()
}

func (c *current) onMasqueradeParagraph467() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonMasqueradeParagraph467() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph467()
}

func (c *current) onMasqueradeParagraph469() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonMasqueradeParagraph469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph469()
}

func (c *current) onMasqueradeParagraph471() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonMasqueradeParagraph471() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph471()
}

func (c *current) onMasqueradeParagraph473() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonMasqueradeParagraph473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph473()
}

func (c *current) onMasqueradeParagraph2(attributes, t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind), attributes.([]interface{})...)

}

func (p *parser) callonMasqueradeParagraph2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph2(stack["attributes"], stack["t"], stack["lines"])
}

func (c *current) onMasqueradeParagraph488() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph488() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph488()
}

func (c *current) onMasqueradeParagraph493() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph493() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph493()
}

func (c *current) onMasqueradeParagraph497() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph497() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph497()
}

func (c *current) onMasqueradeParagraph513() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph513() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph513()
}

func (c *current) onMasqueradeParagraph531() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph531()
}

func (c *current) onMasqueradeParagraph484(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonMasqueradeParagraph484() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph484(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onMasqueradeParagraph542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph542()
}

func (c *current) onMasqueradeParagraph547() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph547() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph547()
}

func (c *current) onMasqueradeParagraph551() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph551() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph551()
}

func (c *current) onMasqueradeParagraph569() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph569() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph569()
}

func (c *current) onMasqueradeParagraph538(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonMasqueradeParagraph538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph538(stack["kind"], stack["author"])
}

func (c *current) onMasqueradeParagraph580() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph580() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph580()
}

func (c *current) onMasqueradeParagraph585() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph585() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph585()
}

func (c *current) onMasqueradeParagraph591() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph591() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph591()
}

func (c *current) onMasqueradeParagraph576(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonMasqueradeParagraph576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph576(stack["kind"])
}

func (c *current) onMasqueradeParagraph602() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph602() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph602()
}

func (c *current) onMasqueradeParagraph607() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph607() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph607()
}

func (c *current) onMasqueradeParagraph611() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph611() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph611()
}

func (c *current) onMasqueradeParagraph627() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph627() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph627()
}

func (c *current) onMasqueradeParagraph645() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph645() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph645()
}

func (c *current) onMasqueradeParagraph598(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonMasqueradeParagraph598() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph598(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onMasqueradeParagraph656() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph656() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph656()
}

func (c *current) onMasqueradeParagraph661() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph661() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph661()
}

func (c *current) onMasqueradeParagraph665() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph665() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph665()
}

func (c *current) onMasqueradeParagraph683() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph683() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph683()
}

func (c *current) onMasqueradeParagraph652(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonMasqueradeParagraph652() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph652(stack["kind"], stack["author"])
}

func (c *current) onMasqueradeParagraph694() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph694() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph694()
}

func (c *current) onMasqueradeParagraph699() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph699() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph699()
}

func (c *current) onMasqueradeParagraph705() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph705() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph705()
}

func (c *current) onMasqueradeParagraph690(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonMasqueradeParagraph690() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph690(stack["kind"])
}

func (c *current) onMasqueradeParagraph731() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph731() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph731()
}

func (c *current) onMasqueradeParagraph721() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph721() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph721()
}

func (c *current) onMasqueradeParagraph717(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonMasqueradeParagraph717() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph717(stack["id"])
}

func (c *current) onMasqueradeParagraph759() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph759() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph759()
}

func (c *current) onMasqueradeParagraph749() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph749() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph749()
}

func (c *current) onMasqueradeParagraph745(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonMasqueradeParagraph745() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph745(stack["id"])
}

func (c *current) onMasqueradeParagraph781() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph781() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph781()
}

func (c *current) onMasqueradeParagraph784() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph784() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph784()
}

func (c *current) onMasqueradeParagraph773(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonMasqueradeParagraph773() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph773(stack["title"])
}

func (c *current) onMasqueradeParagraph798() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph798() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph798()
}

func (c *current) onMasqueradeParagraph801() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph801() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph801()
}

func (c *current) onMasqueradeParagraph792(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonMasqueradeParagraph792() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph792(stack["role"])
}

func (c *current) onMasqueradeParagraph817() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonMasqueradeParagraph817() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph817()
}

func (c *current) onMasqueradeParagraph819() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonMasqueradeParagraph819() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph819()
}

func (c *current) onMasqueradeParagraph821() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonMasqueradeParagraph821() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph821()
}

func (c *current) onMasqueradeParagraph823() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonMasqueradeParagraph823() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph823()
}

func (c *current) onMasqueradeParagraph825() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonMasqueradeParagraph825() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph825()
}

func (c *current) onMasqueradeParagraph812(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonMasqueradeParagraph812() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph812(stack["k"])
}

func (c *current) onMasqueradeParagraph828() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonMasqueradeParagraph828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph828()
}

func (c *current) onMasqueradeParagraph836() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph836() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph836()
}

func (c *current) onMasqueradeParagraph847() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph847() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph847()
}

func (c *current) onMasqueradeParagraph850() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph850() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph850()
}

func (c *current) onMasqueradeParagraph853() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph853() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph853()
}

func (c *current) onMasqueradeParagraph844(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph844() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph844(stack["key"])
}

func (c *current) onMasqueradeParagraph867(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph867() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph867(stack["value"])
}

func (c *current) onMasqueradeParagraph883() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph883() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph883()
}

func (c *current) onMasqueradeParagraph841(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonMasqueradeParagraph841() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph841(stack["key"], stack["value"])
}

func (c *current) onMasqueradeParagraph891() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph891() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph891()
}

func (c *current) onMasqueradeParagraph894() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph894() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph894()
}

func (c *current) onMasqueradeParagraph897() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph897() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph897()
}

func (c *current) onMasqueradeParagraph888(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph888() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph888(stack["key"])
}

func (c *current) onMasqueradeParagraph914() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph914() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph914()
}

func (c *current) onMasqueradeParagraph885(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonMasqueradeParagraph885() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph885(stack["key"])
}

func (c *current) onMasqueradeParagraph830(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonMasqueradeParagraph830() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph830(stack["attributes"])
}

func (c *current) onMasqueradeParagraph920() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph920() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph920()
}

func (c *current) onMasqueradeParagraph713(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonMasqueradeParagraph713() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph713(stack["attr"])
}

func (c *current) onMasqueradeParagraph934() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph934() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph934()
}

func (c *current) onMasqueradeParagraph479(attributes, lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}), attributes.([]interface{})...)

}

func (p *parser) callonMasqueradeParagraph479() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph479(stack["attributes"], stack["lines"])
}

func (c *current) onInlineElements10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements10()
}

func (c *current) onInlineElements4(content interface{}) (interface{}, error) {
	return types.NewSingleLineComment(content.(string))
}

func (p *parser) callonInlineElements4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements4(stack["content"])
}

func (c *current) onInlineElements2(comment interface{}) (interface{}, error) {
	return types.NewInlineElements([]interface{}{comment})

}

func (p *parser) callonInlineElements2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements2(stack["comment"])
}

func (c *current) onInlineElements36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements36()
}

func (c *current) onInlineElements28() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonInlineElements28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements28()
}

func (c *current) onInlineElements51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements51()
}

func (c *current) onInlineElements63() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements63()
}

func (c *current) onInlineElements75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements75()
}

func (c *current) onInlineElements88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements88()
}

func (c *current) onInlineElements100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements100()
}

func (c *current) onInlineElements116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements116()
}

func (c *current) onInlineElements122() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements122()
}

func (c *current) onInlineElements112() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElements112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements112()
}

func (c *current) onInlineElements25(elements, linebreak interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(append(elements.([]interface{}), linebreak))

}

func (p *parser) callonInlineElements25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements25(stack["elements"], stack["linebreak"])
}

func (c *current) onInlineElement14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement14()
}

func (c *current) onInlineElement20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement20()
}

func (c *current) onInlineElement10() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElement10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement10()
}

func (c *current) onInlineElement44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement44()
}

func (c *current) onInlineElement34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement34()
}

func (c *current) onInlineElement60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement60()
}

func (c *current) onInlineElement64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement64()
}

func (c *current) onInlineElement30(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElement30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement30(stack["id"], stack["label"])
}

func (c *current) onInlineElement85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement85()
}

func (c *current) onInlineElement75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement75()
}

func (c *current) onInlineElement71(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElement71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement71(stack["id"])
}

func (c *current) onInlineElement116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement116()
}

func (c *current) onInlineElement106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement106()
}

func (c *current) onInlineElement129() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement129()
}

func (c *current) onInlineElement141() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement141()
}

func (c *current) onInlineElement153() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement153()
}

func (c *current) onInlineElement174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement174()
}

func (c *current) onInlineElement177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement177()
}

func (c *current) onInlineElement180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement180()
}

func (c *current) onInlineElement171(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement171(stack["key"])
}

func (c *current) onInlineElement194(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement194(stack["value"])
}

func (c *current) onInlineElement210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement210()
}

func (c *current) onInlineElement168(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement168(stack["key"], stack["value"])
}

func (c *current) onInlineElement218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement218()
}

func (c *current) onInlineElement221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement221()
}

func (c *current) onInlineElement224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement224()
}

func (c *current) onInlineElement215(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement215(stack["key"])
}

func (c *current) onInlineElement241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement241()
}

func (c *current) onInlineElement212(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement212(stack["key"])
}

func (c *current) onInlineElement125(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement125(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElement248() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement248()
}

func (c *current) onInlineElement260() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement260()
}

func (c *current) onInlineElement281() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement281()
}

func (c *current) onInlineElement284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement284()
}

func (c *current) onInlineElement287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement287()
}

func (c *current) onInlineElement278(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement278(stack["key"])
}

func (c *current) onInlineElement301(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement301(stack["value"])
}

func (c *current) onInlineElement317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement317()
}

func (c *current) onInlineElement275(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement275(stack["key"], stack["value"])
}

func (c *current) onInlineElement325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement325()
}

func (c *current) onInlineElement328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement328()
}

func (c *current) onInlineElement331() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement331()
}

func (c *current) onInlineElement322(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement322(stack["key"])
}

func (c *current) onInlineElement348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement348()
}

func (c *current) onInlineElement319(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement319(stack["key"])
}

func (c *current) onInlineElement244(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement244(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElement355() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement355()
}

func (c *current) onInlineElement376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement376()
}

func (c *current) onInlineElement379() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement379()
}

func (c *current) onInlineElement382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement382()
}

func (c *current) onInlineElement373(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement373() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement373(stack["key"])
}

func (c *current) onInlineElement396(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement396(stack["value"])
}

func (c *current) onInlineElement412() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement412()
}

func (c *current) onInlineElement370(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement370(stack["key"], stack["value"])
}

func (c *current) onInlineElement420() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement420()
}

func (c *current) onInlineElement423() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement423() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement423()
}

func (c *current) onInlineElement426() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement426()
}

func (c *current) onInlineElement417(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement417(stack["key"])
}

func (c *current) onInlineElement443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement443()
}

func (c *current) onInlineElement414(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement414(stack["key"])
}

func (c *current) onInlineElement351(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement351(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElement458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement458()
}

func (c *current) onInlineElement461() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement461() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement461()
}

func (c *current) onInlineElement464() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement464()
}

func (c *current) onInlineElement455(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement455() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement455(stack["key"])
}

func (c *current) onInlineElement478(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement478() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement478(stack["value"])
}

func (c *current) onInlineElement494() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement494()
}

func (c *current) onInlineElement452(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement452(stack["key"], stack["value"])
}

func (c *current) onInlineElement502() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement502() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement502()
}

func (c *current) onInlineElement505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement505()
}

func (c *current) onInlineElement508() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement508()
}

func (c *current) onInlineElement499(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement499() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement499(stack["key"])
}

func (c *current) onInlineElement525() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement525()
}

func (c *current) onInlineElement496(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement496(stack["key"])
}

func (c *current) onInlineElement446(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement446(stack["otherAttrs"])
}

func (c *current) onInlineElement100(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement100(stack["path"], stack["inlineAttributes"])
}

func (c *current) onInlineElement554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement554()
}

func (c *current) onInlineElement544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement544()
}

func (c *current) onInlineElement535() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement535()
}

func (c *current) onInlineElement567() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement567() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement567()
}

func (c *current) onInlineElement584() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement584()
}

func (c *current) onInlineElement587() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement587() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement587()
}

func (c *current) onInlineElement590() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement590() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement590()
}

func (c *current) onInlineElement581(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement581() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement581(stack["key"])
}

func (c *current) onInlineElement604(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement604(stack["value"])
}

func (c *current) onInlineElement620() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement620()
}

func (c *current) onInlineElement578(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement578(stack["key"], stack["value"])
}

func (c *current) onInlineElement628() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement628()
}

func (c *current) onInlineElement631() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement631() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement631()
}

func (c *current) onInlineElement634() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement634()
}

func (c *current) onInlineElement625(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement625() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement625(stack["key"])
}

func (c *current) onInlineElement651() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement651() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement651()
}

func (c *current) onInlineElement622(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement622() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement622(stack["key"])
}

func (c *current) onInlineElement563(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement563() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement563(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement666() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement666() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement666()
}

func (c *current) onInlineElement669() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement669()
}

func (c *current) onInlineElement672() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement672() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement672()
}

func (c *current) onInlineElement663(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement663() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement663(stack["key"])
}

func (c *current) onInlineElement686(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement686() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement686(stack["value"])
}

func (c *current) onInlineElement702() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement702() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement702()
}

func (c *current) onInlineElement660(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement660() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement660(stack["key"], stack["value"])
}

func (c *current) onInlineElement710() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement710() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement710()
}

func (c *current) onInlineElement713() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement713() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement713()
}

func (c *current) onInlineElement716() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement716()
}

func (c *current) onInlineElement707(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement707() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement707(stack["key"])
}

func (c *current) onInlineElement733() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement733() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement733()
}

func (c *current) onInlineElement704(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement704(stack["key"])
}

func (c *current) onInlineElement654(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement654() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement654(stack["otherAttrs"])
}

func (c *current) onInlineElement531(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement531(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElement757() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement757() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement757()
}

func (c *current) onInlineElement747() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement747() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement747()
}

func (c *current) onInlineElement739() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement739() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement739()
}

func (c *current) onInlineElement770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement770()
}

func (c *current) onInlineElement787() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement787() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement787()
}

func (c *current) onInlineElement790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement790()
}

func (c *current) onInlineElement793() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement793() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement793()
}

func (c *current) onInlineElement784(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement784() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement784(stack["key"])
}

func (c *current) onInlineElement807(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement807() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement807(stack["value"])
}

func (c *current) onInlineElement823() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement823() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement823()
}

func (c *current) onInlineElement781(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement781() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement781(stack["key"], stack["value"])
}

func (c *current) onInlineElement831() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement831() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement831()
}

func (c *current) onInlineElement834() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement834() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement834()
}

func (c *current) onInlineElement837() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement837()
}

func (c *current) onInlineElement828(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement828(stack["key"])
}

func (c *current) onInlineElement854() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement854() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement854()
}

func (c *current) onInlineElement825(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement825() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement825(stack["key"])
}

func (c *current) onInlineElement766(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement766() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement766(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement869() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement869() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement869()
}

func (c *current) onInlineElement872() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement872() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement872()
}

func (c *current) onInlineElement875() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement875() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement875()
}

func (c *current) onInlineElement866(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement866() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement866(stack["key"])
}

func (c *current) onInlineElement889(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement889() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement889(stack["value"])
}

func (c *current) onInlineElement905() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement905() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement905()
}

func (c *current) onInlineElement863(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement863() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement863(stack["key"], stack["value"])
}

func (c *current) onInlineElement913() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement913() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement913()
}

func (c *current) onInlineElement916() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement916() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement916()
}

func (c *current) onInlineElement919() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement919() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement919()
}

func (c *current) onInlineElement910(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement910() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement910(stack["key"])
}

func (c *current) onInlineElement936() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement936() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement936()
}

func (c *current) onInlineElement907(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement907(stack["key"])
}

func (c *current) onInlineElement857(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement857() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement857(stack["otherAttrs"])
}

func (c *current) onInlineElement736(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement736() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement736(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElement959() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement959() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement959()
}

func (c *current) onInlineElement949() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement949() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement949()
}

func (c *current) onInlineElement941() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement941() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement941()
}

func (c *current) onInlineElement939(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonInlineElement939() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement939(stack["url"])
}

func (c *current) onInlineElement528(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElement528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement528(stack["link"])
}

func (c *current) onInlineElement970() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement970() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement970()
}

func (c *current) onInlineElement966(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonInlineElement966() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement966(stack["name"])
}

func (c *current) onInlineElement991() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement991() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement991()
}

func (c *current) onInlineElement981() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement981() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement981()
}

func (c *current) onInlineElement1008() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1008() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1008()
}

func (c *current) onInlineElement977(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonInlineElement977() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement977(stack["id"])
}

func (c *current) onInlineElement1015() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1015() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1015()
}

func (c *current) onInlineElement1021() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1021() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1021()
}

func (c *current) onInlineElement1011() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElement1011() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1011()
}

func (c *current) onInlineElement1032() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1032() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1032()
}

func (c *current) onInlineElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1(stack["element"])
}

func (c *current) onInlineElementsWithoutSubtitution12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution12()
}

func (c *current) onInlineElementsWithoutSubtitution4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonInlineElementsWithoutSubtitution4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution4()
}

func (c *current) onInlineElementsWithoutSubtitution27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution27()
}

func (c *current) onInlineElementsWithoutSubtitution39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution39()
}

func (c *current) onInlineElementsWithoutSubtitution51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution51()
}

func (c *current) onInlineElementsWithoutSubtitution64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution64()
}

func (c *current) onInlineElementsWithoutSubtitution76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution76()
}

func (c *current) onInlineElementsWithoutSubtitution92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution92()
}

func (c *current) onInlineElementsWithoutSubtitution98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution98()
}

func (c *current) onInlineElementsWithoutSubtitution88() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElementsWithoutSubtitution88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution88()
}

func (c *current) onInlineElementsWithoutSubtitution1(elements, linebreak interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(append(elements.([]interface{}), linebreak))
}

func (p *parser) callonInlineElementsWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution1(stack["elements"], stack["linebreak"])
}

func (c *current) onInlineElementWithoutSubtitution14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution14()
}

func (c *current) onInlineElementWithoutSubtitution20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution20()
}

func (c *current) onInlineElementWithoutSubtitution10() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElementWithoutSubtitution10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution10()
}

func (c *current) onInlineElementWithoutSubtitution44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution44()
}

func (c *current) onInlineElementWithoutSubtitution34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution34()
}

func (c *current) onInlineElementWithoutSubtitution60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution60()
}

func (c *current) onInlineElementWithoutSubtitution64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution64()
}

func (c *current) onInlineElementWithoutSubtitution30(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElementWithoutSubtitution30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution30(stack["id"], stack["label"])
}

func (c *current) onInlineElementWithoutSubtitution85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution85()
}

func (c *current) onInlineElementWithoutSubtitution75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution75()
}

func (c *current) onInlineElementWithoutSubtitution71(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution71(stack["id"])
}

func (c *current) onInlineElementWithoutSubtitution116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution116()
}

func (c *current) onInlineElementWithoutSubtitution106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution106()
}

func (c *current) onInlineElementWithoutSubtitution129() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution129()
}

func (c *current) onInlineElementWithoutSubtitution141() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution141()
}

func (c *current) onInlineElementWithoutSubtitution153() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution153()
}

func (c *current) onInlineElementWithoutSubtitution174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution174()
}

func (c *current) onInlineElementWithoutSubtitution177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution177()
}

func (c *current) onInlineElementWithoutSubtitution180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution180()
}

func (c *current) onInlineElementWithoutSubtitution171(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution171(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution194(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution194(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution210()
}

func (c *current) onInlineElementWithoutSubtitution168(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution168(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution218()
}

func (c *current) onInlineElementWithoutSubtitution221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution221()
}

func (c *current) onInlineElementWithoutSubtitution224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution224()
}

func (c *current) onInlineElementWithoutSubtitution215(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution215(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution241()
}

func (c *current) onInlineElementWithoutSubtitution212(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution212(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution125(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution125(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution248() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution248()
}

func (c *current) onInlineElementWithoutSubtitution260() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution260()
}

func (c *current) onInlineElementWithoutSubtitution281() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution281()
}

func (c *current) onInlineElementWithoutSubtitution284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution284()
}

func (c *current) onInlineElementWithoutSubtitution287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution287()
}

func (c *current) onInlineElementWithoutSubtitution278(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution278(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution301(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution301(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution317()
}

func (c *current) onInlineElementWithoutSubtitution275(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution275(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution325()
}

func (c *current) onInlineElementWithoutSubtitution328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution328()
}

func (c *current) onInlineElementWithoutSubtitution331() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution331()
}

func (c *current) onInlineElementWithoutSubtitution322(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution322(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution348()
}

func (c *current) onInlineElementWithoutSubtitution319(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution319(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution244(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution244(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution355() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution355()
}

func (c *current) onInlineElementWithoutSubtitution376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution376()
}

func (c *current) onInlineElementWithoutSubtitution379() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution379()
}

func (c *current) onInlineElementWithoutSubtitution382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution382()
}

func (c *current) onInlineElementWithoutSubtitution373(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution373() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution373(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution396(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution396(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution412() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution412()
}

func (c *current) onInlineElementWithoutSubtitution370(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution370(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution420() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution420()
}

func (c *current) onInlineElementWithoutSubtitution423() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution423() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution423()
}

func (c *current) onInlineElementWithoutSubtitution426() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution426()
}

func (c *current) onInlineElementWithoutSubtitution417(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution417(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution443()
}

func (c *current) onInlineElementWithoutSubtitution414(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution414(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution351(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution351(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution458()
}

func (c *current) onInlineElementWithoutSubtitution461() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution461() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution461()
}

func (c *current) onInlineElementWithoutSubtitution464() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution464()
}

func (c *current) onInlineElementWithoutSubtitution455(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution455() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution455(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution478(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution478() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution478(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution494() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution494()
}

func (c *current) onInlineElementWithoutSubtitution452(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution452(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution502() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution502() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution502()
}

func (c *current) onInlineElementWithoutSubtitution505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution505()
}

func (c *current) onInlineElementWithoutSubtitution508() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution508()
}

func (c *current) onInlineElementWithoutSubtitution499(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution499() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution499(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution525() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution525()
}

func (c *current) onInlineElementWithoutSubtitution496(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution496(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution446(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution446(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution100(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution100(stack["path"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution554()
}

func (c *current) onInlineElementWithoutSubtitution544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution544()
}

func (c *current) onInlineElementWithoutSubtitution535() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution535()
}

func (c *current) onInlineElementWithoutSubtitution567() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution567() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution567()
}

func (c *current) onInlineElementWithoutSubtitution584() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution584()
}

func (c *current) onInlineElementWithoutSubtitution587() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution587() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution587()
}

func (c *current) onInlineElementWithoutSubtitution590() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution590() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution590()
}

func (c *current) onInlineElementWithoutSubtitution581(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution581() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution581(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution604(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution604(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution620() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution620()
}

func (c *current) onInlineElementWithoutSubtitution578(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution578(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution628() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution628()
}

func (c *current) onInlineElementWithoutSubtitution631() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution631() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution631()
}

func (c *current) onInlineElementWithoutSubtitution634() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution634()
}

func (c *current) onInlineElementWithoutSubtitution625(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution625() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution625(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution651() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution651() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution651()
}

func (c *current) onInlineElementWithoutSubtitution622(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution622() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution622(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution563(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution563() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution563(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution666() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution666() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution666()
}

func (c *current) onInlineElementWithoutSubtitution669() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution669()
}

func (c *current) onInlineElementWithoutSubtitution672() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution672() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution672()
}

func (c *current) onInlineElementWithoutSubtitution663(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution663() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution663(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution686(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution686() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution686(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution702() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution702() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution702()
}

func (c *current) onInlineElementWithoutSubtitution660(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution660() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution660(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution710() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution710() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution710()
}

func (c *current) onInlineElementWithoutSubtitution713() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution713() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution713()
}

func (c *current) onInlineElementWithoutSubtitution716() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution716()
}

func (c *current) onInlineElementWithoutSubtitution707(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution707() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution707(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution733() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution733() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution733()
}

func (c *current) onInlineElementWithoutSubtitution704(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution704(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution654(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution654() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution654(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution531(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution531(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution757() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution757() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution757()
}

func (c *current) onInlineElementWithoutSubtitution747() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution747() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution747()
}

func (c *current) onInlineElementWithoutSubtitution739() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution739() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution739()
}

func (c *current) onInlineElementWithoutSubtitution770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution770()
}

func (c *current) onInlineElementWithoutSubtitution787() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution787() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution787()
}

func (c *current) onInlineElementWithoutSubtitution790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution790()
}

func (c *current) onInlineElementWithoutSubtitution793() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution793() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution793()
}

func (c *current) onInlineElementWithoutSubtitution784(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution784() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution784(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution807(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution807() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution807(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution823() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution823() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution823()
}

func (c *current) onInlineElementWithoutSubtitution781(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution781() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution781(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution831() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution831() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution831()
}

func (c *current) onInlineElementWithoutSubtitution834() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution834() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution834()
}

func (c *current) onInlineElementWithoutSubtitution837() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution837()
}

func (c *current) onInlineElementWithoutSubtitution828(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution828(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution854() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution854() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution854()
}

func (c *current) onInlineElementWithoutSubtitution825(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution825() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution825(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution766(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution766() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution766(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution869() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution869() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution869()
}

func (c *current) onInlineElementWithoutSubtitution872() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution872() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution872()
}

func (c *current) onInlineElementWithoutSubtitution875() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution875() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution875()
}

func (c *current) onInlineElementWithoutSubtitution866(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution866() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution866(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution889(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution889() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution889(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution905() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution905() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution905()
}

func (c *current) onInlineElementWithoutSubtitution863(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution863() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution863(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution913() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution913() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution913()
}

func (c *current) onInlineElementWithoutSubtitution916() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution916() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution916()
}

func (c *current) onInlineElementWithoutSubtitution919() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution919() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution919()
}

func (c *current) onInlineElementWithoutSubtitution910(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution910() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution910(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution936() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution936() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution936()
}

func (c *current) onInlineElementWithoutSubtitution907(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution907(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution857(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution857() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution857(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution736(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution736() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution736(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution959() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution959() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution959()
}

func (c *current) onInlineElementWithoutSubtitution949() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution949() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution949()
}

func (c *current) onInlineElementWithoutSubtitution941() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution941() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution941()
}

func (c *current) onInlineElementWithoutSubtitution939(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution939() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution939(stack["url"])
}

func (c *current) onInlineElementWithoutSubtitution528(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElementWithoutSubtitution528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution528(stack["link"])
}

func (c *current) onInlineElementWithoutSubtitution980() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution980() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution980()
}

func (c *current) onInlineElementWithoutSubtitution970() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution970() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution970()
}

func (c *current) onInlineElementWithoutSubtitution997() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution997() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution997()
}

func (c *current) onInlineElementWithoutSubtitution966(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonInlineElementWithoutSubtitution966() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution966(stack["id"])
}

func (c *current) onInlineElementWithoutSubtitution1004() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1004() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1004()
}

func (c *current) onInlineElementWithoutSubtitution1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElementWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1(stack["element"])
}

func (c *current) onBoldText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText2(stack["content"])
}

func (c *current) onBoldText10(content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewQuotedText(types.Bold, result)

}

func (p *parser) callonBoldText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText10(stack["content"])
}

func (c *current) onBoldText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText18(stack["content"])
}

func (c *current) onEscapedBoldText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText5()
}

func (c *current) onEscapedBoldText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "**", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText17()
}

func (c *current) onEscapedBoldText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "*", result)

}

func (p *parser) callonEscapedBoldText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText29()
}

func (c *current) onEscapedBoldText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "*", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText26(stack["backslashes"], stack["content"])
}

func (c *current) onItalicText2(content interface{}) (interface{}, error) {
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText2(stack["content"])
}

func (c *current) onItalicText10(content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewQuotedText(types.Italic, result)

}

func (p *parser) callonItalicText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText10(stack["content"])
}

func (c *current) onItalicText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '__' to emphazise a portion of a word)
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText18(stack["content"])
}

func (c *current) onEscapedItalicText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText5()
}

func (c *current) onEscapedItalicText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "__", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText17()
}

func (c *current) onEscapedItalicText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "_", result)

}

func (p *parser) callonEscapedItalicText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText29()
}

func (c *current) onEscapedItalicText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "_", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText26(stack["backslashes"], stack["content"])
}

func (c *current) onMonospaceText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText2(stack["content"])
}

func (c *current) onMonospaceText10(content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewQuotedText(types.Monospace, result)

}

func (p *parser) callonMonospaceText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText10(stack["content"])
}

func (c *current) onMonospaceText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '``' to emphazise a portion of a word)
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText18(stack["content"])
}

func (c *current) onEscapedMonospaceText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText5()
}

func (c *current) onEscapedMonospaceText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "``", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText17()
}

func (c *current) onEscapedMonospaceText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "`", result)

}

func (p *parser) callonEscapedMonospaceText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText29()
}

func (c *current) onEscapedMonospaceText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "`", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText26(stack["backslashes"], stack["content"])
}

func (c *current) onSubscriptText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Subscript, content.([]interface{}))

}

func (p *parser) callonSubscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText2(stack["content"])
}

func (c *current) onSubscriptText10(content interface{}) (interface{}, error) {
	// unbalanced "~~" vs "~" punctuation
	result := append([]interface{}{"~"}, content.([]interface{}))
	return types.NewQuotedText(types.Subscript, result)

}

func (p *parser) callonSubscriptText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText10(stack["content"])
}

func (c *current) onSubscriptText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '~~' to emphazise a portion of a word)
	return types.NewQuotedText(types.Subscript, content.([]interface{}))

}

func (p *parser) callonSubscriptText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText18(stack["content"])
}

func (c *current) onEscapedSubscriptText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText5()
}

func (c *current) onEscapedSubscriptText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "~~", content.([]interface{}))

}

func (p *parser) callonEscapedSubscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSubscriptText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText17()
}

func (c *current) onEscapedSubscriptText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "~~" vs "~" punctuation
	result := append([]interface{}{"~"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "~", result)

}

func (p *parser) callonEscapedSubscriptText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSubscriptText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText29()
}

func (c *current) onEscapedSubscriptText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "~", content.([]interface{}))

}

func (p *parser) callonEscapedSubscriptText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText26(stack["backslashes"], stack["content"])
}

func (c *current) onSuperscriptText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Superscript, content.([]interface{}))

}

func (p *parser) callonSuperscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText2(stack["content"])
}

func (c *current) onSuperscriptText10(content interface{}) (interface{}, error) {
	// unbalanced "^^" vs "^" punctuation
	result := append([]interface{}{"^"}, content.([]interface{}))
	return types.NewQuotedText(types.Superscript, result)

}

func (p *parser) callonSuperscriptText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText10(stack["content"])
}

func (c *current) onSuperscriptText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Superscript, content.([]interface{}))

}

func (p *parser) callonSuperscriptText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText18(stack["content"])
}

func (c *current) onEscapedSuperscriptText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText5()
}

func (c *current) onEscapedSuperscriptText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "^^", content.([]interface{}))

}

func (p *parser) callonEscapedSuperscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSuperscriptText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText17()
}

func (c *current) onEscapedSuperscriptText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "^^" vs "^" punctuation
	result := append([]interface{}{"^"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "^", result)

}

func (p *parser) callonEscapedSuperscriptText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSuperscriptText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText29()
}

func (c *current) onEscapedSuperscriptText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "^", content.([]interface{}))

}

func (p *parser) callonEscapedSuperscriptText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText26(stack["backslashes"], stack["content"])
}

func (c *current) onQuotedTextContent8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContent8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContent8()
}

func (c *current) onQuotedTextContentElement12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement12()
}

func (c *current) onQuotedTextContentElement35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement35()
}

func (c *current) onQuotedTextContentElement25() (interface{}, error) {
	// cannot have "*", "_", "`", "~" or "^" within, maybe because the user inserted another quote, or made an error (extra or missing space, for example)
	return c.text, nil
}

func (p *parser) callonQuotedTextContentElement25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement25()
}

func (c *current) onPassthrough2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.TriplePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough2(stack["content"])
}

func (c *current) onPassthrough12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.SinglePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough12(stack["content"])
}

func (c *current) onPassthroughMacro2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro2(stack["content"])
}

func (c *current) onPassthroughMacro12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro12(stack["content"])
}

func (c *current) onInlineFootnote2(content interface{}) (interface{}, error) {
	return types.NewFootnote("", content.(types.InlineElements))

}

func (p *parser) callonInlineFootnote2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote2(stack["content"])
}

func (c *current) onInlineFootnote12() (interface{}, error) {
	// footnote ID not may span multiple lines
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote12()
}

func (c *current) onInlineFootnote8(ref, content interface{}) (interface{}, error) {
	return types.NewFootnote(ref.(string), content.(types.InlineElements))

}

func (p *parser) callonInlineFootnote8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote8(stack["ref"], stack["content"])
}

func (c *current) onInlineFootnote34() (interface{}, error) {
	// footnote ID not may span multiple lines
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote34()
}

func (c *current) onInlineFootnote30(ref interface{}) (interface{}, error) {
	return types.NewFootnote(ref.(string), types.InlineElements{}) // foot note referring to another note

}

func (p *parser) callonInlineFootnote30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote30(stack["ref"])
}

func (c *current) onFootnoteContent16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent16()
}

func (c *current) onFootnoteContent33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent33()
}

func (c *current) onFootnoteContent23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent23()
}

func (c *current) onFootnoteContent50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent50()
}

func (c *current) onFootnoteContent19(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonFootnoteContent19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent19(stack["id"])
}

func (c *current) onFootnoteContent56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent56()
}

func (c *current) onFootnoteContent1(elements interface{}) (interface{}, error) {
	// footnote content may span multiple lines
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonFootnoteContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent1(stack["elements"])
}

func (c *current) onDelimitedBlock9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock9()
}

func (c *current) onDelimitedBlock29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock29()
}

func (c *current) onDelimitedBlock49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock49()
}

func (c *current) onDelimitedBlock40() (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(string(c.text))
}

func (p *parser) callonDelimitedBlock40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock40()
}

func (c *current) onDelimitedBlock21(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonDelimitedBlock21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock21(stack["line"])
}

func (c *current) onDelimitedBlock18(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonDelimitedBlock18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock18(stack["lines"])
}

func (c *current) onDelimitedBlock74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock74()
}

func (c *current) onDelimitedBlock3(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Listing, content.([]interface{}), types.None)
}

func (p *parser) callonDelimitedBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock3(stack["content"])
}

func (c *current) onDelimitedBlock90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock90()
}

func (c *current) onDelimitedBlock97() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock97()
}

func (c *current) onDelimitedBlock121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock121()
}

func (c *current) onDelimitedBlock84(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Comment, content.([]interface{}), types.Verbatim)
}

func (p *parser) callonDelimitedBlock84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock84(stack["content"])
}

func (c *current) onFencedBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock7()
}

func (c *current) onFencedBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock23()
}

func (c *current) onFencedBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Fenced, content.([]interface{}), types.None)
}

func (p *parser) callonFencedBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock1(stack["content"])
}

func (c *current) onFencedBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent12()
}

func (c *current) onFencedBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonFencedBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent4()
}

func (c *current) onExampleBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock7()
}

func (c *current) onExampleBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock27()
}

func (c *current) onExampleBlock19() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonExampleBlock19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock19()
}

func (c *current) onExampleBlock40() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock40()
}

func (c *current) onExampleBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Example, content.([]interface{}), types.None)
}

func (p *parser) callonExampleBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock1(stack["content"])
}

func (c *current) onBlockParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonBlockParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph1(stack["lines"])
}

func (c *current) onBlockParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine9()
}

func (c *current) onBlockParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonBlockParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine13()
}

func (c *current) onBlockParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonBlockParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine15()
}

func (c *current) onBlockParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonBlockParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine17()
}

func (c *current) onBlockParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonBlockParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine19()
}

func (c *current) onBlockParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonBlockParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine21()
}

func (c *current) onBlockParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonBlockParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine23()
}

func (c *current) onBlockParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonBlockParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine28()
}

func (c *current) onBlockParagraphLine32() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonBlockParagraphLine32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine32()
}

func (c *current) onBlockParagraphLine36() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonBlockParagraphLine36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine36()
}

func (c *current) onBlockParagraphLine41() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonBlockParagraphLine41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine41()
}

func (c *current) onBlockParagraphLine49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine49()
}

func (c *current) onBlockParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine4(stack["prefix"])
}

func (c *current) onBlockParagraphLine57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine57()
}

func (c *current) onBlockParagraphLine61() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonBlockParagraphLine61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine61()
}

func (c *current) onBlockParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonBlockParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine63()
}

func (c *current) onBlockParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonBlockParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine65()
}

func (c *current) onBlockParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonBlockParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine67()
}

func (c *current) onBlockParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonBlockParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine69()
}

func (c *current) onBlockParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonBlockParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine71()
}

func (c *current) onBlockParagraphLine76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine76()
}

func (c *current) onBlockParagraphLine52(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine52(stack["prefix"])
}

func (c *current) onBlockParagraphLine80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine80()
}

func (c *current) onBlockParagraphLine90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine90()
}

func (c *current) onBlockParagraphLine102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine102()
}

func (c *current) onBlockParagraphLine96() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonBlockParagraphLine96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine96()
}

func (c *current) onBlockParagraphLine117() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine117()
}

func (c *current) onBlockParagraphLine129() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine129()
}

func (c *current) onBlockParagraphLine141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine141()
}

func (c *current) onBlockParagraphLine154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine154()
}

func (c *current) onBlockParagraphLine166() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine166()
}

func (c *current) onBlockParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonBlockParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine1(stack["line"])
}

func (c *current) onQuoteBlock10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock10()
}

func (c *current) onQuoteBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock15()
}

func (c *current) onQuoteBlock19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock19()
}

func (c *current) onQuoteBlock35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock35()
}

func (c *current) onQuoteBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock53()
}

func (c *current) onQuoteBlock6(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonQuoteBlock6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock6(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onQuoteBlock64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock64()
}

func (c *current) onQuoteBlock69() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock69()
}

func (c *current) onQuoteBlock73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock73()
}

func (c *current) onQuoteBlock91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock91()
}

func (c *current) onQuoteBlock60(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonQuoteBlock60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock60(stack["kind"], stack["author"])
}

func (c *current) onQuoteBlock102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock102()
}

func (c *current) onQuoteBlock107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock107()
}

func (c *current) onQuoteBlock113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock113()
}

func (c *current) onQuoteBlock98(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonQuoteBlock98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock98(stack["kind"])
}

func (c *current) onQuoteBlock139() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock139()
}

func (c *current) onQuoteBlock129() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock129()
}

func (c *current) onQuoteBlock125(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonQuoteBlock125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock125(stack["id"])
}

func (c *current) onQuoteBlock167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock167()
}

func (c *current) onQuoteBlock157() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock157()
}

func (c *current) onQuoteBlock153(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonQuoteBlock153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock153(stack["id"])
}

func (c *current) onQuoteBlock189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock189()
}

func (c *current) onQuoteBlock192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock192()
}

func (c *current) onQuoteBlock181(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonQuoteBlock181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock181(stack["title"])
}

func (c *current) onQuoteBlock206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock206()
}

func (c *current) onQuoteBlock209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock209()
}

func (c *current) onQuoteBlock200(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonQuoteBlock200() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock200(stack["role"])
}

func (c *current) onQuoteBlock225() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock225()
}

func (c *current) onQuoteBlock227() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock227()
}

func (c *current) onQuoteBlock229() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock229()
}

func (c *current) onQuoteBlock231() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock231()
}

func (c *current) onQuoteBlock233() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock233()
}

func (c *current) onQuoteBlock220(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonQuoteBlock220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock220(stack["k"])
}

func (c *current) onQuoteBlock236() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonQuoteBlock236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock236()
}

func (c *current) onQuoteBlock244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock244()
}

func (c *current) onQuoteBlock255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock255()
}

func (c *current) onQuoteBlock258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock258()
}

func (c *current) onQuoteBlock261() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock261()
}

func (c *current) onQuoteBlock252(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock252(stack["key"])
}

func (c *current) onQuoteBlock275(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock275(stack["value"])
}

func (c *current) onQuoteBlock291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock291()
}

func (c *current) onQuoteBlock249(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonQuoteBlock249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock249(stack["key"], stack["value"])
}

func (c *current) onQuoteBlock299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock299()
}

func (c *current) onQuoteBlock302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock302()
}

func (c *current) onQuoteBlock305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock305()
}

func (c *current) onQuoteBlock296(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock296(stack["key"])
}

func (c *current) onQuoteBlock322() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock322()
}

func (c *current) onQuoteBlock293(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonQuoteBlock293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock293(stack["key"])
}

func (c *current) onQuoteBlock238(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonQuoteBlock238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock238(stack["attributes"])
}

func (c *current) onQuoteBlock328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock328()
}

func (c *current) onQuoteBlock121(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonQuoteBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock121(stack["attr"])
}

func (c *current) onQuoteBlock339() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock339()
}

func (c *current) onQuoteBlock355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock355()
}

func (c *current) onQuoteBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Quote, content.([]interface{}), types.None, attributes.([]interface{}))
}

func (p *parser) callonQuoteBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock1(stack["attributes"], stack["content"])
}

func (c *current) onQuoteBlockContent9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlockContent9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockContent9()
}

func (c *current) onQuoteBlockContent1(element interface{}) (interface{}, error) {
	return element, nil

}

func (p *parser) callonQuoteBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockContent1(stack["element"])
}

func (c *current) onVerseBlock10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock10()
}

func (c *current) onVerseBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock15()
}

func (c *current) onVerseBlock19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock19()
}

func (c *current) onVerseBlock35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock35()
}

func (c *current) onVerseBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock53()
}

func (c *current) onVerseBlock6(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonVerseBlock6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock6(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onVerseBlock64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock64()
}

func (c *current) onVerseBlock69() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock69()
}

func (c *current) onVerseBlock73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock73()
}

func (c *current) onVerseBlock91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock91()
}

func (c *current) onVerseBlock60(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonVerseBlock60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock60(stack["kind"], stack["author"])
}

func (c *current) onVerseBlock102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock102()
}

func (c *current) onVerseBlock107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock107()
}

func (c *current) onVerseBlock113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock113()
}

func (c *current) onVerseBlock98(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonVerseBlock98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock98(stack["kind"])
}

func (c *current) onVerseBlock139() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock139()
}

func (c *current) onVerseBlock129() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock129()
}

func (c *current) onVerseBlock125(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonVerseBlock125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock125(stack["id"])
}

func (c *current) onVerseBlock167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock167()
}

func (c *current) onVerseBlock157() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock157()
}

func (c *current) onVerseBlock153(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonVerseBlock153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock153(stack["id"])
}

func (c *current) onVerseBlock189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock189()
}

func (c *current) onVerseBlock192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock192()
}

func (c *current) onVerseBlock181(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonVerseBlock181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock181(stack["title"])
}

func (c *current) onVerseBlock206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock206()
}

func (c *current) onVerseBlock209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock209()
}

func (c *current) onVerseBlock200(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonVerseBlock200() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock200(stack["role"])
}

func (c *current) onVerseBlock225() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonVerseBlock225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock225()
}

func (c *current) onVerseBlock227() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonVerseBlock227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock227()
}

func (c *current) onVerseBlock229() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonVerseBlock229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock229()
}

func (c *current) onVerseBlock231() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonVerseBlock231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock231()
}

func (c *current) onVerseBlock233() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonVerseBlock233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock233()
}

func (c *current) onVerseBlock220(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonVerseBlock220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock220(stack["k"])
}

func (c *current) onVerseBlock236() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonVerseBlock236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock236()
}

func (c *current) onVerseBlock244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock244()
}

func (c *current) onVerseBlock255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock255()
}

func (c *current) onVerseBlock258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock258()
}

func (c *current) onVerseBlock261() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock261()
}

func (c *current) onVerseBlock252(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock252(stack["key"])
}

func (c *current) onVerseBlock275(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock275(stack["value"])
}

func (c *current) onVerseBlock291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock291()
}

func (c *current) onVerseBlock249(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonVerseBlock249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock249(stack["key"], stack["value"])
}

func (c *current) onVerseBlock299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock299()
}

func (c *current) onVerseBlock302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock302()
}

func (c *current) onVerseBlock305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock305()
}

func (c *current) onVerseBlock296(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock296(stack["key"])
}

func (c *current) onVerseBlock322() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock322()
}

func (c *current) onVerseBlock293(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonVerseBlock293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock293(stack["key"])
}

func (c *current) onVerseBlock238(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonVerseBlock238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock238(stack["attributes"])
}

func (c *current) onVerseBlock328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock328()
}

func (c *current) onVerseBlock121(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonVerseBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock121(stack["attr"])
}

func (c *current) onVerseBlock339() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock339()
}

func (c *current) onVerseBlock355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock355()
}

func (c *current) onVerseBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Verse, content.([]interface{}), types.None, attributes.([]interface{}))
}

func (p *parser) callonVerseBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock1(stack["attributes"], stack["content"])
}

func (c *current) onVerseBlockContent1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonVerseBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockContent1(stack["lines"])
}

func (c *current) onVerseBlockLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine9()
}

func (c *current) onVerseBlockLine1(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonVerseBlockLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine1(stack["line"])
}

func (c *current) onVerseBlockLineContent11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent11()
}

func (c *current) onVerseBlockLineContent27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent27()
}

func (c *current) onVerseBlockLineContent33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent33()
}

func (c *current) onVerseBlockLineContent1(elements interface{}) (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonVerseBlockLineContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent1(stack["elements"])
}

func (c *current) onSidebarBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock7()
}

func (c *current) onSidebarBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock23()
}

func (c *current) onSidebarBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Sidebar, content.([]interface{}), types.None)
}

func (p *parser) callonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock1(stack["content"])
}

func (c *current) onSidebarBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent12()
}

func (c *current) onSidebarBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonSidebarBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent4()
}

func (c *current) onNonSidebarBlock1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonNonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onNonSidebarBlock1(stack["content"])
}

func (c *current) onTable7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable7()
}

func (c *current) onTable26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable26()
}

func (c *current) onTable1(header, lines interface{}) (interface{}, error) {
	// end delimiter or end of file
	return types.NewTable(header, lines.([]interface{}))

}

func (p *parser) callonTable1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable1(stack["header"], stack["lines"])
}

func (c *current) onTableLineHeader9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader9()
}

func (c *current) onTableLineHeader32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader32()
}

func (c *current) onTableLineHeader24(cells interface{}) (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLineHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader24(stack["cells"])
}

func (c *current) onTableLineHeader1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLineHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader1(stack["cells"])
}

func (c *current) onTableLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine9()
}

func (c *current) onTableLine33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine33()
}

func (c *current) onTableLine25() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLine25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine25()
}

func (c *current) onTableLine1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine1(stack["cells"])
}

func (c *current) onTableCell7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell7()
}

func (c *current) onTableCell18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell18()
}

func (c *current) onTableCell29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell29()
}

func (c *current) onTableCell35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell35()
}

func (c *current) onTableCell1(elements interface{}) (interface{}, error) {
	return types.NewInlineElements(elements)
}

func (p *parser) callonTableCell1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell1(stack["elements"])
}

func (c *current) onWord12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonWord12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWord12()
}

func (c *current) onWord1() (interface{}, error) {
	// word cannot contain parenthesis. Dots and ellipsis are treated as independent words (but will be combined afterwards)
	return string(c.text), nil
}

func (p *parser) callonWord1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWord1()
}

func (c *current) onWS3() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonWS3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWS3()
}

var (
	// errNoRule is returned when the grammar to parse has no rule.
	errNoRule = errors.New("grammar has no rule")

	// errInvalidEntrypoint is returned when the specified entrypoint rule
	// does not exit.
	errInvalidEntrypoint = errors.New("invalid entrypoint")

	// errInvalidEncoding is returned when the source is not properly
	// utf8-encoded.
	errInvalidEncoding = errors.New("invalid encoding")

	// errMaxExprCnt is used to signal that the maximum number of
	// expressions have been parsed.
	errMaxExprCnt = errors.New("max number of expresssions parsed")
)

// Option is a function that can set an option on the parser. It returns
// the previous setting as an Option.
type Option func(*parser) Option

// MaxExpressions creates an Option to stop parsing after the provided
// number of expressions have been parsed, if the value is 0 then the parser will
// parse for as many steps as needed (possibly an infinite number).
//
// The default for maxExprCnt is 0.
func MaxExpressions(maxExprCnt uint64) Option {
	return func(p *parser) Option {
		oldMaxExprCnt := p.maxExprCnt
		p.maxExprCnt = maxExprCnt
		return MaxExpressions(oldMaxExprCnt)
	}
}

// Entrypoint creates an Option to set the rule name to use as entrypoint.
// The rule name must have been specified in the -alternate-entrypoints
// if generating the parser with the -optimize-grammar flag, otherwise
// it may have been optimized out. Passing an empty string sets the
// entrypoint to the first rule in the grammar.
//
// The default is to start parsing at the first rule in the grammar.
func Entrypoint(ruleName string) Option {
	return func(p *parser) Option {
		oldEntrypoint := p.entrypoint
		p.entrypoint = ruleName
		if ruleName == "" {
			p.entrypoint = g.rules[0].name
		}
		return Entrypoint(oldEntrypoint)
	}
}

// Statistics adds a user provided Stats struct to the parser to allow
// the user to process the results after the parsing has finished.
// Also the key for the "no match" counter is set.
//
// Example usage:
//
//     input := "input"
//     stats := Stats{}
//     _, err := Parse("input-file", []byte(input), Statistics(&stats, "no match"))
//     if err != nil {
//         log.Panicln(err)
//     }
//     b, err := json.MarshalIndent(stats.ChoiceAltCnt, "", "  ")
//     if err != nil {
//         log.Panicln(err)
//     }
//     fmt.Println(string(b))
//
func Statistics(stats *Stats, choiceNoMatch string) Option {
	return func(p *parser) Option {
		oldStats := p.Stats
		p.Stats = stats
		oldChoiceNoMatch := p.choiceNoMatch
		p.choiceNoMatch = choiceNoMatch
		if p.Stats.ChoiceAltCnt == nil {
			p.Stats.ChoiceAltCnt = make(map[string]map[string]int)
		}
		return Statistics(oldStats, oldChoiceNoMatch)
	}
}

// Debug creates an Option to set the debug flag to b. When set to true,
// debugging information is printed to stdout while parsing.
//
// The default is false.
func Debug(b bool) Option {
	return func(p *parser) Option {
		old := p.debug
		p.debug = b
		return Debug(old)
	}
}

// Memoize creates an Option to set the memoize flag to b. When set to true,
// the parser will cache all results so each expression is evaluated only
// once. This guarantees linear parsing time even for pathological cases,
// at the expense of more memory and slower times for typical cases.
//
// The default is false.
func Memoize(b bool) Option {
	return func(p *parser) Option {
		old := p.memoize
		p.memoize = b
		return Memoize(old)
	}
}

// AllowInvalidUTF8 creates an Option to allow invalid UTF-8 bytes.
// Every invalid UTF-8 byte is treated as a utf8.RuneError (U+FFFD)
// by character class matchers and is matched by the any matcher.
// The returned matched value, c.text and c.offset are NOT affected.
//
// The default is false.
func AllowInvalidUTF8(b bool) Option {
	return func(p *parser) Option {
		old := p.allowInvalidUTF8
		p.allowInvalidUTF8 = b
		return AllowInvalidUTF8(old)
	}
}

// Recover creates an Option to set the recover flag to b. When set to
// true, this causes the parser to recover from panics and convert it
// to an error. Setting it to false can be useful while debugging to
// access the full stack trace.
//
// The default is true.
func Recover(b bool) Option {
	return func(p *parser) Option {
		old := p.recover
		p.recover = b
		return Recover(old)
	}
}

// GlobalStore creates an Option to set a key to a certain value in
// the globalStore.
func GlobalStore(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.globalStore[key]
		p.cur.globalStore[key] = value
		return GlobalStore(key, old)
	}
}

// InitState creates an Option to set a key to a certain value in
// the global "state" store.
func InitState(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.state[key]
		p.cur.state[key] = value
		return InitState(key, old)
	}
}

// ParseFile parses the file identified by filename.
func ParseFile(filename string, opts ...Option) (i interface{}, err error) {
	f, err := os.Open(filename)
	if err != nil {
		return nil, err
	}
	defer func() {
		if closeErr := f.Close(); closeErr != nil {
			err = closeErr
		}
	}()
	return ParseReader(filename, f, opts...)
}

// ParseReader parses the data from r using filename as information in the
// error messages.
func ParseReader(filename string, r io.Reader, opts ...Option) (interface{}, error) {
	b, err := ioutil.ReadAll(r)
	if err != nil {
		return nil, err
	}

	return Parse(filename, b, opts...)
}

// Parse parses the data from b using filename as information in the
// error messages.
func Parse(filename string, b []byte, opts ...Option) (interface{}, error) {
	return newParser(filename, b, opts...).parse(g)
}

// position records a position in the text.
type position struct {
	line, col, offset int
}

func (p position) String() string {
	return fmt.Sprintf("%d:%d [%d]", p.line, p.col, p.offset)
}

// savepoint stores all state required to go back to this point in the
// parser.
type savepoint struct {
	position
	rn rune
	w  int
}

type current struct {
	pos  position // start position of the match
	text []byte   // raw text of the match

	// state is a store for arbitrary key,value pairs that the user wants to be
	// tied to the backtracking of the parser.
	// This is always rolled back if a parsing rule fails.
	state storeDict

	// globalStore is a general store for the user to store arbitrary key-value
	// pairs that they need to manage and that they do not want tied to the
	// backtracking of the parser. This is only modified by the user and never
	// rolled back by the parser. It is always up to the user to keep this in a
	// consistent state.
	globalStore storeDict
}

type storeDict map[string]interface{}

// the AST types...

type grammar struct {
	pos   position
	rules []*rule
}

type rule struct {
	pos         position
	name        string
	displayName string
	expr        interface{}
}

type choiceExpr struct {
	pos          position
	alternatives []interface{}
}

type actionExpr struct {
	pos  position
	expr interface{}
	run  func(*parser) (interface{}, error)
}

type recoveryExpr struct {
	pos          position
	expr         interface{}
	recoverExpr  interface{}
	failureLabel []string
}

type seqExpr struct {
	pos   position
	exprs []interface{}
}

type throwExpr struct {
	pos   position
	label string
}

type labeledExpr struct {
	pos   position
	label string
	expr  interface{}
}

type expr struct {
	pos  position
	expr interface{}
}

type andExpr expr
type notExpr expr
type zeroOrOneExpr expr
type zeroOrMoreExpr expr
type oneOrMoreExpr expr

type ruleRefExpr struct {
	pos  position
	name string
}

type stateCodeExpr struct {
	pos position
	run func(*parser) error
}

type andCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type notCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type litMatcher struct {
	pos        position
	val        string
	ignoreCase bool
}

type charClassMatcher struct {
	pos             position
	val             string
	basicLatinChars [128]bool
	chars           []rune
	ranges          []rune
	classes         []*unicode.RangeTable
	ignoreCase      bool
	inverted        bool
}

type anyMatcher position

// errList cumulates the errors found by the parser.
type errList []error

func (e *errList) add(err error) {
	*e = append(*e, err)
}

func (e errList) err() error {
	if len(e) == 0 {
		return nil
	}
	e.dedupe()
	return e
}

func (e *errList) dedupe() {
	var cleaned []error
	set := make(map[string]bool)
	for _, err := range *e {
		if msg := err.Error(); !set[msg] {
			set[msg] = true
			cleaned = append(cleaned, err)
		}
	}
	*e = cleaned
}

func (e errList) Error() string {
	switch len(e) {
	case 0:
		return ""
	case 1:
		return e[0].Error()
	default:
		var buf bytes.Buffer

		for i, err := range e {
			if i > 0 {
				buf.WriteRune('\n')
			}
			buf.WriteString(err.Error())
		}
		return buf.String()
	}
}

// parserError wraps an error with a prefix indicating the rule in which
// the error occurred. The original error is stored in the Inner field.
type parserError struct {
	Inner    error
	pos      position
	prefix   string
	expected []string
}

// Error returns the error message.
func (p *parserError) Error() string {
	return p.prefix + ": " + p.Inner.Error()
}

// newParser creates a parser with the specified input source and options.
func newParser(filename string, b []byte, opts ...Option) *parser {
	stats := Stats{
		ChoiceAltCnt: make(map[string]map[string]int),
	}

	p := &parser{
		filename: filename,
		errs:     new(errList),
		data:     b,
		pt:       savepoint{position: position{line: 1}},
		recover:  true,
		cur: current{
			state:       make(storeDict),
			globalStore: make(storeDict),
		},
		maxFailPos:      position{col: 1, line: 1},
		maxFailExpected: make([]string, 0, 20),
		Stats:           &stats,
		// start rule is rule [0] unless an alternate entrypoint is specified
		entrypoint: g.rules[0].name,
	}
	p.setOptions(opts)

	if p.maxExprCnt == 0 {
		p.maxExprCnt = math.MaxUint64
	}

	return p
}

// setOptions applies the options to the parser.
func (p *parser) setOptions(opts []Option) {
	for _, opt := range opts {
		opt(p)
	}
}

type resultTuple struct {
	v   interface{}
	b   bool
	end savepoint
}

const choiceNoMatch = -1

// Stats stores some statistics, gathered during parsing
type Stats struct {
	// ExprCnt counts the number of expressions processed during parsing
	// This value is compared to the maximum number of expressions allowed
	// (set by the MaxExpressions option).
	ExprCnt uint64

	// ChoiceAltCnt is used to count for each ordered choice expression,
	// which alternative is used how may times.
	// These numbers allow to optimize the order of the ordered choice expression
	// to increase the performance of the parser
	//
	// The outer key of ChoiceAltCnt is composed of the name of the rule as well
	// as the line and the column of the ordered choice.
	// The inner key of ChoiceAltCnt is the number (one-based) of the matching alternative.
	// For each alternative the number of matches are counted. If an ordered choice does not
	// match, a special counter is incremented. The name of this counter is set with
	// the parser option Statistics.
	// For an alternative to be included in ChoiceAltCnt, it has to match at least once.
	ChoiceAltCnt map[string]map[string]int
}

type parser struct {
	filename string
	pt       savepoint
	cur      current

	data []byte
	errs *errList

	depth   int
	recover bool
	debug   bool

	memoize bool
	// memoization table for the packrat algorithm:
	// map[offset in source] map[expression or rule] {value, match}
	memo map[int]map[interface{}]resultTuple

	// rules table, maps the rule identifier to the rule node
	rules map[string]*rule
	// variables stack, map of label to value
	vstack []map[string]interface{}
	// rule stack, allows identification of the current rule in errors
	rstack []*rule

	// parse fail
	maxFailPos            position
	maxFailExpected       []string
	maxFailInvertExpected bool

	// max number of expressions to be parsed
	maxExprCnt uint64
	// entrypoint for the parser
	entrypoint string

	allowInvalidUTF8 bool

	*Stats

	choiceNoMatch string
	// recovery expression stack, keeps track of the currently available recovery expression, these are traversed in reverse
	recoveryStack []map[string]interface{}
}

// push a variable set on the vstack.
func (p *parser) pushV() {
	if cap(p.vstack) == len(p.vstack) {
		// create new empty slot in the stack
		p.vstack = append(p.vstack, nil)
	} else {
		// slice to 1 more
		p.vstack = p.vstack[:len(p.vstack)+1]
	}

	// get the last args set
	m := p.vstack[len(p.vstack)-1]
	if m != nil && len(m) == 0 {
		// empty map, all good
		return
	}

	m = make(map[string]interface{})
	p.vstack[len(p.vstack)-1] = m
}

// pop a variable set from the vstack.
func (p *parser) popV() {
	// if the map is not empty, clear it
	m := p.vstack[len(p.vstack)-1]
	if len(m) > 0 {
		// GC that map
		p.vstack[len(p.vstack)-1] = nil
	}
	p.vstack = p.vstack[:len(p.vstack)-1]
}

// push a recovery expression with its labels to the recoveryStack
func (p *parser) pushRecovery(labels []string, expr interface{}) {
	if cap(p.recoveryStack) == len(p.recoveryStack) {
		// create new empty slot in the stack
		p.recoveryStack = append(p.recoveryStack, nil)
	} else {
		// slice to 1 more
		p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)+1]
	}

	m := make(map[string]interface{}, len(labels))
	for _, fl := range labels {
		m[fl] = expr
	}
	p.recoveryStack[len(p.recoveryStack)-1] = m
}

// pop a recovery expression from the recoveryStack
func (p *parser) popRecovery() {
	// GC that map
	p.recoveryStack[len(p.recoveryStack)-1] = nil

	p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)-1]
}

func (p *parser) print(prefix, s string) string {
	if !p.debug {
		return s
	}

	fmt.Printf("%s %d:%d:%d: %s [%#U]\n",
		prefix, p.pt.line, p.pt.col, p.pt.offset, s, p.pt.rn)
	return s
}

func (p *parser) in(s string) string {
	p.depth++
	return p.print(strings.Repeat(" ", p.depth)+">", s)
}

func (p *parser) out(s string) string {
	p.depth--
	return p.print(strings.Repeat(" ", p.depth)+"<", s)
}

func (p *parser) addErr(err error) {
	p.addErrAt(err, p.pt.position, []string{})
}

func (p *parser) addErrAt(err error, pos position, expected []string) {
	var buf bytes.Buffer
	if p.filename != "" {
		buf.WriteString(p.filename)
	}
	if buf.Len() > 0 {
		buf.WriteString(":")
	}
	buf.WriteString(fmt.Sprintf("%d:%d (%d)", pos.line, pos.col, pos.offset))
	if len(p.rstack) > 0 {
		if buf.Len() > 0 {
			buf.WriteString(": ")
		}
		rule := p.rstack[len(p.rstack)-1]
		if rule.displayName != "" {
			buf.WriteString("rule " + rule.displayName)
		} else {
			buf.WriteString("rule " + rule.name)
		}
	}
	pe := &parserError{Inner: err, pos: pos, prefix: buf.String(), expected: expected}
	p.errs.add(pe)
}

func (p *parser) failAt(fail bool, pos position, want string) {
	// process fail if parsing fails and not inverted or parsing succeeds and invert is set
	if fail == p.maxFailInvertExpected {
		if pos.offset < p.maxFailPos.offset {
			return
		}

		if pos.offset > p.maxFailPos.offset {
			p.maxFailPos = pos
			p.maxFailExpected = p.maxFailExpected[:0]
		}

		if p.maxFailInvertExpected {
			want = "!" + want
		}
		p.maxFailExpected = append(p.maxFailExpected, want)
	}
}

// read advances the parser to the next rune.
func (p *parser) read() {
	p.pt.offset += p.pt.w
	rn, n := utf8.DecodeRune(p.data[p.pt.offset:])
	p.pt.rn = rn
	p.pt.w = n
	p.pt.col++
	if rn == '\n' {
		p.pt.line++
		p.pt.col = 0
	}

	if rn == utf8.RuneError && n == 1 { // see utf8.DecodeRune
		if !p.allowInvalidUTF8 {
			p.addErr(errInvalidEncoding)
		}
	}
}

// restore parser position to the savepoint pt.
func (p *parser) restore(pt savepoint) {
	if p.debug {
		defer p.out(p.in("restore"))
	}
	if pt.offset == p.pt.offset {
		return
	}
	p.pt = pt
}

// Cloner is implemented by any value that has a Clone method, which returns a
// copy of the value. This is mainly used for types which are not passed by
// value (e.g map, slice, chan) or structs that contain such types.
//
// This is used in conjunction with the global state feature to create proper
// copies of the state to allow the parser to properly restore the state in
// the case of backtracking.
type Cloner interface {
	Clone() interface{}
}

// clone and return parser current state.
func (p *parser) cloneState() storeDict {
	if p.debug {
		defer p.out(p.in("cloneState"))
	}

	state := make(storeDict, len(p.cur.state))
	for k, v := range p.cur.state {
		if c, ok := v.(Cloner); ok {
			state[k] = c.Clone()
		} else {
			state[k] = v
		}
	}
	return state
}

// restore parser current state to the state storeDict.
// every restoreState should applied only one time for every cloned state
func (p *parser) restoreState(state storeDict) {
	if p.debug {
		defer p.out(p.in("restoreState"))
	}
	p.cur.state = state
}

// get the slice of bytes from the savepoint start to the current position.
func (p *parser) sliceFrom(start savepoint) []byte {
	return p.data[start.position.offset:p.pt.position.offset]
}

func (p *parser) getMemoized(node interface{}) (resultTuple, bool) {
	if len(p.memo) == 0 {
		return resultTuple{}, false
	}
	m := p.memo[p.pt.offset]
	if len(m) == 0 {
		return resultTuple{}, false
	}
	res, ok := m[node]
	return res, ok
}

func (p *parser) setMemoized(pt savepoint, node interface{}, tuple resultTuple) {
	if p.memo == nil {
		p.memo = make(map[int]map[interface{}]resultTuple)
	}
	m := p.memo[pt.offset]
	if m == nil {
		m = make(map[interface{}]resultTuple)
		p.memo[pt.offset] = m
	}
	m[node] = tuple
}

func (p *parser) buildRulesTable(g *grammar) {
	p.rules = make(map[string]*rule, len(g.rules))
	for _, r := range g.rules {
		p.rules[r.name] = r
	}
}

func (p *parser) parse(g *grammar) (val interface{}, err error) {
	if len(g.rules) == 0 {
		p.addErr(errNoRule)
		return nil, p.errs.err()
	}

	// TODO : not super critical but this could be generated
	p.buildRulesTable(g)

	if p.recover {
		// panic can be used in action code to stop parsing immediately
		// and return the panic as an error.
		defer func() {
			if e := recover(); e != nil {
				if p.debug {
					defer p.out(p.in("panic handler"))
				}
				val = nil
				switch e := e.(type) {
				case error:
					p.addErr(e)
				default:
					p.addErr(fmt.Errorf("%v", e))
				}
				err = p.errs.err()
			}
		}()
	}

	startRule, ok := p.rules[p.entrypoint]
	if !ok {
		p.addErr(errInvalidEntrypoint)
		return nil, p.errs.err()
	}

	p.read() // advance to first rune
	val, ok = p.parseRule(startRule)
	if !ok {
		if len(*p.errs) == 0 {
			// If parsing fails, but no errors have been recorded, the expected values
			// for the farthest parser position are returned as error.
			maxFailExpectedMap := make(map[string]struct{}, len(p.maxFailExpected))
			for _, v := range p.maxFailExpected {
				maxFailExpectedMap[v] = struct{}{}
			}
			expected := make([]string, 0, len(maxFailExpectedMap))
			eof := false
			if _, ok := maxFailExpectedMap["!."]; ok {
				delete(maxFailExpectedMap, "!.")
				eof = true
			}
			for k := range maxFailExpectedMap {
				expected = append(expected, k)
			}
			sort.Strings(expected)
			if eof {
				expected = append(expected, "EOF")
			}
			p.addErrAt(errors.New("no match found, expected: "+listJoin(expected, ", ", "or")), p.maxFailPos, expected)
		}

		return nil, p.errs.err()
	}
	return val, p.errs.err()
}

func listJoin(list []string, sep string, lastSep string) string {
	switch len(list) {
	case 0:
		return ""
	case 1:
		return list[0]
	default:
		return fmt.Sprintf("%s %s %s", strings.Join(list[:len(list)-1], sep), lastSep, list[len(list)-1])
	}
}

func (p *parser) parseRule(rule *rule) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRule " + rule.name))
	}

	if p.memoize {
		res, ok := p.getMemoized(rule)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
	}

	start := p.pt
	p.rstack = append(p.rstack, rule)
	p.pushV()
	val, ok := p.parseExpr(rule.expr)
	p.popV()
	p.rstack = p.rstack[:len(p.rstack)-1]
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}

	if p.memoize {
		p.setMemoized(start, rule, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseExpr(expr interface{}) (interface{}, bool) {
	var pt savepoint

	if p.memoize {
		res, ok := p.getMemoized(expr)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
		pt = p.pt
	}

	p.ExprCnt++
	if p.ExprCnt > p.maxExprCnt {
		panic(errMaxExprCnt)
	}

	var val interface{}
	var ok bool
	switch expr := expr.(type) {
	case *actionExpr:
		val, ok = p.parseActionExpr(expr)
	case *andCodeExpr:
		val, ok = p.parseAndCodeExpr(expr)
	case *andExpr:
		val, ok = p.parseAndExpr(expr)
	case *anyMatcher:
		val, ok = p.parseAnyMatcher(expr)
	case *charClassMatcher:
		val, ok = p.parseCharClassMatcher(expr)
	case *choiceExpr:
		val, ok = p.parseChoiceExpr(expr)
	case *labeledExpr:
		val, ok = p.parseLabeledExpr(expr)
	case *litMatcher:
		val, ok = p.parseLitMatcher(expr)
	case *notCodeExpr:
		val, ok = p.parseNotCodeExpr(expr)
	case *notExpr:
		val, ok = p.parseNotExpr(expr)
	case *oneOrMoreExpr:
		val, ok = p.parseOneOrMoreExpr(expr)
	case *recoveryExpr:
		val, ok = p.parseRecoveryExpr(expr)
	case *ruleRefExpr:
		val, ok = p.parseRuleRefExpr(expr)
	case *seqExpr:
		val, ok = p.parseSeqExpr(expr)
	case *stateCodeExpr:
		val, ok = p.parseStateCodeExpr(expr)
	case *throwExpr:
		val, ok = p.parseThrowExpr(expr)
	case *zeroOrMoreExpr:
		val, ok = p.parseZeroOrMoreExpr(expr)
	case *zeroOrOneExpr:
		val, ok = p.parseZeroOrOneExpr(expr)
	default:
		panic(fmt.Sprintf("unknown expression type %T", expr))
	}
	if p.memoize {
		p.setMemoized(pt, expr, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseActionExpr(act *actionExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseActionExpr"))
	}

	start := p.pt
	val, ok := p.parseExpr(act.expr)
	if ok {
		p.cur.pos = start.position
		p.cur.text = p.sliceFrom(start)
		state := p.cloneState()
		actVal, err := act.run(p)
		if err != nil {
			p.addErrAt(err, start.position, []string{})
		}
		p.restoreState(state)

		val = actVal
	}
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}
	return val, ok
}

func (p *parser) parseAndCodeExpr(and *andCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndCodeExpr"))
	}

	state := p.cloneState()

	ok, err := and.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, ok
}

func (p *parser) parseAndExpr(and *andExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	_, ok := p.parseExpr(and.expr)
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, ok
}

func (p *parser) parseAnyMatcher(any *anyMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAnyMatcher"))
	}

	if p.pt.rn == utf8.RuneError && p.pt.w == 0 {
		// EOF - see utf8.DecodeRune
		p.failAt(false, p.pt.position, ".")
		return nil, false
	}
	start := p.pt
	p.read()
	p.failAt(true, start.position, ".")
	return p.sliceFrom(start), true
}

func (p *parser) parseCharClassMatcher(chr *charClassMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseCharClassMatcher"))
	}

	cur := p.pt.rn
	start := p.pt

	// can't match EOF
	if cur == utf8.RuneError && p.pt.w == 0 { // see utf8.DecodeRune
		p.failAt(false, start.position, chr.val)
		return nil, false
	}

	if chr.ignoreCase {
		cur = unicode.ToLower(cur)
	}

	// try to match in the list of available chars
	for _, rn := range chr.chars {
		if rn == cur {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of ranges
	for i := 0; i < len(chr.ranges); i += 2 {
		if cur >= chr.ranges[i] && cur <= chr.ranges[i+1] {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of Unicode classes
	for _, cl := range chr.classes {
		if unicode.Is(cl, cur) {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	if chr.inverted {
		p.read()
		p.failAt(true, start.position, chr.val)
		return p.sliceFrom(start), true
	}
	p.failAt(false, start.position, chr.val)
	return nil, false
}

func (p *parser) incChoiceAltCnt(ch *choiceExpr, altI int) {
	choiceIdent := fmt.Sprintf("%s %d:%d", p.rstack[len(p.rstack)-1].name, ch.pos.line, ch.pos.col)
	m := p.ChoiceAltCnt[choiceIdent]
	if m == nil {
		m = make(map[string]int)
		p.ChoiceAltCnt[choiceIdent] = m
	}
	// We increment altI by 1, so the keys do not start at 0
	alt := strconv.Itoa(altI + 1)
	if altI == choiceNoMatch {
		alt = p.choiceNoMatch
	}
	m[alt]++
}

func (p *parser) parseChoiceExpr(ch *choiceExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseChoiceExpr"))
	}

	for altI, alt := range ch.alternatives {
		// dummy assignment to prevent compile error if optimized
		_ = altI

		state := p.cloneState()

		p.pushV()
		val, ok := p.parseExpr(alt)
		p.popV()
		if ok {
			p.incChoiceAltCnt(ch, altI)
			return val, ok
		}
		p.restoreState(state)
	}
	p.incChoiceAltCnt(ch, choiceNoMatch)
	return nil, false
}

func (p *parser) parseLabeledExpr(lab *labeledExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLabeledExpr"))
	}

	p.pushV()
	val, ok := p.parseExpr(lab.expr)
	p.popV()
	if ok && lab.label != "" {
		m := p.vstack[len(p.vstack)-1]
		m[lab.label] = val
	}
	return val, ok
}

func (p *parser) parseLitMatcher(lit *litMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLitMatcher"))
	}

	ignoreCase := ""
	if lit.ignoreCase {
		ignoreCase = "i"
	}
	val := fmt.Sprintf("%q%s", lit.val, ignoreCase)
	start := p.pt
	for _, want := range lit.val {
		cur := p.pt.rn
		if lit.ignoreCase {
			cur = unicode.ToLower(cur)
		}
		if cur != want {
			p.failAt(false, start.position, val)
			p.restore(start)
			return nil, false
		}
		p.read()
	}
	p.failAt(true, start.position, val)
	return p.sliceFrom(start), true
}

func (p *parser) parseNotCodeExpr(not *notCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotCodeExpr"))
	}

	state := p.cloneState()

	ok, err := not.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, !ok
}

func (p *parser) parseNotExpr(not *notExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	_, ok := p.parseExpr(not.expr)
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, !ok
}

func (p *parser) parseOneOrMoreExpr(expr *oneOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseOneOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			if len(vals) == 0 {
				// did not match once, no match
				return nil, false
			}
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseRecoveryExpr(recover *recoveryExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRecoveryExpr (" + strings.Join(recover.failureLabel, ",") + ")"))
	}

	p.pushRecovery(recover.failureLabel, recover.recoverExpr)
	val, ok := p.parseExpr(recover.expr)
	p.popRecovery()

	return val, ok
}

func (p *parser) parseRuleRefExpr(ref *ruleRefExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRuleRefExpr " + ref.name))
	}

	if ref.name == "" {
		panic(fmt.Sprintf("%s: invalid rule: missing name", ref.pos))
	}

	rule := p.rules[ref.name]
	if rule == nil {
		p.addErr(fmt.Errorf("undefined rule: %s", ref.name))
		return nil, false
	}
	return p.parseRule(rule)
}

func (p *parser) parseSeqExpr(seq *seqExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseSeqExpr"))
	}

	vals := make([]interface{}, 0, len(seq.exprs))

	pt := p.pt
	state := p.cloneState()
	for _, expr := range seq.exprs {
		val, ok := p.parseExpr(expr)
		if !ok {
			p.restoreState(state)
			p.restore(pt)
			return nil, false
		}
		vals = append(vals, val)
	}
	return vals, true
}

func (p *parser) parseStateCodeExpr(state *stateCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseStateCodeExpr"))
	}

	err := state.run(p)
	if err != nil {
		p.addErr(err)
	}
	return nil, true
}

func (p *parser) parseThrowExpr(expr *throwExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseThrowExpr"))
	}

	for i := len(p.recoveryStack) - 1; i >= 0; i-- {
		if recoverExpr, ok := p.recoveryStack[i][expr.label]; ok {
			if val, ok := p.parseExpr(recoverExpr); ok {
				return val, ok
			}
		}
	}

	return nil, false
}

func (p *parser) parseZeroOrMoreExpr(expr *zeroOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseZeroOrOneExpr(expr *zeroOrOneExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrOneExpr"))
	}

	p.pushV()
	val, _ := p.parseExpr(expr.expr)
	p.popV()
	// whether it matched or not, consider it a match
	return val, true
}
