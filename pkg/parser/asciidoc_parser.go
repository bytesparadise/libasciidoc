// Code generated by pigeon; DO NOT EDIT.

package parser

import (
	"bytes"
	"errors"
	"fmt"
	"io"
	"io/ioutil"
	"math"
	"os"
	"sort"
	"strconv"
	"strings"
	"unicode"
	"unicode/utf8"

	"github.com/bytesparadise/libasciidoc/pkg/types"
)

// *****************************************************************************************
// This file is generated after its sibling `asciidoc-grammar.peg` file. DO NOT MODIFY !
// *****************************************************************************************

var g = &grammar{
	rules: []*rule{
		{
			name: "Document",
			pos:  position{line: 18, col: 1, offset: 504},
			expr: &actionExpr{
				pos: position{line: 18, col: 13, offset: 516},
				run: (*parser).callonDocument1,
				expr: &seqExpr{
					pos: position{line: 18, col: 13, offset: 516},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 18, col: 13, offset: 516},
							label: "frontMatter",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 26, offset: 529},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 26, offset: 529},
									name: "FrontMatter",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 40, offset: 543},
							label: "documentHeader",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 56, offset: 559},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 56, offset: 559},
									name: "DocumentHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 73, offset: 576},
							label: "blocks",
							expr: &zeroOrMoreExpr{
								pos: position{line: 18, col: 80, offset: 583},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 81, offset: 584},
									name: "DocumentBlock",
								},
							},
						},
						&notExpr{
							pos: position{line: 1100, col: 8, offset: 45855},
							expr: &anyMatcher{
								line: 1100, col: 9, offset: 45856,
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentBlock",
			pos:  position{line: 22, col: 1, offset: 688},
			expr: &actionExpr{
				pos: position{line: 22, col: 18, offset: 705},
				run: (*parser).callonDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 22, col: 18, offset: 705},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 22, col: 18, offset: 705},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 22, col: 29, offset: 716},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonDocumentBlock5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 136, col: 21, offset: 5092},
												expr: &charClassMatcher{
													pos:        position{line: 136, col: 23, offset: 5094},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 137, col: 5, offset: 5182},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 137, col: 11, offset: 5188},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 144, col: 14, offset: 5546},
															run: (*parser).callonDocumentBlock11,
															expr: &seqExpr{
																pos: position{line: 144, col: 14, offset: 5546},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 144, col: 14, offset: 5546},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 144, col: 19, offset: 5551},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonDocumentBlock15,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonDocumentBlock25,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 144, col: 27, offset: 5559},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 5, offset: 5613},
															run: (*parser).callonDocumentBlock39,
															expr: &seqExpr{
																pos: position{line: 146, col: 5, offset: 5613},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 5, offset: 5613},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 10, offset: 5618},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonDocumentBlock43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonDocumentBlock53,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 18, offset: 5626},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 156, col: 17, offset: 5929},
															run: (*parser).callonDocumentBlock67,
															expr: &seqExpr{
																pos: position{line: 156, col: 17, offset: 5929},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 156, col: 17, offset: 5929},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 156, col: 21, offset: 5933},
																		expr: &litMatcher{
																			pos:        position{line: 156, col: 22, offset: 5934},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 156, col: 26, offset: 5938},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonDocumentBlock75,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 156, col: 30, offset: 5942},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 160, col: 24, offset: 6047},
																			run: (*parser).callonDocumentBlock78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 160, col: 24, offset: 6047},
																				expr: &seqExpr{
																					pos: position{line: 160, col: 25, offset: 6048},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 160, col: 25, offset: 6048},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 160, col: 34, offset: 6057,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 166, col: 16, offset: 6206},
															run: (*parser).callonDocumentBlock86,
															expr: &seqExpr{
																pos: position{line: 166, col: 16, offset: 6206},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 166, col: 16, offset: 6206},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 166, col: 21, offset: 6211},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonDocumentBlock92,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 166, col: 25, offset: 6215},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 170, col: 23, offset: 6319},
																			run: (*parser).callonDocumentBlock95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 170, col: 23, offset: 6319},
																				expr: &seqExpr{
																					pos: position{line: 170, col: 24, offset: 6320},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 170, col: 24, offset: 6320},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 170, col: 33, offset: 6329},
																							expr: &litMatcher{
																								pos:        position{line: 170, col: 34, offset: 6330},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 170, col: 38, offset: 6334,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 166, col: 51, offset: 6241},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 30, offset: 6483},
															run: (*parser).callonDocumentBlock106,
															expr: &seqExpr{
																pos: position{line: 175, col: 30, offset: 6483},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 175, col: 30, offset: 6483},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 175, col: 34, offset: 6487},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 508, col: 19, offset: 19492},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 508, col: 19, offset: 19492},
																					run: (*parser).callonDocumentBlock111,
																					expr: &litMatcher{
																						pos:        position{line: 508, col: 19, offset: 19492},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 510, col: 5, offset: 19530},
																					run: (*parser).callonDocumentBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 510, col: 5, offset: 19530},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 512, col: 5, offset: 19570},
																					run: (*parser).callonDocumentBlock115,
																					expr: &litMatcher{
																						pos:        position{line: 512, col: 5, offset: 19570},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 514, col: 5, offset: 19620},
																					run: (*parser).callonDocumentBlock117,
																					expr: &litMatcher{
																						pos:        position{line: 514, col: 5, offset: 19620},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 516, col: 5, offset: 19666},
																					run: (*parser).callonDocumentBlock119,
																					expr: &litMatcher{
																						pos:        position{line: 516, col: 5, offset: 19666},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 175, col: 53, offset: 6506},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 198, col: 21, offset: 7255},
															run: (*parser).callonDocumentBlock122,
															expr: &litMatcher{
																pos:        position{line: 198, col: 21, offset: 7255},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 180, col: 19, offset: 6667},
															run: (*parser).callonDocumentBlock124,
															expr: &seqExpr{
																pos: position{line: 180, col: 19, offset: 6667},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 180, col: 19, offset: 6667},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 180, col: 23, offset: 6671},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonDocumentBlock130,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 180, col: 27, offset: 6675},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 180, col: 38, offset: 6686},
																			expr: &choiceExpr{
																				pos: position{line: 184, col: 21, offset: 6799},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						run: (*parser).callonDocumentBlock135,
																						expr: &seqExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 184, col: 21, offset: 6799},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonDocumentBlock138,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonDocumentBlock141,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonDocumentBlock144,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonDocumentBlock147,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 184, col: 40, offset: 6818},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 184, col: 44, offset: 6822},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 194, col: 19, offset: 7173},
																										run: (*parser).callonDocumentBlock161,
																										expr: &labeledExpr{
																											pos:   position{line: 194, col: 19, offset: 7173},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 194, col: 25, offset: 7179},
																												expr: &seqExpr{
																													pos: position{line: 194, col: 26, offset: 7180},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 194, col: 26, offset: 7180},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 27, offset: 7181},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 31, offset: 7185},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 32, offset: 7186},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 36, offset: 7190},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 37, offset: 7191},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 194, col: 41, offset: 7195,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 184, col: 67, offset: 6845},
																									expr: &litMatcher{
																										pos:        position{line: 184, col: 67, offset: 6845},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 184, col: 72, offset: 6850},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonDocumentBlock177,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						run: (*parser).callonDocumentBlock179,
																						expr: &seqExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 186, col: 5, offset: 6934},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonDocumentBlock182,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonDocumentBlock185,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonDocumentBlock188,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonDocumentBlock191,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 186, col: 24, offset: 6953},
																									expr: &litMatcher{
																										pos:        position{line: 186, col: 24, offset: 6953},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 186, col: 29, offset: 6958},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonDocumentBlock208,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 180, col: 59, offset: 6707},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 137, col: 115, offset: 5292},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonDocumentBlock214,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 23, col: 3, offset: 739},
							label: "block",
							expr: &choiceExpr{
								pos: position{line: 23, col: 10, offset: 746},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 23, col: 10, offset: 746},
										name: "Section",
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 20, offset: 756},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 30, col: 1, offset: 957},
			expr: &ruleRefExpr{
				pos:  position{line: 30, col: 16, offset: 972},
				name: "YamlFrontMatter",
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 32, col: 1, offset: 990},
			expr: &actionExpr{
				pos: position{line: 32, col: 16, offset: 1005},
				run: (*parser).callonFrontMatter1,
				expr: &seqExpr{
					pos: position{line: 32, col: 16, offset: 1005},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1164},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 32, col: 37, offset: 1026},
							label: "content",
							expr: &actionExpr{
								pos: position{line: 38, col: 27, offset: 1201},
								run: (*parser).callonFrontMatter10,
								expr: &zeroOrMoreExpr{
									pos: position{line: 38, col: 27, offset: 1201},
									expr: &seqExpr{
										pos: position{line: 38, col: 28, offset: 1202},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 38, col: 28, offset: 1202},
												expr: &seqExpr{
													pos: position{line: 36, col: 26, offset: 1164},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 36, col: 26, offset: 1164},
															val:        "---",
															ignoreCase: false,
														},
														&choiceExpr{
															pos: position{line: 1102, col: 8, offset: 45866},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1098, col: 12, offset: 45826},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1098, col: 21, offset: 45835},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1100, col: 8, offset: 45855},
																	expr: &anyMatcher{
																		line: 1100, col: 9, offset: 45856,
																	},
																},
															},
														},
													},
												},
											},
											&anyMatcher{
												line: 38, col: 50, offset: 1224,
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1164},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentHeader",
			pos:  position{line: 46, col: 1, offset: 1448},
			expr: &actionExpr{
				pos: position{line: 46, col: 19, offset: 1466},
				run: (*parser).callonDocumentHeader1,
				expr: &seqExpr{
					pos: position{line: 46, col: 19, offset: 1466},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 46, col: 19, offset: 1466},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 46, col: 27, offset: 1474},
								name: "Section0TitleWithAttributes",
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 56, offset: 1503},
							label: "authors",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 65, offset: 1512},
								expr: &choiceExpr{
									pos: position{line: 50, col: 20, offset: 1726},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 52, col: 30, offset: 1813},
											run: (*parser).callonDocumentHeader8,
											expr: &seqExpr{
												pos: position{line: 52, col: 30, offset: 1813},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 52, col: 30, offset: 1813},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonDocumentHeader13,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 52, col: 34, offset: 1817},
														expr: &litMatcher{
															pos:        position{line: 52, col: 35, offset: 1818},
															val:        ":",
															ignoreCase: false,
														},
													},
													&labeledExpr{
														pos:   position{line: 52, col: 39, offset: 1822},
														label: "authors",
														expr: &oneOrMoreExpr{
															pos: position{line: 52, col: 48, offset: 1831},
															expr: &actionExpr{
																pos: position{line: 60, col: 19, offset: 2082},
																run: (*parser).callonDocumentHeader19,
																expr: &seqExpr{
																	pos: position{line: 60, col: 19, offset: 2082},
																	exprs: []interface{}{
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 19, offset: 2082},
																			expr: &choiceExpr{
																				pos: position{line: 1094, col: 7, offset: 45764},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1094, col: 7, offset: 45764},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1094, col: 13, offset: 45770},
																						run: (*parser).callonDocumentHeader24,
																						expr: &litMatcher{
																							pos:        position{line: 1094, col: 13, offset: 45770},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 23, offset: 2086},
																			label: "namePart1",
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2422},
																				run: (*parser).callonDocumentHeader27,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2422},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2423},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2427},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2428},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2432},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2433},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2433},
																										expr: &choiceExpr{
																											pos: position{line: 1098, col: 12, offset: 45826},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1098, col: 12, offset: 45826},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1098, col: 21, offset: 45835},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2442},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentHeader42,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2446,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2450},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonDocumentHeader48,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 58, offset: 2121},
																			label: "namePart2",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 68, offset: 2131},
																				expr: &actionExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					run: (*parser).callonDocumentHeader52,
																					expr: &seqExpr{
																						pos: position{line: 65, col: 27, offset: 2422},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 65, col: 27, offset: 2422},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 28, offset: 2423},
																									val:        "<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 65, col: 32, offset: 2427},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 33, offset: 2428},
																									val:        ";",
																									ignoreCase: false,
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 65, col: 37, offset: 2432},
																								expr: &seqExpr{
																									pos: position{line: 65, col: 38, offset: 2433},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 65, col: 38, offset: 2433},
																											expr: &choiceExpr{
																												pos: position{line: 1098, col: 12, offset: 45826},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 65, col: 47, offset: 2442},
																											expr: &choiceExpr{
																												pos: position{line: 1094, col: 7, offset: 45764},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1094, col: 7, offset: 45764},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1094, col: 13, offset: 45770},
																														run: (*parser).callonDocumentHeader67,
																														expr: &litMatcher{
																															pos:        position{line: 1094, col: 13, offset: 45770},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 65, col: 51, offset: 2446,
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 65, col: 55, offset: 2450},
																								expr: &choiceExpr{
																									pos: position{line: 1094, col: 7, offset: 45764},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1094, col: 7, offset: 45764},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1094, col: 13, offset: 45770},
																											run: (*parser).callonDocumentHeader73,
																											expr: &litMatcher{
																												pos:        position{line: 1094, col: 13, offset: 45770},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 94, offset: 2157},
																			label: "namePart3",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 104, offset: 2167},
																				expr: &actionExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					run: (*parser).callonDocumentHeader77,
																					expr: &seqExpr{
																						pos: position{line: 65, col: 27, offset: 2422},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 65, col: 27, offset: 2422},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 28, offset: 2423},
																									val:        "<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 65, col: 32, offset: 2427},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 33, offset: 2428},
																									val:        ";",
																									ignoreCase: false,
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 65, col: 37, offset: 2432},
																								expr: &seqExpr{
																									pos: position{line: 65, col: 38, offset: 2433},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 65, col: 38, offset: 2433},
																											expr: &choiceExpr{
																												pos: position{line: 1098, col: 12, offset: 45826},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 65, col: 47, offset: 2442},
																											expr: &choiceExpr{
																												pos: position{line: 1094, col: 7, offset: 45764},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1094, col: 7, offset: 45764},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1094, col: 13, offset: 45770},
																														run: (*parser).callonDocumentHeader92,
																														expr: &litMatcher{
																															pos:        position{line: 1094, col: 13, offset: 45770},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 65, col: 51, offset: 2446,
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 65, col: 55, offset: 2450},
																								expr: &choiceExpr{
																									pos: position{line: 1094, col: 7, offset: 45764},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1094, col: 7, offset: 45764},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1094, col: 13, offset: 45770},
																											run: (*parser).callonDocumentHeader98,
																											expr: &litMatcher{
																												pos:        position{line: 1094, col: 13, offset: 45770},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 130, offset: 2193},
																			label: "email",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 136, offset: 2199},
																				expr: &actionExpr{
																					pos: position{line: 69, col: 24, offset: 2513},
																					run: (*parser).callonDocumentHeader102,
																					expr: &seqExpr{
																						pos: position{line: 69, col: 24, offset: 2513},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 69, col: 24, offset: 2513},
																								val:        "<",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 69, col: 28, offset: 2517},
																								label: "email",
																								expr: &oneOrMoreExpr{
																									pos: position{line: 69, col: 34, offset: 2523},
																									expr: &seqExpr{
																										pos: position{line: 69, col: 35, offset: 2524},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 69, col: 35, offset: 2524},
																												expr: &litMatcher{
																													pos:        position{line: 69, col: 36, offset: 2525},
																													val:        ">",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 69, col: 40, offset: 2529},
																												expr: &choiceExpr{
																													pos: position{line: 1102, col: 8, offset: 45866},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1098, col: 12, offset: 45826},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1098, col: 21, offset: 45835},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 1100, col: 8, offset: 45855},
																															expr: &anyMatcher{
																																line: 1100, col: 9, offset: 45856,
																															},
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 69, col: 45, offset: 2534,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 69, col: 49, offset: 2538},
																								val:        ">",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 159, offset: 2222},
																			expr: &choiceExpr{
																				pos: position{line: 1094, col: 7, offset: 45764},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1094, col: 7, offset: 45764},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1094, col: 13, offset: 45770},
																						run: (*parser).callonDocumentHeader121,
																						expr: &litMatcher{
																							pos:        position{line: 1094, col: 13, offset: 45770},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 60, col: 163, offset: 2226},
																			expr: &litMatcher{
																				pos:        position{line: 60, col: 163, offset: 2226},
																				val:        ";",
																				ignoreCase: false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 168, offset: 2231},
																			expr: &choiceExpr{
																				pos: position{line: 1094, col: 7, offset: 45764},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1094, col: 7, offset: 45764},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1094, col: 13, offset: 45770},
																						run: (*parser).callonDocumentHeader128,
																						expr: &litMatcher{
																							pos:        position{line: 1094, col: 13, offset: 45770},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1102, col: 8, offset: 45866},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1100, col: 8, offset: 45855},
																expr: &anyMatcher{
																	line: 1100, col: 9, offset: 45856,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 56, col: 33, offset: 1950},
											run: (*parser).callonDocumentHeader135,
											expr: &seqExpr{
												pos: position{line: 56, col: 33, offset: 1950},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 56, col: 33, offset: 1950},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonDocumentHeader140,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 56, col: 37, offset: 1954},
														val:        ":author:",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 56, col: 48, offset: 1965},
														label: "author",
														expr: &actionExpr{
															pos: position{line: 60, col: 19, offset: 2082},
															run: (*parser).callonDocumentHeader144,
															expr: &seqExpr{
																pos: position{line: 60, col: 19, offset: 2082},
																exprs: []interface{}{
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 19, offset: 2082},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonDocumentHeader149,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 23, offset: 2086},
																		label: "namePart1",
																		expr: &actionExpr{
																			pos: position{line: 65, col: 27, offset: 2422},
																			run: (*parser).callonDocumentHeader152,
																			expr: &seqExpr{
																				pos: position{line: 65, col: 27, offset: 2422},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 65, col: 27, offset: 2422},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 28, offset: 2423},
																							val:        "<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 65, col: 32, offset: 2427},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 33, offset: 2428},
																							val:        ";",
																							ignoreCase: false,
																						},
																					},
																					&oneOrMoreExpr{
																						pos: position{line: 65, col: 37, offset: 2432},
																						expr: &seqExpr{
																							pos: position{line: 65, col: 38, offset: 2433},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 65, col: 38, offset: 2433},
																									expr: &choiceExpr{
																										pos: position{line: 1098, col: 12, offset: 45826},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1098, col: 12, offset: 45826},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1098, col: 21, offset: 45835},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 65, col: 47, offset: 2442},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonDocumentHeader167,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 65, col: 51, offset: 2446,
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 65, col: 55, offset: 2450},
																						expr: &choiceExpr{
																							pos: position{line: 1094, col: 7, offset: 45764},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1094, col: 7, offset: 45764},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1094, col: 13, offset: 45770},
																									run: (*parser).callonDocumentHeader173,
																									expr: &litMatcher{
																										pos:        position{line: 1094, col: 13, offset: 45770},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 58, offset: 2121},
																		label: "namePart2",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 68, offset: 2131},
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2422},
																				run: (*parser).callonDocumentHeader52,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2422},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2423},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2427},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2428},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2432},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2433},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2433},
																										expr: &choiceExpr{
																											pos: position{line: 1098, col: 12, offset: 45826},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1098, col: 12, offset: 45826},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1098, col: 21, offset: 45835},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2442},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentHeader67,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2446,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2450},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonDocumentHeader73,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 94, offset: 2157},
																		label: "namePart3",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 104, offset: 2167},
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2422},
																				run: (*parser).callonDocumentHeader77,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2422},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2423},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2427},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2428},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2432},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2433},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2433},
																										expr: &choiceExpr{
																											pos: position{line: 1098, col: 12, offset: 45826},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1098, col: 12, offset: 45826},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1098, col: 21, offset: 45835},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2442},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentHeader92,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2446,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2450},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonDocumentHeader98,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 130, offset: 2193},
																		label: "email",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 136, offset: 2199},
																			expr: &actionExpr{
																				pos: position{line: 69, col: 24, offset: 2513},
																				run: (*parser).callonDocumentHeader102,
																				expr: &seqExpr{
																					pos: position{line: 69, col: 24, offset: 2513},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 69, col: 24, offset: 2513},
																							val:        "<",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 69, col: 28, offset: 2517},
																							label: "email",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 69, col: 34, offset: 2523},
																								expr: &seqExpr{
																									pos: position{line: 69, col: 35, offset: 2524},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 69, col: 35, offset: 2524},
																											expr: &litMatcher{
																												pos:        position{line: 69, col: 36, offset: 2525},
																												val:        ">",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 69, col: 40, offset: 2529},
																											expr: &choiceExpr{
																												pos: position{line: 1102, col: 8, offset: 45866},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1100, col: 8, offset: 45855},
																														expr: &anyMatcher{
																															line: 1100, col: 9, offset: 45856,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 69, col: 45, offset: 2534,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 69, col: 49, offset: 2538},
																							val:        ">",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 159, offset: 2222},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonDocumentHeader246,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&zeroOrOneExpr{
																		pos: position{line: 60, col: 163, offset: 2226},
																		expr: &litMatcher{
																			pos:        position{line: 60, col: 163, offset: 2226},
																			val:        ";",
																			ignoreCase: false,
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 168, offset: 2231},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonDocumentHeader253,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 83, offset: 1530},
							label: "revision",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 93, offset: 1540},
								expr: &actionExpr{
									pos: position{line: 75, col: 21, offset: 2728},
									run: (*parser).callonDocumentHeader257,
									expr: &seqExpr{
										pos: position{line: 75, col: 21, offset: 2728},
										exprs: []interface{}{
											&zeroOrMoreExpr{
												pos: position{line: 75, col: 21, offset: 2728},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonDocumentHeader262,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 75, col: 25, offset: 2732},
												expr: &litMatcher{
													pos:        position{line: 75, col: 26, offset: 2733},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 30, offset: 2737},
												label: "revnumber",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 40, offset: 2747},
													expr: &choiceExpr{
														pos: position{line: 80, col: 27, offset: 3050},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 80, col: 27, offset: 3050},
																run: (*parser).callonDocumentHeader269,
																expr: &seqExpr{
																	pos: position{line: 80, col: 27, offset: 3050},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 80, col: 27, offset: 3050},
																			val:        "v",
																			ignoreCase: true,
																		},
																		&actionExpr{
																			pos: position{line: 1090, col: 10, offset: 45716},
																			run: (*parser).callonDocumentHeader272,
																			expr: &charClassMatcher{
																				pos:        position{line: 1090, col: 10, offset: 45716},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 80, col: 39, offset: 3062},
																			expr: &seqExpr{
																				pos: position{line: 80, col: 40, offset: 3063},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 80, col: 40, offset: 3063},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 80, col: 45, offset: 3068},
																						expr: &litMatcher{
																							pos:        position{line: 80, col: 46, offset: 3069},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 80, col: 50, offset: 3073},
																						expr: &litMatcher{
																							pos:        position{line: 80, col: 51, offset: 3074},
																							val:        ":",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 80, col: 55, offset: 3078,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 82, col: 5, offset: 3119},
																run: (*parser).callonDocumentHeader287,
																expr: &seqExpr{
																	pos: position{line: 82, col: 5, offset: 3119},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 82, col: 5, offset: 3119},
																			expr: &litMatcher{
																				pos:        position{line: 82, col: 5, offset: 3119},
																				val:        "v",
																				ignoreCase: true,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1090, col: 10, offset: 45716},
																			run: (*parser).callonDocumentHeader291,
																			expr: &charClassMatcher{
																				pos:        position{line: 1090, col: 10, offset: 45716},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 82, col: 18, offset: 3132},
																			expr: &seqExpr{
																				pos: position{line: 82, col: 19, offset: 3133},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 82, col: 19, offset: 3133},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 82, col: 24, offset: 3138},
																						expr: &litMatcher{
																							pos:        position{line: 82, col: 25, offset: 3139},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 82, col: 29, offset: 3143},
																						expr: &litMatcher{
																							pos:        position{line: 82, col: 30, offset: 3144},
																							val:        ":",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 82, col: 34, offset: 3148,
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 82, col: 38, offset: 3152},
																			expr: &choiceExpr{
																				pos: position{line: 1094, col: 7, offset: 45764},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1094, col: 7, offset: 45764},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1094, col: 13, offset: 45770},
																						run: (*parser).callonDocumentHeader309,
																						expr: &litMatcher{
																							pos:        position{line: 1094, col: 13, offset: 45770},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&andExpr{
																			pos: position{line: 82, col: 42, offset: 3156},
																			expr: &litMatcher{
																				pos:        position{line: 82, col: 43, offset: 3157},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 75, col: 66, offset: 2773},
												expr: &litMatcher{
													pos:        position{line: 75, col: 66, offset: 2773},
													val:        ",",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 71, offset: 2778},
												label: "revdate",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 79, offset: 2786},
													expr: &actionExpr{
														pos: position{line: 86, col: 25, offset: 3221},
														run: (*parser).callonDocumentHeader317,
														expr: &zeroOrMoreExpr{
															pos: position{line: 86, col: 25, offset: 3221},
															expr: &seqExpr{
																pos: position{line: 86, col: 26, offset: 3222},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 86, col: 26, offset: 3222},
																		expr: &choiceExpr{
																			pos: position{line: 1102, col: 8, offset: 45866},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1100, col: 8, offset: 45855},
																					expr: &anyMatcher{
																						line: 1100, col: 9, offset: 45856,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 86, col: 31, offset: 3227},
																		expr: &litMatcher{
																			pos:        position{line: 86, col: 32, offset: 3228},
																			val:        ":",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 86, col: 36, offset: 3232,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 75, col: 103, offset: 2810},
												expr: &litMatcher{
													pos:        position{line: 75, col: 103, offset: 2810},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 108, offset: 2815},
												label: "revremark",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 118, offset: 2825},
													expr: &actionExpr{
														pos: position{line: 90, col: 27, offset: 3298},
														run: (*parser).callonDocumentHeader333,
														expr: &zeroOrMoreExpr{
															pos: position{line: 90, col: 27, offset: 3298},
															expr: &seqExpr{
																pos: position{line: 90, col: 28, offset: 3299},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 90, col: 28, offset: 3299},
																		expr: &choiceExpr{
																			pos: position{line: 1102, col: 8, offset: 45866},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1100, col: 8, offset: 45855},
																					expr: &anyMatcher{
																						line: 1100, col: 9, offset: 45856,
																					},
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 90, col: 33, offset: 3304,
																	},
																},
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 112, offset: 1559},
							label: "otherAttributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 46, col: 129, offset: 1576},
								expr: &choiceExpr{
									pos: position{line: 97, col: 33, offset: 3491},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 97, col: 33, offset: 3491},
											run: (*parser).callonDocumentHeader351,
											expr: &seqExpr{
												pos: position{line: 97, col: 33, offset: 3491},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 97, col: 33, offset: 3491},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 97, col: 37, offset: 3495},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															run: (*parser).callonDocumentHeader355,
															expr: &seqExpr{
																pos: position{line: 116, col: 26, offset: 4341},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 116, col: 27, offset: 4342},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 116, col: 56, offset: 4371},
																		expr: &charClassMatcher{
																			pos:        position{line: 116, col: 57, offset: 4372},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 97, col: 66, offset: 3524},
														val:        ":",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 97, col: 70, offset: 3528},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonDocumentHeader364,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1102, col: 8, offset: 45866},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1100, col: 8, offset: 45855},
																expr: &anyMatcher{
																	line: 1100, col: 9, offset: 45856,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 99, col: 5, offset: 3611},
											run: (*parser).callonDocumentHeader371,
											expr: &seqExpr{
												pos: position{line: 99, col: 5, offset: 3611},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 99, col: 5, offset: 3611},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 99, col: 9, offset: 3615},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															run: (*parser).callonDocumentHeader375,
															expr: &seqExpr{
																pos: position{line: 116, col: 26, offset: 4341},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 116, col: 27, offset: 4342},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 116, col: 56, offset: 4371},
																		expr: &charClassMatcher{
																			pos:        position{line: 116, col: 57, offset: 4372},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 99, col: 38, offset: 3644},
														val:        ":",
														ignoreCase: false,
													},
													&oneOrMoreExpr{
														pos: position{line: 99, col: 42, offset: 3648},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonDocumentHeader384,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&labeledExpr{
														pos:   position{line: 99, col: 46, offset: 3652},
														label: "value",
														expr: &actionExpr{
															pos: position{line: 120, col: 27, offset: 4464},
															run: (*parser).callonDocumentHeader387,
															expr: &zeroOrMoreExpr{
																pos: position{line: 120, col: 27, offset: 4464},
																expr: &seqExpr{
																	pos: position{line: 120, col: 28, offset: 4465},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 120, col: 28, offset: 4465},
																			expr: &choiceExpr{
																				pos: position{line: 1098, col: 12, offset: 45826},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1098, col: 12, offset: 45826},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1098, col: 21, offset: 45835},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&anyMatcher{
																			line: 120, col: 37, offset: 4474,
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1102, col: 8, offset: 45866},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1100, col: 8, offset: 45855},
																expr: &anyMatcher{
																	line: 1100, col: 9, offset: 45856,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentElement",
			pos:  position{line: 127, col: 1, offset: 4625},
			expr: &actionExpr{
				pos: position{line: 127, col: 20, offset: 4644},
				run: (*parser).callonDocumentElement1,
				expr: &seqExpr{
					pos: position{line: 127, col: 20, offset: 4644},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 127, col: 20, offset: 4644},
							expr: &notExpr{
								pos: position{line: 1100, col: 8, offset: 45855},
								expr: &anyMatcher{
									line: 1100, col: 9, offset: 45856,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 128, col: 5, offset: 4722},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 128, col: 14, offset: 4731},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 1061, col: 14, offset: 44948},
										run: (*parser).callonDocumentElement8,
										expr: &seqExpr{
											pos: position{line: 1061, col: 14, offset: 44948},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 1061, col: 14, offset: 44948},
													expr: &notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 1061, col: 19, offset: 44953},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonDocumentElement16,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1102, col: 8, offset: 45866},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1100, col: 8, offset: 45855},
															expr: &anyMatcher{
																line: 1100, col: 9, offset: 45856,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 97, col: 33, offset: 3491},
										run: (*parser).callonDocumentElement23,
										expr: &seqExpr{
											pos: position{line: 97, col: 33, offset: 3491},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 97, col: 33, offset: 3491},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 97, col: 37, offset: 3495},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonDocumentElement27,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 97, col: 66, offset: 3524},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 97, col: 70, offset: 3528},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonDocumentElement36,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1102, col: 8, offset: 45866},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1100, col: 8, offset: 45855},
															expr: &anyMatcher{
																line: 1100, col: 9, offset: 45856,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 99, col: 5, offset: 3611},
										run: (*parser).callonDocumentElement43,
										expr: &seqExpr{
											pos: position{line: 99, col: 5, offset: 3611},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 99, col: 5, offset: 3611},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 99, col: 9, offset: 3615},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonDocumentElement47,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 99, col: 38, offset: 3644},
													val:        ":",
													ignoreCase: false,
												},
												&oneOrMoreExpr{
													pos: position{line: 99, col: 42, offset: 3648},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonDocumentElement56,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 99, col: 46, offset: 3652},
													label: "value",
													expr: &actionExpr{
														pos: position{line: 120, col: 27, offset: 4464},
														run: (*parser).callonDocumentElement59,
														expr: &zeroOrMoreExpr{
															pos: position{line: 120, col: 27, offset: 4464},
															expr: &seqExpr{
																pos: position{line: 120, col: 28, offset: 4465},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 120, col: 28, offset: 4465},
																		expr: &choiceExpr{
																			pos: position{line: 1098, col: 12, offset: 45826},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 120, col: 37, offset: 4474,
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1102, col: 8, offset: 45866},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1100, col: 8, offset: 45855},
															expr: &anyMatcher{
																line: 1100, col: 9, offset: 45856,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 103, col: 27, offset: 3790},
										run: (*parser).callonDocumentElement72,
										expr: &seqExpr{
											pos: position{line: 103, col: 27, offset: 3790},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 103, col: 27, offset: 3790},
													val:        ":!",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 103, col: 32, offset: 3795},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonDocumentElement76,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 103, col: 61, offset: 3824},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 103, col: 65, offset: 3828},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonDocumentElement85,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1102, col: 8, offset: 45866},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1100, col: 8, offset: 45855},
															expr: &anyMatcher{
																line: 1100, col: 9, offset: 45856,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 105, col: 5, offset: 3900},
										run: (*parser).callonDocumentElement92,
										expr: &seqExpr{
											pos: position{line: 105, col: 5, offset: 3900},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 105, col: 5, offset: 3900},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 105, col: 9, offset: 3904},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonDocumentElement96,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 105, col: 38, offset: 3933},
													val:        "!:",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 105, col: 43, offset: 3938},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonDocumentElement105,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1102, col: 8, offset: 45866},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1100, col: 8, offset: 45855},
															expr: &anyMatcher{
																line: 1100, col: 9, offset: 45856,
															},
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 372, col: 25, offset: 13881},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 372, col: 25, offset: 13881},
												val:        "toc::[]",
												ignoreCase: false,
											},
											&choiceExpr{
												pos: position{line: 1098, col: 12, offset: 45826},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 129, col: 14, offset: 4836},
										name: "MasqueradeParagraph",
									},
									&actionExpr{
										pos: position{line: 775, col: 15, offset: 33313},
										run: (*parser).callonDocumentElement118,
										expr: &seqExpr{
											pos: position{line: 775, col: 15, offset: 33313},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 775, col: 15, offset: 33313},
													val:        "image::",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 775, col: 25, offset: 33323},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1076, col: 8, offset: 45412},
														run: (*parser).callonDocumentElement122,
														expr: &oneOrMoreExpr{
															pos: position{line: 1076, col: 8, offset: 45412},
															expr: &seqExpr{
																pos: position{line: 1076, col: 9, offset: 45413},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1076, col: 9, offset: 45413},
																		expr: &choiceExpr{
																			pos: position{line: 1098, col: 12, offset: 45826},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1076, col: 18, offset: 45422},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonDocumentElement132,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1076, col: 22, offset: 45426},
																		expr: &litMatcher{
																			pos:        position{line: 1076, col: 23, offset: 45427},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1076, col: 27, offset: 45431},
																		expr: &litMatcher{
																			pos:        position{line: 1076, col: 28, offset: 45432},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1076, col: 32, offset: 45436,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 775, col: 36, offset: 33334},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 784, col: 20, offset: 33769},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 784, col: 20, offset: 33769},
																run: (*parser).callonDocumentElement141,
																expr: &seqExpr{
																	pos: position{line: 784, col: 20, offset: 33769},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 784, col: 20, offset: 33769},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 784, col: 24, offset: 33773},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonDocumentElement145,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 784, col: 45, offset: 33794},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 785, col: 9, offset: 33806},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonDocumentElement157,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 785, col: 33, offset: 33830},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 786, col: 9, offset: 33842},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonDocumentElement169,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 786, col: 33, offset: 33866},
																			expr: &litMatcher{
																				pos:        position{line: 786, col: 33, offset: 33866},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 787, col: 9, offset: 33879},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 787, col: 20, offset: 33890},
																				expr: &choiceExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							run: (*parser).callonDocumentElement184,
																							expr: &seqExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 184, col: 21, offset: 6799},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonDocumentElement187,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonDocumentElement190,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonDocumentElement193,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonDocumentElement196,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 184, col: 40, offset: 6818},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 184, col: 44, offset: 6822},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 194, col: 19, offset: 7173},
																											run: (*parser).callonDocumentElement210,
																											expr: &labeledExpr{
																												pos:   position{line: 194, col: 19, offset: 7173},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 194, col: 25, offset: 7179},
																													expr: &seqExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 27, offset: 7181},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 31, offset: 7185},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 32, offset: 7186},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 36, offset: 7190},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 37, offset: 7191},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 194, col: 41, offset: 7195,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 184, col: 67, offset: 6845},
																										expr: &litMatcher{
																											pos:        position{line: 184, col: 67, offset: 6845},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 184, col: 72, offset: 6850},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentElement226,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							run: (*parser).callonDocumentElement228,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 186, col: 5, offset: 6934},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonDocumentElement231,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonDocumentElement234,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonDocumentElement237,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonDocumentElement240,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 186, col: 24, offset: 6953},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 24, offset: 6953},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 186, col: 29, offset: 6958},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentElement257,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 787, col: 40, offset: 33910},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 789, col: 9, offset: 34016},
																run: (*parser).callonDocumentElement260,
																expr: &seqExpr{
																	pos: position{line: 789, col: 9, offset: 34016},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 789, col: 9, offset: 34016},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 789, col: 13, offset: 34020},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonDocumentElement264,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 789, col: 34, offset: 34041},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 790, col: 9, offset: 34053},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonDocumentElement276,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 790, col: 32, offset: 34076},
																			expr: &litMatcher{
																				pos:        position{line: 790, col: 32, offset: 34076},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 791, col: 9, offset: 34089},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 791, col: 20, offset: 34100},
																				expr: &choiceExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							run: (*parser).callonDocumentElement291,
																							expr: &seqExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 184, col: 21, offset: 6799},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonDocumentElement294,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonDocumentElement297,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonDocumentElement300,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonDocumentElement303,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 184, col: 40, offset: 6818},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 184, col: 44, offset: 6822},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 194, col: 19, offset: 7173},
																											run: (*parser).callonDocumentElement317,
																											expr: &labeledExpr{
																												pos:   position{line: 194, col: 19, offset: 7173},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 194, col: 25, offset: 7179},
																													expr: &seqExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 27, offset: 7181},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 31, offset: 7185},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 32, offset: 7186},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 36, offset: 7190},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 37, offset: 7191},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 194, col: 41, offset: 7195,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 184, col: 67, offset: 6845},
																										expr: &litMatcher{
																											pos:        position{line: 184, col: 67, offset: 6845},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 184, col: 72, offset: 6850},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentElement333,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							run: (*parser).callonDocumentElement335,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 186, col: 5, offset: 6934},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonDocumentElement338,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonDocumentElement341,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonDocumentElement344,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonDocumentElement347,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 186, col: 24, offset: 6953},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 24, offset: 6953},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 186, col: 29, offset: 6958},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentElement364,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 791, col: 40, offset: 34120},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 793, col: 9, offset: 34223},
																run: (*parser).callonDocumentElement367,
																expr: &seqExpr{
																	pos: position{line: 793, col: 9, offset: 34223},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 793, col: 9, offset: 34223},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 793, col: 13, offset: 34227},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonDocumentElement371,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 793, col: 34, offset: 34248},
																			expr: &litMatcher{
																				pos:        position{line: 793, col: 34, offset: 34248},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 794, col: 9, offset: 34261},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 794, col: 20, offset: 34272},
																				expr: &choiceExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							run: (*parser).callonDocumentElement386,
																							expr: &seqExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 184, col: 21, offset: 6799},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonDocumentElement389,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonDocumentElement392,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonDocumentElement395,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonDocumentElement398,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 184, col: 40, offset: 6818},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 184, col: 44, offset: 6822},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 194, col: 19, offset: 7173},
																											run: (*parser).callonDocumentElement412,
																											expr: &labeledExpr{
																												pos:   position{line: 194, col: 19, offset: 7173},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 194, col: 25, offset: 7179},
																													expr: &seqExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 27, offset: 7181},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 31, offset: 7185},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 32, offset: 7186},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 36, offset: 7190},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 37, offset: 7191},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 194, col: 41, offset: 7195,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 184, col: 67, offset: 6845},
																										expr: &litMatcher{
																											pos:        position{line: 184, col: 67, offset: 6845},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 184, col: 72, offset: 6850},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentElement428,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							run: (*parser).callonDocumentElement430,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 186, col: 5, offset: 6934},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonDocumentElement433,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonDocumentElement436,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonDocumentElement439,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonDocumentElement442,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 186, col: 24, offset: 6953},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 24, offset: 6953},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 186, col: 29, offset: 6958},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentElement459,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 794, col: 40, offset: 34292},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 796, col: 9, offset: 34393},
																run: (*parser).callonDocumentElement462,
																expr: &seqExpr{
																	pos: position{line: 796, col: 9, offset: 34393},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 796, col: 9, offset: 34393},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 796, col: 13, offset: 34397},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 796, col: 24, offset: 34408},
																				expr: &choiceExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							run: (*parser).callonDocumentElement468,
																							expr: &seqExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 184, col: 21, offset: 6799},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonDocumentElement471,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonDocumentElement474,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonDocumentElement477,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonDocumentElement480,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 184, col: 40, offset: 6818},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 184, col: 44, offset: 6822},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 194, col: 19, offset: 7173},
																											run: (*parser).callonDocumentElement494,
																											expr: &labeledExpr{
																												pos:   position{line: 194, col: 19, offset: 7173},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 194, col: 25, offset: 7179},
																													expr: &seqExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 27, offset: 7181},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 31, offset: 7185},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 32, offset: 7186},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 36, offset: 7190},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 37, offset: 7191},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 194, col: 41, offset: 7195,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 184, col: 67, offset: 6845},
																										expr: &litMatcher{
																											pos:        position{line: 184, col: 67, offset: 6845},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 184, col: 72, offset: 6850},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentElement510,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							run: (*parser).callonDocumentElement512,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 186, col: 5, offset: 6934},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonDocumentElement515,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonDocumentElement518,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonDocumentElement521,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonDocumentElement524,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 186, col: 24, offset: 6953},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 24, offset: 6953},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 186, col: 29, offset: 6958},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentElement541,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 796, col: 44, offset: 34428},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 775, col: 71, offset: 33369},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonDocumentElement547,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1102, col: 8, offset: 45866},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1100, col: 8, offset: 45855},
															expr: &anyMatcher{
																line: 1100, col: 9, offset: 45856,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 129, col: 49, offset: 4871},
										name: "List",
									},
									&ruleRefExpr{
										pos:  position{line: 129, col: 56, offset: 4878},
										name: "Table",
									},
									&ruleRefExpr{
										pos:  position{line: 129, col: 64, offset: 4886},
										name: "DelimitedBlock",
									},
									&actionExpr{
										pos: position{line: 1001, col: 31, offset: 42782},
										run: (*parser).callonDocumentElement557,
										expr: &labeledExpr{
											pos:   position{line: 1001, col: 31, offset: 42782},
											label: "lines",
											expr: &actionExpr{
												pos: position{line: 1007, col: 5, offset: 43047},
												run: (*parser).callonDocumentElement559,
												expr: &seqExpr{
													pos: position{line: 1007, col: 5, offset: 43047},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 1007, col: 5, offset: 43047},
															label: "firstLine",
															expr: &actionExpr{
																pos: position{line: 1007, col: 16, offset: 43058},
																run: (*parser).callonDocumentElement562,
																expr: &seqExpr{
																	pos: position{line: 1007, col: 16, offset: 43058},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonDocumentElement566,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&oneOrMoreExpr{
																			pos: position{line: 1007, col: 19, offset: 43061},
																			expr: &seqExpr{
																				pos: position{line: 1007, col: 20, offset: 43062},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 1007, col: 20, offset: 43062},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 1007, col: 25, offset: 43067,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1102, col: 8, offset: 45866},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1098, col: 12, offset: 45826},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1098, col: 21, offset: 45835},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1100, col: 8, offset: 45855},
																	expr: &anyMatcher{
																		line: 1100, col: 9, offset: 45856,
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 1010, col: 5, offset: 43178},
															label: "otherLines",
															expr: &zeroOrMoreExpr{
																pos: position{line: 1010, col: 16, offset: 43189},
																expr: &actionExpr{
																	pos: position{line: 1011, col: 9, offset: 43199},
																	run: (*parser).callonDocumentElement584,
																	expr: &seqExpr{
																		pos: position{line: 1011, col: 9, offset: 43199},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 1011, col: 9, offset: 43199},
																				label: "otherLine",
																				expr: &actionExpr{
																					pos: position{line: 1011, col: 20, offset: 43210},
																					run: (*parser).callonDocumentElement587,
																					expr: &seqExpr{
																						pos: position{line: 1011, col: 20, offset: 43210},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1011, col: 20, offset: 43210},
																								expr: &actionExpr{
																									pos: position{line: 1061, col: 14, offset: 44948},
																									run: (*parser).callonDocumentElement590,
																									expr: &seqExpr{
																										pos: position{line: 1061, col: 14, offset: 44948},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1061, col: 14, offset: 44948},
																												expr: &notExpr{
																													pos: position{line: 1100, col: 8, offset: 45855},
																													expr: &anyMatcher{
																														line: 1100, col: 9, offset: 45856,
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 1061, col: 19, offset: 44953},
																												expr: &choiceExpr{
																													pos: position{line: 1094, col: 7, offset: 45764},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1094, col: 7, offset: 45764},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1094, col: 13, offset: 45770},
																															run: (*parser).callonDocumentElement598,
																															expr: &litMatcher{
																																pos:        position{line: 1094, col: 13, offset: 45770},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&choiceExpr{
																												pos: position{line: 1102, col: 8, offset: 45866},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1100, col: 8, offset: 45855},
																														expr: &anyMatcher{
																															line: 1100, col: 9, offset: 45856,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 1011, col: 31, offset: 43221},
																								expr: &seqExpr{
																									pos: position{line: 1011, col: 32, offset: 43222},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1011, col: 32, offset: 43222},
																											expr: &choiceExpr{
																												pos: position{line: 1102, col: 8, offset: 45866},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1100, col: 8, offset: 45855},
																														expr: &anyMatcher{
																															line: 1100, col: 9, offset: 45856,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 1011, col: 37, offset: 43227,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1102, col: 8, offset: 45866},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1098, col: 12, offset: 45826},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1098, col: 21, offset: 45835},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1100, col: 8, offset: 45855},
																						expr: &anyMatcher{
																							line: 1100, col: 9, offset: 45856,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 1021, col: 39, offset: 43563},
										run: (*parser).callonDocumentElement619,
										expr: &seqExpr{
											pos: position{line: 1021, col: 39, offset: 43563},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 998, col: 26, offset: 42680},
													val:        "....",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 1021, col: 61, offset: 43585},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonDocumentElement625,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1098, col: 12, offset: 45826},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1021, col: 73, offset: 43597},
													label: "lines",
													expr: &actionExpr{
														pos: position{line: 1026, col: 44, offset: 43870},
														run: (*parser).callonDocumentElement631,
														expr: &labeledExpr{
															pos:   position{line: 1026, col: 44, offset: 43870},
															label: "lines",
															expr: &oneOrMoreExpr{
																pos: position{line: 1026, col: 50, offset: 43876},
																expr: &actionExpr{
																	pos: position{line: 1027, col: 5, offset: 43882},
																	run: (*parser).callonDocumentElement634,
																	expr: &seqExpr{
																		pos: position{line: 1027, col: 5, offset: 43882},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 1027, col: 5, offset: 43882},
																				label: "line",
																				expr: &actionExpr{
																					pos: position{line: 1027, col: 11, offset: 43888},
																					run: (*parser).callonDocumentElement637,
																					expr: &seqExpr{
																						pos: position{line: 1027, col: 11, offset: 43888},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1027, col: 11, offset: 43888},
																								expr: &litMatcher{
																									pos:        position{line: 998, col: 26, offset: 42680},
																									val:        "....",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 1027, col: 34, offset: 43911},
																								expr: &seqExpr{
																									pos: position{line: 1027, col: 35, offset: 43912},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1027, col: 35, offset: 43912},
																											expr: &choiceExpr{
																												pos: position{line: 1102, col: 8, offset: 45866},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1100, col: 8, offset: 45855},
																														expr: &anyMatcher{
																															line: 1100, col: 9, offset: 45856,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 1027, col: 40, offset: 43917,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1102, col: 8, offset: 45866},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1098, col: 12, offset: 45826},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1098, col: 21, offset: 45835},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1100, col: 8, offset: 45855},
																						expr: &anyMatcher{
																							line: 1100, col: 9, offset: 45856,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1021, col: 122, offset: 43646},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 1021, col: 123, offset: 43647},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 998, col: 26, offset: 42680},
																	val:        "....",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 1021, col: 145, offset: 43669},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonDocumentElement661,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1100, col: 8, offset: 45855},
															expr: &anyMatcher{
																line: 1100, col: 9, offset: 45856,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 1036, col: 34, offset: 44180},
										run: (*parser).callonDocumentElement670,
										expr: &seqExpr{
											pos: position{line: 1036, col: 34, offset: 44180},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 1036, col: 34, offset: 44180},
													label: "attributes",
													expr: &seqExpr{
														pos: position{line: 1036, col: 46, offset: 44192},
														exprs: []interface{}{
															&actionExpr{
																pos: position{line: 1044, col: 21, offset: 44474},
																run: (*parser).callonDocumentElement674,
																expr: &seqExpr{
																	pos: position{line: 1044, col: 21, offset: 44474},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1044, col: 21, offset: 44474},
																			val:        "[literal]",
																			ignoreCase: false,
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 1044, col: 33, offset: 44486},
																			expr: &choiceExpr{
																				pos: position{line: 1094, col: 7, offset: 45764},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1094, col: 7, offset: 45764},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1094, col: 13, offset: 45770},
																						run: (*parser).callonDocumentElement680,
																						expr: &litMatcher{
																							pos:        position{line: 1094, col: 13, offset: 45770},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&choiceExpr{
																			pos: position{line: 1098, col: 12, offset: 45826},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 1036, col: 63, offset: 44209},
																expr: &actionExpr{
																	pos: position{line: 136, col: 21, offset: 5092},
																	run: (*parser).callonDocumentElement686,
																	expr: &seqExpr{
																		pos: position{line: 136, col: 21, offset: 5092},
																		exprs: []interface{}{
																			&andExpr{
																				pos: position{line: 136, col: 21, offset: 5092},
																				expr: &charClassMatcher{
																					pos:        position{line: 136, col: 23, offset: 5094},
																					val:        "[[.#]",
																					chars:      []rune{'[', '.', '#'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 137, col: 5, offset: 5182},
																				label: "attr",
																				expr: &choiceExpr{
																					pos: position{line: 137, col: 11, offset: 5188},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 144, col: 14, offset: 5546},
																							run: (*parser).callonDocumentElement692,
																							expr: &seqExpr{
																								pos: position{line: 144, col: 14, offset: 5546},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 144, col: 14, offset: 5546},
																										val:        "[[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 144, col: 19, offset: 5551},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1080, col: 7, offset: 45482},
																											run: (*parser).callonDocumentElement696,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1080, col: 7, offset: 45482},
																												expr: &seqExpr{
																													pos: position{line: 1080, col: 8, offset: 45483},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 1080, col: 8, offset: 45483},
																															expr: &choiceExpr{
																																pos: position{line: 1098, col: 12, offset: 45826},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1098, col: 12, offset: 45826},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1098, col: 21, offset: 45835},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1080, col: 17, offset: 45492},
																															expr: &choiceExpr{
																																pos: position{line: 1094, col: 7, offset: 45764},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1094, col: 7, offset: 45764},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1094, col: 13, offset: 45770},
																																		run: (*parser).callonDocumentElement706,
																																		expr: &litMatcher{
																																			pos:        position{line: 1094, col: 13, offset: 45770},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1080, col: 21, offset: 45496},
																															expr: &litMatcher{
																																pos:        position{line: 1080, col: 22, offset: 45497},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1080, col: 26, offset: 45501},
																															expr: &litMatcher{
																																pos:        position{line: 1080, col: 27, offset: 45502},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1080, col: 31, offset: 45506},
																															expr: &litMatcher{
																																pos:        position{line: 1080, col: 32, offset: 45507},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1080, col: 37, offset: 45512},
																															expr: &litMatcher{
																																pos:        position{line: 1080, col: 38, offset: 45513},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1080, col: 43, offset: 45518},
																															expr: &litMatcher{
																																pos:        position{line: 1080, col: 44, offset: 45519},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 1080, col: 48, offset: 45523,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 144, col: 27, offset: 5559},
																										val:        "]]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 146, col: 5, offset: 5613},
																							run: (*parser).callonDocumentElement720,
																							expr: &seqExpr{
																								pos: position{line: 146, col: 5, offset: 5613},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 146, col: 5, offset: 5613},
																										val:        "[#",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 146, col: 10, offset: 5618},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1080, col: 7, offset: 45482},
																											run: (*parser).callonDocumentElement724,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1080, col: 7, offset: 45482},
																												expr: &seqExpr{
																													pos: position{line: 1080, col: 8, offset: 45483},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 1080, col: 8, offset: 45483},
																															expr: &choiceExpr{
																																pos: position{line: 1098, col: 12, offset: 45826},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1098, col: 12, offset: 45826},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1098, col: 21, offset: 45835},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1080, col: 17, offset: 45492},
																															expr: &choiceExpr{
																																pos: position{line: 1094, col: 7, offset: 45764},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1094, col: 7, offset: 45764},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1094, col: 13, offset: 45770},
																																		run: (*parser).callonDocumentElement734,
																																		expr: &litMatcher{
																																			pos:        position{line: 1094, col: 13, offset: 45770},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1080, col: 21, offset: 45496},
																															expr: &litMatcher{
																																pos:        position{line: 1080, col: 22, offset: 45497},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1080, col: 26, offset: 45501},
																															expr: &litMatcher{
																																pos:        position{line: 1080, col: 27, offset: 45502},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1080, col: 31, offset: 45506},
																															expr: &litMatcher{
																																pos:        position{line: 1080, col: 32, offset: 45507},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1080, col: 37, offset: 45512},
																															expr: &litMatcher{
																																pos:        position{line: 1080, col: 38, offset: 45513},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1080, col: 43, offset: 45518},
																															expr: &litMatcher{
																																pos:        position{line: 1080, col: 44, offset: 45519},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 1080, col: 48, offset: 45523,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 146, col: 18, offset: 5626},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 156, col: 17, offset: 5929},
																							run: (*parser).callonDocumentElement748,
																							expr: &seqExpr{
																								pos: position{line: 156, col: 17, offset: 5929},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 156, col: 17, offset: 5929},
																										val:        ".",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 156, col: 21, offset: 5933},
																										expr: &litMatcher{
																											pos:        position{line: 156, col: 22, offset: 5934},
																											val:        ".",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 156, col: 26, offset: 5938},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentElement756,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 156, col: 30, offset: 5942},
																										label: "title",
																										expr: &actionExpr{
																											pos: position{line: 160, col: 24, offset: 6047},
																											run: (*parser).callonDocumentElement759,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 160, col: 24, offset: 6047},
																												expr: &seqExpr{
																													pos: position{line: 160, col: 25, offset: 6048},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 160, col: 25, offset: 6048},
																															expr: &choiceExpr{
																																pos: position{line: 1098, col: 12, offset: 45826},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1098, col: 12, offset: 45826},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1098, col: 21, offset: 45835},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&anyMatcher{
																															line: 160, col: 34, offset: 6057,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 166, col: 16, offset: 6206},
																							run: (*parser).callonDocumentElement767,
																							expr: &seqExpr{
																								pos: position{line: 166, col: 16, offset: 6206},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 166, col: 16, offset: 6206},
																										val:        "[.",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 166, col: 21, offset: 6211},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentElement773,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 166, col: 25, offset: 6215},
																										label: "role",
																										expr: &actionExpr{
																											pos: position{line: 170, col: 23, offset: 6319},
																											run: (*parser).callonDocumentElement776,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 170, col: 23, offset: 6319},
																												expr: &seqExpr{
																													pos: position{line: 170, col: 24, offset: 6320},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 170, col: 24, offset: 6320},
																															expr: &choiceExpr{
																																pos: position{line: 1098, col: 12, offset: 45826},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1098, col: 12, offset: 45826},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1098, col: 21, offset: 45835},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 170, col: 33, offset: 6329},
																															expr: &litMatcher{
																																pos:        position{line: 170, col: 34, offset: 6330},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 170, col: 38, offset: 6334,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 166, col: 51, offset: 6241},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 175, col: 30, offset: 6483},
																							run: (*parser).callonDocumentElement787,
																							expr: &seqExpr{
																								pos: position{line: 175, col: 30, offset: 6483},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 175, col: 30, offset: 6483},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 175, col: 34, offset: 6487},
																										label: "k",
																										expr: &choiceExpr{
																											pos: position{line: 508, col: 19, offset: 19492},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 508, col: 19, offset: 19492},
																													run: (*parser).callonDocumentElement792,
																													expr: &litMatcher{
																														pos:        position{line: 508, col: 19, offset: 19492},
																														val:        "TIP",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 510, col: 5, offset: 19530},
																													run: (*parser).callonDocumentElement794,
																													expr: &litMatcher{
																														pos:        position{line: 510, col: 5, offset: 19530},
																														val:        "NOTE",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 512, col: 5, offset: 19570},
																													run: (*parser).callonDocumentElement796,
																													expr: &litMatcher{
																														pos:        position{line: 512, col: 5, offset: 19570},
																														val:        "IMPORTANT",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 514, col: 5, offset: 19620},
																													run: (*parser).callonDocumentElement798,
																													expr: &litMatcher{
																														pos:        position{line: 514, col: 5, offset: 19620},
																														val:        "WARNING",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 516, col: 5, offset: 19666},
																													run: (*parser).callonDocumentElement800,
																													expr: &litMatcher{
																														pos:        position{line: 516, col: 5, offset: 19666},
																														val:        "CAUTION",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 175, col: 53, offset: 6506},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 198, col: 21, offset: 7255},
																							run: (*parser).callonDocumentElement803,
																							expr: &litMatcher{
																								pos:        position{line: 198, col: 21, offset: 7255},
																								val:        "[horizontal]",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 180, col: 19, offset: 6667},
																							run: (*parser).callonDocumentElement805,
																							expr: &seqExpr{
																								pos: position{line: 180, col: 19, offset: 6667},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 180, col: 19, offset: 6667},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 180, col: 23, offset: 6671},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonDocumentElement811,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 180, col: 27, offset: 6675},
																										label: "attributes",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 180, col: 38, offset: 6686},
																											expr: &choiceExpr{
																												pos: position{line: 184, col: 21, offset: 6799},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 184, col: 21, offset: 6799},
																														run: (*parser).callonDocumentElement816,
																														expr: &seqExpr{
																															pos: position{line: 184, col: 21, offset: 6799},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 184, col: 21, offset: 6799},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		run: (*parser).callonDocumentElement819,
																																		expr: &seqExpr{
																																			pos: position{line: 190, col: 17, offset: 7059},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 190, col: 17, offset: 7059},
																																					expr: &actionExpr{
																																						pos: position{line: 214, col: 14, offset: 7892},
																																						run: (*parser).callonDocumentElement822,
																																						expr: &litMatcher{
																																							pos:        position{line: 214, col: 14, offset: 7892},
																																							val:        "quote",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 190, col: 28, offset: 7070},
																																					expr: &actionExpr{
																																						pos: position{line: 230, col: 14, offset: 8489},
																																						run: (*parser).callonDocumentElement825,
																																						expr: &litMatcher{
																																							pos:        position{line: 230, col: 14, offset: 8489},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 190, col: 39, offset: 7081},
																																					expr: &actionExpr{
																																						pos: position{line: 1040, col: 16, offset: 44408},
																																						run: (*parser).callonDocumentElement828,
																																						expr: &litMatcher{
																																							pos:        position{line: 1040, col: 16, offset: 44408},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 190, col: 52, offset: 7094},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 190, col: 56, offset: 7098},
																																						expr: &seqExpr{
																																							pos: position{line: 190, col: 57, offset: 7099},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 190, col: 57, offset: 7099},
																																									expr: &litMatcher{
																																										pos:        position{line: 190, col: 58, offset: 7100},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 190, col: 62, offset: 7104},
																																									expr: &litMatcher{
																																										pos:        position{line: 190, col: 63, offset: 7105},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 190, col: 67, offset: 7109},
																																									expr: &litMatcher{
																																										pos:        position{line: 190, col: 68, offset: 7110},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 190, col: 72, offset: 7114,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&litMatcher{
																																	pos:        position{line: 184, col: 40, offset: 6818},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																																&labeledExpr{
																																	pos:   position{line: 184, col: 44, offset: 6822},
																																	label: "value",
																																	expr: &actionExpr{
																																		pos: position{line: 194, col: 19, offset: 7173},
																																		run: (*parser).callonDocumentElement842,
																																		expr: &labeledExpr{
																																			pos:   position{line: 194, col: 19, offset: 7173},
																																			label: "value",
																																			expr: &zeroOrMoreExpr{
																																				pos: position{line: 194, col: 25, offset: 7179},
																																				expr: &seqExpr{
																																					pos: position{line: 194, col: 26, offset: 7180},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 194, col: 26, offset: 7180},
																																							expr: &litMatcher{
																																								pos:        position{line: 194, col: 27, offset: 7181},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 194, col: 31, offset: 7185},
																																							expr: &litMatcher{
																																								pos:        position{line: 194, col: 32, offset: 7186},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 194, col: 36, offset: 7190},
																																							expr: &litMatcher{
																																								pos:        position{line: 194, col: 37, offset: 7191},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 194, col: 41, offset: 7195,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 184, col: 67, offset: 6845},
																																	expr: &litMatcher{
																																		pos:        position{line: 184, col: 67, offset: 6845},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 184, col: 72, offset: 6850},
																																	expr: &choiceExpr{
																																		pos: position{line: 1094, col: 7, offset: 45764},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1094, col: 7, offset: 45764},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1094, col: 13, offset: 45770},
																																				run: (*parser).callonDocumentElement858,
																																				expr: &litMatcher{
																																					pos:        position{line: 1094, col: 13, offset: 45770},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 186, col: 5, offset: 6934},
																														run: (*parser).callonDocumentElement860,
																														expr: &seqExpr{
																															pos: position{line: 186, col: 5, offset: 6934},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 186, col: 5, offset: 6934},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		run: (*parser).callonDocumentElement863,
																																		expr: &seqExpr{
																																			pos: position{line: 190, col: 17, offset: 7059},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 190, col: 17, offset: 7059},
																																					expr: &actionExpr{
																																						pos: position{line: 214, col: 14, offset: 7892},
																																						run: (*parser).callonDocumentElement866,
																																						expr: &litMatcher{
																																							pos:        position{line: 214, col: 14, offset: 7892},
																																							val:        "quote",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 190, col: 28, offset: 7070},
																																					expr: &actionExpr{
																																						pos: position{line: 230, col: 14, offset: 8489},
																																						run: (*parser).callonDocumentElement869,
																																						expr: &litMatcher{
																																							pos:        position{line: 230, col: 14, offset: 8489},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 190, col: 39, offset: 7081},
																																					expr: &actionExpr{
																																						pos: position{line: 1040, col: 16, offset: 44408},
																																						run: (*parser).callonDocumentElement872,
																																						expr: &litMatcher{
																																							pos:        position{line: 1040, col: 16, offset: 44408},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 190, col: 52, offset: 7094},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 190, col: 56, offset: 7098},
																																						expr: &seqExpr{
																																							pos: position{line: 190, col: 57, offset: 7099},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 190, col: 57, offset: 7099},
																																									expr: &litMatcher{
																																										pos:        position{line: 190, col: 58, offset: 7100},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 190, col: 62, offset: 7104},
																																									expr: &litMatcher{
																																										pos:        position{line: 190, col: 63, offset: 7105},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 190, col: 67, offset: 7109},
																																									expr: &litMatcher{
																																										pos:        position{line: 190, col: 68, offset: 7110},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 190, col: 72, offset: 7114,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 186, col: 24, offset: 6953},
																																	expr: &litMatcher{
																																		pos:        position{line: 186, col: 24, offset: 6953},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 186, col: 29, offset: 6958},
																																	expr: &choiceExpr{
																																		pos: position{line: 1094, col: 7, offset: 45764},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1094, col: 7, offset: 45764},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1094, col: 13, offset: 45770},
																																				run: (*parser).callonDocumentElement889,
																																				expr: &litMatcher{
																																					pos:        position{line: 1094, col: 13, offset: 45770},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 180, col: 59, offset: 6707},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 137, col: 115, offset: 5292},
																				expr: &choiceExpr{
																					pos: position{line: 1094, col: 7, offset: 45764},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1094, col: 7, offset: 45764},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1094, col: 13, offset: 45770},
																							run: (*parser).callonDocumentElement895,
																							expr: &litMatcher{
																								pos:        position{line: 1094, col: 13, offset: 45770},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1102, col: 8, offset: 45866},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1098, col: 12, offset: 45826},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1098, col: 21, offset: 45835},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1100, col: 8, offset: 45855},
																						expr: &anyMatcher{
																							line: 1100, col: 9, offset: 45856,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1036, col: 82, offset: 44228},
													label: "lines",
													expr: &actionExpr{
														pos: position{line: 1049, col: 39, offset: 44617},
														run: (*parser).callonDocumentElement903,
														expr: &labeledExpr{
															pos:   position{line: 1049, col: 39, offset: 44617},
															label: "lines",
															expr: &oneOrMoreExpr{
																pos: position{line: 1049, col: 45, offset: 44623},
																expr: &actionExpr{
																	pos: position{line: 1050, col: 5, offset: 44629},
																	run: (*parser).callonDocumentElement906,
																	expr: &seqExpr{
																		pos: position{line: 1050, col: 5, offset: 44629},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 1050, col: 5, offset: 44629},
																				label: "line",
																				expr: &actionExpr{
																					pos: position{line: 1050, col: 11, offset: 44635},
																					run: (*parser).callonDocumentElement909,
																					expr: &seqExpr{
																						pos: position{line: 1050, col: 11, offset: 44635},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1050, col: 11, offset: 44635},
																								expr: &actionExpr{
																									pos: position{line: 1061, col: 14, offset: 44948},
																									run: (*parser).callonDocumentElement912,
																									expr: &seqExpr{
																										pos: position{line: 1061, col: 14, offset: 44948},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1061, col: 14, offset: 44948},
																												expr: &notExpr{
																													pos: position{line: 1100, col: 8, offset: 45855},
																													expr: &anyMatcher{
																														line: 1100, col: 9, offset: 45856,
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 1061, col: 19, offset: 44953},
																												expr: &choiceExpr{
																													pos: position{line: 1094, col: 7, offset: 45764},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1094, col: 7, offset: 45764},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1094, col: 13, offset: 45770},
																															run: (*parser).callonDocumentElement920,
																															expr: &litMatcher{
																																pos:        position{line: 1094, col: 13, offset: 45770},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&choiceExpr{
																												pos: position{line: 1102, col: 8, offset: 45866},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1100, col: 8, offset: 45855},
																														expr: &anyMatcher{
																															line: 1100, col: 9, offset: 45856,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 1050, col: 24, offset: 44648},
																								expr: &seqExpr{
																									pos: position{line: 1050, col: 25, offset: 44649},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1050, col: 25, offset: 44649},
																											expr: &choiceExpr{
																												pos: position{line: 1102, col: 8, offset: 45866},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1100, col: 8, offset: 45855},
																														expr: &anyMatcher{
																															line: 1100, col: 9, offset: 45856,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 1050, col: 30, offset: 44654,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1102, col: 8, offset: 45866},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1098, col: 12, offset: 45826},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1098, col: 21, offset: 45835},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1100, col: 8, offset: 45855},
																						expr: &anyMatcher{
																							line: 1100, col: 9, offset: 45856,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 129, col: 96, offset: 4918},
										name: "Paragraph",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section",
			pos:  position{line: 245, col: 1, offset: 8778},
			expr: &actionExpr{
				pos: position{line: 245, col: 12, offset: 8789},
				run: (*parser).callonSection1,
				expr: &seqExpr{
					pos: position{line: 245, col: 12, offset: 8789},
					exprs: []interface{}{
						&andExpr{
							pos: position{line: 245, col: 12, offset: 8789},
							expr: &litMatcher{
								pos:        position{line: 245, col: 13, offset: 8790},
								val:        "=",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 246, col: 5, offset: 8863},
							label: "section",
							expr: &choiceExpr{
								pos: position{line: 246, col: 14, offset: 8872},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 246, col: 14, offset: 8872},
										name: "Section0",
									},
									&ruleRefExpr{
										pos:  position{line: 246, col: 25, offset: 8883},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 246, col: 36, offset: 8894},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 246, col: 47, offset: 8905},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 246, col: 58, offset: 8916},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 246, col: 69, offset: 8927},
										name: "Section5",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0",
			pos:  position{line: 252, col: 1, offset: 9008},
			expr: &actionExpr{
				pos: position{line: 252, col: 13, offset: 9020},
				run: (*parser).callonSection01,
				expr: &seqExpr{
					pos: position{line: 252, col: 13, offset: 9020},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 252, col: 13, offset: 9020},
							expr: &notExpr{
								pos: position{line: 1100, col: 8, offset: 45855},
								expr: &anyMatcher{
									line: 1100, col: 9, offset: 45856,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 253, col: 5, offset: 9091},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 253, col: 13, offset: 9099},
								name: "Section0Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 253, col: 28, offset: 9114},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 253, col: 38, offset: 9124},
								expr: &ruleRefExpr{
									pos:  position{line: 253, col: 38, offset: 9124},
									name: "Section0Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Title",
			pos:  position{line: 259, col: 1, offset: 9273},
			expr: &actionExpr{
				pos: position{line: 259, col: 18, offset: 9290},
				run: (*parser).callonSection0Title1,
				expr: &seqExpr{
					pos: position{line: 259, col: 18, offset: 9290},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 257, col: 24, offset: 9264},
							val:        "=",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 257, col: 28, offset: 9268},
							expr: &choiceExpr{
								pos: position{line: 1094, col: 7, offset: 45764},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1094, col: 7, offset: 45764},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1094, col: 13, offset: 45770},
										run: (*parser).callonSection0Title7,
										expr: &litMatcher{
											pos:        position{line: 1094, col: 13, offset: 45770},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 259, col: 38, offset: 9310},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 259, col: 48, offset: 9320},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 259, col: 63, offset: 9335},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 259, col: 67, offset: 9339},
								expr: &actionExpr{
									pos: position{line: 150, col: 20, offset: 5697},
									run: (*parser).callonSection0Title13,
									expr: &seqExpr{
										pos: position{line: 150, col: 20, offset: 5697},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 150, col: 20, offset: 5697},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 150, col: 25, offset: 5702},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1080, col: 7, offset: 45482},
													run: (*parser).callonSection0Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														expr: &seqExpr{
															pos: position{line: 1080, col: 8, offset: 45483},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1080, col: 8, offset: 45483},
																	expr: &choiceExpr{
																		pos: position{line: 1098, col: 12, offset: 45826},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1098, col: 12, offset: 45826},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1098, col: 21, offset: 45835},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 17, offset: 45492},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonSection0Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 21, offset: 45496},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 22, offset: 45497},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 26, offset: 45501},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 27, offset: 45502},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 31, offset: 45506},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 32, offset: 45507},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 37, offset: 45512},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 38, offset: 45513},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 43, offset: 45518},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 44, offset: 45519},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1080, col: 48, offset: 45523,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 150, col: 33, offset: 5710},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 150, col: 38, offset: 5715},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonSection0Title44,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0TitleWithAttributes",
			pos:  position{line: 263, col: 1, offset: 9454},
			expr: &actionExpr{
				pos: position{line: 263, col: 32, offset: 9485},
				run: (*parser).callonSection0TitleWithAttributes1,
				expr: &seqExpr{
					pos: position{line: 263, col: 32, offset: 9485},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 263, col: 32, offset: 9485},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 263, col: 43, offset: 9496},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection0TitleWithAttributes5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 136, col: 21, offset: 5092},
												expr: &charClassMatcher{
													pos:        position{line: 136, col: 23, offset: 5094},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 137, col: 5, offset: 5182},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 137, col: 11, offset: 5188},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 144, col: 14, offset: 5546},
															run: (*parser).callonSection0TitleWithAttributes11,
															expr: &seqExpr{
																pos: position{line: 144, col: 14, offset: 5546},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 144, col: 14, offset: 5546},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 144, col: 19, offset: 5551},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection0TitleWithAttributes15,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection0TitleWithAttributes25,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 144, col: 27, offset: 5559},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 5, offset: 5613},
															run: (*parser).callonSection0TitleWithAttributes39,
															expr: &seqExpr{
																pos: position{line: 146, col: 5, offset: 5613},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 5, offset: 5613},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 10, offset: 5618},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection0TitleWithAttributes43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection0TitleWithAttributes53,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 18, offset: 5626},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 156, col: 17, offset: 5929},
															run: (*parser).callonSection0TitleWithAttributes67,
															expr: &seqExpr{
																pos: position{line: 156, col: 17, offset: 5929},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 156, col: 17, offset: 5929},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 156, col: 21, offset: 5933},
																		expr: &litMatcher{
																			pos:        position{line: 156, col: 22, offset: 5934},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 156, col: 26, offset: 5938},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection0TitleWithAttributes75,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 156, col: 30, offset: 5942},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 160, col: 24, offset: 6047},
																			run: (*parser).callonSection0TitleWithAttributes78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 160, col: 24, offset: 6047},
																				expr: &seqExpr{
																					pos: position{line: 160, col: 25, offset: 6048},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 160, col: 25, offset: 6048},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 160, col: 34, offset: 6057,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 166, col: 16, offset: 6206},
															run: (*parser).callonSection0TitleWithAttributes86,
															expr: &seqExpr{
																pos: position{line: 166, col: 16, offset: 6206},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 166, col: 16, offset: 6206},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 166, col: 21, offset: 6211},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection0TitleWithAttributes92,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 166, col: 25, offset: 6215},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 170, col: 23, offset: 6319},
																			run: (*parser).callonSection0TitleWithAttributes95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 170, col: 23, offset: 6319},
																				expr: &seqExpr{
																					pos: position{line: 170, col: 24, offset: 6320},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 170, col: 24, offset: 6320},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 170, col: 33, offset: 6329},
																							expr: &litMatcher{
																								pos:        position{line: 170, col: 34, offset: 6330},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 170, col: 38, offset: 6334,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 166, col: 51, offset: 6241},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 30, offset: 6483},
															run: (*parser).callonSection0TitleWithAttributes106,
															expr: &seqExpr{
																pos: position{line: 175, col: 30, offset: 6483},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 175, col: 30, offset: 6483},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 175, col: 34, offset: 6487},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 508, col: 19, offset: 19492},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 508, col: 19, offset: 19492},
																					run: (*parser).callonSection0TitleWithAttributes111,
																					expr: &litMatcher{
																						pos:        position{line: 508, col: 19, offset: 19492},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 510, col: 5, offset: 19530},
																					run: (*parser).callonSection0TitleWithAttributes113,
																					expr: &litMatcher{
																						pos:        position{line: 510, col: 5, offset: 19530},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 512, col: 5, offset: 19570},
																					run: (*parser).callonSection0TitleWithAttributes115,
																					expr: &litMatcher{
																						pos:        position{line: 512, col: 5, offset: 19570},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 514, col: 5, offset: 19620},
																					run: (*parser).callonSection0TitleWithAttributes117,
																					expr: &litMatcher{
																						pos:        position{line: 514, col: 5, offset: 19620},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 516, col: 5, offset: 19666},
																					run: (*parser).callonSection0TitleWithAttributes119,
																					expr: &litMatcher{
																						pos:        position{line: 516, col: 5, offset: 19666},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 175, col: 53, offset: 6506},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 198, col: 21, offset: 7255},
															run: (*parser).callonSection0TitleWithAttributes122,
															expr: &litMatcher{
																pos:        position{line: 198, col: 21, offset: 7255},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 180, col: 19, offset: 6667},
															run: (*parser).callonSection0TitleWithAttributes124,
															expr: &seqExpr{
																pos: position{line: 180, col: 19, offset: 6667},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 180, col: 19, offset: 6667},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 180, col: 23, offset: 6671},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection0TitleWithAttributes130,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 180, col: 27, offset: 6675},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 180, col: 38, offset: 6686},
																			expr: &choiceExpr{
																				pos: position{line: 184, col: 21, offset: 6799},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						run: (*parser).callonSection0TitleWithAttributes135,
																						expr: &seqExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 184, col: 21, offset: 6799},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection0TitleWithAttributes138,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection0TitleWithAttributes141,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection0TitleWithAttributes144,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection0TitleWithAttributes147,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 184, col: 40, offset: 6818},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 184, col: 44, offset: 6822},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 194, col: 19, offset: 7173},
																										run: (*parser).callonSection0TitleWithAttributes161,
																										expr: &labeledExpr{
																											pos:   position{line: 194, col: 19, offset: 7173},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 194, col: 25, offset: 7179},
																												expr: &seqExpr{
																													pos: position{line: 194, col: 26, offset: 7180},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 194, col: 26, offset: 7180},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 27, offset: 7181},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 31, offset: 7185},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 32, offset: 7186},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 36, offset: 7190},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 37, offset: 7191},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 194, col: 41, offset: 7195,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 184, col: 67, offset: 6845},
																									expr: &litMatcher{
																										pos:        position{line: 184, col: 67, offset: 6845},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 184, col: 72, offset: 6850},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection0TitleWithAttributes177,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						run: (*parser).callonSection0TitleWithAttributes179,
																						expr: &seqExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 186, col: 5, offset: 6934},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection0TitleWithAttributes182,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection0TitleWithAttributes185,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection0TitleWithAttributes188,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection0TitleWithAttributes191,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 186, col: 24, offset: 6953},
																									expr: &litMatcher{
																										pos:        position{line: 186, col: 24, offset: 6953},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 186, col: 29, offset: 6958},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection0TitleWithAttributes208,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 180, col: 59, offset: 6707},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 137, col: 115, offset: 5292},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonSection0TitleWithAttributes214,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 264, col: 5, offset: 9521},
							label: "title",
							expr: &ruleRefExpr{
								pos:  position{line: 264, col: 12, offset: 9528},
								name: "Section0Title",
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Element",
			pos:  position{line: 268, col: 1, offset: 9623},
			expr: &actionExpr{
				pos: position{line: 268, col: 20, offset: 9642},
				run: (*parser).callonSection0Element1,
				expr: &seqExpr{
					pos: position{line: 268, col: 20, offset: 9642},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 268, col: 20, offset: 9642},
							expr: &seqExpr{
								pos: position{line: 257, col: 24, offset: 9264},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 257, col: 24, offset: 9264},
										val:        "=",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 257, col: 28, offset: 9268},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonSection0Element9,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 269, col: 5, offset: 9667},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 269, col: 16, offset: 9678},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection0Element13,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 136, col: 21, offset: 5092},
												expr: &charClassMatcher{
													pos:        position{line: 136, col: 23, offset: 5094},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 137, col: 5, offset: 5182},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 137, col: 11, offset: 5188},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 144, col: 14, offset: 5546},
															run: (*parser).callonSection0Element19,
															expr: &seqExpr{
																pos: position{line: 144, col: 14, offset: 5546},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 144, col: 14, offset: 5546},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 144, col: 19, offset: 5551},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection0Element23,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection0Element33,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 144, col: 27, offset: 5559},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 5, offset: 5613},
															run: (*parser).callonSection0Element47,
															expr: &seqExpr{
																pos: position{line: 146, col: 5, offset: 5613},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 5, offset: 5613},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 10, offset: 5618},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection0Element51,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection0Element61,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 18, offset: 5626},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 156, col: 17, offset: 5929},
															run: (*parser).callonSection0Element75,
															expr: &seqExpr{
																pos: position{line: 156, col: 17, offset: 5929},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 156, col: 17, offset: 5929},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 156, col: 21, offset: 5933},
																		expr: &litMatcher{
																			pos:        position{line: 156, col: 22, offset: 5934},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 156, col: 26, offset: 5938},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection0Element83,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 156, col: 30, offset: 5942},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 160, col: 24, offset: 6047},
																			run: (*parser).callonSection0Element86,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 160, col: 24, offset: 6047},
																				expr: &seqExpr{
																					pos: position{line: 160, col: 25, offset: 6048},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 160, col: 25, offset: 6048},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 160, col: 34, offset: 6057,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 166, col: 16, offset: 6206},
															run: (*parser).callonSection0Element94,
															expr: &seqExpr{
																pos: position{line: 166, col: 16, offset: 6206},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 166, col: 16, offset: 6206},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 166, col: 21, offset: 6211},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection0Element100,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 166, col: 25, offset: 6215},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 170, col: 23, offset: 6319},
																			run: (*parser).callonSection0Element103,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 170, col: 23, offset: 6319},
																				expr: &seqExpr{
																					pos: position{line: 170, col: 24, offset: 6320},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 170, col: 24, offset: 6320},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 170, col: 33, offset: 6329},
																							expr: &litMatcher{
																								pos:        position{line: 170, col: 34, offset: 6330},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 170, col: 38, offset: 6334,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 166, col: 51, offset: 6241},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 30, offset: 6483},
															run: (*parser).callonSection0Element114,
															expr: &seqExpr{
																pos: position{line: 175, col: 30, offset: 6483},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 175, col: 30, offset: 6483},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 175, col: 34, offset: 6487},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 508, col: 19, offset: 19492},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 508, col: 19, offset: 19492},
																					run: (*parser).callonSection0Element119,
																					expr: &litMatcher{
																						pos:        position{line: 508, col: 19, offset: 19492},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 510, col: 5, offset: 19530},
																					run: (*parser).callonSection0Element121,
																					expr: &litMatcher{
																						pos:        position{line: 510, col: 5, offset: 19530},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 512, col: 5, offset: 19570},
																					run: (*parser).callonSection0Element123,
																					expr: &litMatcher{
																						pos:        position{line: 512, col: 5, offset: 19570},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 514, col: 5, offset: 19620},
																					run: (*parser).callonSection0Element125,
																					expr: &litMatcher{
																						pos:        position{line: 514, col: 5, offset: 19620},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 516, col: 5, offset: 19666},
																					run: (*parser).callonSection0Element127,
																					expr: &litMatcher{
																						pos:        position{line: 516, col: 5, offset: 19666},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 175, col: 53, offset: 6506},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 198, col: 21, offset: 7255},
															run: (*parser).callonSection0Element130,
															expr: &litMatcher{
																pos:        position{line: 198, col: 21, offset: 7255},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 180, col: 19, offset: 6667},
															run: (*parser).callonSection0Element132,
															expr: &seqExpr{
																pos: position{line: 180, col: 19, offset: 6667},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 180, col: 19, offset: 6667},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 180, col: 23, offset: 6671},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection0Element138,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 180, col: 27, offset: 6675},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 180, col: 38, offset: 6686},
																			expr: &choiceExpr{
																				pos: position{line: 184, col: 21, offset: 6799},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						run: (*parser).callonSection0Element143,
																						expr: &seqExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 184, col: 21, offset: 6799},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection0Element146,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection0Element149,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection0Element152,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection0Element155,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 184, col: 40, offset: 6818},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 184, col: 44, offset: 6822},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 194, col: 19, offset: 7173},
																										run: (*parser).callonSection0Element169,
																										expr: &labeledExpr{
																											pos:   position{line: 194, col: 19, offset: 7173},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 194, col: 25, offset: 7179},
																												expr: &seqExpr{
																													pos: position{line: 194, col: 26, offset: 7180},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 194, col: 26, offset: 7180},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 27, offset: 7181},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 31, offset: 7185},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 32, offset: 7186},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 36, offset: 7190},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 37, offset: 7191},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 194, col: 41, offset: 7195,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 184, col: 67, offset: 6845},
																									expr: &litMatcher{
																										pos:        position{line: 184, col: 67, offset: 6845},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 184, col: 72, offset: 6850},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection0Element185,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						run: (*parser).callonSection0Element187,
																						expr: &seqExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 186, col: 5, offset: 6934},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection0Element190,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection0Element193,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection0Element196,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection0Element199,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 186, col: 24, offset: 6953},
																									expr: &litMatcher{
																										pos:        position{line: 186, col: 24, offset: 6953},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 186, col: 29, offset: 6958},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection0Element216,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 180, col: 59, offset: 6707},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 137, col: 115, offset: 5292},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonSection0Element222,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 270, col: 5, offset: 9703},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 270, col: 14, offset: 9712},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 270, col: 14, offset: 9712},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 270, col: 25, offset: 9723},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 270, col: 36, offset: 9734},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 270, col: 47, offset: 9745},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 270, col: 58, offset: 9756},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 270, col: 69, offset: 9767},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1",
			pos:  position{line: 275, col: 1, offset: 9871},
			expr: &actionExpr{
				pos: position{line: 275, col: 13, offset: 9883},
				run: (*parser).callonSection11,
				expr: &seqExpr{
					pos: position{line: 275, col: 13, offset: 9883},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 275, col: 13, offset: 9883},
							expr: &notExpr{
								pos: position{line: 1100, col: 8, offset: 45855},
								expr: &anyMatcher{
									line: 1100, col: 9, offset: 45856,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 276, col: 5, offset: 9954},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 276, col: 13, offset: 9962},
								name: "Section1Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 276, col: 28, offset: 9977},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 276, col: 38, offset: 9987},
								expr: &ruleRefExpr{
									pos:  position{line: 276, col: 38, offset: 9987},
									name: "Section1Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Title",
			pos:  position{line: 282, col: 1, offset: 10137},
			expr: &actionExpr{
				pos: position{line: 282, col: 18, offset: 10154},
				run: (*parser).callonSection1Title1,
				expr: &seqExpr{
					pos: position{line: 282, col: 18, offset: 10154},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 280, col: 24, offset: 10127},
							val:        "==",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 280, col: 29, offset: 10132},
							expr: &choiceExpr{
								pos: position{line: 1094, col: 7, offset: 45764},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1094, col: 7, offset: 45764},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1094, col: 13, offset: 45770},
										run: (*parser).callonSection1Title7,
										expr: &litMatcher{
											pos:        position{line: 1094, col: 13, offset: 45770},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 282, col: 38, offset: 10174},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 282, col: 48, offset: 10184},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 282, col: 63, offset: 10199},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 282, col: 67, offset: 10203},
								expr: &actionExpr{
									pos: position{line: 150, col: 20, offset: 5697},
									run: (*parser).callonSection1Title13,
									expr: &seqExpr{
										pos: position{line: 150, col: 20, offset: 5697},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 150, col: 20, offset: 5697},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 150, col: 25, offset: 5702},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1080, col: 7, offset: 45482},
													run: (*parser).callonSection1Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														expr: &seqExpr{
															pos: position{line: 1080, col: 8, offset: 45483},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1080, col: 8, offset: 45483},
																	expr: &choiceExpr{
																		pos: position{line: 1098, col: 12, offset: 45826},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1098, col: 12, offset: 45826},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1098, col: 21, offset: 45835},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 17, offset: 45492},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonSection1Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 21, offset: 45496},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 22, offset: 45497},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 26, offset: 45501},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 27, offset: 45502},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 31, offset: 45506},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 32, offset: 45507},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 37, offset: 45512},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 38, offset: 45513},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 43, offset: 45518},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 44, offset: 45519},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1080, col: 48, offset: 45523,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 150, col: 33, offset: 5710},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 150, col: 38, offset: 5715},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonSection1Title44,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Element",
			pos:  position{line: 286, col: 1, offset: 10319},
			expr: &actionExpr{
				pos: position{line: 286, col: 20, offset: 10338},
				run: (*parser).callonSection1Element1,
				expr: &seqExpr{
					pos: position{line: 286, col: 20, offset: 10338},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 286, col: 20, offset: 10338},
							expr: &seqExpr{
								pos: position{line: 280, col: 24, offset: 10127},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 280, col: 24, offset: 10127},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 280, col: 29, offset: 10132},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonSection1Element9,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 287, col: 5, offset: 10364},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 287, col: 16, offset: 10375},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection1Element13,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 136, col: 21, offset: 5092},
												expr: &charClassMatcher{
													pos:        position{line: 136, col: 23, offset: 5094},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 137, col: 5, offset: 5182},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 137, col: 11, offset: 5188},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 144, col: 14, offset: 5546},
															run: (*parser).callonSection1Element19,
															expr: &seqExpr{
																pos: position{line: 144, col: 14, offset: 5546},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 144, col: 14, offset: 5546},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 144, col: 19, offset: 5551},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection1Element23,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection1Element33,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 144, col: 27, offset: 5559},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 5, offset: 5613},
															run: (*parser).callonSection1Element47,
															expr: &seqExpr{
																pos: position{line: 146, col: 5, offset: 5613},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 5, offset: 5613},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 10, offset: 5618},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection1Element51,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection1Element61,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 18, offset: 5626},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 156, col: 17, offset: 5929},
															run: (*parser).callonSection1Element75,
															expr: &seqExpr{
																pos: position{line: 156, col: 17, offset: 5929},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 156, col: 17, offset: 5929},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 156, col: 21, offset: 5933},
																		expr: &litMatcher{
																			pos:        position{line: 156, col: 22, offset: 5934},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 156, col: 26, offset: 5938},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection1Element83,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 156, col: 30, offset: 5942},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 160, col: 24, offset: 6047},
																			run: (*parser).callonSection1Element86,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 160, col: 24, offset: 6047},
																				expr: &seqExpr{
																					pos: position{line: 160, col: 25, offset: 6048},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 160, col: 25, offset: 6048},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 160, col: 34, offset: 6057,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 166, col: 16, offset: 6206},
															run: (*parser).callonSection1Element94,
															expr: &seqExpr{
																pos: position{line: 166, col: 16, offset: 6206},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 166, col: 16, offset: 6206},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 166, col: 21, offset: 6211},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection1Element100,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 166, col: 25, offset: 6215},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 170, col: 23, offset: 6319},
																			run: (*parser).callonSection1Element103,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 170, col: 23, offset: 6319},
																				expr: &seqExpr{
																					pos: position{line: 170, col: 24, offset: 6320},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 170, col: 24, offset: 6320},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 170, col: 33, offset: 6329},
																							expr: &litMatcher{
																								pos:        position{line: 170, col: 34, offset: 6330},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 170, col: 38, offset: 6334,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 166, col: 51, offset: 6241},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 30, offset: 6483},
															run: (*parser).callonSection1Element114,
															expr: &seqExpr{
																pos: position{line: 175, col: 30, offset: 6483},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 175, col: 30, offset: 6483},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 175, col: 34, offset: 6487},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 508, col: 19, offset: 19492},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 508, col: 19, offset: 19492},
																					run: (*parser).callonSection1Element119,
																					expr: &litMatcher{
																						pos:        position{line: 508, col: 19, offset: 19492},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 510, col: 5, offset: 19530},
																					run: (*parser).callonSection1Element121,
																					expr: &litMatcher{
																						pos:        position{line: 510, col: 5, offset: 19530},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 512, col: 5, offset: 19570},
																					run: (*parser).callonSection1Element123,
																					expr: &litMatcher{
																						pos:        position{line: 512, col: 5, offset: 19570},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 514, col: 5, offset: 19620},
																					run: (*parser).callonSection1Element125,
																					expr: &litMatcher{
																						pos:        position{line: 514, col: 5, offset: 19620},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 516, col: 5, offset: 19666},
																					run: (*parser).callonSection1Element127,
																					expr: &litMatcher{
																						pos:        position{line: 516, col: 5, offset: 19666},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 175, col: 53, offset: 6506},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 198, col: 21, offset: 7255},
															run: (*parser).callonSection1Element130,
															expr: &litMatcher{
																pos:        position{line: 198, col: 21, offset: 7255},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 180, col: 19, offset: 6667},
															run: (*parser).callonSection1Element132,
															expr: &seqExpr{
																pos: position{line: 180, col: 19, offset: 6667},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 180, col: 19, offset: 6667},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 180, col: 23, offset: 6671},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection1Element138,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 180, col: 27, offset: 6675},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 180, col: 38, offset: 6686},
																			expr: &choiceExpr{
																				pos: position{line: 184, col: 21, offset: 6799},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						run: (*parser).callonSection1Element143,
																						expr: &seqExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 184, col: 21, offset: 6799},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection1Element146,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection1Element149,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection1Element152,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection1Element155,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 184, col: 40, offset: 6818},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 184, col: 44, offset: 6822},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 194, col: 19, offset: 7173},
																										run: (*parser).callonSection1Element169,
																										expr: &labeledExpr{
																											pos:   position{line: 194, col: 19, offset: 7173},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 194, col: 25, offset: 7179},
																												expr: &seqExpr{
																													pos: position{line: 194, col: 26, offset: 7180},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 194, col: 26, offset: 7180},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 27, offset: 7181},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 31, offset: 7185},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 32, offset: 7186},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 36, offset: 7190},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 37, offset: 7191},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 194, col: 41, offset: 7195,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 184, col: 67, offset: 6845},
																									expr: &litMatcher{
																										pos:        position{line: 184, col: 67, offset: 6845},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 184, col: 72, offset: 6850},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection1Element185,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						run: (*parser).callonSection1Element187,
																						expr: &seqExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 186, col: 5, offset: 6934},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection1Element190,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection1Element193,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection1Element196,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection1Element199,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 186, col: 24, offset: 6953},
																									expr: &litMatcher{
																										pos:        position{line: 186, col: 24, offset: 6953},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 186, col: 29, offset: 6958},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection1Element216,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 180, col: 59, offset: 6707},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 137, col: 115, offset: 5292},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonSection1Element222,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 288, col: 5, offset: 10400},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 288, col: 14, offset: 10409},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 288, col: 14, offset: 10409},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 288, col: 25, offset: 10420},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 288, col: 36, offset: 10431},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 288, col: 47, offset: 10442},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 288, col: 58, offset: 10453},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2",
			pos:  position{line: 292, col: 1, offset: 10552},
			expr: &actionExpr{
				pos: position{line: 292, col: 13, offset: 10564},
				run: (*parser).callonSection21,
				expr: &seqExpr{
					pos: position{line: 292, col: 13, offset: 10564},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 292, col: 13, offset: 10564},
							expr: &notExpr{
								pos: position{line: 1100, col: 8, offset: 45855},
								expr: &anyMatcher{
									line: 1100, col: 9, offset: 45856,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 293, col: 5, offset: 10635},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 293, col: 13, offset: 10643},
								name: "Section2Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 293, col: 28, offset: 10658},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 293, col: 38, offset: 10668},
								expr: &ruleRefExpr{
									pos:  position{line: 293, col: 38, offset: 10668},
									name: "Section2Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Title",
			pos:  position{line: 299, col: 1, offset: 10820},
			expr: &actionExpr{
				pos: position{line: 299, col: 18, offset: 10837},
				run: (*parser).callonSection2Title1,
				expr: &seqExpr{
					pos: position{line: 299, col: 18, offset: 10837},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 297, col: 24, offset: 10808},
							val:        "===",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 297, col: 30, offset: 10814},
							expr: &choiceExpr{
								pos: position{line: 1094, col: 7, offset: 45764},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1094, col: 7, offset: 45764},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1094, col: 13, offset: 45770},
										run: (*parser).callonSection2Title7,
										expr: &litMatcher{
											pos:        position{line: 1094, col: 13, offset: 45770},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 299, col: 38, offset: 10857},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 299, col: 48, offset: 10867},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 299, col: 63, offset: 10882},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 299, col: 67, offset: 10886},
								expr: &actionExpr{
									pos: position{line: 150, col: 20, offset: 5697},
									run: (*parser).callonSection2Title13,
									expr: &seqExpr{
										pos: position{line: 150, col: 20, offset: 5697},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 150, col: 20, offset: 5697},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 150, col: 25, offset: 5702},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1080, col: 7, offset: 45482},
													run: (*parser).callonSection2Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														expr: &seqExpr{
															pos: position{line: 1080, col: 8, offset: 45483},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1080, col: 8, offset: 45483},
																	expr: &choiceExpr{
																		pos: position{line: 1098, col: 12, offset: 45826},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1098, col: 12, offset: 45826},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1098, col: 21, offset: 45835},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 17, offset: 45492},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonSection2Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 21, offset: 45496},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 22, offset: 45497},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 26, offset: 45501},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 27, offset: 45502},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 31, offset: 45506},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 32, offset: 45507},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 37, offset: 45512},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 38, offset: 45513},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 43, offset: 45518},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 44, offset: 45519},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1080, col: 48, offset: 45523,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 150, col: 33, offset: 5710},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 150, col: 38, offset: 5715},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonSection2Title44,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Element",
			pos:  position{line: 303, col: 1, offset: 11002},
			expr: &actionExpr{
				pos: position{line: 303, col: 20, offset: 11021},
				run: (*parser).callonSection2Element1,
				expr: &seqExpr{
					pos: position{line: 303, col: 20, offset: 11021},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 303, col: 20, offset: 11021},
							expr: &seqExpr{
								pos: position{line: 280, col: 24, offset: 10127},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 280, col: 24, offset: 10127},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 280, col: 29, offset: 10132},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonSection2Element9,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 303, col: 41, offset: 11042},
							expr: &seqExpr{
								pos: position{line: 297, col: 24, offset: 10808},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 297, col: 24, offset: 10808},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 297, col: 30, offset: 10814},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonSection2Element17,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 304, col: 5, offset: 11068},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 304, col: 16, offset: 11079},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection2Element21,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 136, col: 21, offset: 5092},
												expr: &charClassMatcher{
													pos:        position{line: 136, col: 23, offset: 5094},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 137, col: 5, offset: 5182},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 137, col: 11, offset: 5188},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 144, col: 14, offset: 5546},
															run: (*parser).callonSection2Element27,
															expr: &seqExpr{
																pos: position{line: 144, col: 14, offset: 5546},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 144, col: 14, offset: 5546},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 144, col: 19, offset: 5551},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection2Element31,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection2Element41,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 144, col: 27, offset: 5559},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 5, offset: 5613},
															run: (*parser).callonSection2Element55,
															expr: &seqExpr{
																pos: position{line: 146, col: 5, offset: 5613},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 5, offset: 5613},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 10, offset: 5618},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection2Element59,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection2Element69,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 18, offset: 5626},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 156, col: 17, offset: 5929},
															run: (*parser).callonSection2Element83,
															expr: &seqExpr{
																pos: position{line: 156, col: 17, offset: 5929},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 156, col: 17, offset: 5929},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 156, col: 21, offset: 5933},
																		expr: &litMatcher{
																			pos:        position{line: 156, col: 22, offset: 5934},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 156, col: 26, offset: 5938},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection2Element91,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 156, col: 30, offset: 5942},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 160, col: 24, offset: 6047},
																			run: (*parser).callonSection2Element94,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 160, col: 24, offset: 6047},
																				expr: &seqExpr{
																					pos: position{line: 160, col: 25, offset: 6048},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 160, col: 25, offset: 6048},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 160, col: 34, offset: 6057,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 166, col: 16, offset: 6206},
															run: (*parser).callonSection2Element102,
															expr: &seqExpr{
																pos: position{line: 166, col: 16, offset: 6206},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 166, col: 16, offset: 6206},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 166, col: 21, offset: 6211},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection2Element108,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 166, col: 25, offset: 6215},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 170, col: 23, offset: 6319},
																			run: (*parser).callonSection2Element111,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 170, col: 23, offset: 6319},
																				expr: &seqExpr{
																					pos: position{line: 170, col: 24, offset: 6320},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 170, col: 24, offset: 6320},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 170, col: 33, offset: 6329},
																							expr: &litMatcher{
																								pos:        position{line: 170, col: 34, offset: 6330},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 170, col: 38, offset: 6334,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 166, col: 51, offset: 6241},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 30, offset: 6483},
															run: (*parser).callonSection2Element122,
															expr: &seqExpr{
																pos: position{line: 175, col: 30, offset: 6483},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 175, col: 30, offset: 6483},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 175, col: 34, offset: 6487},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 508, col: 19, offset: 19492},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 508, col: 19, offset: 19492},
																					run: (*parser).callonSection2Element127,
																					expr: &litMatcher{
																						pos:        position{line: 508, col: 19, offset: 19492},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 510, col: 5, offset: 19530},
																					run: (*parser).callonSection2Element129,
																					expr: &litMatcher{
																						pos:        position{line: 510, col: 5, offset: 19530},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 512, col: 5, offset: 19570},
																					run: (*parser).callonSection2Element131,
																					expr: &litMatcher{
																						pos:        position{line: 512, col: 5, offset: 19570},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 514, col: 5, offset: 19620},
																					run: (*parser).callonSection2Element133,
																					expr: &litMatcher{
																						pos:        position{line: 514, col: 5, offset: 19620},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 516, col: 5, offset: 19666},
																					run: (*parser).callonSection2Element135,
																					expr: &litMatcher{
																						pos:        position{line: 516, col: 5, offset: 19666},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 175, col: 53, offset: 6506},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 198, col: 21, offset: 7255},
															run: (*parser).callonSection2Element138,
															expr: &litMatcher{
																pos:        position{line: 198, col: 21, offset: 7255},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 180, col: 19, offset: 6667},
															run: (*parser).callonSection2Element140,
															expr: &seqExpr{
																pos: position{line: 180, col: 19, offset: 6667},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 180, col: 19, offset: 6667},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 180, col: 23, offset: 6671},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection2Element146,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 180, col: 27, offset: 6675},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 180, col: 38, offset: 6686},
																			expr: &choiceExpr{
																				pos: position{line: 184, col: 21, offset: 6799},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						run: (*parser).callonSection2Element151,
																						expr: &seqExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 184, col: 21, offset: 6799},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection2Element154,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection2Element157,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection2Element160,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection2Element163,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 184, col: 40, offset: 6818},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 184, col: 44, offset: 6822},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 194, col: 19, offset: 7173},
																										run: (*parser).callonSection2Element177,
																										expr: &labeledExpr{
																											pos:   position{line: 194, col: 19, offset: 7173},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 194, col: 25, offset: 7179},
																												expr: &seqExpr{
																													pos: position{line: 194, col: 26, offset: 7180},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 194, col: 26, offset: 7180},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 27, offset: 7181},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 31, offset: 7185},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 32, offset: 7186},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 36, offset: 7190},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 37, offset: 7191},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 194, col: 41, offset: 7195,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 184, col: 67, offset: 6845},
																									expr: &litMatcher{
																										pos:        position{line: 184, col: 67, offset: 6845},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 184, col: 72, offset: 6850},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection2Element193,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						run: (*parser).callonSection2Element195,
																						expr: &seqExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 186, col: 5, offset: 6934},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection2Element198,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection2Element201,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection2Element204,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection2Element207,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 186, col: 24, offset: 6953},
																									expr: &litMatcher{
																										pos:        position{line: 186, col: 24, offset: 6953},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 186, col: 29, offset: 6958},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection2Element224,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 180, col: 59, offset: 6707},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 137, col: 115, offset: 5292},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonSection2Element230,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 305, col: 5, offset: 11104},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 305, col: 14, offset: 11113},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 305, col: 14, offset: 11113},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 305, col: 25, offset: 11124},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 305, col: 36, offset: 11135},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 305, col: 47, offset: 11146},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3",
			pos:  position{line: 309, col: 1, offset: 11245},
			expr: &actionExpr{
				pos: position{line: 309, col: 13, offset: 11257},
				run: (*parser).callonSection31,
				expr: &seqExpr{
					pos: position{line: 309, col: 13, offset: 11257},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 309, col: 13, offset: 11257},
							expr: &notExpr{
								pos: position{line: 1100, col: 8, offset: 45855},
								expr: &anyMatcher{
									line: 1100, col: 9, offset: 45856,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 310, col: 5, offset: 11328},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 310, col: 13, offset: 11336},
								name: "Section3Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 310, col: 28, offset: 11351},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 310, col: 38, offset: 11361},
								expr: &ruleRefExpr{
									pos:  position{line: 310, col: 38, offset: 11361},
									name: "Section3Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Title",
			pos:  position{line: 316, col: 1, offset: 11514},
			expr: &actionExpr{
				pos: position{line: 316, col: 18, offset: 11531},
				run: (*parser).callonSection3Title1,
				expr: &seqExpr{
					pos: position{line: 316, col: 18, offset: 11531},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 314, col: 24, offset: 11501},
							val:        "====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 314, col: 31, offset: 11508},
							expr: &choiceExpr{
								pos: position{line: 1094, col: 7, offset: 45764},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1094, col: 7, offset: 45764},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1094, col: 13, offset: 45770},
										run: (*parser).callonSection3Title7,
										expr: &litMatcher{
											pos:        position{line: 1094, col: 13, offset: 45770},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 316, col: 38, offset: 11551},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 316, col: 48, offset: 11561},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 316, col: 63, offset: 11576},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 316, col: 67, offset: 11580},
								expr: &actionExpr{
									pos: position{line: 150, col: 20, offset: 5697},
									run: (*parser).callonSection3Title13,
									expr: &seqExpr{
										pos: position{line: 150, col: 20, offset: 5697},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 150, col: 20, offset: 5697},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 150, col: 25, offset: 5702},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1080, col: 7, offset: 45482},
													run: (*parser).callonSection3Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														expr: &seqExpr{
															pos: position{line: 1080, col: 8, offset: 45483},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1080, col: 8, offset: 45483},
																	expr: &choiceExpr{
																		pos: position{line: 1098, col: 12, offset: 45826},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1098, col: 12, offset: 45826},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1098, col: 21, offset: 45835},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 17, offset: 45492},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonSection3Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 21, offset: 45496},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 22, offset: 45497},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 26, offset: 45501},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 27, offset: 45502},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 31, offset: 45506},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 32, offset: 45507},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 37, offset: 45512},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 38, offset: 45513},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 43, offset: 45518},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 44, offset: 45519},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1080, col: 48, offset: 45523,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 150, col: 33, offset: 5710},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 150, col: 38, offset: 5715},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonSection3Title44,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Element",
			pos:  position{line: 320, col: 1, offset: 11696},
			expr: &actionExpr{
				pos: position{line: 320, col: 20, offset: 11715},
				run: (*parser).callonSection3Element1,
				expr: &seqExpr{
					pos: position{line: 320, col: 20, offset: 11715},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 320, col: 20, offset: 11715},
							expr: &seqExpr{
								pos: position{line: 280, col: 24, offset: 10127},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 280, col: 24, offset: 10127},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 280, col: 29, offset: 10132},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonSection3Element9,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 320, col: 41, offset: 11736},
							expr: &seqExpr{
								pos: position{line: 297, col: 24, offset: 10808},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 297, col: 24, offset: 10808},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 297, col: 30, offset: 10814},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonSection3Element17,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 320, col: 62, offset: 11757},
							expr: &seqExpr{
								pos: position{line: 314, col: 24, offset: 11501},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 314, col: 24, offset: 11501},
										val:        "====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 314, col: 31, offset: 11508},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonSection3Element25,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 321, col: 5, offset: 11782},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 321, col: 16, offset: 11793},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection3Element29,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 136, col: 21, offset: 5092},
												expr: &charClassMatcher{
													pos:        position{line: 136, col: 23, offset: 5094},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 137, col: 5, offset: 5182},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 137, col: 11, offset: 5188},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 144, col: 14, offset: 5546},
															run: (*parser).callonSection3Element35,
															expr: &seqExpr{
																pos: position{line: 144, col: 14, offset: 5546},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 144, col: 14, offset: 5546},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 144, col: 19, offset: 5551},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection3Element39,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection3Element49,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 144, col: 27, offset: 5559},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 5, offset: 5613},
															run: (*parser).callonSection3Element63,
															expr: &seqExpr{
																pos: position{line: 146, col: 5, offset: 5613},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 5, offset: 5613},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 10, offset: 5618},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection3Element67,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection3Element77,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 18, offset: 5626},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 156, col: 17, offset: 5929},
															run: (*parser).callonSection3Element91,
															expr: &seqExpr{
																pos: position{line: 156, col: 17, offset: 5929},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 156, col: 17, offset: 5929},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 156, col: 21, offset: 5933},
																		expr: &litMatcher{
																			pos:        position{line: 156, col: 22, offset: 5934},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 156, col: 26, offset: 5938},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection3Element99,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 156, col: 30, offset: 5942},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 160, col: 24, offset: 6047},
																			run: (*parser).callonSection3Element102,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 160, col: 24, offset: 6047},
																				expr: &seqExpr{
																					pos: position{line: 160, col: 25, offset: 6048},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 160, col: 25, offset: 6048},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 160, col: 34, offset: 6057,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 166, col: 16, offset: 6206},
															run: (*parser).callonSection3Element110,
															expr: &seqExpr{
																pos: position{line: 166, col: 16, offset: 6206},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 166, col: 16, offset: 6206},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 166, col: 21, offset: 6211},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection3Element116,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 166, col: 25, offset: 6215},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 170, col: 23, offset: 6319},
																			run: (*parser).callonSection3Element119,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 170, col: 23, offset: 6319},
																				expr: &seqExpr{
																					pos: position{line: 170, col: 24, offset: 6320},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 170, col: 24, offset: 6320},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 170, col: 33, offset: 6329},
																							expr: &litMatcher{
																								pos:        position{line: 170, col: 34, offset: 6330},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 170, col: 38, offset: 6334,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 166, col: 51, offset: 6241},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 30, offset: 6483},
															run: (*parser).callonSection3Element130,
															expr: &seqExpr{
																pos: position{line: 175, col: 30, offset: 6483},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 175, col: 30, offset: 6483},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 175, col: 34, offset: 6487},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 508, col: 19, offset: 19492},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 508, col: 19, offset: 19492},
																					run: (*parser).callonSection3Element135,
																					expr: &litMatcher{
																						pos:        position{line: 508, col: 19, offset: 19492},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 510, col: 5, offset: 19530},
																					run: (*parser).callonSection3Element137,
																					expr: &litMatcher{
																						pos:        position{line: 510, col: 5, offset: 19530},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 512, col: 5, offset: 19570},
																					run: (*parser).callonSection3Element139,
																					expr: &litMatcher{
																						pos:        position{line: 512, col: 5, offset: 19570},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 514, col: 5, offset: 19620},
																					run: (*parser).callonSection3Element141,
																					expr: &litMatcher{
																						pos:        position{line: 514, col: 5, offset: 19620},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 516, col: 5, offset: 19666},
																					run: (*parser).callonSection3Element143,
																					expr: &litMatcher{
																						pos:        position{line: 516, col: 5, offset: 19666},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 175, col: 53, offset: 6506},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 198, col: 21, offset: 7255},
															run: (*parser).callonSection3Element146,
															expr: &litMatcher{
																pos:        position{line: 198, col: 21, offset: 7255},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 180, col: 19, offset: 6667},
															run: (*parser).callonSection3Element148,
															expr: &seqExpr{
																pos: position{line: 180, col: 19, offset: 6667},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 180, col: 19, offset: 6667},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 180, col: 23, offset: 6671},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection3Element154,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 180, col: 27, offset: 6675},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 180, col: 38, offset: 6686},
																			expr: &choiceExpr{
																				pos: position{line: 184, col: 21, offset: 6799},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						run: (*parser).callonSection3Element159,
																						expr: &seqExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 184, col: 21, offset: 6799},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection3Element162,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection3Element165,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection3Element168,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection3Element171,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 184, col: 40, offset: 6818},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 184, col: 44, offset: 6822},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 194, col: 19, offset: 7173},
																										run: (*parser).callonSection3Element185,
																										expr: &labeledExpr{
																											pos:   position{line: 194, col: 19, offset: 7173},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 194, col: 25, offset: 7179},
																												expr: &seqExpr{
																													pos: position{line: 194, col: 26, offset: 7180},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 194, col: 26, offset: 7180},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 27, offset: 7181},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 31, offset: 7185},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 32, offset: 7186},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 36, offset: 7190},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 37, offset: 7191},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 194, col: 41, offset: 7195,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 184, col: 67, offset: 6845},
																									expr: &litMatcher{
																										pos:        position{line: 184, col: 67, offset: 6845},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 184, col: 72, offset: 6850},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection3Element201,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						run: (*parser).callonSection3Element203,
																						expr: &seqExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 186, col: 5, offset: 6934},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection3Element206,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection3Element209,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection3Element212,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection3Element215,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 186, col: 24, offset: 6953},
																									expr: &litMatcher{
																										pos:        position{line: 186, col: 24, offset: 6953},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 186, col: 29, offset: 6958},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection3Element232,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 180, col: 59, offset: 6707},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 137, col: 115, offset: 5292},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonSection3Element238,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 322, col: 5, offset: 11818},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 322, col: 14, offset: 11827},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 322, col: 14, offset: 11827},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 322, col: 25, offset: 11838},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 322, col: 36, offset: 11849},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4",
			pos:  position{line: 326, col: 1, offset: 11948},
			expr: &actionExpr{
				pos: position{line: 326, col: 13, offset: 11960},
				run: (*parser).callonSection41,
				expr: &seqExpr{
					pos: position{line: 326, col: 13, offset: 11960},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 326, col: 13, offset: 11960},
							expr: &notExpr{
								pos: position{line: 1100, col: 8, offset: 45855},
								expr: &anyMatcher{
									line: 1100, col: 9, offset: 45856,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 327, col: 5, offset: 12031},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 327, col: 13, offset: 12039},
								name: "Section4Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 327, col: 28, offset: 12054},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 327, col: 38, offset: 12064},
								expr: &ruleRefExpr{
									pos:  position{line: 327, col: 38, offset: 12064},
									name: "Section4Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Title",
			pos:  position{line: 333, col: 1, offset: 12218},
			expr: &actionExpr{
				pos: position{line: 333, col: 18, offset: 12235},
				run: (*parser).callonSection4Title1,
				expr: &seqExpr{
					pos: position{line: 333, col: 18, offset: 12235},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 331, col: 24, offset: 12204},
							val:        "=====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 331, col: 32, offset: 12212},
							expr: &choiceExpr{
								pos: position{line: 1094, col: 7, offset: 45764},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1094, col: 7, offset: 45764},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1094, col: 13, offset: 45770},
										run: (*parser).callonSection4Title7,
										expr: &litMatcher{
											pos:        position{line: 1094, col: 13, offset: 45770},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 333, col: 38, offset: 12255},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 333, col: 48, offset: 12265},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 333, col: 63, offset: 12280},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 333, col: 67, offset: 12284},
								expr: &actionExpr{
									pos: position{line: 150, col: 20, offset: 5697},
									run: (*parser).callonSection4Title13,
									expr: &seqExpr{
										pos: position{line: 150, col: 20, offset: 5697},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 150, col: 20, offset: 5697},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 150, col: 25, offset: 5702},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1080, col: 7, offset: 45482},
													run: (*parser).callonSection4Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														expr: &seqExpr{
															pos: position{line: 1080, col: 8, offset: 45483},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1080, col: 8, offset: 45483},
																	expr: &choiceExpr{
																		pos: position{line: 1098, col: 12, offset: 45826},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1098, col: 12, offset: 45826},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1098, col: 21, offset: 45835},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 17, offset: 45492},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonSection4Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 21, offset: 45496},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 22, offset: 45497},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 26, offset: 45501},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 27, offset: 45502},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 31, offset: 45506},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 32, offset: 45507},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 37, offset: 45512},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 38, offset: 45513},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 43, offset: 45518},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 44, offset: 45519},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1080, col: 48, offset: 45523,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 150, col: 33, offset: 5710},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 150, col: 38, offset: 5715},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonSection4Title44,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Element",
			pos:  position{line: 337, col: 1, offset: 12399},
			expr: &actionExpr{
				pos: position{line: 337, col: 20, offset: 12418},
				run: (*parser).callonSection4Element1,
				expr: &seqExpr{
					pos: position{line: 337, col: 20, offset: 12418},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 337, col: 20, offset: 12418},
							expr: &seqExpr{
								pos: position{line: 280, col: 24, offset: 10127},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 280, col: 24, offset: 10127},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 280, col: 29, offset: 10132},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonSection4Element9,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 337, col: 41, offset: 12439},
							expr: &seqExpr{
								pos: position{line: 297, col: 24, offset: 10808},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 297, col: 24, offset: 10808},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 297, col: 30, offset: 10814},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonSection4Element17,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 337, col: 62, offset: 12460},
							expr: &seqExpr{
								pos: position{line: 314, col: 24, offset: 11501},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 314, col: 24, offset: 11501},
										val:        "====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 314, col: 31, offset: 11508},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonSection4Element25,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 337, col: 83, offset: 12481},
							expr: &seqExpr{
								pos: position{line: 331, col: 24, offset: 12204},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 331, col: 24, offset: 12204},
										val:        "=====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 331, col: 32, offset: 12212},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonSection4Element33,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 338, col: 5, offset: 12506},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 338, col: 16, offset: 12517},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection4Element37,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 136, col: 21, offset: 5092},
												expr: &charClassMatcher{
													pos:        position{line: 136, col: 23, offset: 5094},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 137, col: 5, offset: 5182},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 137, col: 11, offset: 5188},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 144, col: 14, offset: 5546},
															run: (*parser).callonSection4Element43,
															expr: &seqExpr{
																pos: position{line: 144, col: 14, offset: 5546},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 144, col: 14, offset: 5546},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 144, col: 19, offset: 5551},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection4Element47,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection4Element57,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 144, col: 27, offset: 5559},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 5, offset: 5613},
															run: (*parser).callonSection4Element71,
															expr: &seqExpr{
																pos: position{line: 146, col: 5, offset: 5613},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 5, offset: 5613},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 10, offset: 5618},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection4Element75,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection4Element85,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 18, offset: 5626},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 156, col: 17, offset: 5929},
															run: (*parser).callonSection4Element99,
															expr: &seqExpr{
																pos: position{line: 156, col: 17, offset: 5929},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 156, col: 17, offset: 5929},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 156, col: 21, offset: 5933},
																		expr: &litMatcher{
																			pos:        position{line: 156, col: 22, offset: 5934},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 156, col: 26, offset: 5938},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection4Element107,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 156, col: 30, offset: 5942},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 160, col: 24, offset: 6047},
																			run: (*parser).callonSection4Element110,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 160, col: 24, offset: 6047},
																				expr: &seqExpr{
																					pos: position{line: 160, col: 25, offset: 6048},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 160, col: 25, offset: 6048},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 160, col: 34, offset: 6057,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 166, col: 16, offset: 6206},
															run: (*parser).callonSection4Element118,
															expr: &seqExpr{
																pos: position{line: 166, col: 16, offset: 6206},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 166, col: 16, offset: 6206},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 166, col: 21, offset: 6211},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection4Element124,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 166, col: 25, offset: 6215},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 170, col: 23, offset: 6319},
																			run: (*parser).callonSection4Element127,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 170, col: 23, offset: 6319},
																				expr: &seqExpr{
																					pos: position{line: 170, col: 24, offset: 6320},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 170, col: 24, offset: 6320},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 170, col: 33, offset: 6329},
																							expr: &litMatcher{
																								pos:        position{line: 170, col: 34, offset: 6330},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 170, col: 38, offset: 6334,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 166, col: 51, offset: 6241},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 30, offset: 6483},
															run: (*parser).callonSection4Element138,
															expr: &seqExpr{
																pos: position{line: 175, col: 30, offset: 6483},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 175, col: 30, offset: 6483},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 175, col: 34, offset: 6487},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 508, col: 19, offset: 19492},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 508, col: 19, offset: 19492},
																					run: (*parser).callonSection4Element143,
																					expr: &litMatcher{
																						pos:        position{line: 508, col: 19, offset: 19492},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 510, col: 5, offset: 19530},
																					run: (*parser).callonSection4Element145,
																					expr: &litMatcher{
																						pos:        position{line: 510, col: 5, offset: 19530},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 512, col: 5, offset: 19570},
																					run: (*parser).callonSection4Element147,
																					expr: &litMatcher{
																						pos:        position{line: 512, col: 5, offset: 19570},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 514, col: 5, offset: 19620},
																					run: (*parser).callonSection4Element149,
																					expr: &litMatcher{
																						pos:        position{line: 514, col: 5, offset: 19620},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 516, col: 5, offset: 19666},
																					run: (*parser).callonSection4Element151,
																					expr: &litMatcher{
																						pos:        position{line: 516, col: 5, offset: 19666},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 175, col: 53, offset: 6506},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 198, col: 21, offset: 7255},
															run: (*parser).callonSection4Element154,
															expr: &litMatcher{
																pos:        position{line: 198, col: 21, offset: 7255},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 180, col: 19, offset: 6667},
															run: (*parser).callonSection4Element156,
															expr: &seqExpr{
																pos: position{line: 180, col: 19, offset: 6667},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 180, col: 19, offset: 6667},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 180, col: 23, offset: 6671},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection4Element162,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 180, col: 27, offset: 6675},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 180, col: 38, offset: 6686},
																			expr: &choiceExpr{
																				pos: position{line: 184, col: 21, offset: 6799},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						run: (*parser).callonSection4Element167,
																						expr: &seqExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 184, col: 21, offset: 6799},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection4Element170,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection4Element173,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection4Element176,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection4Element179,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 184, col: 40, offset: 6818},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 184, col: 44, offset: 6822},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 194, col: 19, offset: 7173},
																										run: (*parser).callonSection4Element193,
																										expr: &labeledExpr{
																											pos:   position{line: 194, col: 19, offset: 7173},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 194, col: 25, offset: 7179},
																												expr: &seqExpr{
																													pos: position{line: 194, col: 26, offset: 7180},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 194, col: 26, offset: 7180},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 27, offset: 7181},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 31, offset: 7185},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 32, offset: 7186},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 36, offset: 7190},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 37, offset: 7191},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 194, col: 41, offset: 7195,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 184, col: 67, offset: 6845},
																									expr: &litMatcher{
																										pos:        position{line: 184, col: 67, offset: 6845},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 184, col: 72, offset: 6850},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection4Element209,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						run: (*parser).callonSection4Element211,
																						expr: &seqExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 186, col: 5, offset: 6934},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection4Element214,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection4Element217,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection4Element220,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection4Element223,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 186, col: 24, offset: 6953},
																									expr: &litMatcher{
																										pos:        position{line: 186, col: 24, offset: 6953},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 186, col: 29, offset: 6958},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection4Element240,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 180, col: 59, offset: 6707},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 137, col: 115, offset: 5292},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonSection4Element246,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 339, col: 5, offset: 12542},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 339, col: 14, offset: 12551},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 339, col: 14, offset: 12551},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 339, col: 25, offset: 12562},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5",
			pos:  position{line: 343, col: 1, offset: 12661},
			expr: &actionExpr{
				pos: position{line: 343, col: 13, offset: 12673},
				run: (*parser).callonSection51,
				expr: &seqExpr{
					pos: position{line: 343, col: 13, offset: 12673},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 343, col: 13, offset: 12673},
							expr: &notExpr{
								pos: position{line: 1100, col: 8, offset: 45855},
								expr: &anyMatcher{
									line: 1100, col: 9, offset: 45856,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 344, col: 5, offset: 12744},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 344, col: 13, offset: 12752},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 344, col: 28, offset: 12767},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 344, col: 38, offset: 12777},
								expr: &ruleRefExpr{
									pos:  position{line: 344, col: 38, offset: 12777},
									name: "Section5Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Title",
			pos:  position{line: 350, col: 1, offset: 12932},
			expr: &actionExpr{
				pos: position{line: 350, col: 18, offset: 12949},
				run: (*parser).callonSection5Title1,
				expr: &seqExpr{
					pos: position{line: 350, col: 18, offset: 12949},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 348, col: 24, offset: 12917},
							val:        "======",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 348, col: 33, offset: 12926},
							expr: &choiceExpr{
								pos: position{line: 1094, col: 7, offset: 45764},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1094, col: 7, offset: 45764},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1094, col: 13, offset: 45770},
										run: (*parser).callonSection5Title7,
										expr: &litMatcher{
											pos:        position{line: 1094, col: 13, offset: 45770},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 350, col: 38, offset: 12969},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 350, col: 48, offset: 12979},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 350, col: 63, offset: 12994},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 350, col: 67, offset: 12998},
								expr: &actionExpr{
									pos: position{line: 150, col: 20, offset: 5697},
									run: (*parser).callonSection5Title13,
									expr: &seqExpr{
										pos: position{line: 150, col: 20, offset: 5697},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 150, col: 20, offset: 5697},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 150, col: 25, offset: 5702},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1080, col: 7, offset: 45482},
													run: (*parser).callonSection5Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														expr: &seqExpr{
															pos: position{line: 1080, col: 8, offset: 45483},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1080, col: 8, offset: 45483},
																	expr: &choiceExpr{
																		pos: position{line: 1098, col: 12, offset: 45826},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1098, col: 12, offset: 45826},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1098, col: 21, offset: 45835},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 17, offset: 45492},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonSection5Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 21, offset: 45496},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 22, offset: 45497},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 26, offset: 45501},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 27, offset: 45502},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 31, offset: 45506},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 32, offset: 45507},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 37, offset: 45512},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 38, offset: 45513},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1080, col: 43, offset: 45518},
																	expr: &litMatcher{
																		pos:        position{line: 1080, col: 44, offset: 45519},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1080, col: 48, offset: 45523,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 150, col: 33, offset: 5710},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 150, col: 38, offset: 5715},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonSection5Title44,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Element",
			pos:  position{line: 354, col: 1, offset: 13114},
			expr: &actionExpr{
				pos: position{line: 355, col: 5, offset: 13138},
				run: (*parser).callonSection5Element1,
				expr: &seqExpr{
					pos: position{line: 355, col: 5, offset: 13138},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 355, col: 5, offset: 13138},
							expr: &ruleRefExpr{
								pos:  position{line: 355, col: 6, offset: 13139},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 355, col: 20, offset: 13153},
							expr: &ruleRefExpr{
								pos:  position{line: 355, col: 21, offset: 13154},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 355, col: 35, offset: 13168},
							expr: &ruleRefExpr{
								pos:  position{line: 355, col: 36, offset: 13169},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 355, col: 50, offset: 13183},
							expr: &ruleRefExpr{
								pos:  position{line: 355, col: 51, offset: 13184},
								name: "Section4Title",
							},
						},
						&notExpr{
							pos: position{line: 355, col: 65, offset: 13198},
							expr: &ruleRefExpr{
								pos:  position{line: 355, col: 66, offset: 13199},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 356, col: 5, offset: 13218},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 356, col: 16, offset: 13229},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonSection5Element15,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 136, col: 21, offset: 5092},
												expr: &charClassMatcher{
													pos:        position{line: 136, col: 23, offset: 5094},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 137, col: 5, offset: 5182},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 137, col: 11, offset: 5188},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 144, col: 14, offset: 5546},
															run: (*parser).callonSection5Element21,
															expr: &seqExpr{
																pos: position{line: 144, col: 14, offset: 5546},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 144, col: 14, offset: 5546},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 144, col: 19, offset: 5551},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection5Element25,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection5Element35,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 144, col: 27, offset: 5559},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 5, offset: 5613},
															run: (*parser).callonSection5Element49,
															expr: &seqExpr{
																pos: position{line: 146, col: 5, offset: 5613},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 5, offset: 5613},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 10, offset: 5618},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonSection5Element53,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonSection5Element63,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 18, offset: 5626},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 156, col: 17, offset: 5929},
															run: (*parser).callonSection5Element77,
															expr: &seqExpr{
																pos: position{line: 156, col: 17, offset: 5929},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 156, col: 17, offset: 5929},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 156, col: 21, offset: 5933},
																		expr: &litMatcher{
																			pos:        position{line: 156, col: 22, offset: 5934},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 156, col: 26, offset: 5938},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection5Element85,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 156, col: 30, offset: 5942},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 160, col: 24, offset: 6047},
																			run: (*parser).callonSection5Element88,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 160, col: 24, offset: 6047},
																				expr: &seqExpr{
																					pos: position{line: 160, col: 25, offset: 6048},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 160, col: 25, offset: 6048},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 160, col: 34, offset: 6057,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 166, col: 16, offset: 6206},
															run: (*parser).callonSection5Element96,
															expr: &seqExpr{
																pos: position{line: 166, col: 16, offset: 6206},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 166, col: 16, offset: 6206},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 166, col: 21, offset: 6211},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection5Element102,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 166, col: 25, offset: 6215},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 170, col: 23, offset: 6319},
																			run: (*parser).callonSection5Element105,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 170, col: 23, offset: 6319},
																				expr: &seqExpr{
																					pos: position{line: 170, col: 24, offset: 6320},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 170, col: 24, offset: 6320},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 170, col: 33, offset: 6329},
																							expr: &litMatcher{
																								pos:        position{line: 170, col: 34, offset: 6330},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 170, col: 38, offset: 6334,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 166, col: 51, offset: 6241},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 30, offset: 6483},
															run: (*parser).callonSection5Element116,
															expr: &seqExpr{
																pos: position{line: 175, col: 30, offset: 6483},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 175, col: 30, offset: 6483},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 175, col: 34, offset: 6487},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 508, col: 19, offset: 19492},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 508, col: 19, offset: 19492},
																					run: (*parser).callonSection5Element121,
																					expr: &litMatcher{
																						pos:        position{line: 508, col: 19, offset: 19492},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 510, col: 5, offset: 19530},
																					run: (*parser).callonSection5Element123,
																					expr: &litMatcher{
																						pos:        position{line: 510, col: 5, offset: 19530},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 512, col: 5, offset: 19570},
																					run: (*parser).callonSection5Element125,
																					expr: &litMatcher{
																						pos:        position{line: 512, col: 5, offset: 19570},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 514, col: 5, offset: 19620},
																					run: (*parser).callonSection5Element127,
																					expr: &litMatcher{
																						pos:        position{line: 514, col: 5, offset: 19620},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 516, col: 5, offset: 19666},
																					run: (*parser).callonSection5Element129,
																					expr: &litMatcher{
																						pos:        position{line: 516, col: 5, offset: 19666},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 175, col: 53, offset: 6506},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 198, col: 21, offset: 7255},
															run: (*parser).callonSection5Element132,
															expr: &litMatcher{
																pos:        position{line: 198, col: 21, offset: 7255},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 180, col: 19, offset: 6667},
															run: (*parser).callonSection5Element134,
															expr: &seqExpr{
																pos: position{line: 180, col: 19, offset: 6667},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 180, col: 19, offset: 6667},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 180, col: 23, offset: 6671},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonSection5Element140,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 180, col: 27, offset: 6675},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 180, col: 38, offset: 6686},
																			expr: &choiceExpr{
																				pos: position{line: 184, col: 21, offset: 6799},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						run: (*parser).callonSection5Element145,
																						expr: &seqExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 184, col: 21, offset: 6799},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection5Element148,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection5Element151,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection5Element154,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection5Element157,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 184, col: 40, offset: 6818},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 184, col: 44, offset: 6822},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 194, col: 19, offset: 7173},
																										run: (*parser).callonSection5Element171,
																										expr: &labeledExpr{
																											pos:   position{line: 194, col: 19, offset: 7173},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 194, col: 25, offset: 7179},
																												expr: &seqExpr{
																													pos: position{line: 194, col: 26, offset: 7180},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 194, col: 26, offset: 7180},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 27, offset: 7181},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 31, offset: 7185},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 32, offset: 7186},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 36, offset: 7190},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 37, offset: 7191},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 194, col: 41, offset: 7195,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 184, col: 67, offset: 6845},
																									expr: &litMatcher{
																										pos:        position{line: 184, col: 67, offset: 6845},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 184, col: 72, offset: 6850},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection5Element187,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						run: (*parser).callonSection5Element189,
																						expr: &seqExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 186, col: 5, offset: 6934},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonSection5Element192,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonSection5Element195,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonSection5Element198,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonSection5Element201,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 186, col: 24, offset: 6953},
																									expr: &litMatcher{
																										pos:        position{line: 186, col: 24, offset: 6953},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 186, col: 29, offset: 6958},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonSection5Element218,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 180, col: 59, offset: 6707},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 137, col: 115, offset: 5292},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonSection5Element224,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 357, col: 5, offset: 13254},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 357, col: 14, offset: 13263},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElements",
			pos:  position{line: 361, col: 1, offset: 13362},
			expr: &actionExpr{
				pos: position{line: 361, col: 18, offset: 13379},
				run: (*parser).callonTitleElements1,
				expr: &labeledExpr{
					pos:   position{line: 361, col: 18, offset: 13379},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 361, col: 27, offset: 13388},
						expr: &seqExpr{
							pos: position{line: 361, col: 28, offset: 13389},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 361, col: 28, offset: 13389},
									expr: &choiceExpr{
										pos: position{line: 1098, col: 12, offset: 45826},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1098, col: 12, offset: 45826},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1098, col: 21, offset: 45835},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 361, col: 37, offset: 13398},
									expr: &choiceExpr{
										pos: position{line: 1094, col: 7, offset: 45764},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonTitleElements12,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 361, col: 41, offset: 13402},
									expr: &actionExpr{
										pos: position{line: 150, col: 20, offset: 5697},
										run: (*parser).callonTitleElements15,
										expr: &seqExpr{
											pos: position{line: 150, col: 20, offset: 5697},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 150, col: 20, offset: 5697},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 150, col: 25, offset: 5702},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														run: (*parser).callonTitleElements19,
														expr: &oneOrMoreExpr{
															pos: position{line: 1080, col: 7, offset: 45482},
															expr: &seqExpr{
																pos: position{line: 1080, col: 8, offset: 45483},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1080, col: 8, offset: 45483},
																		expr: &choiceExpr{
																			pos: position{line: 1098, col: 12, offset: 45826},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 17, offset: 45492},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonTitleElements29,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 21, offset: 45496},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 22, offset: 45497},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 26, offset: 45501},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 27, offset: 45502},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 31, offset: 45506},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 32, offset: 45507},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 37, offset: 45512},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 38, offset: 45513},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 43, offset: 45518},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 44, offset: 45519},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1080, col: 48, offset: 45523,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 150, col: 33, offset: 5710},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 150, col: 38, offset: 5715},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonTitleElements46,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 361, col: 58, offset: 13419},
									name: "TitleElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 361, col: 71, offset: 13432},
									expr: &choiceExpr{
										pos: position{line: 1094, col: 7, offset: 45764},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonTitleElements52,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElement",
			pos:  position{line: 365, col: 1, offset: 13544},
			expr: &actionExpr{
				pos: position{line: 365, col: 17, offset: 13560},
				run: (*parser).callonTitleElement1,
				expr: &labeledExpr{
					pos:   position{line: 365, col: 17, offset: 13560},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 365, col: 26, offset: 13569},
						alternatives: []interface{}{
							&actionExpr{
								pos: position{line: 725, col: 19, offset: 31770},
								run: (*parser).callonTitleElement4,
								expr: &seqExpr{
									pos: position{line: 725, col: 19, offset: 31770},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 725, col: 19, offset: 31770},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 725, col: 24, offset: 31775},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1080, col: 7, offset: 45482},
												run: (*parser).callonTitleElement8,
												expr: &oneOrMoreExpr{
													pos: position{line: 1080, col: 7, offset: 45482},
													expr: &seqExpr{
														pos: position{line: 1080, col: 8, offset: 45483},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1080, col: 8, offset: 45483},
																expr: &choiceExpr{
																	pos: position{line: 1098, col: 12, offset: 45826},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1080, col: 17, offset: 45492},
																expr: &choiceExpr{
																	pos: position{line: 1094, col: 7, offset: 45764},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1094, col: 7, offset: 45764},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1094, col: 13, offset: 45770},
																			run: (*parser).callonTitleElement18,
																			expr: &litMatcher{
																				pos:        position{line: 1094, col: 13, offset: 45770},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1080, col: 21, offset: 45496},
																expr: &litMatcher{
																	pos:        position{line: 1080, col: 22, offset: 45497},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1080, col: 26, offset: 45501},
																expr: &litMatcher{
																	pos:        position{line: 1080, col: 27, offset: 45502},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1080, col: 31, offset: 45506},
																expr: &litMatcher{
																	pos:        position{line: 1080, col: 32, offset: 45507},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1080, col: 37, offset: 45512},
																expr: &litMatcher{
																	pos:        position{line: 1080, col: 38, offset: 45513},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1080, col: 43, offset: 45518},
																expr: &litMatcher{
																	pos:        position{line: 1080, col: 44, offset: 45519},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1080, col: 48, offset: 45523,
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 725, col: 32, offset: 31783},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonTitleElement34,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 725, col: 36, offset: 31787},
											val:        ",",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 725, col: 40, offset: 31791},
											label: "label",
											expr: &actionExpr{
												pos: position{line: 731, col: 24, offset: 31993},
												run: (*parser).callonTitleElement38,
												expr: &oneOrMoreExpr{
													pos: position{line: 731, col: 24, offset: 31993},
													expr: &seqExpr{
														pos: position{line: 731, col: 25, offset: 31994},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 731, col: 25, offset: 31994},
																expr: &litMatcher{
																	pos:        position{line: 731, col: 26, offset: 31995},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 731, col: 31, offset: 32000,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 725, col: 68, offset: 31819},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 727, col: 5, offset: 31894},
								run: (*parser).callonTitleElement45,
								expr: &seqExpr{
									pos: position{line: 727, col: 5, offset: 31894},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 727, col: 5, offset: 31894},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 727, col: 10, offset: 31899},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1080, col: 7, offset: 45482},
												run: (*parser).callonTitleElement49,
												expr: &oneOrMoreExpr{
													pos: position{line: 1080, col: 7, offset: 45482},
													expr: &seqExpr{
														pos: position{line: 1080, col: 8, offset: 45483},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1080, col: 8, offset: 45483},
																expr: &choiceExpr{
																	pos: position{line: 1098, col: 12, offset: 45826},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1080, col: 17, offset: 45492},
																expr: &choiceExpr{
																	pos: position{line: 1094, col: 7, offset: 45764},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1094, col: 7, offset: 45764},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1094, col: 13, offset: 45770},
																			run: (*parser).callonTitleElement59,
																			expr: &litMatcher{
																				pos:        position{line: 1094, col: 13, offset: 45770},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1080, col: 21, offset: 45496},
																expr: &litMatcher{
																	pos:        position{line: 1080, col: 22, offset: 45497},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1080, col: 26, offset: 45501},
																expr: &litMatcher{
																	pos:        position{line: 1080, col: 27, offset: 45502},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1080, col: 31, offset: 45506},
																expr: &litMatcher{
																	pos:        position{line: 1080, col: 32, offset: 45507},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1080, col: 37, offset: 45512},
																expr: &litMatcher{
																	pos:        position{line: 1080, col: 38, offset: 45513},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1080, col: 43, offset: 45518},
																expr: &litMatcher{
																	pos:        position{line: 1080, col: 44, offset: 45519},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1080, col: 48, offset: 45523,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 727, col: 18, offset: 31907},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 365, col: 43, offset: 13586},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 779, col: 16, offset: 33487},
								run: (*parser).callonTitleElement74,
								expr: &seqExpr{
									pos: position{line: 779, col: 16, offset: 33487},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 779, col: 16, offset: 33487},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 779, col: 25, offset: 33496},
											expr: &litMatcher{
												pos:        position{line: 779, col: 26, offset: 33497},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 779, col: 30, offset: 33501},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 1076, col: 8, offset: 45412},
												run: (*parser).callonTitleElement80,
												expr: &oneOrMoreExpr{
													pos: position{line: 1076, col: 8, offset: 45412},
													expr: &seqExpr{
														pos: position{line: 1076, col: 9, offset: 45413},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1076, col: 9, offset: 45413},
																expr: &choiceExpr{
																	pos: position{line: 1098, col: 12, offset: 45826},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1076, col: 18, offset: 45422},
																expr: &choiceExpr{
																	pos: position{line: 1094, col: 7, offset: 45764},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1094, col: 7, offset: 45764},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1094, col: 13, offset: 45770},
																			run: (*parser).callonTitleElement90,
																			expr: &litMatcher{
																				pos:        position{line: 1094, col: 13, offset: 45770},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1076, col: 22, offset: 45426},
																expr: &litMatcher{
																	pos:        position{line: 1076, col: 23, offset: 45427},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1076, col: 27, offset: 45431},
																expr: &litMatcher{
																	pos:        position{line: 1076, col: 28, offset: 45432},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1076, col: 32, offset: 45436,
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 779, col: 41, offset: 33512},
											label: "inlineAttributes",
											expr: &choiceExpr{
												pos: position{line: 784, col: 20, offset: 33769},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 784, col: 20, offset: 33769},
														run: (*parser).callonTitleElement99,
														expr: &seqExpr{
															pos: position{line: 784, col: 20, offset: 33769},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 784, col: 20, offset: 33769},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 784, col: 24, offset: 33773},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 801, col: 19, offset: 34548},
																		run: (*parser).callonTitleElement103,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 801, col: 19, offset: 34548},
																			expr: &seqExpr{
																				pos: position{line: 801, col: 20, offset: 34549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 21, offset: 34550},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 801, col: 25, offset: 34554},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 26, offset: 34555},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 801, col: 30, offset: 34559},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 31, offset: 34560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 801, col: 35, offset: 34564,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 784, col: 45, offset: 33794},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 785, col: 9, offset: 33806},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 801, col: 19, offset: 34548},
																		run: (*parser).callonTitleElement115,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 801, col: 19, offset: 34548},
																			expr: &seqExpr{
																				pos: position{line: 801, col: 20, offset: 34549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 21, offset: 34550},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 801, col: 25, offset: 34554},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 26, offset: 34555},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 801, col: 30, offset: 34559},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 31, offset: 34560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 801, col: 35, offset: 34564,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 785, col: 33, offset: 33830},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 786, col: 9, offset: 33842},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 801, col: 19, offset: 34548},
																		run: (*parser).callonTitleElement127,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 801, col: 19, offset: 34548},
																			expr: &seqExpr{
																				pos: position{line: 801, col: 20, offset: 34549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 21, offset: 34550},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 801, col: 25, offset: 34554},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 26, offset: 34555},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 801, col: 30, offset: 34559},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 31, offset: 34560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 801, col: 35, offset: 34564,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 786, col: 33, offset: 33866},
																	expr: &litMatcher{
																		pos:        position{line: 786, col: 33, offset: 33866},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 787, col: 9, offset: 33879},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 787, col: 20, offset: 33890},
																		expr: &choiceExpr{
																			pos: position{line: 184, col: 21, offset: 6799},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					run: (*parser).callonTitleElement142,
																					expr: &seqExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 184, col: 21, offset: 6799},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 190, col: 17, offset: 7059},
																									run: (*parser).callonTitleElement145,
																									expr: &seqExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												expr: &actionExpr{
																													pos: position{line: 214, col: 14, offset: 7892},
																													run: (*parser).callonTitleElement148,
																													expr: &litMatcher{
																														pos:        position{line: 214, col: 14, offset: 7892},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 28, offset: 7070},
																												expr: &actionExpr{
																													pos: position{line: 230, col: 14, offset: 8489},
																													run: (*parser).callonTitleElement151,
																													expr: &litMatcher{
																														pos:        position{line: 230, col: 14, offset: 8489},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 39, offset: 7081},
																												expr: &actionExpr{
																													pos: position{line: 1040, col: 16, offset: 44408},
																													run: (*parser).callonTitleElement154,
																													expr: &litMatcher{
																														pos:        position{line: 1040, col: 16, offset: 44408},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 190, col: 52, offset: 7094},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 190, col: 56, offset: 7098},
																													expr: &seqExpr{
																														pos: position{line: 190, col: 57, offset: 7099},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 58, offset: 7100},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 62, offset: 7104},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 63, offset: 7105},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 67, offset: 7109},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 68, offset: 7110},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 190, col: 72, offset: 7114,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 184, col: 40, offset: 6818},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 184, col: 44, offset: 6822},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 194, col: 19, offset: 7173},
																									run: (*parser).callonTitleElement168,
																									expr: &labeledExpr{
																										pos:   position{line: 194, col: 19, offset: 7173},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 194, col: 25, offset: 7179},
																											expr: &seqExpr{
																												pos: position{line: 194, col: 26, offset: 7180},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 27, offset: 7181},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 194, col: 31, offset: 7185},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 32, offset: 7186},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 194, col: 36, offset: 7190},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 37, offset: 7191},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 194, col: 41, offset: 7195,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 184, col: 67, offset: 6845},
																								expr: &litMatcher{
																									pos:        position{line: 184, col: 67, offset: 6845},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 184, col: 72, offset: 6850},
																								expr: &choiceExpr{
																									pos: position{line: 1094, col: 7, offset: 45764},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1094, col: 7, offset: 45764},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1094, col: 13, offset: 45770},
																											run: (*parser).callonTitleElement184,
																											expr: &litMatcher{
																												pos:        position{line: 1094, col: 13, offset: 45770},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 186, col: 5, offset: 6934},
																					run: (*parser).callonTitleElement186,
																					expr: &seqExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 186, col: 5, offset: 6934},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 190, col: 17, offset: 7059},
																									run: (*parser).callonTitleElement189,
																									expr: &seqExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												expr: &actionExpr{
																													pos: position{line: 214, col: 14, offset: 7892},
																													run: (*parser).callonTitleElement192,
																													expr: &litMatcher{
																														pos:        position{line: 214, col: 14, offset: 7892},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 28, offset: 7070},
																												expr: &actionExpr{
																													pos: position{line: 230, col: 14, offset: 8489},
																													run: (*parser).callonTitleElement195,
																													expr: &litMatcher{
																														pos:        position{line: 230, col: 14, offset: 8489},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 39, offset: 7081},
																												expr: &actionExpr{
																													pos: position{line: 1040, col: 16, offset: 44408},
																													run: (*parser).callonTitleElement198,
																													expr: &litMatcher{
																														pos:        position{line: 1040, col: 16, offset: 44408},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 190, col: 52, offset: 7094},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 190, col: 56, offset: 7098},
																													expr: &seqExpr{
																														pos: position{line: 190, col: 57, offset: 7099},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 58, offset: 7100},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 62, offset: 7104},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 63, offset: 7105},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 67, offset: 7109},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 68, offset: 7110},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 190, col: 72, offset: 7114,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 186, col: 24, offset: 6953},
																								expr: &litMatcher{
																									pos:        position{line: 186, col: 24, offset: 6953},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 186, col: 29, offset: 6958},
																								expr: &choiceExpr{
																									pos: position{line: 1094, col: 7, offset: 45764},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1094, col: 7, offset: 45764},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1094, col: 13, offset: 45770},
																											run: (*parser).callonTitleElement215,
																											expr: &litMatcher{
																												pos:        position{line: 1094, col: 13, offset: 45770},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 787, col: 40, offset: 33910},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 789, col: 9, offset: 34016},
														run: (*parser).callonTitleElement218,
														expr: &seqExpr{
															pos: position{line: 789, col: 9, offset: 34016},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 789, col: 9, offset: 34016},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 789, col: 13, offset: 34020},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 801, col: 19, offset: 34548},
																		run: (*parser).callonTitleElement222,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 801, col: 19, offset: 34548},
																			expr: &seqExpr{
																				pos: position{line: 801, col: 20, offset: 34549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 21, offset: 34550},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 801, col: 25, offset: 34554},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 26, offset: 34555},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 801, col: 30, offset: 34559},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 31, offset: 34560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 801, col: 35, offset: 34564,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 789, col: 34, offset: 34041},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 790, col: 9, offset: 34053},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 801, col: 19, offset: 34548},
																		run: (*parser).callonTitleElement234,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 801, col: 19, offset: 34548},
																			expr: &seqExpr{
																				pos: position{line: 801, col: 20, offset: 34549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 21, offset: 34550},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 801, col: 25, offset: 34554},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 26, offset: 34555},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 801, col: 30, offset: 34559},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 31, offset: 34560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 801, col: 35, offset: 34564,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 790, col: 32, offset: 34076},
																	expr: &litMatcher{
																		pos:        position{line: 790, col: 32, offset: 34076},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 791, col: 9, offset: 34089},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 791, col: 20, offset: 34100},
																		expr: &choiceExpr{
																			pos: position{line: 184, col: 21, offset: 6799},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					run: (*parser).callonTitleElement249,
																					expr: &seqExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 184, col: 21, offset: 6799},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 190, col: 17, offset: 7059},
																									run: (*parser).callonTitleElement252,
																									expr: &seqExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												expr: &actionExpr{
																													pos: position{line: 214, col: 14, offset: 7892},
																													run: (*parser).callonTitleElement255,
																													expr: &litMatcher{
																														pos:        position{line: 214, col: 14, offset: 7892},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 28, offset: 7070},
																												expr: &actionExpr{
																													pos: position{line: 230, col: 14, offset: 8489},
																													run: (*parser).callonTitleElement258,
																													expr: &litMatcher{
																														pos:        position{line: 230, col: 14, offset: 8489},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 39, offset: 7081},
																												expr: &actionExpr{
																													pos: position{line: 1040, col: 16, offset: 44408},
																													run: (*parser).callonTitleElement261,
																													expr: &litMatcher{
																														pos:        position{line: 1040, col: 16, offset: 44408},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 190, col: 52, offset: 7094},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 190, col: 56, offset: 7098},
																													expr: &seqExpr{
																														pos: position{line: 190, col: 57, offset: 7099},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 58, offset: 7100},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 62, offset: 7104},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 63, offset: 7105},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 67, offset: 7109},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 68, offset: 7110},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 190, col: 72, offset: 7114,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 184, col: 40, offset: 6818},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 184, col: 44, offset: 6822},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 194, col: 19, offset: 7173},
																									run: (*parser).callonTitleElement275,
																									expr: &labeledExpr{
																										pos:   position{line: 194, col: 19, offset: 7173},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 194, col: 25, offset: 7179},
																											expr: &seqExpr{
																												pos: position{line: 194, col: 26, offset: 7180},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 27, offset: 7181},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 194, col: 31, offset: 7185},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 32, offset: 7186},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 194, col: 36, offset: 7190},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 37, offset: 7191},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 194, col: 41, offset: 7195,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 184, col: 67, offset: 6845},
																								expr: &litMatcher{
																									pos:        position{line: 184, col: 67, offset: 6845},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 184, col: 72, offset: 6850},
																								expr: &choiceExpr{
																									pos: position{line: 1094, col: 7, offset: 45764},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1094, col: 7, offset: 45764},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1094, col: 13, offset: 45770},
																											run: (*parser).callonTitleElement291,
																											expr: &litMatcher{
																												pos:        position{line: 1094, col: 13, offset: 45770},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 186, col: 5, offset: 6934},
																					run: (*parser).callonTitleElement293,
																					expr: &seqExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 186, col: 5, offset: 6934},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 190, col: 17, offset: 7059},
																									run: (*parser).callonTitleElement296,
																									expr: &seqExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												expr: &actionExpr{
																													pos: position{line: 214, col: 14, offset: 7892},
																													run: (*parser).callonTitleElement299,
																													expr: &litMatcher{
																														pos:        position{line: 214, col: 14, offset: 7892},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 28, offset: 7070},
																												expr: &actionExpr{
																													pos: position{line: 230, col: 14, offset: 8489},
																													run: (*parser).callonTitleElement302,
																													expr: &litMatcher{
																														pos:        position{line: 230, col: 14, offset: 8489},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 39, offset: 7081},
																												expr: &actionExpr{
																													pos: position{line: 1040, col: 16, offset: 44408},
																													run: (*parser).callonTitleElement305,
																													expr: &litMatcher{
																														pos:        position{line: 1040, col: 16, offset: 44408},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 190, col: 52, offset: 7094},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 190, col: 56, offset: 7098},
																													expr: &seqExpr{
																														pos: position{line: 190, col: 57, offset: 7099},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 58, offset: 7100},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 62, offset: 7104},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 63, offset: 7105},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 67, offset: 7109},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 68, offset: 7110},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 190, col: 72, offset: 7114,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 186, col: 24, offset: 6953},
																								expr: &litMatcher{
																									pos:        position{line: 186, col: 24, offset: 6953},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 186, col: 29, offset: 6958},
																								expr: &choiceExpr{
																									pos: position{line: 1094, col: 7, offset: 45764},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1094, col: 7, offset: 45764},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1094, col: 13, offset: 45770},
																											run: (*parser).callonTitleElement322,
																											expr: &litMatcher{
																												pos:        position{line: 1094, col: 13, offset: 45770},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 791, col: 40, offset: 34120},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 793, col: 9, offset: 34223},
														run: (*parser).callonTitleElement325,
														expr: &seqExpr{
															pos: position{line: 793, col: 9, offset: 34223},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 793, col: 9, offset: 34223},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 793, col: 13, offset: 34227},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 801, col: 19, offset: 34548},
																		run: (*parser).callonTitleElement329,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 801, col: 19, offset: 34548},
																			expr: &seqExpr{
																				pos: position{line: 801, col: 20, offset: 34549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 21, offset: 34550},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 801, col: 25, offset: 34554},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 26, offset: 34555},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 801, col: 30, offset: 34559},
																						expr: &litMatcher{
																							pos:        position{line: 801, col: 31, offset: 34560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 801, col: 35, offset: 34564,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 793, col: 34, offset: 34248},
																	expr: &litMatcher{
																		pos:        position{line: 793, col: 34, offset: 34248},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 794, col: 9, offset: 34261},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 794, col: 20, offset: 34272},
																		expr: &choiceExpr{
																			pos: position{line: 184, col: 21, offset: 6799},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					run: (*parser).callonTitleElement344,
																					expr: &seqExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 184, col: 21, offset: 6799},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 190, col: 17, offset: 7059},
																									run: (*parser).callonTitleElement347,
																									expr: &seqExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												expr: &actionExpr{
																													pos: position{line: 214, col: 14, offset: 7892},
																													run: (*parser).callonTitleElement350,
																													expr: &litMatcher{
																														pos:        position{line: 214, col: 14, offset: 7892},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 28, offset: 7070},
																												expr: &actionExpr{
																													pos: position{line: 230, col: 14, offset: 8489},
																													run: (*parser).callonTitleElement353,
																													expr: &litMatcher{
																														pos:        position{line: 230, col: 14, offset: 8489},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 39, offset: 7081},
																												expr: &actionExpr{
																													pos: position{line: 1040, col: 16, offset: 44408},
																													run: (*parser).callonTitleElement356,
																													expr: &litMatcher{
																														pos:        position{line: 1040, col: 16, offset: 44408},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 190, col: 52, offset: 7094},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 190, col: 56, offset: 7098},
																													expr: &seqExpr{
																														pos: position{line: 190, col: 57, offset: 7099},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 58, offset: 7100},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 62, offset: 7104},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 63, offset: 7105},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 67, offset: 7109},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 68, offset: 7110},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 190, col: 72, offset: 7114,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 184, col: 40, offset: 6818},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 184, col: 44, offset: 6822},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 194, col: 19, offset: 7173},
																									run: (*parser).callonTitleElement370,
																									expr: &labeledExpr{
																										pos:   position{line: 194, col: 19, offset: 7173},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 194, col: 25, offset: 7179},
																											expr: &seqExpr{
																												pos: position{line: 194, col: 26, offset: 7180},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 27, offset: 7181},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 194, col: 31, offset: 7185},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 32, offset: 7186},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 194, col: 36, offset: 7190},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 37, offset: 7191},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 194, col: 41, offset: 7195,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 184, col: 67, offset: 6845},
																								expr: &litMatcher{
																									pos:        position{line: 184, col: 67, offset: 6845},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 184, col: 72, offset: 6850},
																								expr: &choiceExpr{
																									pos: position{line: 1094, col: 7, offset: 45764},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1094, col: 7, offset: 45764},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1094, col: 13, offset: 45770},
																											run: (*parser).callonTitleElement386,
																											expr: &litMatcher{
																												pos:        position{line: 1094, col: 13, offset: 45770},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 186, col: 5, offset: 6934},
																					run: (*parser).callonTitleElement388,
																					expr: &seqExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 186, col: 5, offset: 6934},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 190, col: 17, offset: 7059},
																									run: (*parser).callonTitleElement391,
																									expr: &seqExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												expr: &actionExpr{
																													pos: position{line: 214, col: 14, offset: 7892},
																													run: (*parser).callonTitleElement394,
																													expr: &litMatcher{
																														pos:        position{line: 214, col: 14, offset: 7892},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 28, offset: 7070},
																												expr: &actionExpr{
																													pos: position{line: 230, col: 14, offset: 8489},
																													run: (*parser).callonTitleElement397,
																													expr: &litMatcher{
																														pos:        position{line: 230, col: 14, offset: 8489},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 39, offset: 7081},
																												expr: &actionExpr{
																													pos: position{line: 1040, col: 16, offset: 44408},
																													run: (*parser).callonTitleElement400,
																													expr: &litMatcher{
																														pos:        position{line: 1040, col: 16, offset: 44408},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 190, col: 52, offset: 7094},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 190, col: 56, offset: 7098},
																													expr: &seqExpr{
																														pos: position{line: 190, col: 57, offset: 7099},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 58, offset: 7100},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 62, offset: 7104},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 63, offset: 7105},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 67, offset: 7109},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 68, offset: 7110},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 190, col: 72, offset: 7114,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 186, col: 24, offset: 6953},
																								expr: &litMatcher{
																									pos:        position{line: 186, col: 24, offset: 6953},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 186, col: 29, offset: 6958},
																								expr: &choiceExpr{
																									pos: position{line: 1094, col: 7, offset: 45764},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1094, col: 7, offset: 45764},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1094, col: 13, offset: 45770},
																											run: (*parser).callonTitleElement417,
																											expr: &litMatcher{
																												pos:        position{line: 1094, col: 13, offset: 45770},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 794, col: 40, offset: 34292},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 796, col: 9, offset: 34393},
														run: (*parser).callonTitleElement420,
														expr: &seqExpr{
															pos: position{line: 796, col: 9, offset: 34393},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 796, col: 9, offset: 34393},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 796, col: 13, offset: 34397},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 796, col: 24, offset: 34408},
																		expr: &choiceExpr{
																			pos: position{line: 184, col: 21, offset: 6799},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					run: (*parser).callonTitleElement426,
																					expr: &seqExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 184, col: 21, offset: 6799},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 190, col: 17, offset: 7059},
																									run: (*parser).callonTitleElement429,
																									expr: &seqExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												expr: &actionExpr{
																													pos: position{line: 214, col: 14, offset: 7892},
																													run: (*parser).callonTitleElement432,
																													expr: &litMatcher{
																														pos:        position{line: 214, col: 14, offset: 7892},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 28, offset: 7070},
																												expr: &actionExpr{
																													pos: position{line: 230, col: 14, offset: 8489},
																													run: (*parser).callonTitleElement435,
																													expr: &litMatcher{
																														pos:        position{line: 230, col: 14, offset: 8489},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 39, offset: 7081},
																												expr: &actionExpr{
																													pos: position{line: 1040, col: 16, offset: 44408},
																													run: (*parser).callonTitleElement438,
																													expr: &litMatcher{
																														pos:        position{line: 1040, col: 16, offset: 44408},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 190, col: 52, offset: 7094},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 190, col: 56, offset: 7098},
																													expr: &seqExpr{
																														pos: position{line: 190, col: 57, offset: 7099},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 58, offset: 7100},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 62, offset: 7104},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 63, offset: 7105},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 67, offset: 7109},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 68, offset: 7110},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 190, col: 72, offset: 7114,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 184, col: 40, offset: 6818},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 184, col: 44, offset: 6822},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 194, col: 19, offset: 7173},
																									run: (*parser).callonTitleElement452,
																									expr: &labeledExpr{
																										pos:   position{line: 194, col: 19, offset: 7173},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 194, col: 25, offset: 7179},
																											expr: &seqExpr{
																												pos: position{line: 194, col: 26, offset: 7180},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 27, offset: 7181},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 194, col: 31, offset: 7185},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 32, offset: 7186},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 194, col: 36, offset: 7190},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 37, offset: 7191},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 194, col: 41, offset: 7195,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 184, col: 67, offset: 6845},
																								expr: &litMatcher{
																									pos:        position{line: 184, col: 67, offset: 6845},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 184, col: 72, offset: 6850},
																								expr: &choiceExpr{
																									pos: position{line: 1094, col: 7, offset: 45764},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1094, col: 7, offset: 45764},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1094, col: 13, offset: 45770},
																											run: (*parser).callonTitleElement468,
																											expr: &litMatcher{
																												pos:        position{line: 1094, col: 13, offset: 45770},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 186, col: 5, offset: 6934},
																					run: (*parser).callonTitleElement470,
																					expr: &seqExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 186, col: 5, offset: 6934},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 190, col: 17, offset: 7059},
																									run: (*parser).callonTitleElement473,
																									expr: &seqExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												expr: &actionExpr{
																													pos: position{line: 214, col: 14, offset: 7892},
																													run: (*parser).callonTitleElement476,
																													expr: &litMatcher{
																														pos:        position{line: 214, col: 14, offset: 7892},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 28, offset: 7070},
																												expr: &actionExpr{
																													pos: position{line: 230, col: 14, offset: 8489},
																													run: (*parser).callonTitleElement479,
																													expr: &litMatcher{
																														pos:        position{line: 230, col: 14, offset: 8489},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 39, offset: 7081},
																												expr: &actionExpr{
																													pos: position{line: 1040, col: 16, offset: 44408},
																													run: (*parser).callonTitleElement482,
																													expr: &litMatcher{
																														pos:        position{line: 1040, col: 16, offset: 44408},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 190, col: 52, offset: 7094},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 190, col: 56, offset: 7098},
																													expr: &seqExpr{
																														pos: position{line: 190, col: 57, offset: 7099},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 58, offset: 7100},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 62, offset: 7104},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 63, offset: 7105},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 67, offset: 7109},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 68, offset: 7110},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 190, col: 72, offset: 7114,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 186, col: 24, offset: 6953},
																								expr: &litMatcher{
																									pos:        position{line: 186, col: 24, offset: 6953},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 186, col: 29, offset: 6958},
																								expr: &choiceExpr{
																									pos: position{line: 1094, col: 7, offset: 45764},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1094, col: 7, offset: 45764},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1094, col: 13, offset: 45770},
																											run: (*parser).callonTitleElement499,
																											expr: &litMatcher{
																												pos:        position{line: 1094, col: 13, offset: 45770},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 796, col: 44, offset: 34428},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 365, col: 71, offset: 13614},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 738, col: 9, offset: 32149},
								run: (*parser).callonTitleElement503,
								expr: &labeledExpr{
									pos:   position{line: 738, col: 9, offset: 32149},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 738, col: 15, offset: 32155},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 753, col: 17, offset: 32607},
												run: (*parser).callonTitleElement506,
												expr: &seqExpr{
													pos: position{line: 753, col: 17, offset: 32607},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 753, col: 17, offset: 32607},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 753, col: 25, offset: 32615},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 757, col: 20, offset: 32784},
																run: (*parser).callonTitleElement510,
																expr: &seqExpr{
																	pos: position{line: 757, col: 20, offset: 32784},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 757, col: 20, offset: 32784},
																			expr: &choiceExpr{
																				pos: position{line: 1088, col: 15, offset: 45649},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1088, col: 15, offset: 45649},
																						val:        "http://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1088, col: 27, offset: 45661},
																						val:        "https://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1088, col: 40, offset: 45674},
																						val:        "ftp://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1088, col: 51, offset: 45685},
																						val:        "irc://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1088, col: 62, offset: 45696},
																						val:        "mailto:",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1076, col: 8, offset: 45412},
																			run: (*parser).callonTitleElement519,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1076, col: 8, offset: 45412},
																				expr: &seqExpr{
																					pos: position{line: 1076, col: 9, offset: 45413},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1076, col: 9, offset: 45413},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1076, col: 18, offset: 45422},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonTitleElement529,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1076, col: 22, offset: 45426},
																							expr: &litMatcher{
																								pos:        position{line: 1076, col: 23, offset: 45427},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1076, col: 27, offset: 45431},
																							expr: &litMatcher{
																								pos:        position{line: 1076, col: 28, offset: 45432},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1076, col: 32, offset: 45436,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 753, col: 47, offset: 32637},
															label: "inlineAttributes",
															expr: &choiceExpr{
																pos: position{line: 761, col: 19, offset: 32854},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 761, col: 19, offset: 32854},
																		run: (*parser).callonTitleElement538,
																		expr: &seqExpr{
																			pos: position{line: 761, col: 19, offset: 32854},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 761, col: 19, offset: 32854},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 761, col: 23, offset: 32858},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 768, col: 22, offset: 33146},
																						run: (*parser).callonTitleElement542,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 768, col: 22, offset: 33146},
																							expr: &seqExpr{
																								pos: position{line: 768, col: 23, offset: 33147},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 768, col: 23, offset: 33147},
																										expr: &litMatcher{
																											pos:        position{line: 768, col: 24, offset: 33148},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 768, col: 28, offset: 33152},
																										expr: &litMatcher{
																											pos:        position{line: 768, col: 29, offset: 33153},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 768, col: 33, offset: 33157,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 762, col: 9, offset: 32891},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 762, col: 20, offset: 32902},
																						expr: &choiceExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									run: (*parser).callonTitleElement553,
																									expr: &seqExpr{
																										pos: position{line: 184, col: 21, offset: 6799},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 184, col: 21, offset: 6799},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													run: (*parser).callonTitleElement556,
																													expr: &seqExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																expr: &actionExpr{
																																	pos: position{line: 214, col: 14, offset: 7892},
																																	run: (*parser).callonTitleElement559,
																																	expr: &litMatcher{
																																		pos:        position{line: 214, col: 14, offset: 7892},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 28, offset: 7070},
																																expr: &actionExpr{
																																	pos: position{line: 230, col: 14, offset: 8489},
																																	run: (*parser).callonTitleElement562,
																																	expr: &litMatcher{
																																		pos:        position{line: 230, col: 14, offset: 8489},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 39, offset: 7081},
																																expr: &actionExpr{
																																	pos: position{line: 1040, col: 16, offset: 44408},
																																	run: (*parser).callonTitleElement565,
																																	expr: &litMatcher{
																																		pos:        position{line: 1040, col: 16, offset: 44408},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 190, col: 52, offset: 7094},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 190, col: 56, offset: 7098},
																																	expr: &seqExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 58, offset: 7100},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 62, offset: 7104},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 63, offset: 7105},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 67, offset: 7109},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 68, offset: 7110},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 190, col: 72, offset: 7114,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 184, col: 40, offset: 6818},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 184, col: 44, offset: 6822},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 194, col: 19, offset: 7173},
																													run: (*parser).callonTitleElement579,
																													expr: &labeledExpr{
																														pos:   position{line: 194, col: 19, offset: 7173},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 194, col: 25, offset: 7179},
																															expr: &seqExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 194, col: 26, offset: 7180},
																																		expr: &litMatcher{
																																			pos:        position{line: 194, col: 27, offset: 7181},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 194, col: 31, offset: 7185},
																																		expr: &litMatcher{
																																			pos:        position{line: 194, col: 32, offset: 7186},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 194, col: 36, offset: 7190},
																																		expr: &litMatcher{
																																			pos:        position{line: 194, col: 37, offset: 7191},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 194, col: 41, offset: 7195,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 184, col: 67, offset: 6845},
																												expr: &litMatcher{
																													pos:        position{line: 184, col: 67, offset: 6845},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 184, col: 72, offset: 6850},
																												expr: &choiceExpr{
																													pos: position{line: 1094, col: 7, offset: 45764},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1094, col: 7, offset: 45764},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1094, col: 13, offset: 45770},
																															run: (*parser).callonTitleElement595,
																															expr: &litMatcher{
																																pos:        position{line: 1094, col: 13, offset: 45770},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 186, col: 5, offset: 6934},
																									run: (*parser).callonTitleElement597,
																									expr: &seqExpr{
																										pos: position{line: 186, col: 5, offset: 6934},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 186, col: 5, offset: 6934},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													run: (*parser).callonTitleElement600,
																													expr: &seqExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																expr: &actionExpr{
																																	pos: position{line: 214, col: 14, offset: 7892},
																																	run: (*parser).callonTitleElement603,
																																	expr: &litMatcher{
																																		pos:        position{line: 214, col: 14, offset: 7892},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 28, offset: 7070},
																																expr: &actionExpr{
																																	pos: position{line: 230, col: 14, offset: 8489},
																																	run: (*parser).callonTitleElement606,
																																	expr: &litMatcher{
																																		pos:        position{line: 230, col: 14, offset: 8489},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 39, offset: 7081},
																																expr: &actionExpr{
																																	pos: position{line: 1040, col: 16, offset: 44408},
																																	run: (*parser).callonTitleElement609,
																																	expr: &litMatcher{
																																		pos:        position{line: 1040, col: 16, offset: 44408},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 190, col: 52, offset: 7094},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 190, col: 56, offset: 7098},
																																	expr: &seqExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 58, offset: 7100},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 62, offset: 7104},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 63, offset: 7105},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 67, offset: 7109},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 68, offset: 7110},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 190, col: 72, offset: 7114,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 186, col: 24, offset: 6953},
																												expr: &litMatcher{
																													pos:        position{line: 186, col: 24, offset: 6953},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 186, col: 29, offset: 6958},
																												expr: &choiceExpr{
																													pos: position{line: 1094, col: 7, offset: 45764},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1094, col: 7, offset: 45764},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1094, col: 13, offset: 45770},
																															run: (*parser).callonTitleElement626,
																															expr: &litMatcher{
																																pos:        position{line: 1094, col: 13, offset: 45770},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 762, col: 40, offset: 32922},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 764, col: 5, offset: 33007},
																		run: (*parser).callonTitleElement629,
																		expr: &seqExpr{
																			pos: position{line: 764, col: 5, offset: 33007},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 764, col: 5, offset: 33007},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 764, col: 9, offset: 33011},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 764, col: 20, offset: 33022},
																						expr: &choiceExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									run: (*parser).callonTitleElement635,
																									expr: &seqExpr{
																										pos: position{line: 184, col: 21, offset: 6799},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 184, col: 21, offset: 6799},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													run: (*parser).callonTitleElement638,
																													expr: &seqExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																expr: &actionExpr{
																																	pos: position{line: 214, col: 14, offset: 7892},
																																	run: (*parser).callonTitleElement641,
																																	expr: &litMatcher{
																																		pos:        position{line: 214, col: 14, offset: 7892},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 28, offset: 7070},
																																expr: &actionExpr{
																																	pos: position{line: 230, col: 14, offset: 8489},
																																	run: (*parser).callonTitleElement644,
																																	expr: &litMatcher{
																																		pos:        position{line: 230, col: 14, offset: 8489},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 39, offset: 7081},
																																expr: &actionExpr{
																																	pos: position{line: 1040, col: 16, offset: 44408},
																																	run: (*parser).callonTitleElement647,
																																	expr: &litMatcher{
																																		pos:        position{line: 1040, col: 16, offset: 44408},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 190, col: 52, offset: 7094},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 190, col: 56, offset: 7098},
																																	expr: &seqExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 58, offset: 7100},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 62, offset: 7104},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 63, offset: 7105},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 67, offset: 7109},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 68, offset: 7110},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 190, col: 72, offset: 7114,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 184, col: 40, offset: 6818},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 184, col: 44, offset: 6822},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 194, col: 19, offset: 7173},
																													run: (*parser).callonTitleElement661,
																													expr: &labeledExpr{
																														pos:   position{line: 194, col: 19, offset: 7173},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 194, col: 25, offset: 7179},
																															expr: &seqExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 194, col: 26, offset: 7180},
																																		expr: &litMatcher{
																																			pos:        position{line: 194, col: 27, offset: 7181},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 194, col: 31, offset: 7185},
																																		expr: &litMatcher{
																																			pos:        position{line: 194, col: 32, offset: 7186},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 194, col: 36, offset: 7190},
																																		expr: &litMatcher{
																																			pos:        position{line: 194, col: 37, offset: 7191},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 194, col: 41, offset: 7195,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 184, col: 67, offset: 6845},
																												expr: &litMatcher{
																													pos:        position{line: 184, col: 67, offset: 6845},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 184, col: 72, offset: 6850},
																												expr: &choiceExpr{
																													pos: position{line: 1094, col: 7, offset: 45764},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1094, col: 7, offset: 45764},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1094, col: 13, offset: 45770},
																															run: (*parser).callonTitleElement677,
																															expr: &litMatcher{
																																pos:        position{line: 1094, col: 13, offset: 45770},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 186, col: 5, offset: 6934},
																									run: (*parser).callonTitleElement679,
																									expr: &seqExpr{
																										pos: position{line: 186, col: 5, offset: 6934},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 186, col: 5, offset: 6934},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													run: (*parser).callonTitleElement682,
																													expr: &seqExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																expr: &actionExpr{
																																	pos: position{line: 214, col: 14, offset: 7892},
																																	run: (*parser).callonTitleElement685,
																																	expr: &litMatcher{
																																		pos:        position{line: 214, col: 14, offset: 7892},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 28, offset: 7070},
																																expr: &actionExpr{
																																	pos: position{line: 230, col: 14, offset: 8489},
																																	run: (*parser).callonTitleElement688,
																																	expr: &litMatcher{
																																		pos:        position{line: 230, col: 14, offset: 8489},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 39, offset: 7081},
																																expr: &actionExpr{
																																	pos: position{line: 1040, col: 16, offset: 44408},
																																	run: (*parser).callonTitleElement691,
																																	expr: &litMatcher{
																																		pos:        position{line: 1040, col: 16, offset: 44408},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 190, col: 52, offset: 7094},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 190, col: 56, offset: 7098},
																																	expr: &seqExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 58, offset: 7100},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 62, offset: 7104},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 63, offset: 7105},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 67, offset: 7109},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 68, offset: 7110},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 190, col: 72, offset: 7114,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 186, col: 24, offset: 6953},
																												expr: &litMatcher{
																													pos:        position{line: 186, col: 24, offset: 6953},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 186, col: 29, offset: 6958},
																												expr: &choiceExpr{
																													pos: position{line: 1094, col: 7, offset: 45764},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1094, col: 7, offset: 45764},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1094, col: 13, offset: 45770},
																															run: (*parser).callonTitleElement708,
																															expr: &litMatcher{
																																pos:        position{line: 1094, col: 13, offset: 45770},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 764, col: 40, offset: 33042},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 742, col: 17, offset: 32226},
												run: (*parser).callonTitleElement711,
												expr: &seqExpr{
													pos: position{line: 742, col: 17, offset: 32226},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 742, col: 17, offset: 32226},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 748, col: 20, offset: 32473},
																run: (*parser).callonTitleElement714,
																expr: &seqExpr{
																	pos: position{line: 748, col: 20, offset: 32473},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1088, col: 15, offset: 45649},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1088, col: 15, offset: 45649},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1088, col: 27, offset: 45661},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1088, col: 40, offset: 45674},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1088, col: 51, offset: 45685},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1088, col: 62, offset: 45696},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1076, col: 8, offset: 45412},
																			run: (*parser).callonTitleElement722,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1076, col: 8, offset: 45412},
																				expr: &seqExpr{
																					pos: position{line: 1076, col: 9, offset: 45413},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1076, col: 9, offset: 45413},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1076, col: 18, offset: 45422},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonTitleElement732,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1076, col: 22, offset: 45426},
																							expr: &litMatcher{
																								pos:        position{line: 1076, col: 23, offset: 45427},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1076, col: 27, offset: 45431},
																							expr: &litMatcher{
																								pos:        position{line: 1076, col: 28, offset: 45432},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1076, col: 32, offset: 45436,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 742, col: 39, offset: 32248},
															label: "inlineAttributes",
															expr: &choiceExpr{
																pos: position{line: 761, col: 19, offset: 32854},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 761, col: 19, offset: 32854},
																		run: (*parser).callonTitleElement741,
																		expr: &seqExpr{
																			pos: position{line: 761, col: 19, offset: 32854},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 761, col: 19, offset: 32854},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 761, col: 23, offset: 32858},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 768, col: 22, offset: 33146},
																						run: (*parser).callonTitleElement745,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 768, col: 22, offset: 33146},
																							expr: &seqExpr{
																								pos: position{line: 768, col: 23, offset: 33147},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 768, col: 23, offset: 33147},
																										expr: &litMatcher{
																											pos:        position{line: 768, col: 24, offset: 33148},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 768, col: 28, offset: 33152},
																										expr: &litMatcher{
																											pos:        position{line: 768, col: 29, offset: 33153},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 768, col: 33, offset: 33157,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 762, col: 9, offset: 32891},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 762, col: 20, offset: 32902},
																						expr: &choiceExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									run: (*parser).callonTitleElement756,
																									expr: &seqExpr{
																										pos: position{line: 184, col: 21, offset: 6799},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 184, col: 21, offset: 6799},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													run: (*parser).callonTitleElement759,
																													expr: &seqExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																expr: &actionExpr{
																																	pos: position{line: 214, col: 14, offset: 7892},
																																	run: (*parser).callonTitleElement762,
																																	expr: &litMatcher{
																																		pos:        position{line: 214, col: 14, offset: 7892},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 28, offset: 7070},
																																expr: &actionExpr{
																																	pos: position{line: 230, col: 14, offset: 8489},
																																	run: (*parser).callonTitleElement765,
																																	expr: &litMatcher{
																																		pos:        position{line: 230, col: 14, offset: 8489},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 39, offset: 7081},
																																expr: &actionExpr{
																																	pos: position{line: 1040, col: 16, offset: 44408},
																																	run: (*parser).callonTitleElement768,
																																	expr: &litMatcher{
																																		pos:        position{line: 1040, col: 16, offset: 44408},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 190, col: 52, offset: 7094},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 190, col: 56, offset: 7098},
																																	expr: &seqExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 58, offset: 7100},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 62, offset: 7104},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 63, offset: 7105},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 67, offset: 7109},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 68, offset: 7110},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 190, col: 72, offset: 7114,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 184, col: 40, offset: 6818},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 184, col: 44, offset: 6822},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 194, col: 19, offset: 7173},
																													run: (*parser).callonTitleElement782,
																													expr: &labeledExpr{
																														pos:   position{line: 194, col: 19, offset: 7173},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 194, col: 25, offset: 7179},
																															expr: &seqExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 194, col: 26, offset: 7180},
																																		expr: &litMatcher{
																																			pos:        position{line: 194, col: 27, offset: 7181},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 194, col: 31, offset: 7185},
																																		expr: &litMatcher{
																																			pos:        position{line: 194, col: 32, offset: 7186},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 194, col: 36, offset: 7190},
																																		expr: &litMatcher{
																																			pos:        position{line: 194, col: 37, offset: 7191},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 194, col: 41, offset: 7195,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 184, col: 67, offset: 6845},
																												expr: &litMatcher{
																													pos:        position{line: 184, col: 67, offset: 6845},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 184, col: 72, offset: 6850},
																												expr: &choiceExpr{
																													pos: position{line: 1094, col: 7, offset: 45764},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1094, col: 7, offset: 45764},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1094, col: 13, offset: 45770},
																															run: (*parser).callonTitleElement798,
																															expr: &litMatcher{
																																pos:        position{line: 1094, col: 13, offset: 45770},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 186, col: 5, offset: 6934},
																									run: (*parser).callonTitleElement800,
																									expr: &seqExpr{
																										pos: position{line: 186, col: 5, offset: 6934},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 186, col: 5, offset: 6934},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													run: (*parser).callonTitleElement803,
																													expr: &seqExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																expr: &actionExpr{
																																	pos: position{line: 214, col: 14, offset: 7892},
																																	run: (*parser).callonTitleElement806,
																																	expr: &litMatcher{
																																		pos:        position{line: 214, col: 14, offset: 7892},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 28, offset: 7070},
																																expr: &actionExpr{
																																	pos: position{line: 230, col: 14, offset: 8489},
																																	run: (*parser).callonTitleElement809,
																																	expr: &litMatcher{
																																		pos:        position{line: 230, col: 14, offset: 8489},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 39, offset: 7081},
																																expr: &actionExpr{
																																	pos: position{line: 1040, col: 16, offset: 44408},
																																	run: (*parser).callonTitleElement812,
																																	expr: &litMatcher{
																																		pos:        position{line: 1040, col: 16, offset: 44408},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 190, col: 52, offset: 7094},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 190, col: 56, offset: 7098},
																																	expr: &seqExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 58, offset: 7100},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 62, offset: 7104},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 63, offset: 7105},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 67, offset: 7109},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 68, offset: 7110},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 190, col: 72, offset: 7114,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 186, col: 24, offset: 6953},
																												expr: &litMatcher{
																													pos:        position{line: 186, col: 24, offset: 6953},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 186, col: 29, offset: 6958},
																												expr: &choiceExpr{
																													pos: position{line: 1094, col: 7, offset: 45764},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1094, col: 7, offset: 45764},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1094, col: 13, offset: 45770},
																															run: (*parser).callonTitleElement829,
																															expr: &litMatcher{
																																pos:        position{line: 1094, col: 13, offset: 45770},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 762, col: 40, offset: 32922},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 764, col: 5, offset: 33007},
																		run: (*parser).callonTitleElement832,
																		expr: &seqExpr{
																			pos: position{line: 764, col: 5, offset: 33007},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 764, col: 5, offset: 33007},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 764, col: 9, offset: 33011},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 764, col: 20, offset: 33022},
																						expr: &choiceExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									run: (*parser).callonTitleElement838,
																									expr: &seqExpr{
																										pos: position{line: 184, col: 21, offset: 6799},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 184, col: 21, offset: 6799},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													run: (*parser).callonTitleElement841,
																													expr: &seqExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																expr: &actionExpr{
																																	pos: position{line: 214, col: 14, offset: 7892},
																																	run: (*parser).callonTitleElement844,
																																	expr: &litMatcher{
																																		pos:        position{line: 214, col: 14, offset: 7892},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 28, offset: 7070},
																																expr: &actionExpr{
																																	pos: position{line: 230, col: 14, offset: 8489},
																																	run: (*parser).callonTitleElement847,
																																	expr: &litMatcher{
																																		pos:        position{line: 230, col: 14, offset: 8489},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 39, offset: 7081},
																																expr: &actionExpr{
																																	pos: position{line: 1040, col: 16, offset: 44408},
																																	run: (*parser).callonTitleElement850,
																																	expr: &litMatcher{
																																		pos:        position{line: 1040, col: 16, offset: 44408},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 190, col: 52, offset: 7094},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 190, col: 56, offset: 7098},
																																	expr: &seqExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 58, offset: 7100},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 62, offset: 7104},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 63, offset: 7105},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 67, offset: 7109},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 68, offset: 7110},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 190, col: 72, offset: 7114,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 184, col: 40, offset: 6818},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 184, col: 44, offset: 6822},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 194, col: 19, offset: 7173},
																													run: (*parser).callonTitleElement864,
																													expr: &labeledExpr{
																														pos:   position{line: 194, col: 19, offset: 7173},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 194, col: 25, offset: 7179},
																															expr: &seqExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 194, col: 26, offset: 7180},
																																		expr: &litMatcher{
																																			pos:        position{line: 194, col: 27, offset: 7181},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 194, col: 31, offset: 7185},
																																		expr: &litMatcher{
																																			pos:        position{line: 194, col: 32, offset: 7186},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 194, col: 36, offset: 7190},
																																		expr: &litMatcher{
																																			pos:        position{line: 194, col: 37, offset: 7191},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 194, col: 41, offset: 7195,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 184, col: 67, offset: 6845},
																												expr: &litMatcher{
																													pos:        position{line: 184, col: 67, offset: 6845},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 184, col: 72, offset: 6850},
																												expr: &choiceExpr{
																													pos: position{line: 1094, col: 7, offset: 45764},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1094, col: 7, offset: 45764},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1094, col: 13, offset: 45770},
																															run: (*parser).callonTitleElement880,
																															expr: &litMatcher{
																																pos:        position{line: 1094, col: 13, offset: 45770},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 186, col: 5, offset: 6934},
																									run: (*parser).callonTitleElement882,
																									expr: &seqExpr{
																										pos: position{line: 186, col: 5, offset: 6934},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 186, col: 5, offset: 6934},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													run: (*parser).callonTitleElement885,
																													expr: &seqExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																expr: &actionExpr{
																																	pos: position{line: 214, col: 14, offset: 7892},
																																	run: (*parser).callonTitleElement888,
																																	expr: &litMatcher{
																																		pos:        position{line: 214, col: 14, offset: 7892},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 28, offset: 7070},
																																expr: &actionExpr{
																																	pos: position{line: 230, col: 14, offset: 8489},
																																	run: (*parser).callonTitleElement891,
																																	expr: &litMatcher{
																																		pos:        position{line: 230, col: 14, offset: 8489},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 39, offset: 7081},
																																expr: &actionExpr{
																																	pos: position{line: 1040, col: 16, offset: 44408},
																																	run: (*parser).callonTitleElement894,
																																	expr: &litMatcher{
																																		pos:        position{line: 1040, col: 16, offset: 44408},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 190, col: 52, offset: 7094},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 190, col: 56, offset: 7098},
																																	expr: &seqExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 58, offset: 7100},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 62, offset: 7104},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 63, offset: 7105},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 190, col: 67, offset: 7109},
																																				expr: &litMatcher{
																																					pos:        position{line: 190, col: 68, offset: 7110},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 190, col: 72, offset: 7114,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 186, col: 24, offset: 6953},
																												expr: &litMatcher{
																													pos:        position{line: 186, col: 24, offset: 6953},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 186, col: 29, offset: 6958},
																												expr: &choiceExpr{
																													pos: position{line: 1094, col: 7, offset: 45764},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1094, col: 7, offset: 45764},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1094, col: 13, offset: 45770},
																															run: (*parser).callonTitleElement911,
																															expr: &litMatcher{
																																pos:        position{line: 1094, col: 13, offset: 45770},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 764, col: 40, offset: 33042},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 744, col: 5, offset: 32377},
												run: (*parser).callonTitleElement914,
												expr: &labeledExpr{
													pos:   position{line: 744, col: 5, offset: 32377},
													label: "url",
													expr: &actionExpr{
														pos: position{line: 748, col: 20, offset: 32473},
														run: (*parser).callonTitleElement916,
														expr: &seqExpr{
															pos: position{line: 748, col: 20, offset: 32473},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 1088, col: 15, offset: 45649},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1088, col: 15, offset: 45649},
																			val:        "http://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1088, col: 27, offset: 45661},
																			val:        "https://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1088, col: 40, offset: 45674},
																			val:        "ftp://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1088, col: 51, offset: 45685},
																			val:        "irc://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1088, col: 62, offset: 45696},
																			val:        "mailto:",
																			ignoreCase: false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1076, col: 8, offset: 45412},
																	run: (*parser).callonTitleElement924,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1076, col: 8, offset: 45412},
																		expr: &seqExpr{
																			pos: position{line: 1076, col: 9, offset: 45413},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1076, col: 9, offset: 45413},
																					expr: &choiceExpr{
																						pos: position{line: 1098, col: 12, offset: 45826},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1098, col: 12, offset: 45826},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1098, col: 21, offset: 45835},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1076, col: 18, offset: 45422},
																					expr: &choiceExpr{
																						pos: position{line: 1094, col: 7, offset: 45764},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1094, col: 7, offset: 45764},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1094, col: 13, offset: 45770},
																								run: (*parser).callonTitleElement934,
																								expr: &litMatcher{
																									pos:        position{line: 1094, col: 13, offset: 45770},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1076, col: 22, offset: 45426},
																					expr: &litMatcher{
																						pos:        position{line: 1076, col: 23, offset: 45427},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1076, col: 27, offset: 45431},
																					expr: &litMatcher{
																						pos:        position{line: 1076, col: 28, offset: 45432},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1076, col: 32, offset: 45436,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 109, col: 34, offset: 4042},
								run: (*parser).callonTitleElement941,
								expr: &seqExpr{
									pos: position{line: 109, col: 34, offset: 4042},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 109, col: 34, offset: 4042},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 109, col: 38, offset: 4046},
											label: "name",
											expr: &actionExpr{
												pos: position{line: 116, col: 26, offset: 4341},
												run: (*parser).callonTitleElement945,
												expr: &seqExpr{
													pos: position{line: 116, col: 26, offset: 4341},
													exprs: []interface{}{
														&charClassMatcher{
															pos:        position{line: 116, col: 27, offset: 4342},
															val:        "[_A-Za-z0-9]",
															chars:      []rune{'_'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 116, col: 56, offset: 4371},
															expr: &charClassMatcher{
																pos:        position{line: 116, col: 57, offset: 4372},
																val:        "[-A-Za-z0-9]",
																chars:      []rune{'-'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 109, col: 67, offset: 4075},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 365, col: 123, offset: 13666},
								name: "InlineFootnote",
							},
							&charClassMatcher{
								pos:        position{line: 1070, col: 16, offset: 45144},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
							&actionExpr{
								pos: position{line: 568, col: 14, offset: 22373},
								run: (*parser).callonTitleElement953,
								expr: &seqExpr{
									pos: position{line: 568, col: 14, offset: 22373},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonTitleElement957,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 568, col: 17, offset: 22376},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 568, col: 21, offset: 22380},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonTitleElement963,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 365, col: 166, offset: 13709},
								name: "Word",
							},
						},
					},
				},
			},
		},
		{
			name: "List",
			pos:  position{line: 377, col: 1, offset: 14001},
			expr: &actionExpr{
				pos: position{line: 379, col: 5, offset: 14082},
				run: (*parser).callonList1,
				expr: &labeledExpr{
					pos:   position{line: 379, col: 5, offset: 14082},
					label: "elements",
					expr: &ruleRefExpr{
						pos:  position{line: 379, col: 14, offset: 14091},
						name: "ListItems",
					},
				},
			},
		},
		{
			name: "ListItems",
			pos:  position{line: 383, col: 1, offset: 14157},
			expr: &oneOrMoreExpr{
				pos: position{line: 383, col: 14, offset: 14170},
				expr: &choiceExpr{
					pos: position{line: 383, col: 15, offset: 14171},
					alternatives: []interface{}{
						&ruleRefExpr{
							pos:  position{line: 383, col: 15, offset: 14171},
							name: "OrderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 383, col: 33, offset: 14189},
							name: "UnorderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 383, col: 53, offset: 14209},
							name: "LabeledListItem",
						},
					},
				},
			},
		},
		{
			name: "ListParagraph",
			pos:  position{line: 385, col: 1, offset: 14228},
			expr: &actionExpr{
				pos: position{line: 385, col: 18, offset: 14245},
				run: (*parser).callonListParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 385, col: 18, offset: 14245},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 385, col: 24, offset: 14251},
						expr: &ruleRefExpr{
							pos:  position{line: 385, col: 25, offset: 14252},
							name: "ListParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "ListParagraphLine",
			pos:  position{line: 389, col: 1, offset: 14331},
			expr: &actionExpr{
				pos: position{line: 390, col: 5, offset: 14357},
				run: (*parser).callonListParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 390, col: 5, offset: 14357},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 390, col: 5, offset: 14357},
							expr: &actionExpr{
								pos: position{line: 415, col: 26, offset: 15179},
								run: (*parser).callonListParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 415, col: 26, offset: 15179},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 415, col: 26, offset: 15179},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonListParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 415, col: 30, offset: 15183},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 417, col: 5, offset: 15238},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 417, col: 5, offset: 15238},
														run: (*parser).callonListParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 417, col: 5, offset: 15238},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 419, col: 9, offset: 15351},
														run: (*parser).callonListParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 419, col: 9, offset: 15351},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 421, col: 9, offset: 15462},
														run: (*parser).callonListParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 421, col: 9, offset: 15462},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 423, col: 9, offset: 15571},
														run: (*parser).callonListParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 423, col: 9, offset: 15571},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 425, col: 9, offset: 15678},
														run: (*parser).callonListParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 425, col: 9, offset: 15678},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 428, col: 9, offset: 15805},
														run: (*parser).callonListParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 428, col: 9, offset: 15805},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 428, col: 9, offset: 15805},
																	expr: &charClassMatcher{
																		pos:        position{line: 428, col: 10, offset: 15806},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 428, col: 18, offset: 15814},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 430, col: 9, offset: 15917},
														run: (*parser).callonListParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 430, col: 9, offset: 15917},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 430, col: 10, offset: 15918},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 430, col: 17, offset: 15925},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 432, col: 9, offset: 16031},
														run: (*parser).callonListParagraphLine32,
														expr: &seqExpr{
															pos: position{line: 432, col: 9, offset: 16031},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 432, col: 10, offset: 16032},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 432, col: 17, offset: 16039},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 434, col: 9, offset: 16145},
														run: (*parser).callonListParagraphLine36,
														expr: &seqExpr{
															pos: position{line: 434, col: 9, offset: 16145},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 434, col: 9, offset: 16145},
																	expr: &charClassMatcher{
																		pos:        position{line: 434, col: 10, offset: 16146},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 434, col: 18, offset: 16154},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 436, col: 9, offset: 16260},
														run: (*parser).callonListParagraphLine41,
														expr: &seqExpr{
															pos: position{line: 436, col: 9, offset: 16260},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 436, col: 9, offset: 16260},
																	expr: &charClassMatcher{
																		pos:        position{line: 436, col: 10, offset: 16261},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 436, col: 18, offset: 16269},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 438, col: 8, offset: 16374},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonListParagraphLine49,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 391, col: 5, offset: 14387},
							expr: &actionExpr{
								pos: position{line: 454, col: 5, offset: 17034},
								run: (*parser).callonListParagraphLine52,
								expr: &seqExpr{
									pos: position{line: 454, col: 5, offset: 17034},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 454, col: 5, offset: 17034},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonListParagraphLine57,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 454, col: 9, offset: 17038},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 455, col: 9, offset: 17055},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 455, col: 9, offset: 17055},
														run: (*parser).callonListParagraphLine61,
														expr: &litMatcher{
															pos:        position{line: 455, col: 9, offset: 17055},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 458, col: 11, offset: 17224},
														run: (*parser).callonListParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 458, col: 11, offset: 17224},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 461, col: 11, offset: 17393},
														run: (*parser).callonListParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 461, col: 11, offset: 17393},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 464, col: 11, offset: 17562},
														run: (*parser).callonListParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 464, col: 11, offset: 17562},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 467, col: 11, offset: 17728},
														run: (*parser).callonListParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 467, col: 11, offset: 17728},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 470, col: 11, offset: 17892},
														run: (*parser).callonListParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 470, col: 11, offset: 17892},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 472, col: 12, offset: 18039},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonListParagraphLine76,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 392, col: 5, offset: 14419},
							expr: &seqExpr{
								pos: position{line: 392, col: 7, offset: 14421},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 487, col: 24, offset: 18729},
										run: (*parser).callonListParagraphLine80,
										expr: &zeroOrMoreExpr{
											pos: position{line: 487, col: 24, offset: 18729},
											expr: &seqExpr{
												pos: position{line: 487, col: 25, offset: 18730},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 487, col: 25, offset: 18730},
														expr: &choiceExpr{
															pos: position{line: 1098, col: 12, offset: 45826},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1098, col: 12, offset: 45826},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1098, col: 21, offset: 45835},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 487, col: 34, offset: 18739},
														expr: &litMatcher{
															pos:        position{line: 487, col: 35, offset: 18740},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 487, col: 40, offset: 18745,
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 492, col: 29, offset: 18891},
										run: (*parser).callonListParagraphLine90,
										expr: &choiceExpr{
											pos: position{line: 492, col: 30, offset: 18892},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 492, col: 30, offset: 18892},
													val:        "::::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 492, col: 39, offset: 18901},
													val:        ":::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 492, col: 47, offset: 18909},
													val:        "::",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 393, col: 5, offset: 14472},
							expr: &actionExpr{
								pos: position{line: 400, col: 25, offset: 14623},
								run: (*parser).callonListParagraphLine96,
								expr: &seqExpr{
									pos: position{line: 400, col: 25, offset: 14623},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 400, col: 25, offset: 14623},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 400, col: 29, offset: 14627},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonListParagraphLine102,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 394, col: 5, offset: 14501},
							expr: &actionExpr{
								pos: position{line: 136, col: 21, offset: 5092},
								run: (*parser).callonListParagraphLine110,
								expr: &seqExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									exprs: []interface{}{
										&andExpr{
											pos: position{line: 136, col: 21, offset: 5092},
											expr: &charClassMatcher{
												pos:        position{line: 136, col: 23, offset: 5094},
												val:        "[[.#]",
												chars:      []rune{'[', '.', '#'},
												ignoreCase: false,
												inverted:   false,
											},
										},
										&labeledExpr{
											pos:   position{line: 137, col: 5, offset: 5182},
											label: "attr",
											expr: &choiceExpr{
												pos: position{line: 137, col: 11, offset: 5188},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 144, col: 14, offset: 5546},
														run: (*parser).callonListParagraphLine116,
														expr: &seqExpr{
															pos: position{line: 144, col: 14, offset: 5546},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 144, col: 14, offset: 5546},
																	val:        "[[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 144, col: 19, offset: 5551},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 1080, col: 7, offset: 45482},
																		run: (*parser).callonListParagraphLine120,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			expr: &seqExpr{
																				pos: position{line: 1080, col: 8, offset: 45483},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 1080, col: 8, offset: 45483},
																						expr: &choiceExpr{
																							pos: position{line: 1098, col: 12, offset: 45826},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1080, col: 17, offset: 45492},
																						expr: &choiceExpr{
																							pos: position{line: 1094, col: 7, offset: 45764},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1094, col: 7, offset: 45764},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1094, col: 13, offset: 45770},
																									run: (*parser).callonListParagraphLine130,
																									expr: &litMatcher{
																										pos:        position{line: 1094, col: 13, offset: 45770},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1080, col: 21, offset: 45496},
																						expr: &litMatcher{
																							pos:        position{line: 1080, col: 22, offset: 45497},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1080, col: 26, offset: 45501},
																						expr: &litMatcher{
																							pos:        position{line: 1080, col: 27, offset: 45502},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1080, col: 31, offset: 45506},
																						expr: &litMatcher{
																							pos:        position{line: 1080, col: 32, offset: 45507},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1080, col: 37, offset: 45512},
																						expr: &litMatcher{
																							pos:        position{line: 1080, col: 38, offset: 45513},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1080, col: 43, offset: 45518},
																						expr: &litMatcher{
																							pos:        position{line: 1080, col: 44, offset: 45519},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 1080, col: 48, offset: 45523,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 144, col: 27, offset: 5559},
																	val:        "]]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 146, col: 5, offset: 5613},
														run: (*parser).callonListParagraphLine144,
														expr: &seqExpr{
															pos: position{line: 146, col: 5, offset: 5613},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 146, col: 5, offset: 5613},
																	val:        "[#",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 146, col: 10, offset: 5618},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 1080, col: 7, offset: 45482},
																		run: (*parser).callonListParagraphLine148,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			expr: &seqExpr{
																				pos: position{line: 1080, col: 8, offset: 45483},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 1080, col: 8, offset: 45483},
																						expr: &choiceExpr{
																							pos: position{line: 1098, col: 12, offset: 45826},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1080, col: 17, offset: 45492},
																						expr: &choiceExpr{
																							pos: position{line: 1094, col: 7, offset: 45764},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1094, col: 7, offset: 45764},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1094, col: 13, offset: 45770},
																									run: (*parser).callonListParagraphLine158,
																									expr: &litMatcher{
																										pos:        position{line: 1094, col: 13, offset: 45770},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1080, col: 21, offset: 45496},
																						expr: &litMatcher{
																							pos:        position{line: 1080, col: 22, offset: 45497},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1080, col: 26, offset: 45501},
																						expr: &litMatcher{
																							pos:        position{line: 1080, col: 27, offset: 45502},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1080, col: 31, offset: 45506},
																						expr: &litMatcher{
																							pos:        position{line: 1080, col: 32, offset: 45507},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1080, col: 37, offset: 45512},
																						expr: &litMatcher{
																							pos:        position{line: 1080, col: 38, offset: 45513},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1080, col: 43, offset: 45518},
																						expr: &litMatcher{
																							pos:        position{line: 1080, col: 44, offset: 45519},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 1080, col: 48, offset: 45523,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 146, col: 18, offset: 5626},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 156, col: 17, offset: 5929},
														run: (*parser).callonListParagraphLine172,
														expr: &seqExpr{
															pos: position{line: 156, col: 17, offset: 5929},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 156, col: 17, offset: 5929},
																	val:        ".",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 156, col: 21, offset: 5933},
																	expr: &litMatcher{
																		pos:        position{line: 156, col: 22, offset: 5934},
																		val:        ".",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 156, col: 26, offset: 5938},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonListParagraphLine180,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 156, col: 30, offset: 5942},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 160, col: 24, offset: 6047},
																		run: (*parser).callonListParagraphLine183,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 160, col: 24, offset: 6047},
																			expr: &seqExpr{
																				pos: position{line: 160, col: 25, offset: 6048},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 160, col: 25, offset: 6048},
																						expr: &choiceExpr{
																							pos: position{line: 1098, col: 12, offset: 45826},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 160, col: 34, offset: 6057,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 166, col: 16, offset: 6206},
														run: (*parser).callonListParagraphLine191,
														expr: &seqExpr{
															pos: position{line: 166, col: 16, offset: 6206},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 166, col: 16, offset: 6206},
																	val:        "[.",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 166, col: 21, offset: 6211},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonListParagraphLine197,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 166, col: 25, offset: 6215},
																	label: "role",
																	expr: &actionExpr{
																		pos: position{line: 170, col: 23, offset: 6319},
																		run: (*parser).callonListParagraphLine200,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 170, col: 23, offset: 6319},
																			expr: &seqExpr{
																				pos: position{line: 170, col: 24, offset: 6320},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 170, col: 24, offset: 6320},
																						expr: &choiceExpr{
																							pos: position{line: 1098, col: 12, offset: 45826},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 170, col: 33, offset: 6329},
																						expr: &litMatcher{
																							pos:        position{line: 170, col: 34, offset: 6330},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 170, col: 38, offset: 6334,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 166, col: 51, offset: 6241},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 175, col: 30, offset: 6483},
														run: (*parser).callonListParagraphLine211,
														expr: &seqExpr{
															pos: position{line: 175, col: 30, offset: 6483},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 175, col: 30, offset: 6483},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 175, col: 34, offset: 6487},
																	label: "k",
																	expr: &choiceExpr{
																		pos: position{line: 508, col: 19, offset: 19492},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 508, col: 19, offset: 19492},
																				run: (*parser).callonListParagraphLine216,
																				expr: &litMatcher{
																					pos:        position{line: 508, col: 19, offset: 19492},
																					val:        "TIP",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 510, col: 5, offset: 19530},
																				run: (*parser).callonListParagraphLine218,
																				expr: &litMatcher{
																					pos:        position{line: 510, col: 5, offset: 19530},
																					val:        "NOTE",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 512, col: 5, offset: 19570},
																				run: (*parser).callonListParagraphLine220,
																				expr: &litMatcher{
																					pos:        position{line: 512, col: 5, offset: 19570},
																					val:        "IMPORTANT",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 514, col: 5, offset: 19620},
																				run: (*parser).callonListParagraphLine222,
																				expr: &litMatcher{
																					pos:        position{line: 514, col: 5, offset: 19620},
																					val:        "WARNING",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 516, col: 5, offset: 19666},
																				run: (*parser).callonListParagraphLine224,
																				expr: &litMatcher{
																					pos:        position{line: 516, col: 5, offset: 19666},
																					val:        "CAUTION",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 175, col: 53, offset: 6506},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 198, col: 21, offset: 7255},
														run: (*parser).callonListParagraphLine227,
														expr: &litMatcher{
															pos:        position{line: 198, col: 21, offset: 7255},
															val:        "[horizontal]",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 180, col: 19, offset: 6667},
														run: (*parser).callonListParagraphLine229,
														expr: &seqExpr{
															pos: position{line: 180, col: 19, offset: 6667},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 180, col: 19, offset: 6667},
																	val:        "[",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 180, col: 23, offset: 6671},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonListParagraphLine235,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 180, col: 27, offset: 6675},
																	label: "attributes",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 180, col: 38, offset: 6686},
																		expr: &choiceExpr{
																			pos: position{line: 184, col: 21, offset: 6799},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					run: (*parser).callonListParagraphLine240,
																					expr: &seqExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 184, col: 21, offset: 6799},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 190, col: 17, offset: 7059},
																									run: (*parser).callonListParagraphLine243,
																									expr: &seqExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												expr: &actionExpr{
																													pos: position{line: 214, col: 14, offset: 7892},
																													run: (*parser).callonListParagraphLine246,
																													expr: &litMatcher{
																														pos:        position{line: 214, col: 14, offset: 7892},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 28, offset: 7070},
																												expr: &actionExpr{
																													pos: position{line: 230, col: 14, offset: 8489},
																													run: (*parser).callonListParagraphLine249,
																													expr: &litMatcher{
																														pos:        position{line: 230, col: 14, offset: 8489},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 39, offset: 7081},
																												expr: &actionExpr{
																													pos: position{line: 1040, col: 16, offset: 44408},
																													run: (*parser).callonListParagraphLine252,
																													expr: &litMatcher{
																														pos:        position{line: 1040, col: 16, offset: 44408},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 190, col: 52, offset: 7094},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 190, col: 56, offset: 7098},
																													expr: &seqExpr{
																														pos: position{line: 190, col: 57, offset: 7099},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 58, offset: 7100},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 62, offset: 7104},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 63, offset: 7105},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 67, offset: 7109},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 68, offset: 7110},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 190, col: 72, offset: 7114,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 184, col: 40, offset: 6818},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 184, col: 44, offset: 6822},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 194, col: 19, offset: 7173},
																									run: (*parser).callonListParagraphLine266,
																									expr: &labeledExpr{
																										pos:   position{line: 194, col: 19, offset: 7173},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 194, col: 25, offset: 7179},
																											expr: &seqExpr{
																												pos: position{line: 194, col: 26, offset: 7180},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 27, offset: 7181},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 194, col: 31, offset: 7185},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 32, offset: 7186},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 194, col: 36, offset: 7190},
																														expr: &litMatcher{
																															pos:        position{line: 194, col: 37, offset: 7191},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 194, col: 41, offset: 7195,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 184, col: 67, offset: 6845},
																								expr: &litMatcher{
																									pos:        position{line: 184, col: 67, offset: 6845},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 184, col: 72, offset: 6850},
																								expr: &choiceExpr{
																									pos: position{line: 1094, col: 7, offset: 45764},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1094, col: 7, offset: 45764},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1094, col: 13, offset: 45770},
																											run: (*parser).callonListParagraphLine282,
																											expr: &litMatcher{
																												pos:        position{line: 1094, col: 13, offset: 45770},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 186, col: 5, offset: 6934},
																					run: (*parser).callonListParagraphLine284,
																					expr: &seqExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 186, col: 5, offset: 6934},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 190, col: 17, offset: 7059},
																									run: (*parser).callonListParagraphLine287,
																									expr: &seqExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												expr: &actionExpr{
																													pos: position{line: 214, col: 14, offset: 7892},
																													run: (*parser).callonListParagraphLine290,
																													expr: &litMatcher{
																														pos:        position{line: 214, col: 14, offset: 7892},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 28, offset: 7070},
																												expr: &actionExpr{
																													pos: position{line: 230, col: 14, offset: 8489},
																													run: (*parser).callonListParagraphLine293,
																													expr: &litMatcher{
																														pos:        position{line: 230, col: 14, offset: 8489},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 190, col: 39, offset: 7081},
																												expr: &actionExpr{
																													pos: position{line: 1040, col: 16, offset: 44408},
																													run: (*parser).callonListParagraphLine296,
																													expr: &litMatcher{
																														pos:        position{line: 1040, col: 16, offset: 44408},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 190, col: 52, offset: 7094},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 190, col: 56, offset: 7098},
																													expr: &seqExpr{
																														pos: position{line: 190, col: 57, offset: 7099},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 58, offset: 7100},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 62, offset: 7104},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 63, offset: 7105},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 190, col: 67, offset: 7109},
																																expr: &litMatcher{
																																	pos:        position{line: 190, col: 68, offset: 7110},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 190, col: 72, offset: 7114,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 186, col: 24, offset: 6953},
																								expr: &litMatcher{
																									pos:        position{line: 186, col: 24, offset: 6953},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 186, col: 29, offset: 6958},
																								expr: &choiceExpr{
																									pos: position{line: 1094, col: 7, offset: 45764},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1094, col: 7, offset: 45764},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1094, col: 13, offset: 45770},
																											run: (*parser).callonListParagraphLine313,
																											expr: &litMatcher{
																												pos:        position{line: 1094, col: 13, offset: 45770},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 180, col: 59, offset: 6707},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 137, col: 115, offset: 5292},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonListParagraphLine319,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 395, col: 5, offset: 14525},
							expr: &choiceExpr{
								pos: position{line: 832, col: 19, offset: 35999},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 998, col: 26, offset: 42680},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 840, col: 25, offset: 36416},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 840, col: 25, offset: 36416},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 840, col: 31, offset: 36422},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonListParagraphLine334,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 851, col: 26, offset: 36895},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 851, col: 26, offset: 36895},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 851, col: 33, offset: 36902},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonListParagraphLine346,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 873, col: 26, offset: 37800},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 873, col: 26, offset: 37800},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 873, col: 33, offset: 37807},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonListParagraphLine358,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 974, col: 26, offset: 41735},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 896, col: 24, offset: 38625},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 896, col: 24, offset: 38625},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 896, col: 31, offset: 38632},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonListParagraphLine371,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 931, col: 26, offset: 40218},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 931, col: 26, offset: 40218},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 931, col: 33, offset: 40225},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonListParagraphLine383,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 396, col: 5, offset: 14547},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 396, col: 11, offset: 14553},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "ContinuedDocumentElement",
			pos:  position{line: 404, col: 1, offset: 14683},
			expr: &actionExpr{
				pos: position{line: 404, col: 28, offset: 14710},
				run: (*parser).callonContinuedDocumentElement1,
				expr: &seqExpr{
					pos: position{line: 404, col: 28, offset: 14710},
					exprs: []interface{}{
						&actionExpr{
							pos: position{line: 400, col: 25, offset: 14623},
							run: (*parser).callonContinuedDocumentElement3,
							expr: &seqExpr{
								pos: position{line: 400, col: 25, offset: 14623},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 400, col: 25, offset: 14623},
										val:        "+",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 400, col: 29, offset: 14627},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonContinuedDocumentElement9,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1102, col: 8, offset: 45866},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1098, col: 12, offset: 45826},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1098, col: 21, offset: 45835},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1100, col: 8, offset: 45855},
												expr: &anyMatcher{
													line: 1100, col: 9, offset: 45856,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 404, col: 49, offset: 14731},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 404, col: 57, offset: 14739},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItem",
			pos:  position{line: 411, col: 1, offset: 14897},
			expr: &actionExpr{
				pos: position{line: 411, col: 20, offset: 14916},
				run: (*parser).callonOrderedListItem1,
				expr: &seqExpr{
					pos: position{line: 411, col: 20, offset: 14916},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 411, col: 20, offset: 14916},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 411, col: 31, offset: 14927},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5092},
									run: (*parser).callonOrderedListItem5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5092},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 136, col: 21, offset: 5092},
												expr: &charClassMatcher{
													pos:        position{line: 136, col: 23, offset: 5094},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 137, col: 5, offset: 5182},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 137, col: 11, offset: 5188},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 144, col: 14, offset: 5546},
															run: (*parser).callonOrderedListItem11,
															expr: &seqExpr{
																pos: position{line: 144, col: 14, offset: 5546},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 144, col: 14, offset: 5546},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 144, col: 19, offset: 5551},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonOrderedListItem15,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonOrderedListItem25,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 144, col: 27, offset: 5559},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 5, offset: 5613},
															run: (*parser).callonOrderedListItem39,
															expr: &seqExpr{
																pos: position{line: 146, col: 5, offset: 5613},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 5, offset: 5613},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 10, offset: 5618},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1080, col: 7, offset: 45482},
																			run: (*parser).callonOrderedListItem43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1080, col: 7, offset: 45482},
																				expr: &seqExpr{
																					pos: position{line: 1080, col: 8, offset: 45483},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 17, offset: 45492},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonOrderedListItem53,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 21, offset: 45496},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 22, offset: 45497},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 26, offset: 45501},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 27, offset: 45502},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 31, offset: 45506},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 32, offset: 45507},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 37, offset: 45512},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 38, offset: 45513},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1080, col: 43, offset: 45518},
																							expr: &litMatcher{
																								pos:        position{line: 1080, col: 44, offset: 45519},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1080, col: 48, offset: 45523,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 18, offset: 5626},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 156, col: 17, offset: 5929},
															run: (*parser).callonOrderedListItem67,
															expr: &seqExpr{
																pos: position{line: 156, col: 17, offset: 5929},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 156, col: 17, offset: 5929},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 156, col: 21, offset: 5933},
																		expr: &litMatcher{
																			pos:        position{line: 156, col: 22, offset: 5934},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 156, col: 26, offset: 5938},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonOrderedListItem75,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 156, col: 30, offset: 5942},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 160, col: 24, offset: 6047},
																			run: (*parser).callonOrderedListItem78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 160, col: 24, offset: 6047},
																				expr: &seqExpr{
																					pos: position{line: 160, col: 25, offset: 6048},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 160, col: 25, offset: 6048},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 160, col: 34, offset: 6057,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 166, col: 16, offset: 6206},
															run: (*parser).callonOrderedListItem86,
															expr: &seqExpr{
																pos: position{line: 166, col: 16, offset: 6206},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 166, col: 16, offset: 6206},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 166, col: 21, offset: 6211},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonOrderedListItem92,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 166, col: 25, offset: 6215},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 170, col: 23, offset: 6319},
																			run: (*parser).callonOrderedListItem95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 170, col: 23, offset: 6319},
																				expr: &seqExpr{
																					pos: position{line: 170, col: 24, offset: 6320},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 170, col: 24, offset: 6320},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 170, col: 33, offset: 6329},
																							expr: &litMatcher{
																								pos:        position{line: 170, col: 34, offset: 6330},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 170, col: 38, offset: 6334,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 166, col: 51, offset: 6241},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 30, offset: 6483},
															run: (*parser).callonOrderedListItem106,
															expr: &seqExpr{
																pos: position{line: 175, col: 30, offset: 6483},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 175, col: 30, offset: 6483},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 175, col: 34, offset: 6487},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 508, col: 19, offset: 19492},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 508, col: 19, offset: 19492},
																					run: (*parser).callonOrderedListItem111,
																					expr: &litMatcher{
																						pos:        position{line: 508, col: 19, offset: 19492},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 510, col: 5, offset: 19530},
																					run: (*parser).callonOrderedListItem113,
																					expr: &litMatcher{
																						pos:        position{line: 510, col: 5, offset: 19530},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 512, col: 5, offset: 19570},
																					run: (*parser).callonOrderedListItem115,
																					expr: &litMatcher{
																						pos:        position{line: 512, col: 5, offset: 19570},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 514, col: 5, offset: 19620},
																					run: (*parser).callonOrderedListItem117,
																					expr: &litMatcher{
																						pos:        position{line: 514, col: 5, offset: 19620},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 516, col: 5, offset: 19666},
																					run: (*parser).callonOrderedListItem119,
																					expr: &litMatcher{
																						pos:        position{line: 516, col: 5, offset: 19666},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 175, col: 53, offset: 6506},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 198, col: 21, offset: 7255},
															run: (*parser).callonOrderedListItem122,
															expr: &litMatcher{
																pos:        position{line: 198, col: 21, offset: 7255},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 180, col: 19, offset: 6667},
															run: (*parser).callonOrderedListItem124,
															expr: &seqExpr{
																pos: position{line: 180, col: 19, offset: 6667},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 180, col: 19, offset: 6667},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 180, col: 23, offset: 6671},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonOrderedListItem130,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 180, col: 27, offset: 6675},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 180, col: 38, offset: 6686},
																			expr: &choiceExpr{
																				pos: position{line: 184, col: 21, offset: 6799},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						run: (*parser).callonOrderedListItem135,
																						expr: &seqExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 184, col: 21, offset: 6799},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonOrderedListItem138,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonOrderedListItem141,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonOrderedListItem144,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonOrderedListItem147,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 184, col: 40, offset: 6818},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 184, col: 44, offset: 6822},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 194, col: 19, offset: 7173},
																										run: (*parser).callonOrderedListItem161,
																										expr: &labeledExpr{
																											pos:   position{line: 194, col: 19, offset: 7173},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 194, col: 25, offset: 7179},
																												expr: &seqExpr{
																													pos: position{line: 194, col: 26, offset: 7180},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 194, col: 26, offset: 7180},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 27, offset: 7181},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 31, offset: 7185},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 32, offset: 7186},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 194, col: 36, offset: 7190},
																															expr: &litMatcher{
																																pos:        position{line: 194, col: 37, offset: 7191},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 194, col: 41, offset: 7195,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 184, col: 67, offset: 6845},
																									expr: &litMatcher{
																										pos:        position{line: 184, col: 67, offset: 6845},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 184, col: 72, offset: 6850},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonOrderedListItem177,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 186, col: 5, offset: 6934},
																						run: (*parser).callonOrderedListItem179,
																						expr: &seqExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 186, col: 5, offset: 6934},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 190, col: 17, offset: 7059},
																										run: (*parser).callonOrderedListItem182,
																										expr: &seqExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													expr: &actionExpr{
																														pos: position{line: 214, col: 14, offset: 7892},
																														run: (*parser).callonOrderedListItem185,
																														expr: &litMatcher{
																															pos:        position{line: 214, col: 14, offset: 7892},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 28, offset: 7070},
																													expr: &actionExpr{
																														pos: position{line: 230, col: 14, offset: 8489},
																														run: (*parser).callonOrderedListItem188,
																														expr: &litMatcher{
																															pos:        position{line: 230, col: 14, offset: 8489},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 190, col: 39, offset: 7081},
																													expr: &actionExpr{
																														pos: position{line: 1040, col: 16, offset: 44408},
																														run: (*parser).callonOrderedListItem191,
																														expr: &litMatcher{
																															pos:        position{line: 1040, col: 16, offset: 44408},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 190, col: 52, offset: 7094},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 190, col: 56, offset: 7098},
																														expr: &seqExpr{
																															pos: position{line: 190, col: 57, offset: 7099},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 58, offset: 7100},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 62, offset: 7104},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 63, offset: 7105},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 67, offset: 7109},
																																	expr: &litMatcher{
																																		pos:        position{line: 190, col: 68, offset: 7110},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 190, col: 72, offset: 7114,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 186, col: 24, offset: 6953},
																									expr: &litMatcher{
																										pos:        position{line: 186, col: 24, offset: 6953},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 186, col: 29, offset: 6958},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonOrderedListItem208,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 180, col: 59, offset: 6707},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 137, col: 115, offset: 5292},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonOrderedListItem214,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 411, col: 51, offset: 14947},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 415, col: 26, offset: 15179},
								run: (*parser).callonOrderedListItem222,
								expr: &seqExpr{
									pos: position{line: 415, col: 26, offset: 15179},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 415, col: 26, offset: 15179},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonOrderedListItem227,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 415, col: 30, offset: 15183},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 417, col: 5, offset: 15238},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 417, col: 5, offset: 15238},
														run: (*parser).callonOrderedListItem231,
														expr: &litMatcher{
															pos:        position{line: 417, col: 5, offset: 15238},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 419, col: 9, offset: 15351},
														run: (*parser).callonOrderedListItem233,
														expr: &litMatcher{
															pos:        position{line: 419, col: 9, offset: 15351},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 421, col: 9, offset: 15462},
														run: (*parser).callonOrderedListItem235,
														expr: &litMatcher{
															pos:        position{line: 421, col: 9, offset: 15462},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 423, col: 9, offset: 15571},
														run: (*parser).callonOrderedListItem237,
														expr: &litMatcher{
															pos:        position{line: 423, col: 9, offset: 15571},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 425, col: 9, offset: 15678},
														run: (*parser).callonOrderedListItem239,
														expr: &litMatcher{
															pos:        position{line: 425, col: 9, offset: 15678},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 428, col: 9, offset: 15805},
														run: (*parser).callonOrderedListItem241,
														expr: &seqExpr{
															pos: position{line: 428, col: 9, offset: 15805},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 428, col: 9, offset: 15805},
																	expr: &charClassMatcher{
																		pos:        position{line: 428, col: 10, offset: 15806},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 428, col: 18, offset: 15814},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 430, col: 9, offset: 15917},
														run: (*parser).callonOrderedListItem246,
														expr: &seqExpr{
															pos: position{line: 430, col: 9, offset: 15917},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 430, col: 10, offset: 15918},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 430, col: 17, offset: 15925},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 432, col: 9, offset: 16031},
														run: (*parser).callonOrderedListItem250,
														expr: &seqExpr{
															pos: position{line: 432, col: 9, offset: 16031},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 432, col: 10, offset: 16032},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 432, col: 17, offset: 16039},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 434, col: 9, offset: 16145},
														run: (*parser).callonOrderedListItem254,
														expr: &seqExpr{
															pos: position{line: 434, col: 9, offset: 16145},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 434, col: 9, offset: 16145},
																	expr: &charClassMatcher{
																		pos:        position{line: 434, col: 10, offset: 16146},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 434, col: 18, offset: 16154},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 436, col: 9, offset: 16260},
														run: (*parser).callonOrderedListItem259,
														expr: &seqExpr{
															pos: position{line: 436, col: 9, offset: 16260},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 436, col: 9, offset: 16260},
																	expr: &charClassMatcher{
																		pos:        position{line: 436, col: 10, offset: 16261},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 436, col: 18, offset: 16269},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 438, col: 8, offset: 16374},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonOrderedListItem267,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 411, col: 82, offset: 14978},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 411, col: 91, offset: 14987},
								name: "OrderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 411, col: 115, offset: 15011},
							expr: &actionExpr{
								pos: position{line: 1061, col: 14, offset: 44948},
								run: (*parser).callonOrderedListItem272,
								expr: &seqExpr{
									pos: position{line: 1061, col: 14, offset: 44948},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1061, col: 14, offset: 44948},
											expr: &notExpr{
												pos: position{line: 1100, col: 8, offset: 45855},
												expr: &anyMatcher{
													line: 1100, col: 9, offset: 45856,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1061, col: 19, offset: 44953},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonOrderedListItem280,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItemContent",
			pos:  position{line: 442, col: 1, offset: 16414},
			expr: &actionExpr{
				pos: position{line: 442, col: 27, offset: 16440},
				run: (*parser).callonOrderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 442, col: 27, offset: 16440},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 442, col: 37, offset: 16450},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 442, col: 37, offset: 16450},
								expr: &ruleRefExpr{
									pos:  position{line: 442, col: 37, offset: 16450},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 442, col: 52, offset: 16465},
								expr: &ruleRefExpr{
									pos:  position{line: 442, col: 52, offset: 16465},
									name: "ContinuedDocumentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItem",
			pos:  position{line: 449, col: 1, offset: 16794},
			expr: &actionExpr{
				pos: position{line: 449, col: 22, offset: 16815},
				run: (*parser).callonUnorderedListItem1,
				expr: &seqExpr{
					pos: position{line: 449, col: 22, offset: 16815},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 449, col: 22, offset: 16815},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 454, col: 5, offset: 17034},
								run: (*parser).callonUnorderedListItem4,
								expr: &seqExpr{
									pos: position{line: 454, col: 5, offset: 17034},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 454, col: 5, offset: 17034},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonUnorderedListItem9,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 454, col: 9, offset: 17038},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 455, col: 9, offset: 17055},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 455, col: 9, offset: 17055},
														run: (*parser).callonUnorderedListItem13,
														expr: &litMatcher{
															pos:        position{line: 455, col: 9, offset: 17055},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 458, col: 11, offset: 17224},
														run: (*parser).callonUnorderedListItem15,
														expr: &litMatcher{
															pos:        position{line: 458, col: 11, offset: 17224},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 461, col: 11, offset: 17393},
														run: (*parser).callonUnorderedListItem17,
														expr: &litMatcher{
															pos:        position{line: 461, col: 11, offset: 17393},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 464, col: 11, offset: 17562},
														run: (*parser).callonUnorderedListItem19,
														expr: &litMatcher{
															pos:        position{line: 464, col: 11, offset: 17562},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 467, col: 11, offset: 17728},
														run: (*parser).callonUnorderedListItem21,
														expr: &litMatcher{
															pos:        position{line: 467, col: 11, offset: 17728},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 470, col: 11, offset: 17892},
														run: (*parser).callonUnorderedListItem23,
														expr: &litMatcher{
															pos:        position{line: 470, col: 11, offset: 17892},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 472, col: 12, offset: 18039},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonUnorderedListItem28,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 449, col: 55, offset: 16848},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 449, col: 64, offset: 16857},
								name: "UnorderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 449, col: 90, offset: 16883},
							expr: &actionExpr{
								pos: position{line: 1061, col: 14, offset: 44948},
								run: (*parser).callonUnorderedListItem33,
								expr: &seqExpr{
									pos: position{line: 1061, col: 14, offset: 44948},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1061, col: 14, offset: 44948},
											expr: &notExpr{
												pos: position{line: 1100, col: 8, offset: 45855},
												expr: &anyMatcher{
													line: 1100, col: 9, offset: 45856,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1061, col: 19, offset: 44953},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonUnorderedListItem41,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItemContent",
			pos:  position{line: 476, col: 1, offset: 18088},
			expr: &actionExpr{
				pos: position{line: 476, col: 29, offset: 18116},
				run: (*parser).callonUnorderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 476, col: 29, offset: 18116},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 476, col: 39, offset: 18126},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 476, col: 39, offset: 18126},
								expr: &ruleRefExpr{
									pos:  position{line: 476, col: 39, offset: 18126},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 476, col: 54, offset: 18141},
								expr: &ruleRefExpr{
									pos:  position{line: 476, col: 54, offset: 18141},
									name: "ContinuedDocumentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItem",
			pos:  position{line: 483, col: 1, offset: 18468},
			expr: &actionExpr{
				pos: position{line: 483, col: 20, offset: 18487},
				run: (*parser).callonLabeledListItem1,
				expr: &seqExpr{
					pos: position{line: 483, col: 20, offset: 18487},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 483, col: 20, offset: 18487},
							label: "term",
							expr: &actionExpr{
								pos: position{line: 487, col: 24, offset: 18729},
								run: (*parser).callonLabeledListItem4,
								expr: &zeroOrMoreExpr{
									pos: position{line: 487, col: 24, offset: 18729},
									expr: &seqExpr{
										pos: position{line: 487, col: 25, offset: 18730},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 487, col: 25, offset: 18730},
												expr: &choiceExpr{
													pos: position{line: 1098, col: 12, offset: 45826},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 487, col: 34, offset: 18739},
												expr: &litMatcher{
													pos:        position{line: 487, col: 35, offset: 18740},
													val:        "::",
													ignoreCase: false,
												},
											},
											&anyMatcher{
												line: 487, col: 40, offset: 18745,
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 483, col: 47, offset: 18514},
							label: "separator",
							expr: &actionExpr{
								pos: position{line: 492, col: 29, offset: 18891},
								run: (*parser).callonLabeledListItem15,
								expr: &choiceExpr{
									pos: position{line: 492, col: 30, offset: 18892},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 492, col: 30, offset: 18892},
											val:        "::::",
											ignoreCase: false,
										},
										&litMatcher{
											pos:        position{line: 492, col: 39, offset: 18901},
											val:        ":::",
											ignoreCase: false,
										},
										&litMatcher{
											pos:        position{line: 492, col: 47, offset: 18909},
											val:        "::",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 483, col: 84, offset: 18551},
							label: "description",
							expr: &ruleRefExpr{
								pos:  position{line: 483, col: 97, offset: 18564},
								name: "LabeledListItemDescription",
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItemDescription",
			pos:  position{line: 497, col: 1, offset: 18957},
			expr: &choiceExpr{
				pos: position{line: 498, col: 5, offset: 18992},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 498, col: 5, offset: 18992},
						run: (*parser).callonLabeledListItemDescription2,
						expr: &seqExpr{
							pos: position{line: 498, col: 5, offset: 18992},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 498, col: 5, offset: 18992},
									expr: &choiceExpr{
										pos: position{line: 498, col: 6, offset: 18993},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonLabeledListItemDescription7,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
											&litMatcher{
												pos:        position{line: 1098, col: 12, offset: 45826},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1098, col: 21, offset: 45835},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 498, col: 21, offset: 19008},
									label: "elements",
									expr: &zeroOrMoreExpr{
										pos: position{line: 498, col: 30, offset: 19017},
										expr: &choiceExpr{
											pos: position{line: 498, col: 31, offset: 19018},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 498, col: 31, offset: 19018},
													name: "ListParagraph",
												},
												&ruleRefExpr{
													pos:  position{line: 498, col: 47, offset: 19034},
													name: "ContinuedDocumentElement",
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 500, col: 9, offset: 19248},
						run: (*parser).callonLabeledListItemDescription16,
						expr: &seqExpr{
							pos: position{line: 500, col: 9, offset: 19248},
							exprs: []interface{}{
								&zeroOrMoreExpr{
									pos: position{line: 500, col: 9, offset: 19248},
									expr: &choiceExpr{
										pos: position{line: 1094, col: 7, offset: 45764},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonLabeledListItemDescription21,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1102, col: 8, offset: 45866},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1098, col: 12, offset: 45826},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1098, col: 21, offset: 45835},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1100, col: 8, offset: 45855},
											expr: &anyMatcher{
												line: 1100, col: 9, offset: 45856,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Paragraph",
			pos:  position{line: 525, col: 1, offset: 19969},
			expr: &choiceExpr{
				pos: position{line: 527, col: 5, offset: 20016},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 527, col: 5, offset: 20016},
						run: (*parser).callonParagraph2,
						expr: &seqExpr{
							pos: position{line: 527, col: 5, offset: 20016},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 527, col: 5, offset: 20016},
									expr: &seqExpr{
										pos: position{line: 527, col: 7, offset: 20018},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 527, col: 7, offset: 20018},
												expr: &litMatcher{
													pos:        position{line: 527, col: 7, offset: 20018},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 527, col: 12, offset: 20023},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonParagraph11,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 527, col: 16, offset: 20027},
												expr: &choiceExpr{
													pos: position{line: 1098, col: 12, offset: 45826},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 527, col: 26, offset: 20037},
									label: "t",
									expr: &choiceExpr{
										pos: position{line: 508, col: 19, offset: 19492},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 508, col: 19, offset: 19492},
												run: (*parser).callonParagraph19,
												expr: &litMatcher{
													pos:        position{line: 508, col: 19, offset: 19492},
													val:        "TIP",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 510, col: 5, offset: 19530},
												run: (*parser).callonParagraph21,
												expr: &litMatcher{
													pos:        position{line: 510, col: 5, offset: 19530},
													val:        "NOTE",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 512, col: 5, offset: 19570},
												run: (*parser).callonParagraph23,
												expr: &litMatcher{
													pos:        position{line: 512, col: 5, offset: 19570},
													val:        "IMPORTANT",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 514, col: 5, offset: 19620},
												run: (*parser).callonParagraph25,
												expr: &litMatcher{
													pos:        position{line: 514, col: 5, offset: 19620},
													val:        "WARNING",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 516, col: 5, offset: 19666},
												run: (*parser).callonParagraph27,
												expr: &litMatcher{
													pos:        position{line: 516, col: 5, offset: 19666},
													val:        "CAUTION",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 527, col: 45, offset: 20056},
									val:        ": ",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 527, col: 50, offset: 20061},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 527, col: 56, offset: 20067},
										expr: &ruleRefExpr{
											pos:  position{line: 527, col: 57, offset: 20068},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 531, col: 5, offset: 20248},
						run: (*parser).callonParagraph33,
						expr: &seqExpr{
							pos: position{line: 531, col: 5, offset: 20248},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 531, col: 5, offset: 20248},
									expr: &seqExpr{
										pos: position{line: 531, col: 7, offset: 20250},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 531, col: 7, offset: 20250},
												expr: &litMatcher{
													pos:        position{line: 531, col: 7, offset: 20250},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 531, col: 12, offset: 20255},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonParagraph42,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 531, col: 16, offset: 20259},
												expr: &choiceExpr{
													pos: position{line: 1098, col: 12, offset: 45826},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 531, col: 26, offset: 20269},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 531, col: 32, offset: 20275},
										expr: &ruleRefExpr{
											pos:  position{line: 531, col: 33, offset: 20276},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "MasqueradeParagraph",
			pos:  position{line: 534, col: 1, offset: 20360},
			expr: &choiceExpr{
				pos: position{line: 535, col: 5, offset: 20412},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 535, col: 5, offset: 20412},
						run: (*parser).callonMasqueradeParagraph2,
						expr: &seqExpr{
							pos: position{line: 535, col: 5, offset: 20412},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 535, col: 5, offset: 20412},
									label: "attributes",
									expr: &seqExpr{
										pos: position{line: 535, col: 17, offset: 20424},
										exprs: []interface{}{
											&choiceExpr{
												pos: position{line: 142, col: 24, offset: 5498},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 202, col: 20, offset: 7358},
														run: (*parser).callonMasqueradeParagraph7,
														expr: &seqExpr{
															pos: position{line: 202, col: 20, offset: 7358},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 202, col: 20, offset: 7358},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 202, col: 24, offset: 7362},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 214, col: 14, offset: 7892},
																		run: (*parser).callonMasqueradeParagraph11,
																		expr: &litMatcher{
																			pos:        position{line: 214, col: 14, offset: 7892},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 202, col: 41, offset: 7379},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph16,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 202, col: 45, offset: 7383},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 202, col: 49, offset: 7387},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 234, col: 16, offset: 8548},
																		run: (*parser).callonMasqueradeParagraph20,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 234, col: 16, offset: 8548},
																			expr: &seqExpr{
																				pos: position{line: 234, col: 17, offset: 8549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 234, col: 17, offset: 8549},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 22, offset: 8554},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 23, offset: 8555},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 27, offset: 8559},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 28, offset: 8560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 234, col: 32, offset: 8564,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 202, col: 70, offset: 7408},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 202, col: 74, offset: 7412},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 238, col: 15, offset: 8618},
																		run: (*parser).callonMasqueradeParagraph36,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 238, col: 15, offset: 8618},
																			expr: &seqExpr{
																				pos: position{line: 238, col: 16, offset: 8619},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 238, col: 16, offset: 8619},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 238, col: 21, offset: 8624},
																						expr: &litMatcher{
																							pos:        position{line: 238, col: 22, offset: 8625},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 238, col: 26, offset: 8629},
																						expr: &litMatcher{
																							pos:        position{line: 238, col: 27, offset: 8630},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 238, col: 31, offset: 8634,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 202, col: 93, offset: 7431},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 202, col: 97, offset: 7435},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph54,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 206, col: 5, offset: 7582},
														run: (*parser).callonMasqueradeParagraph61,
														expr: &seqExpr{
															pos: position{line: 206, col: 5, offset: 7582},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 206, col: 5, offset: 7582},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 206, col: 9, offset: 7586},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 214, col: 14, offset: 7892},
																		run: (*parser).callonMasqueradeParagraph65,
																		expr: &litMatcher{
																			pos:        position{line: 214, col: 14, offset: 7892},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 206, col: 26, offset: 7603},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph70,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 206, col: 30, offset: 7607},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 206, col: 34, offset: 7611},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 234, col: 16, offset: 8548},
																		run: (*parser).callonMasqueradeParagraph74,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 234, col: 16, offset: 8548},
																			expr: &seqExpr{
																				pos: position{line: 234, col: 17, offset: 8549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 234, col: 17, offset: 8549},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 22, offset: 8554},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 23, offset: 8555},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 27, offset: 8559},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 28, offset: 8560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 234, col: 32, offset: 8564,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 206, col: 55, offset: 7632},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 206, col: 59, offset: 7636},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph92,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 210, col: 5, offset: 7771},
														run: (*parser).callonMasqueradeParagraph99,
														expr: &seqExpr{
															pos: position{line: 210, col: 5, offset: 7771},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 210, col: 5, offset: 7771},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 210, col: 9, offset: 7775},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 214, col: 14, offset: 7892},
																		run: (*parser).callonMasqueradeParagraph103,
																		expr: &litMatcher{
																			pos:        position{line: 214, col: 14, offset: 7892},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 210, col: 26, offset: 7792},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph108,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 210, col: 30, offset: 7796},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 210, col: 34, offset: 7800},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph114,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 218, col: 20, offset: 7955},
														run: (*parser).callonMasqueradeParagraph121,
														expr: &seqExpr{
															pos: position{line: 218, col: 20, offset: 7955},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 218, col: 20, offset: 7955},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 218, col: 24, offset: 7959},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 230, col: 14, offset: 8489},
																		run: (*parser).callonMasqueradeParagraph125,
																		expr: &litMatcher{
																			pos:        position{line: 230, col: 14, offset: 8489},
																			val:        "verse",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 218, col: 41, offset: 7976},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph130,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 218, col: 45, offset: 7980},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 218, col: 49, offset: 7984},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 234, col: 16, offset: 8548},
																		run: (*parser).callonMasqueradeParagraph134,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 234, col: 16, offset: 8548},
																			expr: &seqExpr{
																				pos: position{line: 234, col: 17, offset: 8549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 234, col: 17, offset: 8549},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 22, offset: 8554},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 23, offset: 8555},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 27, offset: 8559},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 28, offset: 8560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 234, col: 32, offset: 8564,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 218, col: 70, offset: 8005},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 218, col: 74, offset: 8009},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 238, col: 15, offset: 8618},
																		run: (*parser).callonMasqueradeParagraph150,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 238, col: 15, offset: 8618},
																			expr: &seqExpr{
																				pos: position{line: 238, col: 16, offset: 8619},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 238, col: 16, offset: 8619},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 238, col: 21, offset: 8624},
																						expr: &litMatcher{
																							pos:        position{line: 238, col: 22, offset: 8625},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 238, col: 26, offset: 8629},
																						expr: &litMatcher{
																							pos:        position{line: 238, col: 27, offset: 8630},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 238, col: 31, offset: 8634,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 218, col: 93, offset: 8028},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 218, col: 97, offset: 8032},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph168,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 222, col: 5, offset: 8179},
														run: (*parser).callonMasqueradeParagraph175,
														expr: &seqExpr{
															pos: position{line: 222, col: 5, offset: 8179},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 222, col: 5, offset: 8179},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 222, col: 9, offset: 8183},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 230, col: 14, offset: 8489},
																		run: (*parser).callonMasqueradeParagraph179,
																		expr: &litMatcher{
																			pos:        position{line: 230, col: 14, offset: 8489},
																			val:        "verse",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 222, col: 26, offset: 8200},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph184,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 222, col: 30, offset: 8204},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 222, col: 34, offset: 8208},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 234, col: 16, offset: 8548},
																		run: (*parser).callonMasqueradeParagraph188,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 234, col: 16, offset: 8548},
																			expr: &seqExpr{
																				pos: position{line: 234, col: 17, offset: 8549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 234, col: 17, offset: 8549},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 22, offset: 8554},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 23, offset: 8555},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 27, offset: 8559},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 28, offset: 8560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 234, col: 32, offset: 8564,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 222, col: 55, offset: 8229},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 222, col: 59, offset: 8233},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph206,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 226, col: 5, offset: 8368},
														run: (*parser).callonMasqueradeParagraph213,
														expr: &seqExpr{
															pos: position{line: 226, col: 5, offset: 8368},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 226, col: 5, offset: 8368},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 226, col: 9, offset: 8372},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 230, col: 14, offset: 8489},
																		run: (*parser).callonMasqueradeParagraph217,
																		expr: &litMatcher{
																			pos:        position{line: 230, col: 14, offset: 8489},
																			val:        "verse",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 226, col: 26, offset: 8389},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph222,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 226, col: 30, offset: 8393},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 226, col: 34, offset: 8397},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph228,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 535, col: 37, offset: 20444},
												expr: &actionExpr{
													pos: position{line: 136, col: 21, offset: 5092},
													run: (*parser).callonMasqueradeParagraph236,
													expr: &seqExpr{
														pos: position{line: 136, col: 21, offset: 5092},
														exprs: []interface{}{
															&andExpr{
																pos: position{line: 136, col: 21, offset: 5092},
																expr: &charClassMatcher{
																	pos:        position{line: 136, col: 23, offset: 5094},
																	val:        "[[.#]",
																	chars:      []rune{'[', '.', '#'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
															&labeledExpr{
																pos:   position{line: 137, col: 5, offset: 5182},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 137, col: 11, offset: 5188},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 144, col: 14, offset: 5546},
																			run: (*parser).callonMasqueradeParagraph242,
																			expr: &seqExpr{
																				pos: position{line: 144, col: 14, offset: 5546},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 144, col: 14, offset: 5546},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 144, col: 19, offset: 5551},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 1080, col: 7, offset: 45482},
																							run: (*parser).callonMasqueradeParagraph246,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1080, col: 7, offset: 45482},
																								expr: &seqExpr{
																									pos: position{line: 1080, col: 8, offset: 45483},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1080, col: 8, offset: 45483},
																											expr: &choiceExpr{
																												pos: position{line: 1098, col: 12, offset: 45826},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 17, offset: 45492},
																											expr: &choiceExpr{
																												pos: position{line: 1094, col: 7, offset: 45764},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1094, col: 7, offset: 45764},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1094, col: 13, offset: 45770},
																														run: (*parser).callonMasqueradeParagraph256,
																														expr: &litMatcher{
																															pos:        position{line: 1094, col: 13, offset: 45770},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 21, offset: 45496},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 22, offset: 45497},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 26, offset: 45501},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 27, offset: 45502},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 31, offset: 45506},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 32, offset: 45507},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 37, offset: 45512},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 38, offset: 45513},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 43, offset: 45518},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 44, offset: 45519},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 1080, col: 48, offset: 45523,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 144, col: 27, offset: 5559},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 146, col: 5, offset: 5613},
																			run: (*parser).callonMasqueradeParagraph270,
																			expr: &seqExpr{
																				pos: position{line: 146, col: 5, offset: 5613},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 146, col: 5, offset: 5613},
																						val:        "[#",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 146, col: 10, offset: 5618},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 1080, col: 7, offset: 45482},
																							run: (*parser).callonMasqueradeParagraph274,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1080, col: 7, offset: 45482},
																								expr: &seqExpr{
																									pos: position{line: 1080, col: 8, offset: 45483},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1080, col: 8, offset: 45483},
																											expr: &choiceExpr{
																												pos: position{line: 1098, col: 12, offset: 45826},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 17, offset: 45492},
																											expr: &choiceExpr{
																												pos: position{line: 1094, col: 7, offset: 45764},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1094, col: 7, offset: 45764},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1094, col: 13, offset: 45770},
																														run: (*parser).callonMasqueradeParagraph284,
																														expr: &litMatcher{
																															pos:        position{line: 1094, col: 13, offset: 45770},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 21, offset: 45496},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 22, offset: 45497},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 26, offset: 45501},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 27, offset: 45502},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 31, offset: 45506},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 32, offset: 45507},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 37, offset: 45512},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 38, offset: 45513},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 43, offset: 45518},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 44, offset: 45519},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 1080, col: 48, offset: 45523,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 146, col: 18, offset: 5626},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 156, col: 17, offset: 5929},
																			run: (*parser).callonMasqueradeParagraph298,
																			expr: &seqExpr{
																				pos: position{line: 156, col: 17, offset: 5929},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 156, col: 17, offset: 5929},
																						val:        ".",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 156, col: 21, offset: 5933},
																						expr: &litMatcher{
																							pos:        position{line: 156, col: 22, offset: 5934},
																							val:        ".",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 156, col: 26, offset: 5938},
																						expr: &choiceExpr{
																							pos: position{line: 1094, col: 7, offset: 45764},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1094, col: 7, offset: 45764},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1094, col: 13, offset: 45770},
																									run: (*parser).callonMasqueradeParagraph306,
																									expr: &litMatcher{
																										pos:        position{line: 1094, col: 13, offset: 45770},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 156, col: 30, offset: 5942},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 160, col: 24, offset: 6047},
																							run: (*parser).callonMasqueradeParagraph309,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 160, col: 24, offset: 6047},
																								expr: &seqExpr{
																									pos: position{line: 160, col: 25, offset: 6048},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 160, col: 25, offset: 6048},
																											expr: &choiceExpr{
																												pos: position{line: 1098, col: 12, offset: 45826},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 160, col: 34, offset: 6057,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 166, col: 16, offset: 6206},
																			run: (*parser).callonMasqueradeParagraph317,
																			expr: &seqExpr{
																				pos: position{line: 166, col: 16, offset: 6206},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 166, col: 16, offset: 6206},
																						val:        "[.",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 166, col: 21, offset: 6211},
																						expr: &choiceExpr{
																							pos: position{line: 1094, col: 7, offset: 45764},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1094, col: 7, offset: 45764},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1094, col: 13, offset: 45770},
																									run: (*parser).callonMasqueradeParagraph323,
																									expr: &litMatcher{
																										pos:        position{line: 1094, col: 13, offset: 45770},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 166, col: 25, offset: 6215},
																						label: "role",
																						expr: &actionExpr{
																							pos: position{line: 170, col: 23, offset: 6319},
																							run: (*parser).callonMasqueradeParagraph326,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 170, col: 23, offset: 6319},
																								expr: &seqExpr{
																									pos: position{line: 170, col: 24, offset: 6320},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 170, col: 24, offset: 6320},
																											expr: &choiceExpr{
																												pos: position{line: 1098, col: 12, offset: 45826},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 170, col: 33, offset: 6329},
																											expr: &litMatcher{
																												pos:        position{line: 170, col: 34, offset: 6330},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 170, col: 38, offset: 6334,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 166, col: 51, offset: 6241},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 175, col: 30, offset: 6483},
																			run: (*parser).callonMasqueradeParagraph337,
																			expr: &seqExpr{
																				pos: position{line: 175, col: 30, offset: 6483},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 175, col: 30, offset: 6483},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 175, col: 34, offset: 6487},
																						label: "k",
																						expr: &choiceExpr{
																							pos: position{line: 508, col: 19, offset: 19492},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 508, col: 19, offset: 19492},
																									run: (*parser).callonMasqueradeParagraph342,
																									expr: &litMatcher{
																										pos:        position{line: 508, col: 19, offset: 19492},
																										val:        "TIP",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 510, col: 5, offset: 19530},
																									run: (*parser).callonMasqueradeParagraph344,
																									expr: &litMatcher{
																										pos:        position{line: 510, col: 5, offset: 19530},
																										val:        "NOTE",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 512, col: 5, offset: 19570},
																									run: (*parser).callonMasqueradeParagraph346,
																									expr: &litMatcher{
																										pos:        position{line: 512, col: 5, offset: 19570},
																										val:        "IMPORTANT",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 514, col: 5, offset: 19620},
																									run: (*parser).callonMasqueradeParagraph348,
																									expr: &litMatcher{
																										pos:        position{line: 514, col: 5, offset: 19620},
																										val:        "WARNING",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 516, col: 5, offset: 19666},
																									run: (*parser).callonMasqueradeParagraph350,
																									expr: &litMatcher{
																										pos:        position{line: 516, col: 5, offset: 19666},
																										val:        "CAUTION",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 175, col: 53, offset: 6506},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 198, col: 21, offset: 7255},
																			run: (*parser).callonMasqueradeParagraph353,
																			expr: &litMatcher{
																				pos:        position{line: 198, col: 21, offset: 7255},
																				val:        "[horizontal]",
																				ignoreCase: false,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 180, col: 19, offset: 6667},
																			run: (*parser).callonMasqueradeParagraph355,
																			expr: &seqExpr{
																				pos: position{line: 180, col: 19, offset: 6667},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 180, col: 19, offset: 6667},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 180, col: 23, offset: 6671},
																						expr: &choiceExpr{
																							pos: position{line: 1094, col: 7, offset: 45764},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1094, col: 7, offset: 45764},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1094, col: 13, offset: 45770},
																									run: (*parser).callonMasqueradeParagraph361,
																									expr: &litMatcher{
																										pos:        position{line: 1094, col: 13, offset: 45770},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 180, col: 27, offset: 6675},
																						label: "attributes",
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 180, col: 38, offset: 6686},
																							expr: &choiceExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 184, col: 21, offset: 6799},
																										run: (*parser).callonMasqueradeParagraph366,
																										expr: &seqExpr{
																											pos: position{line: 184, col: 21, offset: 6799},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 184, col: 21, offset: 6799},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														run: (*parser).callonMasqueradeParagraph369,
																														expr: &seqExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 17, offset: 7059},
																																	expr: &actionExpr{
																																		pos: position{line: 214, col: 14, offset: 7892},
																																		run: (*parser).callonMasqueradeParagraph372,
																																		expr: &litMatcher{
																																			pos:        position{line: 214, col: 14, offset: 7892},
																																			val:        "quote",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 28, offset: 7070},
																																	expr: &actionExpr{
																																		pos: position{line: 230, col: 14, offset: 8489},
																																		run: (*parser).callonMasqueradeParagraph375,
																																		expr: &litMatcher{
																																			pos:        position{line: 230, col: 14, offset: 8489},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 39, offset: 7081},
																																	expr: &actionExpr{
																																		pos: position{line: 1040, col: 16, offset: 44408},
																																		run: (*parser).callonMasqueradeParagraph378,
																																		expr: &litMatcher{
																																			pos:        position{line: 1040, col: 16, offset: 44408},
																																			val:        "literal",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 190, col: 52, offset: 7094},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 190, col: 56, offset: 7098},
																																		expr: &seqExpr{
																																			pos: position{line: 190, col: 57, offset: 7099},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 190, col: 57, offset: 7099},
																																					expr: &litMatcher{
																																						pos:        position{line: 190, col: 58, offset: 7100},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 190, col: 62, offset: 7104},
																																					expr: &litMatcher{
																																						pos:        position{line: 190, col: 63, offset: 7105},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 190, col: 67, offset: 7109},
																																					expr: &litMatcher{
																																						pos:        position{line: 190, col: 68, offset: 7110},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 190, col: 72, offset: 7114,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&litMatcher{
																													pos:        position{line: 184, col: 40, offset: 6818},
																													val:        "=",
																													ignoreCase: false,
																												},
																												&labeledExpr{
																													pos:   position{line: 184, col: 44, offset: 6822},
																													label: "value",
																													expr: &actionExpr{
																														pos: position{line: 194, col: 19, offset: 7173},
																														run: (*parser).callonMasqueradeParagraph392,
																														expr: &labeledExpr{
																															pos:   position{line: 194, col: 19, offset: 7173},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 194, col: 25, offset: 7179},
																																expr: &seqExpr{
																																	pos: position{line: 194, col: 26, offset: 7180},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 194, col: 26, offset: 7180},
																																			expr: &litMatcher{
																																				pos:        position{line: 194, col: 27, offset: 7181},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 194, col: 31, offset: 7185},
																																			expr: &litMatcher{
																																				pos:        position{line: 194, col: 32, offset: 7186},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 194, col: 36, offset: 7190},
																																			expr: &litMatcher{
																																				pos:        position{line: 194, col: 37, offset: 7191},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 194, col: 41, offset: 7195,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 184, col: 67, offset: 6845},
																													expr: &litMatcher{
																														pos:        position{line: 184, col: 67, offset: 6845},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 184, col: 72, offset: 6850},
																													expr: &choiceExpr{
																														pos: position{line: 1094, col: 7, offset: 45764},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1094, col: 7, offset: 45764},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1094, col: 13, offset: 45770},
																																run: (*parser).callonMasqueradeParagraph408,
																																expr: &litMatcher{
																																	pos:        position{line: 1094, col: 13, offset: 45770},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 186, col: 5, offset: 6934},
																										run: (*parser).callonMasqueradeParagraph410,
																										expr: &seqExpr{
																											pos: position{line: 186, col: 5, offset: 6934},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 186, col: 5, offset: 6934},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														run: (*parser).callonMasqueradeParagraph413,
																														expr: &seqExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 17, offset: 7059},
																																	expr: &actionExpr{
																																		pos: position{line: 214, col: 14, offset: 7892},
																																		run: (*parser).callonMasqueradeParagraph416,
																																		expr: &litMatcher{
																																			pos:        position{line: 214, col: 14, offset: 7892},
																																			val:        "quote",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 28, offset: 7070},
																																	expr: &actionExpr{
																																		pos: position{line: 230, col: 14, offset: 8489},
																																		run: (*parser).callonMasqueradeParagraph419,
																																		expr: &litMatcher{
																																			pos:        position{line: 230, col: 14, offset: 8489},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 39, offset: 7081},
																																	expr: &actionExpr{
																																		pos: position{line: 1040, col: 16, offset: 44408},
																																		run: (*parser).callonMasqueradeParagraph422,
																																		expr: &litMatcher{
																																			pos:        position{line: 1040, col: 16, offset: 44408},
																																			val:        "literal",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 190, col: 52, offset: 7094},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 190, col: 56, offset: 7098},
																																		expr: &seqExpr{
																																			pos: position{line: 190, col: 57, offset: 7099},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 190, col: 57, offset: 7099},
																																					expr: &litMatcher{
																																						pos:        position{line: 190, col: 58, offset: 7100},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 190, col: 62, offset: 7104},
																																					expr: &litMatcher{
																																						pos:        position{line: 190, col: 63, offset: 7105},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 190, col: 67, offset: 7109},
																																					expr: &litMatcher{
																																						pos:        position{line: 190, col: 68, offset: 7110},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 190, col: 72, offset: 7114,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 186, col: 24, offset: 6953},
																													expr: &litMatcher{
																														pos:        position{line: 186, col: 24, offset: 6953},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 186, col: 29, offset: 6958},
																													expr: &choiceExpr{
																														pos: position{line: 1094, col: 7, offset: 45764},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1094, col: 7, offset: 45764},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1094, col: 13, offset: 45770},
																																run: (*parser).callonMasqueradeParagraph439,
																																expr: &litMatcher{
																																	pos:        position{line: 1094, col: 13, offset: 45770},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 180, col: 59, offset: 6707},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 137, col: 115, offset: 5292},
																expr: &choiceExpr{
																	pos: position{line: 1094, col: 7, offset: 45764},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1094, col: 7, offset: 45764},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1094, col: 13, offset: 45770},
																			run: (*parser).callonMasqueradeParagraph445,
																			expr: &litMatcher{
																				pos:        position{line: 1094, col: 13, offset: 45770},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 1102, col: 8, offset: 45866},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1098, col: 12, offset: 45826},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1098, col: 21, offset: 45835},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 1100, col: 8, offset: 45855},
																		expr: &anyMatcher{
																			line: 1100, col: 9, offset: 45856,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 535, col: 56, offset: 20463},
									expr: &seqExpr{
										pos: position{line: 535, col: 58, offset: 20465},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 535, col: 58, offset: 20465},
												expr: &litMatcher{
													pos:        position{line: 535, col: 58, offset: 20465},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 535, col: 63, offset: 20470},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonMasqueradeParagraph459,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 535, col: 67, offset: 20474},
												expr: &choiceExpr{
													pos: position{line: 1098, col: 12, offset: 45826},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 535, col: 77, offset: 20484},
									label: "t",
									expr: &choiceExpr{
										pos: position{line: 508, col: 19, offset: 19492},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 508, col: 19, offset: 19492},
												run: (*parser).callonMasqueradeParagraph467,
												expr: &litMatcher{
													pos:        position{line: 508, col: 19, offset: 19492},
													val:        "TIP",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 510, col: 5, offset: 19530},
												run: (*parser).callonMasqueradeParagraph469,
												expr: &litMatcher{
													pos:        position{line: 510, col: 5, offset: 19530},
													val:        "NOTE",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 512, col: 5, offset: 19570},
												run: (*parser).callonMasqueradeParagraph471,
												expr: &litMatcher{
													pos:        position{line: 512, col: 5, offset: 19570},
													val:        "IMPORTANT",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 514, col: 5, offset: 19620},
												run: (*parser).callonMasqueradeParagraph473,
												expr: &litMatcher{
													pos:        position{line: 514, col: 5, offset: 19620},
													val:        "WARNING",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 516, col: 5, offset: 19666},
												run: (*parser).callonMasqueradeParagraph475,
												expr: &litMatcher{
													pos:        position{line: 516, col: 5, offset: 19666},
													val:        "CAUTION",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 535, col: 96, offset: 20503},
									val:        ": ",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 535, col: 101, offset: 20508},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 535, col: 107, offset: 20514},
										expr: &ruleRefExpr{
											pos:  position{line: 535, col: 108, offset: 20515},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 539, col: 5, offset: 20726},
						run: (*parser).callonMasqueradeParagraph481,
						expr: &seqExpr{
							pos: position{line: 539, col: 5, offset: 20726},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 539, col: 5, offset: 20726},
									label: "attributes",
									expr: &seqExpr{
										pos: position{line: 539, col: 17, offset: 20738},
										exprs: []interface{}{
											&choiceExpr{
												pos: position{line: 142, col: 24, offset: 5498},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 202, col: 20, offset: 7358},
														run: (*parser).callonMasqueradeParagraph486,
														expr: &seqExpr{
															pos: position{line: 202, col: 20, offset: 7358},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 202, col: 20, offset: 7358},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 202, col: 24, offset: 7362},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 214, col: 14, offset: 7892},
																		run: (*parser).callonMasqueradeParagraph490,
																		expr: &litMatcher{
																			pos:        position{line: 214, col: 14, offset: 7892},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 202, col: 41, offset: 7379},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph495,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 202, col: 45, offset: 7383},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 202, col: 49, offset: 7387},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 234, col: 16, offset: 8548},
																		run: (*parser).callonMasqueradeParagraph499,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 234, col: 16, offset: 8548},
																			expr: &seqExpr{
																				pos: position{line: 234, col: 17, offset: 8549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 234, col: 17, offset: 8549},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 22, offset: 8554},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 23, offset: 8555},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 27, offset: 8559},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 28, offset: 8560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 234, col: 32, offset: 8564,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 202, col: 70, offset: 7408},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 202, col: 74, offset: 7412},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 238, col: 15, offset: 8618},
																		run: (*parser).callonMasqueradeParagraph515,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 238, col: 15, offset: 8618},
																			expr: &seqExpr{
																				pos: position{line: 238, col: 16, offset: 8619},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 238, col: 16, offset: 8619},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 238, col: 21, offset: 8624},
																						expr: &litMatcher{
																							pos:        position{line: 238, col: 22, offset: 8625},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 238, col: 26, offset: 8629},
																						expr: &litMatcher{
																							pos:        position{line: 238, col: 27, offset: 8630},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 238, col: 31, offset: 8634,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 202, col: 93, offset: 7431},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 202, col: 97, offset: 7435},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph533,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 206, col: 5, offset: 7582},
														run: (*parser).callonMasqueradeParagraph540,
														expr: &seqExpr{
															pos: position{line: 206, col: 5, offset: 7582},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 206, col: 5, offset: 7582},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 206, col: 9, offset: 7586},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 214, col: 14, offset: 7892},
																		run: (*parser).callonMasqueradeParagraph544,
																		expr: &litMatcher{
																			pos:        position{line: 214, col: 14, offset: 7892},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 206, col: 26, offset: 7603},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph549,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 206, col: 30, offset: 7607},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 206, col: 34, offset: 7611},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 234, col: 16, offset: 8548},
																		run: (*parser).callonMasqueradeParagraph553,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 234, col: 16, offset: 8548},
																			expr: &seqExpr{
																				pos: position{line: 234, col: 17, offset: 8549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 234, col: 17, offset: 8549},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 22, offset: 8554},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 23, offset: 8555},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 27, offset: 8559},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 28, offset: 8560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 234, col: 32, offset: 8564,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 206, col: 55, offset: 7632},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 206, col: 59, offset: 7636},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph571,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 210, col: 5, offset: 7771},
														run: (*parser).callonMasqueradeParagraph578,
														expr: &seqExpr{
															pos: position{line: 210, col: 5, offset: 7771},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 210, col: 5, offset: 7771},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 210, col: 9, offset: 7775},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 214, col: 14, offset: 7892},
																		run: (*parser).callonMasqueradeParagraph582,
																		expr: &litMatcher{
																			pos:        position{line: 214, col: 14, offset: 7892},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 210, col: 26, offset: 7792},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph587,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 210, col: 30, offset: 7796},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 210, col: 34, offset: 7800},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph593,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 218, col: 20, offset: 7955},
														run: (*parser).callonMasqueradeParagraph600,
														expr: &seqExpr{
															pos: position{line: 218, col: 20, offset: 7955},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 218, col: 20, offset: 7955},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 218, col: 24, offset: 7959},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 230, col: 14, offset: 8489},
																		run: (*parser).callonMasqueradeParagraph604,
																		expr: &litMatcher{
																			pos:        position{line: 230, col: 14, offset: 8489},
																			val:        "verse",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 218, col: 41, offset: 7976},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph609,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 218, col: 45, offset: 7980},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 218, col: 49, offset: 7984},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 234, col: 16, offset: 8548},
																		run: (*parser).callonMasqueradeParagraph613,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 234, col: 16, offset: 8548},
																			expr: &seqExpr{
																				pos: position{line: 234, col: 17, offset: 8549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 234, col: 17, offset: 8549},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 22, offset: 8554},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 23, offset: 8555},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 27, offset: 8559},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 28, offset: 8560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 234, col: 32, offset: 8564,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 218, col: 70, offset: 8005},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 218, col: 74, offset: 8009},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 238, col: 15, offset: 8618},
																		run: (*parser).callonMasqueradeParagraph629,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 238, col: 15, offset: 8618},
																			expr: &seqExpr{
																				pos: position{line: 238, col: 16, offset: 8619},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 238, col: 16, offset: 8619},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 238, col: 21, offset: 8624},
																						expr: &litMatcher{
																							pos:        position{line: 238, col: 22, offset: 8625},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 238, col: 26, offset: 8629},
																						expr: &litMatcher{
																							pos:        position{line: 238, col: 27, offset: 8630},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 238, col: 31, offset: 8634,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 218, col: 93, offset: 8028},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 218, col: 97, offset: 8032},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph647,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 222, col: 5, offset: 8179},
														run: (*parser).callonMasqueradeParagraph654,
														expr: &seqExpr{
															pos: position{line: 222, col: 5, offset: 8179},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 222, col: 5, offset: 8179},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 222, col: 9, offset: 8183},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 230, col: 14, offset: 8489},
																		run: (*parser).callonMasqueradeParagraph658,
																		expr: &litMatcher{
																			pos:        position{line: 230, col: 14, offset: 8489},
																			val:        "verse",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 222, col: 26, offset: 8200},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph663,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 222, col: 30, offset: 8204},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 222, col: 34, offset: 8208},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 234, col: 16, offset: 8548},
																		run: (*parser).callonMasqueradeParagraph667,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 234, col: 16, offset: 8548},
																			expr: &seqExpr{
																				pos: position{line: 234, col: 17, offset: 8549},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 234, col: 17, offset: 8549},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 22, offset: 8554},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 23, offset: 8555},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 234, col: 27, offset: 8559},
																						expr: &litMatcher{
																							pos:        position{line: 234, col: 28, offset: 8560},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 234, col: 32, offset: 8564,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 222, col: 55, offset: 8229},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 222, col: 59, offset: 8233},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph685,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 226, col: 5, offset: 8368},
														run: (*parser).callonMasqueradeParagraph692,
														expr: &seqExpr{
															pos: position{line: 226, col: 5, offset: 8368},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 226, col: 5, offset: 8368},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 226, col: 9, offset: 8372},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 230, col: 14, offset: 8489},
																		run: (*parser).callonMasqueradeParagraph696,
																		expr: &litMatcher{
																			pos:        position{line: 230, col: 14, offset: 8489},
																			val:        "verse",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 226, col: 26, offset: 8389},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph701,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 226, col: 30, offset: 8393},
																	val:        "]",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 226, col: 34, offset: 8397},
																	expr: &choiceExpr{
																		pos: position{line: 1094, col: 7, offset: 45764},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1094, col: 7, offset: 45764},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1094, col: 13, offset: 45770},
																				run: (*parser).callonMasqueradeParagraph707,
																				expr: &litMatcher{
																					pos:        position{line: 1094, col: 13, offset: 45770},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 539, col: 37, offset: 20758},
												expr: &actionExpr{
													pos: position{line: 136, col: 21, offset: 5092},
													run: (*parser).callonMasqueradeParagraph715,
													expr: &seqExpr{
														pos: position{line: 136, col: 21, offset: 5092},
														exprs: []interface{}{
															&andExpr{
																pos: position{line: 136, col: 21, offset: 5092},
																expr: &charClassMatcher{
																	pos:        position{line: 136, col: 23, offset: 5094},
																	val:        "[[.#]",
																	chars:      []rune{'[', '.', '#'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
															&labeledExpr{
																pos:   position{line: 137, col: 5, offset: 5182},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 137, col: 11, offset: 5188},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 144, col: 14, offset: 5546},
																			run: (*parser).callonMasqueradeParagraph721,
																			expr: &seqExpr{
																				pos: position{line: 144, col: 14, offset: 5546},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 144, col: 14, offset: 5546},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 144, col: 19, offset: 5551},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 1080, col: 7, offset: 45482},
																							run: (*parser).callonMasqueradeParagraph725,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1080, col: 7, offset: 45482},
																								expr: &seqExpr{
																									pos: position{line: 1080, col: 8, offset: 45483},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1080, col: 8, offset: 45483},
																											expr: &choiceExpr{
																												pos: position{line: 1098, col: 12, offset: 45826},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 17, offset: 45492},
																											expr: &choiceExpr{
																												pos: position{line: 1094, col: 7, offset: 45764},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1094, col: 7, offset: 45764},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1094, col: 13, offset: 45770},
																														run: (*parser).callonMasqueradeParagraph735,
																														expr: &litMatcher{
																															pos:        position{line: 1094, col: 13, offset: 45770},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 21, offset: 45496},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 22, offset: 45497},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 26, offset: 45501},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 27, offset: 45502},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 31, offset: 45506},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 32, offset: 45507},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 37, offset: 45512},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 38, offset: 45513},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 43, offset: 45518},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 44, offset: 45519},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 1080, col: 48, offset: 45523,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 144, col: 27, offset: 5559},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 146, col: 5, offset: 5613},
																			run: (*parser).callonMasqueradeParagraph749,
																			expr: &seqExpr{
																				pos: position{line: 146, col: 5, offset: 5613},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 146, col: 5, offset: 5613},
																						val:        "[#",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 146, col: 10, offset: 5618},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 1080, col: 7, offset: 45482},
																							run: (*parser).callonMasqueradeParagraph753,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1080, col: 7, offset: 45482},
																								expr: &seqExpr{
																									pos: position{line: 1080, col: 8, offset: 45483},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1080, col: 8, offset: 45483},
																											expr: &choiceExpr{
																												pos: position{line: 1098, col: 12, offset: 45826},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 17, offset: 45492},
																											expr: &choiceExpr{
																												pos: position{line: 1094, col: 7, offset: 45764},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1094, col: 7, offset: 45764},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1094, col: 13, offset: 45770},
																														run: (*parser).callonMasqueradeParagraph763,
																														expr: &litMatcher{
																															pos:        position{line: 1094, col: 13, offset: 45770},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 21, offset: 45496},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 22, offset: 45497},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 26, offset: 45501},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 27, offset: 45502},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 31, offset: 45506},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 32, offset: 45507},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 37, offset: 45512},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 38, offset: 45513},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1080, col: 43, offset: 45518},
																											expr: &litMatcher{
																												pos:        position{line: 1080, col: 44, offset: 45519},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 1080, col: 48, offset: 45523,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 146, col: 18, offset: 5626},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 156, col: 17, offset: 5929},
																			run: (*parser).callonMasqueradeParagraph777,
																			expr: &seqExpr{
																				pos: position{line: 156, col: 17, offset: 5929},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 156, col: 17, offset: 5929},
																						val:        ".",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 156, col: 21, offset: 5933},
																						expr: &litMatcher{
																							pos:        position{line: 156, col: 22, offset: 5934},
																							val:        ".",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 156, col: 26, offset: 5938},
																						expr: &choiceExpr{
																							pos: position{line: 1094, col: 7, offset: 45764},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1094, col: 7, offset: 45764},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1094, col: 13, offset: 45770},
																									run: (*parser).callonMasqueradeParagraph785,
																									expr: &litMatcher{
																										pos:        position{line: 1094, col: 13, offset: 45770},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 156, col: 30, offset: 5942},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 160, col: 24, offset: 6047},
																							run: (*parser).callonMasqueradeParagraph788,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 160, col: 24, offset: 6047},
																								expr: &seqExpr{
																									pos: position{line: 160, col: 25, offset: 6048},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 160, col: 25, offset: 6048},
																											expr: &choiceExpr{
																												pos: position{line: 1098, col: 12, offset: 45826},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 160, col: 34, offset: 6057,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 166, col: 16, offset: 6206},
																			run: (*parser).callonMasqueradeParagraph796,
																			expr: &seqExpr{
																				pos: position{line: 166, col: 16, offset: 6206},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 166, col: 16, offset: 6206},
																						val:        "[.",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 166, col: 21, offset: 6211},
																						expr: &choiceExpr{
																							pos: position{line: 1094, col: 7, offset: 45764},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1094, col: 7, offset: 45764},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1094, col: 13, offset: 45770},
																									run: (*parser).callonMasqueradeParagraph802,
																									expr: &litMatcher{
																										pos:        position{line: 1094, col: 13, offset: 45770},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 166, col: 25, offset: 6215},
																						label: "role",
																						expr: &actionExpr{
																							pos: position{line: 170, col: 23, offset: 6319},
																							run: (*parser).callonMasqueradeParagraph805,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 170, col: 23, offset: 6319},
																								expr: &seqExpr{
																									pos: position{line: 170, col: 24, offset: 6320},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 170, col: 24, offset: 6320},
																											expr: &choiceExpr{
																												pos: position{line: 1098, col: 12, offset: 45826},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1098, col: 12, offset: 45826},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1098, col: 21, offset: 45835},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 170, col: 33, offset: 6329},
																											expr: &litMatcher{
																												pos:        position{line: 170, col: 34, offset: 6330},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 170, col: 38, offset: 6334,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 166, col: 51, offset: 6241},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 175, col: 30, offset: 6483},
																			run: (*parser).callonMasqueradeParagraph816,
																			expr: &seqExpr{
																				pos: position{line: 175, col: 30, offset: 6483},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 175, col: 30, offset: 6483},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 175, col: 34, offset: 6487},
																						label: "k",
																						expr: &choiceExpr{
																							pos: position{line: 508, col: 19, offset: 19492},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 508, col: 19, offset: 19492},
																									run: (*parser).callonMasqueradeParagraph821,
																									expr: &litMatcher{
																										pos:        position{line: 508, col: 19, offset: 19492},
																										val:        "TIP",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 510, col: 5, offset: 19530},
																									run: (*parser).callonMasqueradeParagraph823,
																									expr: &litMatcher{
																										pos:        position{line: 510, col: 5, offset: 19530},
																										val:        "NOTE",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 512, col: 5, offset: 19570},
																									run: (*parser).callonMasqueradeParagraph825,
																									expr: &litMatcher{
																										pos:        position{line: 512, col: 5, offset: 19570},
																										val:        "IMPORTANT",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 514, col: 5, offset: 19620},
																									run: (*parser).callonMasqueradeParagraph827,
																									expr: &litMatcher{
																										pos:        position{line: 514, col: 5, offset: 19620},
																										val:        "WARNING",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 516, col: 5, offset: 19666},
																									run: (*parser).callonMasqueradeParagraph829,
																									expr: &litMatcher{
																										pos:        position{line: 516, col: 5, offset: 19666},
																										val:        "CAUTION",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 175, col: 53, offset: 6506},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 198, col: 21, offset: 7255},
																			run: (*parser).callonMasqueradeParagraph832,
																			expr: &litMatcher{
																				pos:        position{line: 198, col: 21, offset: 7255},
																				val:        "[horizontal]",
																				ignoreCase: false,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 180, col: 19, offset: 6667},
																			run: (*parser).callonMasqueradeParagraph834,
																			expr: &seqExpr{
																				pos: position{line: 180, col: 19, offset: 6667},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 180, col: 19, offset: 6667},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 180, col: 23, offset: 6671},
																						expr: &choiceExpr{
																							pos: position{line: 1094, col: 7, offset: 45764},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1094, col: 7, offset: 45764},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1094, col: 13, offset: 45770},
																									run: (*parser).callonMasqueradeParagraph840,
																									expr: &litMatcher{
																										pos:        position{line: 1094, col: 13, offset: 45770},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 180, col: 27, offset: 6675},
																						label: "attributes",
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 180, col: 38, offset: 6686},
																							expr: &choiceExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 184, col: 21, offset: 6799},
																										run: (*parser).callonMasqueradeParagraph845,
																										expr: &seqExpr{
																											pos: position{line: 184, col: 21, offset: 6799},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 184, col: 21, offset: 6799},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														run: (*parser).callonMasqueradeParagraph848,
																														expr: &seqExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 17, offset: 7059},
																																	expr: &actionExpr{
																																		pos: position{line: 214, col: 14, offset: 7892},
																																		run: (*parser).callonMasqueradeParagraph851,
																																		expr: &litMatcher{
																																			pos:        position{line: 214, col: 14, offset: 7892},
																																			val:        "quote",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 28, offset: 7070},
																																	expr: &actionExpr{
																																		pos: position{line: 230, col: 14, offset: 8489},
																																		run: (*parser).callonMasqueradeParagraph854,
																																		expr: &litMatcher{
																																			pos:        position{line: 230, col: 14, offset: 8489},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 39, offset: 7081},
																																	expr: &actionExpr{
																																		pos: position{line: 1040, col: 16, offset: 44408},
																																		run: (*parser).callonMasqueradeParagraph857,
																																		expr: &litMatcher{
																																			pos:        position{line: 1040, col: 16, offset: 44408},
																																			val:        "literal",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 190, col: 52, offset: 7094},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 190, col: 56, offset: 7098},
																																		expr: &seqExpr{
																																			pos: position{line: 190, col: 57, offset: 7099},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 190, col: 57, offset: 7099},
																																					expr: &litMatcher{
																																						pos:        position{line: 190, col: 58, offset: 7100},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 190, col: 62, offset: 7104},
																																					expr: &litMatcher{
																																						pos:        position{line: 190, col: 63, offset: 7105},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 190, col: 67, offset: 7109},
																																					expr: &litMatcher{
																																						pos:        position{line: 190, col: 68, offset: 7110},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 190, col: 72, offset: 7114,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&litMatcher{
																													pos:        position{line: 184, col: 40, offset: 6818},
																													val:        "=",
																													ignoreCase: false,
																												},
																												&labeledExpr{
																													pos:   position{line: 184, col: 44, offset: 6822},
																													label: "value",
																													expr: &actionExpr{
																														pos: position{line: 194, col: 19, offset: 7173},
																														run: (*parser).callonMasqueradeParagraph871,
																														expr: &labeledExpr{
																															pos:   position{line: 194, col: 19, offset: 7173},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 194, col: 25, offset: 7179},
																																expr: &seqExpr{
																																	pos: position{line: 194, col: 26, offset: 7180},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 194, col: 26, offset: 7180},
																																			expr: &litMatcher{
																																				pos:        position{line: 194, col: 27, offset: 7181},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 194, col: 31, offset: 7185},
																																			expr: &litMatcher{
																																				pos:        position{line: 194, col: 32, offset: 7186},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 194, col: 36, offset: 7190},
																																			expr: &litMatcher{
																																				pos:        position{line: 194, col: 37, offset: 7191},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 194, col: 41, offset: 7195,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 184, col: 67, offset: 6845},
																													expr: &litMatcher{
																														pos:        position{line: 184, col: 67, offset: 6845},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 184, col: 72, offset: 6850},
																													expr: &choiceExpr{
																														pos: position{line: 1094, col: 7, offset: 45764},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1094, col: 7, offset: 45764},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1094, col: 13, offset: 45770},
																																run: (*parser).callonMasqueradeParagraph887,
																																expr: &litMatcher{
																																	pos:        position{line: 1094, col: 13, offset: 45770},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 186, col: 5, offset: 6934},
																										run: (*parser).callonMasqueradeParagraph889,
																										expr: &seqExpr{
																											pos: position{line: 186, col: 5, offset: 6934},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 186, col: 5, offset: 6934},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														run: (*parser).callonMasqueradeParagraph892,
																														expr: &seqExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 190, col: 17, offset: 7059},
																																	expr: &actionExpr{
																																		pos: position{line: 214, col: 14, offset: 7892},
																																		run: (*parser).callonMasqueradeParagraph895,
																																		expr: &litMatcher{
																																			pos:        position{line: 214, col: 14, offset: 7892},
																																			val:        "quote",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 28, offset: 7070},
																																	expr: &actionExpr{
																																		pos: position{line: 230, col: 14, offset: 8489},
																																		run: (*parser).callonMasqueradeParagraph898,
																																		expr: &litMatcher{
																																			pos:        position{line: 230, col: 14, offset: 8489},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 190, col: 39, offset: 7081},
																																	expr: &actionExpr{
																																		pos: position{line: 1040, col: 16, offset: 44408},
																																		run: (*parser).callonMasqueradeParagraph901,
																																		expr: &litMatcher{
																																			pos:        position{line: 1040, col: 16, offset: 44408},
																																			val:        "literal",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 190, col: 52, offset: 7094},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 190, col: 56, offset: 7098},
																																		expr: &seqExpr{
																																			pos: position{line: 190, col: 57, offset: 7099},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 190, col: 57, offset: 7099},
																																					expr: &litMatcher{
																																						pos:        position{line: 190, col: 58, offset: 7100},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 190, col: 62, offset: 7104},
																																					expr: &litMatcher{
																																						pos:        position{line: 190, col: 63, offset: 7105},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 190, col: 67, offset: 7109},
																																					expr: &litMatcher{
																																						pos:        position{line: 190, col: 68, offset: 7110},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 190, col: 72, offset: 7114,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 186, col: 24, offset: 6953},
																													expr: &litMatcher{
																														pos:        position{line: 186, col: 24, offset: 6953},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 186, col: 29, offset: 6958},
																													expr: &choiceExpr{
																														pos: position{line: 1094, col: 7, offset: 45764},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1094, col: 7, offset: 45764},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1094, col: 13, offset: 45770},
																																run: (*parser).callonMasqueradeParagraph918,
																																expr: &litMatcher{
																																	pos:        position{line: 1094, col: 13, offset: 45770},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 180, col: 59, offset: 6707},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 137, col: 115, offset: 5292},
																expr: &choiceExpr{
																	pos: position{line: 1094, col: 7, offset: 45764},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1094, col: 7, offset: 45764},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1094, col: 13, offset: 45770},
																			run: (*parser).callonMasqueradeParagraph924,
																			expr: &litMatcher{
																				pos:        position{line: 1094, col: 13, offset: 45770},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 1102, col: 8, offset: 45866},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1098, col: 12, offset: 45826},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1098, col: 21, offset: 45835},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 1100, col: 8, offset: 45855},
																		expr: &anyMatcher{
																			line: 1100, col: 9, offset: 45856,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 539, col: 56, offset: 20777},
									expr: &seqExpr{
										pos: position{line: 539, col: 58, offset: 20779},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 539, col: 58, offset: 20779},
												expr: &litMatcher{
													pos:        position{line: 539, col: 58, offset: 20779},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 539, col: 63, offset: 20784},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonMasqueradeParagraph938,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 539, col: 67, offset: 20788},
												expr: &choiceExpr{
													pos: position{line: 1098, col: 12, offset: 45826},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 539, col: 77, offset: 20798},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 539, col: 83, offset: 20804},
										expr: &ruleRefExpr{
											pos:  position{line: 539, col: 84, offset: 20805},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElements",
			pos:  position{line: 543, col: 1, offset: 20920},
			expr: &choiceExpr{
				pos: position{line: 544, col: 5, offset: 20943},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 544, col: 5, offset: 20943},
						run: (*parser).callonInlineElements2,
						expr: &labeledExpr{
							pos:   position{line: 544, col: 5, offset: 20943},
							label: "comment",
							expr: &actionExpr{
								pos: position{line: 984, col: 22, offset: 42072},
								run: (*parser).callonInlineElements4,
								expr: &seqExpr{
									pos: position{line: 984, col: 22, offset: 42072},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 984, col: 22, offset: 42072},
											expr: &litMatcher{
												pos:        position{line: 974, col: 26, offset: 41735},
												val:        "////",
												ignoreCase: false,
											},
										},
										&litMatcher{
											pos:        position{line: 984, col: 45, offset: 42095},
											val:        "//",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 984, col: 50, offset: 42100},
											label: "content",
											expr: &actionExpr{
												pos: position{line: 988, col: 29, offset: 42228},
												run: (*parser).callonInlineElements10,
												expr: &zeroOrMoreExpr{
													pos: position{line: 988, col: 29, offset: 42228},
													expr: &seqExpr{
														pos: position{line: 988, col: 30, offset: 42229},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 988, col: 30, offset: 42229},
																expr: &choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
															&anyMatcher{
																line: 988, col: 35, offset: 42234,
															},
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 546, col: 9, offset: 21044},
						run: (*parser).callonInlineElements25,
						expr: &seqExpr{
							pos: position{line: 546, col: 9, offset: 21044},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 546, col: 9, offset: 21044},
									expr: &actionExpr{
										pos: position{line: 1061, col: 14, offset: 44948},
										run: (*parser).callonInlineElements28,
										expr: &seqExpr{
											pos: position{line: 1061, col: 14, offset: 44948},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 1061, col: 14, offset: 44948},
													expr: &notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 1061, col: 19, offset: 44953},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonInlineElements36,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1102, col: 8, offset: 45866},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1100, col: 8, offset: 45855},
															expr: &anyMatcher{
																line: 1100, col: 9, offset: 45856,
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 546, col: 20, offset: 21055},
									expr: &choiceExpr{
										pos: position{line: 832, col: 19, offset: 35999},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 998, col: 26, offset: 42680},
												val:        "....",
												ignoreCase: false,
											},
											&seqExpr{
												pos: position{line: 840, col: 25, offset: 36416},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 840, col: 25, offset: 36416},
														val:        "```",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 840, col: 31, offset: 36422},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonInlineElements51,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1102, col: 8, offset: 45866},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1100, col: 8, offset: 45855},
																expr: &anyMatcher{
																	line: 1100, col: 9, offset: 45856,
																},
															},
														},
													},
												},
											},
											&seqExpr{
												pos: position{line: 851, col: 26, offset: 36895},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 851, col: 26, offset: 36895},
														val:        "----",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 851, col: 33, offset: 36902},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonInlineElements63,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1102, col: 8, offset: 45866},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1100, col: 8, offset: 45855},
																expr: &anyMatcher{
																	line: 1100, col: 9, offset: 45856,
																},
															},
														},
													},
												},
											},
											&seqExpr{
												pos: position{line: 873, col: 26, offset: 37800},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 873, col: 26, offset: 37800},
														val:        "====",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 873, col: 33, offset: 37807},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonInlineElements75,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1102, col: 8, offset: 45866},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1100, col: 8, offset: 45855},
																expr: &anyMatcher{
																	line: 1100, col: 9, offset: 45856,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 974, col: 26, offset: 41735},
												val:        "////",
												ignoreCase: false,
											},
											&seqExpr{
												pos: position{line: 896, col: 24, offset: 38625},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 896, col: 24, offset: 38625},
														val:        "____",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 896, col: 31, offset: 38632},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonInlineElements88,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1102, col: 8, offset: 45866},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1100, col: 8, offset: 45855},
																expr: &anyMatcher{
																	line: 1100, col: 9, offset: 45856,
																},
															},
														},
													},
												},
											},
											&seqExpr{
												pos: position{line: 931, col: 26, offset: 40218},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 931, col: 26, offset: 40218},
														val:        "****",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 931, col: 33, offset: 40225},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonInlineElements100,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1102, col: 8, offset: 45866},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1100, col: 8, offset: 45855},
																expr: &anyMatcher{
																	line: 1100, col: 9, offset: 45856,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 546, col: 36, offset: 21071},
									label: "elements",
									expr: &oneOrMoreExpr{
										pos: position{line: 546, col: 45, offset: 21080},
										expr: &ruleRefExpr{
											pos:  position{line: 546, col: 46, offset: 21081},
											name: "InlineElement",
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 546, col: 62, offset: 21097},
									label: "linebreak",
									expr: &zeroOrOneExpr{
										pos: position{line: 546, col: 72, offset: 21107},
										expr: &actionExpr{
											pos: position{line: 568, col: 14, offset: 22373},
											run: (*parser).callonInlineElements112,
											expr: &seqExpr{
												pos: position{line: 568, col: 14, offset: 22373},
												exprs: []interface{}{
													&choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonInlineElements116,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 568, col: 17, offset: 22376},
														val:        "+",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 568, col: 21, offset: 22380},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonInlineElements122,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1102, col: 8, offset: 45866},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1100, col: 8, offset: 45855},
																expr: &anyMatcher{
																	line: 1100, col: 9, offset: 45856,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&zeroOrOneExpr{
									pos: position{line: 546, col: 85, offset: 21120},
									expr: &choiceExpr{
										pos: position{line: 1102, col: 8, offset: 45866},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1098, col: 12, offset: 45826},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1098, col: 21, offset: 45835},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1100, col: 8, offset: 45855},
												expr: &anyMatcher{
													line: 1100, col: 9, offset: 45856,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElement",
			pos:  position{line: 550, col: 1, offset: 21258},
			expr: &actionExpr{
				pos: position{line: 550, col: 18, offset: 21275},
				run: (*parser).callonInlineElement1,
				expr: &seqExpr{
					pos: position{line: 550, col: 18, offset: 21275},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 550, col: 18, offset: 21275},
							expr: &choiceExpr{
								pos: position{line: 1102, col: 8, offset: 45866},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1098, col: 12, offset: 45826},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1098, col: 21, offset: 45835},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1100, col: 8, offset: 45855},
										expr: &anyMatcher{
											line: 1100, col: 9, offset: 45856,
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 550, col: 23, offset: 21280},
							expr: &actionExpr{
								pos: position{line: 568, col: 14, offset: 22373},
								run: (*parser).callonInlineElement10,
								expr: &seqExpr{
									pos: position{line: 568, col: 14, offset: 22373},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonInlineElement14,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 568, col: 17, offset: 22376},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 568, col: 21, offset: 22380},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonInlineElement20,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 550, col: 34, offset: 21291},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 550, col: 43, offset: 21300},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 550, col: 43, offset: 21300},
										name: "QuotedText",
									},
									&actionExpr{
										pos: position{line: 725, col: 19, offset: 31770},
										run: (*parser).callonInlineElement30,
										expr: &seqExpr{
											pos: position{line: 725, col: 19, offset: 31770},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 725, col: 19, offset: 31770},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 725, col: 24, offset: 31775},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														run: (*parser).callonInlineElement34,
														expr: &oneOrMoreExpr{
															pos: position{line: 1080, col: 7, offset: 45482},
															expr: &seqExpr{
																pos: position{line: 1080, col: 8, offset: 45483},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1080, col: 8, offset: 45483},
																		expr: &choiceExpr{
																			pos: position{line: 1098, col: 12, offset: 45826},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 17, offset: 45492},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonInlineElement44,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 21, offset: 45496},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 22, offset: 45497},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 26, offset: 45501},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 27, offset: 45502},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 31, offset: 45506},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 32, offset: 45507},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 37, offset: 45512},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 38, offset: 45513},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 43, offset: 45518},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 44, offset: 45519},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1080, col: 48, offset: 45523,
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 725, col: 32, offset: 31783},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonInlineElement60,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 725, col: 36, offset: 31787},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 725, col: 40, offset: 31791},
													label: "label",
													expr: &actionExpr{
														pos: position{line: 731, col: 24, offset: 31993},
														run: (*parser).callonInlineElement64,
														expr: &oneOrMoreExpr{
															pos: position{line: 731, col: 24, offset: 31993},
															expr: &seqExpr{
																pos: position{line: 731, col: 25, offset: 31994},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 731, col: 25, offset: 31994},
																		expr: &litMatcher{
																			pos:        position{line: 731, col: 26, offset: 31995},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 731, col: 31, offset: 32000,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 725, col: 68, offset: 31819},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 727, col: 5, offset: 31894},
										run: (*parser).callonInlineElement71,
										expr: &seqExpr{
											pos: position{line: 727, col: 5, offset: 31894},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 727, col: 5, offset: 31894},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 727, col: 10, offset: 31899},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														run: (*parser).callonInlineElement75,
														expr: &oneOrMoreExpr{
															pos: position{line: 1080, col: 7, offset: 45482},
															expr: &seqExpr{
																pos: position{line: 1080, col: 8, offset: 45483},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1080, col: 8, offset: 45483},
																		expr: &choiceExpr{
																			pos: position{line: 1098, col: 12, offset: 45826},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 17, offset: 45492},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonInlineElement85,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 21, offset: 45496},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 22, offset: 45497},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 26, offset: 45501},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 27, offset: 45502},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 31, offset: 45506},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 32, offset: 45507},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 37, offset: 45512},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 38, offset: 45513},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 43, offset: 45518},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 44, offset: 45519},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1080, col: 48, offset: 45523,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 727, col: 18, offset: 31907},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 550, col: 73, offset: 21330},
										name: "Passthrough",
									},
									&actionExpr{
										pos: position{line: 779, col: 16, offset: 33487},
										run: (*parser).callonInlineElement100,
										expr: &seqExpr{
											pos: position{line: 779, col: 16, offset: 33487},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 779, col: 16, offset: 33487},
													val:        "image:",
													ignoreCase: false,
												},
												&notExpr{
													pos: position{line: 779, col: 25, offset: 33496},
													expr: &litMatcher{
														pos:        position{line: 779, col: 26, offset: 33497},
														val:        ":",
														ignoreCase: false,
													},
												},
												&labeledExpr{
													pos:   position{line: 779, col: 30, offset: 33501},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1076, col: 8, offset: 45412},
														run: (*parser).callonInlineElement106,
														expr: &oneOrMoreExpr{
															pos: position{line: 1076, col: 8, offset: 45412},
															expr: &seqExpr{
																pos: position{line: 1076, col: 9, offset: 45413},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1076, col: 9, offset: 45413},
																		expr: &choiceExpr{
																			pos: position{line: 1098, col: 12, offset: 45826},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1076, col: 18, offset: 45422},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonInlineElement116,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1076, col: 22, offset: 45426},
																		expr: &litMatcher{
																			pos:        position{line: 1076, col: 23, offset: 45427},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1076, col: 27, offset: 45431},
																		expr: &litMatcher{
																			pos:        position{line: 1076, col: 28, offset: 45432},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1076, col: 32, offset: 45436,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 779, col: 41, offset: 33512},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 784, col: 20, offset: 33769},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 784, col: 20, offset: 33769},
																run: (*parser).callonInlineElement125,
																expr: &seqExpr{
																	pos: position{line: 784, col: 20, offset: 33769},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 784, col: 20, offset: 33769},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 784, col: 24, offset: 33773},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonInlineElement129,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 784, col: 45, offset: 33794},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 785, col: 9, offset: 33806},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonInlineElement141,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 785, col: 33, offset: 33830},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 786, col: 9, offset: 33842},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonInlineElement153,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 786, col: 33, offset: 33866},
																			expr: &litMatcher{
																				pos:        position{line: 786, col: 33, offset: 33866},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 787, col: 9, offset: 33879},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 787, col: 20, offset: 33890},
																				expr: &choiceExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							run: (*parser).callonInlineElement168,
																							expr: &seqExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 184, col: 21, offset: 6799},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElement171,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElement174,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElement177,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElement180,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 184, col: 40, offset: 6818},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 184, col: 44, offset: 6822},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 194, col: 19, offset: 7173},
																											run: (*parser).callonInlineElement194,
																											expr: &labeledExpr{
																												pos:   position{line: 194, col: 19, offset: 7173},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 194, col: 25, offset: 7179},
																													expr: &seqExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 27, offset: 7181},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 31, offset: 7185},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 32, offset: 7186},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 36, offset: 7190},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 37, offset: 7191},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 194, col: 41, offset: 7195,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 184, col: 67, offset: 6845},
																										expr: &litMatcher{
																											pos:        position{line: 184, col: 67, offset: 6845},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 184, col: 72, offset: 6850},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElement210,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							run: (*parser).callonInlineElement212,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 186, col: 5, offset: 6934},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElement215,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElement218,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElement221,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElement224,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 186, col: 24, offset: 6953},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 24, offset: 6953},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 186, col: 29, offset: 6958},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElement241,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 787, col: 40, offset: 33910},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 789, col: 9, offset: 34016},
																run: (*parser).callonInlineElement244,
																expr: &seqExpr{
																	pos: position{line: 789, col: 9, offset: 34016},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 789, col: 9, offset: 34016},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 789, col: 13, offset: 34020},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonInlineElement248,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 789, col: 34, offset: 34041},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 790, col: 9, offset: 34053},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonInlineElement260,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 790, col: 32, offset: 34076},
																			expr: &litMatcher{
																				pos:        position{line: 790, col: 32, offset: 34076},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 791, col: 9, offset: 34089},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 791, col: 20, offset: 34100},
																				expr: &choiceExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							run: (*parser).callonInlineElement275,
																							expr: &seqExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 184, col: 21, offset: 6799},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElement278,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElement281,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElement284,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElement287,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 184, col: 40, offset: 6818},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 184, col: 44, offset: 6822},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 194, col: 19, offset: 7173},
																											run: (*parser).callonInlineElement301,
																											expr: &labeledExpr{
																												pos:   position{line: 194, col: 19, offset: 7173},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 194, col: 25, offset: 7179},
																													expr: &seqExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 27, offset: 7181},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 31, offset: 7185},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 32, offset: 7186},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 36, offset: 7190},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 37, offset: 7191},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 194, col: 41, offset: 7195,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 184, col: 67, offset: 6845},
																										expr: &litMatcher{
																											pos:        position{line: 184, col: 67, offset: 6845},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 184, col: 72, offset: 6850},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElement317,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							run: (*parser).callonInlineElement319,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 186, col: 5, offset: 6934},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElement322,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElement325,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElement328,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElement331,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 186, col: 24, offset: 6953},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 24, offset: 6953},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 186, col: 29, offset: 6958},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElement348,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 791, col: 40, offset: 34120},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 793, col: 9, offset: 34223},
																run: (*parser).callonInlineElement351,
																expr: &seqExpr{
																	pos: position{line: 793, col: 9, offset: 34223},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 793, col: 9, offset: 34223},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 793, col: 13, offset: 34227},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonInlineElement355,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 793, col: 34, offset: 34248},
																			expr: &litMatcher{
																				pos:        position{line: 793, col: 34, offset: 34248},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 794, col: 9, offset: 34261},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 794, col: 20, offset: 34272},
																				expr: &choiceExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							run: (*parser).callonInlineElement370,
																							expr: &seqExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 184, col: 21, offset: 6799},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElement373,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElement376,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElement379,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElement382,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 184, col: 40, offset: 6818},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 184, col: 44, offset: 6822},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 194, col: 19, offset: 7173},
																											run: (*parser).callonInlineElement396,
																											expr: &labeledExpr{
																												pos:   position{line: 194, col: 19, offset: 7173},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 194, col: 25, offset: 7179},
																													expr: &seqExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 27, offset: 7181},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 31, offset: 7185},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 32, offset: 7186},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 36, offset: 7190},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 37, offset: 7191},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 194, col: 41, offset: 7195,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 184, col: 67, offset: 6845},
																										expr: &litMatcher{
																											pos:        position{line: 184, col: 67, offset: 6845},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 184, col: 72, offset: 6850},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElement412,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							run: (*parser).callonInlineElement414,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 186, col: 5, offset: 6934},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElement417,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElement420,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElement423,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElement426,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 186, col: 24, offset: 6953},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 24, offset: 6953},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 186, col: 29, offset: 6958},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElement443,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 794, col: 40, offset: 34292},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 796, col: 9, offset: 34393},
																run: (*parser).callonInlineElement446,
																expr: &seqExpr{
																	pos: position{line: 796, col: 9, offset: 34393},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 796, col: 9, offset: 34393},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 796, col: 13, offset: 34397},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 796, col: 24, offset: 34408},
																				expr: &choiceExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							run: (*parser).callonInlineElement452,
																							expr: &seqExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 184, col: 21, offset: 6799},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElement455,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElement458,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElement461,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElement464,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 184, col: 40, offset: 6818},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 184, col: 44, offset: 6822},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 194, col: 19, offset: 7173},
																											run: (*parser).callonInlineElement478,
																											expr: &labeledExpr{
																												pos:   position{line: 194, col: 19, offset: 7173},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 194, col: 25, offset: 7179},
																													expr: &seqExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 27, offset: 7181},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 31, offset: 7185},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 32, offset: 7186},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 36, offset: 7190},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 37, offset: 7191},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 194, col: 41, offset: 7195,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 184, col: 67, offset: 6845},
																										expr: &litMatcher{
																											pos:        position{line: 184, col: 67, offset: 6845},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 184, col: 72, offset: 6850},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElement494,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							run: (*parser).callonInlineElement496,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 186, col: 5, offset: 6934},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElement499,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElement502,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElement505,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElement508,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 186, col: 24, offset: 6953},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 24, offset: 6953},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 186, col: 29, offset: 6958},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElement525,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 796, col: 44, offset: 34428},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 738, col: 9, offset: 32149},
										run: (*parser).callonInlineElement528,
										expr: &labeledExpr{
											pos:   position{line: 738, col: 9, offset: 32149},
											label: "link",
											expr: &choiceExpr{
												pos: position{line: 738, col: 15, offset: 32155},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 753, col: 17, offset: 32607},
														run: (*parser).callonInlineElement531,
														expr: &seqExpr{
															pos: position{line: 753, col: 17, offset: 32607},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 753, col: 17, offset: 32607},
																	val:        "link:",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 753, col: 25, offset: 32615},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 757, col: 20, offset: 32784},
																		run: (*parser).callonInlineElement535,
																		expr: &seqExpr{
																			pos: position{line: 757, col: 20, offset: 32784},
																			exprs: []interface{}{
																				&zeroOrOneExpr{
																					pos: position{line: 757, col: 20, offset: 32784},
																					expr: &choiceExpr{
																						pos: position{line: 1088, col: 15, offset: 45649},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1088, col: 15, offset: 45649},
																								val:        "http://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1088, col: 27, offset: 45661},
																								val:        "https://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1088, col: 40, offset: 45674},
																								val:        "ftp://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1088, col: 51, offset: 45685},
																								val:        "irc://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1088, col: 62, offset: 45696},
																								val:        "mailto:",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1076, col: 8, offset: 45412},
																					run: (*parser).callonInlineElement544,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1076, col: 8, offset: 45412},
																						expr: &seqExpr{
																							pos: position{line: 1076, col: 9, offset: 45413},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1076, col: 9, offset: 45413},
																									expr: &choiceExpr{
																										pos: position{line: 1098, col: 12, offset: 45826},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1098, col: 12, offset: 45826},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1098, col: 21, offset: 45835},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1076, col: 18, offset: 45422},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonInlineElement554,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1076, col: 22, offset: 45426},
																									expr: &litMatcher{
																										pos:        position{line: 1076, col: 23, offset: 45427},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1076, col: 27, offset: 45431},
																									expr: &litMatcher{
																										pos:        position{line: 1076, col: 28, offset: 45432},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1076, col: 32, offset: 45436,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 753, col: 47, offset: 32637},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 761, col: 19, offset: 32854},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 761, col: 19, offset: 32854},
																				run: (*parser).callonInlineElement563,
																				expr: &seqExpr{
																					pos: position{line: 761, col: 19, offset: 32854},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 761, col: 19, offset: 32854},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 761, col: 23, offset: 32858},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 768, col: 22, offset: 33146},
																								run: (*parser).callonInlineElement567,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 768, col: 22, offset: 33146},
																									expr: &seqExpr{
																										pos: position{line: 768, col: 23, offset: 33147},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 768, col: 23, offset: 33147},
																												expr: &litMatcher{
																													pos:        position{line: 768, col: 24, offset: 33148},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 768, col: 28, offset: 33152},
																												expr: &litMatcher{
																													pos:        position{line: 768, col: 29, offset: 33153},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 768, col: 33, offset: 33157,
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 762, col: 9, offset: 32891},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 762, col: 20, offset: 32902},
																								expr: &choiceExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 184, col: 21, offset: 6799},
																											run: (*parser).callonInlineElement578,
																											expr: &seqExpr{
																												pos: position{line: 184, col: 21, offset: 6799},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 184, col: 21, offset: 6799},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElement581,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElement584,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElement587,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElement590,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 184, col: 40, offset: 6818},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 184, col: 44, offset: 6822},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 194, col: 19, offset: 7173},
																															run: (*parser).callonInlineElement604,
																															expr: &labeledExpr{
																																pos:   position{line: 194, col: 19, offset: 7173},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 194, col: 25, offset: 7179},
																																	expr: &seqExpr{
																																		pos: position{line: 194, col: 26, offset: 7180},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 194, col: 26, offset: 7180},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 27, offset: 7181},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 31, offset: 7185},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 32, offset: 7186},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 36, offset: 7190},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 37, offset: 7191},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 194, col: 41, offset: 7195,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 184, col: 67, offset: 6845},
																														expr: &litMatcher{
																															pos:        position{line: 184, col: 67, offset: 6845},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 184, col: 72, offset: 6850},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElement620,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 186, col: 5, offset: 6934},
																											run: (*parser).callonInlineElement622,
																											expr: &seqExpr{
																												pos: position{line: 186, col: 5, offset: 6934},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 186, col: 5, offset: 6934},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElement625,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElement628,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElement631,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElement634,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 186, col: 24, offset: 6953},
																														expr: &litMatcher{
																															pos:        position{line: 186, col: 24, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 186, col: 29, offset: 6958},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElement651,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 762, col: 40, offset: 32922},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 764, col: 5, offset: 33007},
																				run: (*parser).callonInlineElement654,
																				expr: &seqExpr{
																					pos: position{line: 764, col: 5, offset: 33007},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 764, col: 5, offset: 33007},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 764, col: 9, offset: 33011},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 764, col: 20, offset: 33022},
																								expr: &choiceExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 184, col: 21, offset: 6799},
																											run: (*parser).callonInlineElement660,
																											expr: &seqExpr{
																												pos: position{line: 184, col: 21, offset: 6799},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 184, col: 21, offset: 6799},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElement663,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElement666,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElement669,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElement672,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 184, col: 40, offset: 6818},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 184, col: 44, offset: 6822},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 194, col: 19, offset: 7173},
																															run: (*parser).callonInlineElement686,
																															expr: &labeledExpr{
																																pos:   position{line: 194, col: 19, offset: 7173},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 194, col: 25, offset: 7179},
																																	expr: &seqExpr{
																																		pos: position{line: 194, col: 26, offset: 7180},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 194, col: 26, offset: 7180},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 27, offset: 7181},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 31, offset: 7185},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 32, offset: 7186},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 36, offset: 7190},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 37, offset: 7191},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 194, col: 41, offset: 7195,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 184, col: 67, offset: 6845},
																														expr: &litMatcher{
																															pos:        position{line: 184, col: 67, offset: 6845},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 184, col: 72, offset: 6850},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElement702,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 186, col: 5, offset: 6934},
																											run: (*parser).callonInlineElement704,
																											expr: &seqExpr{
																												pos: position{line: 186, col: 5, offset: 6934},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 186, col: 5, offset: 6934},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElement707,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElement710,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElement713,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElement716,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 186, col: 24, offset: 6953},
																														expr: &litMatcher{
																															pos:        position{line: 186, col: 24, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 186, col: 29, offset: 6958},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElement733,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 764, col: 40, offset: 33042},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 742, col: 17, offset: 32226},
														run: (*parser).callonInlineElement736,
														expr: &seqExpr{
															pos: position{line: 742, col: 17, offset: 32226},
															exprs: []interface{}{
																&labeledExpr{
																	pos:   position{line: 742, col: 17, offset: 32226},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 748, col: 20, offset: 32473},
																		run: (*parser).callonInlineElement739,
																		expr: &seqExpr{
																			pos: position{line: 748, col: 20, offset: 32473},
																			exprs: []interface{}{
																				&choiceExpr{
																					pos: position{line: 1088, col: 15, offset: 45649},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1088, col: 15, offset: 45649},
																							val:        "http://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1088, col: 27, offset: 45661},
																							val:        "https://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1088, col: 40, offset: 45674},
																							val:        "ftp://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1088, col: 51, offset: 45685},
																							val:        "irc://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1088, col: 62, offset: 45696},
																							val:        "mailto:",
																							ignoreCase: false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1076, col: 8, offset: 45412},
																					run: (*parser).callonInlineElement747,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1076, col: 8, offset: 45412},
																						expr: &seqExpr{
																							pos: position{line: 1076, col: 9, offset: 45413},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1076, col: 9, offset: 45413},
																									expr: &choiceExpr{
																										pos: position{line: 1098, col: 12, offset: 45826},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1098, col: 12, offset: 45826},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1098, col: 21, offset: 45835},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1076, col: 18, offset: 45422},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonInlineElement757,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1076, col: 22, offset: 45426},
																									expr: &litMatcher{
																										pos:        position{line: 1076, col: 23, offset: 45427},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1076, col: 27, offset: 45431},
																									expr: &litMatcher{
																										pos:        position{line: 1076, col: 28, offset: 45432},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1076, col: 32, offset: 45436,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 742, col: 39, offset: 32248},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 761, col: 19, offset: 32854},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 761, col: 19, offset: 32854},
																				run: (*parser).callonInlineElement766,
																				expr: &seqExpr{
																					pos: position{line: 761, col: 19, offset: 32854},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 761, col: 19, offset: 32854},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 761, col: 23, offset: 32858},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 768, col: 22, offset: 33146},
																								run: (*parser).callonInlineElement770,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 768, col: 22, offset: 33146},
																									expr: &seqExpr{
																										pos: position{line: 768, col: 23, offset: 33147},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 768, col: 23, offset: 33147},
																												expr: &litMatcher{
																													pos:        position{line: 768, col: 24, offset: 33148},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 768, col: 28, offset: 33152},
																												expr: &litMatcher{
																													pos:        position{line: 768, col: 29, offset: 33153},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 768, col: 33, offset: 33157,
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 762, col: 9, offset: 32891},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 762, col: 20, offset: 32902},
																								expr: &choiceExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 184, col: 21, offset: 6799},
																											run: (*parser).callonInlineElement781,
																											expr: &seqExpr{
																												pos: position{line: 184, col: 21, offset: 6799},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 184, col: 21, offset: 6799},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElement784,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElement787,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElement790,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElement793,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 184, col: 40, offset: 6818},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 184, col: 44, offset: 6822},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 194, col: 19, offset: 7173},
																															run: (*parser).callonInlineElement807,
																															expr: &labeledExpr{
																																pos:   position{line: 194, col: 19, offset: 7173},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 194, col: 25, offset: 7179},
																																	expr: &seqExpr{
																																		pos: position{line: 194, col: 26, offset: 7180},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 194, col: 26, offset: 7180},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 27, offset: 7181},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 31, offset: 7185},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 32, offset: 7186},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 36, offset: 7190},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 37, offset: 7191},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 194, col: 41, offset: 7195,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 184, col: 67, offset: 6845},
																														expr: &litMatcher{
																															pos:        position{line: 184, col: 67, offset: 6845},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 184, col: 72, offset: 6850},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElement823,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 186, col: 5, offset: 6934},
																											run: (*parser).callonInlineElement825,
																											expr: &seqExpr{
																												pos: position{line: 186, col: 5, offset: 6934},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 186, col: 5, offset: 6934},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElement828,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElement831,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElement834,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElement837,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 186, col: 24, offset: 6953},
																														expr: &litMatcher{
																															pos:        position{line: 186, col: 24, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 186, col: 29, offset: 6958},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElement854,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 762, col: 40, offset: 32922},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 764, col: 5, offset: 33007},
																				run: (*parser).callonInlineElement857,
																				expr: &seqExpr{
																					pos: position{line: 764, col: 5, offset: 33007},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 764, col: 5, offset: 33007},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 764, col: 9, offset: 33011},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 764, col: 20, offset: 33022},
																								expr: &choiceExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 184, col: 21, offset: 6799},
																											run: (*parser).callonInlineElement863,
																											expr: &seqExpr{
																												pos: position{line: 184, col: 21, offset: 6799},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 184, col: 21, offset: 6799},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElement866,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElement869,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElement872,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElement875,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 184, col: 40, offset: 6818},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 184, col: 44, offset: 6822},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 194, col: 19, offset: 7173},
																															run: (*parser).callonInlineElement889,
																															expr: &labeledExpr{
																																pos:   position{line: 194, col: 19, offset: 7173},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 194, col: 25, offset: 7179},
																																	expr: &seqExpr{
																																		pos: position{line: 194, col: 26, offset: 7180},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 194, col: 26, offset: 7180},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 27, offset: 7181},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 31, offset: 7185},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 32, offset: 7186},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 36, offset: 7190},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 37, offset: 7191},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 194, col: 41, offset: 7195,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 184, col: 67, offset: 6845},
																														expr: &litMatcher{
																															pos:        position{line: 184, col: 67, offset: 6845},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 184, col: 72, offset: 6850},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElement905,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 186, col: 5, offset: 6934},
																											run: (*parser).callonInlineElement907,
																											expr: &seqExpr{
																												pos: position{line: 186, col: 5, offset: 6934},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 186, col: 5, offset: 6934},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElement910,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElement913,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElement916,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElement919,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 186, col: 24, offset: 6953},
																														expr: &litMatcher{
																															pos:        position{line: 186, col: 24, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 186, col: 29, offset: 6958},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElement936,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 764, col: 40, offset: 33042},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 744, col: 5, offset: 32377},
														run: (*parser).callonInlineElement939,
														expr: &labeledExpr{
															pos:   position{line: 744, col: 5, offset: 32377},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 748, col: 20, offset: 32473},
																run: (*parser).callonInlineElement941,
																expr: &seqExpr{
																	pos: position{line: 748, col: 20, offset: 32473},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1088, col: 15, offset: 45649},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1088, col: 15, offset: 45649},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1088, col: 27, offset: 45661},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1088, col: 40, offset: 45674},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1088, col: 51, offset: 45685},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1088, col: 62, offset: 45696},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1076, col: 8, offset: 45412},
																			run: (*parser).callonInlineElement949,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1076, col: 8, offset: 45412},
																				expr: &seqExpr{
																					pos: position{line: 1076, col: 9, offset: 45413},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1076, col: 9, offset: 45413},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1076, col: 18, offset: 45422},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonInlineElement959,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1076, col: 22, offset: 45426},
																							expr: &litMatcher{
																								pos:        position{line: 1076, col: 23, offset: 45427},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1076, col: 27, offset: 45431},
																							expr: &litMatcher{
																								pos:        position{line: 1076, col: 28, offset: 45432},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1076, col: 32, offset: 45436,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 109, col: 34, offset: 4042},
										run: (*parser).callonInlineElement966,
										expr: &seqExpr{
											pos: position{line: 109, col: 34, offset: 4042},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 109, col: 34, offset: 4042},
													val:        "{",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 109, col: 38, offset: 4046},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonInlineElement970,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 109, col: 67, offset: 4075},
													val:        "}",
													ignoreCase: false,
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 550, col: 140, offset: 21397},
										name: "InlineFootnote",
									},
									&actionExpr{
										pos: position{line: 150, col: 20, offset: 5697},
										run: (*parser).callonInlineElement977,
										expr: &seqExpr{
											pos: position{line: 150, col: 20, offset: 5697},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 150, col: 20, offset: 5697},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 150, col: 25, offset: 5702},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														run: (*parser).callonInlineElement981,
														expr: &oneOrMoreExpr{
															pos: position{line: 1080, col: 7, offset: 45482},
															expr: &seqExpr{
																pos: position{line: 1080, col: 8, offset: 45483},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1080, col: 8, offset: 45483},
																		expr: &choiceExpr{
																			pos: position{line: 1098, col: 12, offset: 45826},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 17, offset: 45492},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonInlineElement991,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 21, offset: 45496},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 22, offset: 45497},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 26, offset: 45501},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 27, offset: 45502},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 31, offset: 45506},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 32, offset: 45507},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 37, offset: 45512},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 38, offset: 45513},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 43, offset: 45518},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 44, offset: 45519},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1080, col: 48, offset: 45523,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 150, col: 33, offset: 5710},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 150, col: 38, offset: 5715},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonInlineElement1008,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
									&charClassMatcher{
										pos:        position{line: 1070, col: 16, offset: 45144},
										val:        "[()[]]",
										chars:      []rune{'(', ')', '[', ']'},
										ignoreCase: false,
										inverted:   false,
									},
									&actionExpr{
										pos: position{line: 568, col: 14, offset: 22373},
										run: (*parser).callonInlineElement1011,
										expr: &seqExpr{
											pos: position{line: 568, col: 14, offset: 22373},
											exprs: []interface{}{
												&choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonInlineElement1015,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 568, col: 17, offset: 22376},
													val:        "+",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 568, col: 21, offset: 22380},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonInlineElement1021,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1102, col: 8, offset: 45866},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1100, col: 8, offset: 45855},
															expr: &anyMatcher{
																line: 1100, col: 9, offset: 45856,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 550, col: 201, offset: 21458},
										name: "Word",
									},
									&zeroOrMoreExpr{
										pos: position{line: 550, col: 208, offset: 21465},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonInlineElement1032,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementsWithoutSubtitution",
			pos:  position{line: 557, col: 1, offset: 21719},
			expr: &actionExpr{
				pos: position{line: 557, col: 37, offset: 21755},
				run: (*parser).callonInlineElementsWithoutSubtitution1,
				expr: &seqExpr{
					pos: position{line: 557, col: 37, offset: 21755},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 557, col: 37, offset: 21755},
							expr: &actionExpr{
								pos: position{line: 1061, col: 14, offset: 44948},
								run: (*parser).callonInlineElementsWithoutSubtitution4,
								expr: &seqExpr{
									pos: position{line: 1061, col: 14, offset: 44948},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1061, col: 14, offset: 44948},
											expr: &notExpr{
												pos: position{line: 1100, col: 8, offset: 45855},
												expr: &anyMatcher{
													line: 1100, col: 9, offset: 45856,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1061, col: 19, offset: 44953},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonInlineElementsWithoutSubtitution12,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 557, col: 48, offset: 21766},
							expr: &choiceExpr{
								pos: position{line: 832, col: 19, offset: 35999},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 998, col: 26, offset: 42680},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 840, col: 25, offset: 36416},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 840, col: 25, offset: 36416},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 840, col: 31, offset: 36422},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonInlineElementsWithoutSubtitution27,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 851, col: 26, offset: 36895},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 851, col: 26, offset: 36895},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 851, col: 33, offset: 36902},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonInlineElementsWithoutSubtitution39,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 873, col: 26, offset: 37800},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 873, col: 26, offset: 37800},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 873, col: 33, offset: 37807},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonInlineElementsWithoutSubtitution51,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 974, col: 26, offset: 41735},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 896, col: 24, offset: 38625},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 896, col: 24, offset: 38625},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 896, col: 31, offset: 38632},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonInlineElementsWithoutSubtitution64,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 931, col: 26, offset: 40218},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 931, col: 26, offset: 40218},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 931, col: 33, offset: 40225},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonInlineElementsWithoutSubtitution76,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 557, col: 64, offset: 21782},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 557, col: 73, offset: 21791},
								expr: &ruleRefExpr{
									pos:  position{line: 557, col: 74, offset: 21792},
									name: "InlineElementWithoutSubtitution",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 557, col: 108, offset: 21826},
							label: "linebreak",
							expr: &zeroOrOneExpr{
								pos: position{line: 557, col: 118, offset: 21836},
								expr: &actionExpr{
									pos: position{line: 568, col: 14, offset: 22373},
									run: (*parser).callonInlineElementsWithoutSubtitution88,
									expr: &seqExpr{
										pos: position{line: 568, col: 14, offset: 22373},
										exprs: []interface{}{
											&choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonInlineElementsWithoutSubtitution92,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 568, col: 17, offset: 22376},
												val:        "+",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 568, col: 21, offset: 22380},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonInlineElementsWithoutSubtitution98,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&zeroOrOneExpr{
							pos: position{line: 557, col: 131, offset: 21849},
							expr: &choiceExpr{
								pos: position{line: 1102, col: 8, offset: 45866},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1098, col: 12, offset: 45826},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1098, col: 21, offset: 45835},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1100, col: 8, offset: 45855},
										expr: &anyMatcher{
											line: 1100, col: 9, offset: 45856,
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementWithoutSubtitution",
			pos:  position{line: 561, col: 1, offset: 21979},
			expr: &actionExpr{
				pos: position{line: 561, col: 36, offset: 22014},
				run: (*parser).callonInlineElementWithoutSubtitution1,
				expr: &seqExpr{
					pos: position{line: 561, col: 36, offset: 22014},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 561, col: 36, offset: 22014},
							expr: &choiceExpr{
								pos: position{line: 1102, col: 8, offset: 45866},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1098, col: 12, offset: 45826},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1098, col: 21, offset: 45835},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1100, col: 8, offset: 45855},
										expr: &anyMatcher{
											line: 1100, col: 9, offset: 45856,
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 561, col: 41, offset: 22019},
							expr: &actionExpr{
								pos: position{line: 568, col: 14, offset: 22373},
								run: (*parser).callonInlineElementWithoutSubtitution10,
								expr: &seqExpr{
									pos: position{line: 568, col: 14, offset: 22373},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonInlineElementWithoutSubtitution14,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 568, col: 17, offset: 22376},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 568, col: 21, offset: 22380},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonInlineElementWithoutSubtitution20,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 561, col: 52, offset: 22030},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 561, col: 61, offset: 22039},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 561, col: 61, offset: 22039},
										name: "QuotedText",
									},
									&actionExpr{
										pos: position{line: 725, col: 19, offset: 31770},
										run: (*parser).callonInlineElementWithoutSubtitution30,
										expr: &seqExpr{
											pos: position{line: 725, col: 19, offset: 31770},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 725, col: 19, offset: 31770},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 725, col: 24, offset: 31775},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														run: (*parser).callonInlineElementWithoutSubtitution34,
														expr: &oneOrMoreExpr{
															pos: position{line: 1080, col: 7, offset: 45482},
															expr: &seqExpr{
																pos: position{line: 1080, col: 8, offset: 45483},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1080, col: 8, offset: 45483},
																		expr: &choiceExpr{
																			pos: position{line: 1098, col: 12, offset: 45826},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 17, offset: 45492},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonInlineElementWithoutSubtitution44,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 21, offset: 45496},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 22, offset: 45497},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 26, offset: 45501},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 27, offset: 45502},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 31, offset: 45506},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 32, offset: 45507},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 37, offset: 45512},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 38, offset: 45513},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 43, offset: 45518},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 44, offset: 45519},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1080, col: 48, offset: 45523,
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 725, col: 32, offset: 31783},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonInlineElementWithoutSubtitution60,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 725, col: 36, offset: 31787},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 725, col: 40, offset: 31791},
													label: "label",
													expr: &actionExpr{
														pos: position{line: 731, col: 24, offset: 31993},
														run: (*parser).callonInlineElementWithoutSubtitution64,
														expr: &oneOrMoreExpr{
															pos: position{line: 731, col: 24, offset: 31993},
															expr: &seqExpr{
																pos: position{line: 731, col: 25, offset: 31994},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 731, col: 25, offset: 31994},
																		expr: &litMatcher{
																			pos:        position{line: 731, col: 26, offset: 31995},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 731, col: 31, offset: 32000,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 725, col: 68, offset: 31819},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 727, col: 5, offset: 31894},
										run: (*parser).callonInlineElementWithoutSubtitution71,
										expr: &seqExpr{
											pos: position{line: 727, col: 5, offset: 31894},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 727, col: 5, offset: 31894},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 727, col: 10, offset: 31899},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														run: (*parser).callonInlineElementWithoutSubtitution75,
														expr: &oneOrMoreExpr{
															pos: position{line: 1080, col: 7, offset: 45482},
															expr: &seqExpr{
																pos: position{line: 1080, col: 8, offset: 45483},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1080, col: 8, offset: 45483},
																		expr: &choiceExpr{
																			pos: position{line: 1098, col: 12, offset: 45826},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 17, offset: 45492},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonInlineElementWithoutSubtitution85,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 21, offset: 45496},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 22, offset: 45497},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 26, offset: 45501},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 27, offset: 45502},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 31, offset: 45506},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 32, offset: 45507},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 37, offset: 45512},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 38, offset: 45513},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 43, offset: 45518},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 44, offset: 45519},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1080, col: 48, offset: 45523,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 727, col: 18, offset: 31907},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 561, col: 91, offset: 22069},
										name: "Passthrough",
									},
									&actionExpr{
										pos: position{line: 779, col: 16, offset: 33487},
										run: (*parser).callonInlineElementWithoutSubtitution100,
										expr: &seqExpr{
											pos: position{line: 779, col: 16, offset: 33487},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 779, col: 16, offset: 33487},
													val:        "image:",
													ignoreCase: false,
												},
												&notExpr{
													pos: position{line: 779, col: 25, offset: 33496},
													expr: &litMatcher{
														pos:        position{line: 779, col: 26, offset: 33497},
														val:        ":",
														ignoreCase: false,
													},
												},
												&labeledExpr{
													pos:   position{line: 779, col: 30, offset: 33501},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1076, col: 8, offset: 45412},
														run: (*parser).callonInlineElementWithoutSubtitution106,
														expr: &oneOrMoreExpr{
															pos: position{line: 1076, col: 8, offset: 45412},
															expr: &seqExpr{
																pos: position{line: 1076, col: 9, offset: 45413},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1076, col: 9, offset: 45413},
																		expr: &choiceExpr{
																			pos: position{line: 1098, col: 12, offset: 45826},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1076, col: 18, offset: 45422},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonInlineElementWithoutSubtitution116,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1076, col: 22, offset: 45426},
																		expr: &litMatcher{
																			pos:        position{line: 1076, col: 23, offset: 45427},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1076, col: 27, offset: 45431},
																		expr: &litMatcher{
																			pos:        position{line: 1076, col: 28, offset: 45432},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1076, col: 32, offset: 45436,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 779, col: 41, offset: 33512},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 784, col: 20, offset: 33769},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 784, col: 20, offset: 33769},
																run: (*parser).callonInlineElementWithoutSubtitution125,
																expr: &seqExpr{
																	pos: position{line: 784, col: 20, offset: 33769},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 784, col: 20, offset: 33769},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 784, col: 24, offset: 33773},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonInlineElementWithoutSubtitution129,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 784, col: 45, offset: 33794},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 785, col: 9, offset: 33806},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonInlineElementWithoutSubtitution141,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 785, col: 33, offset: 33830},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 786, col: 9, offset: 33842},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonInlineElementWithoutSubtitution153,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 786, col: 33, offset: 33866},
																			expr: &litMatcher{
																				pos:        position{line: 786, col: 33, offset: 33866},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 787, col: 9, offset: 33879},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 787, col: 20, offset: 33890},
																				expr: &choiceExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							run: (*parser).callonInlineElementWithoutSubtitution168,
																							expr: &seqExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 184, col: 21, offset: 6799},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElementWithoutSubtitution171,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElementWithoutSubtitution174,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElementWithoutSubtitution177,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElementWithoutSubtitution180,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 184, col: 40, offset: 6818},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 184, col: 44, offset: 6822},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 194, col: 19, offset: 7173},
																											run: (*parser).callonInlineElementWithoutSubtitution194,
																											expr: &labeledExpr{
																												pos:   position{line: 194, col: 19, offset: 7173},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 194, col: 25, offset: 7179},
																													expr: &seqExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 27, offset: 7181},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 31, offset: 7185},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 32, offset: 7186},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 36, offset: 7190},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 37, offset: 7191},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 194, col: 41, offset: 7195,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 184, col: 67, offset: 6845},
																										expr: &litMatcher{
																											pos:        position{line: 184, col: 67, offset: 6845},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 184, col: 72, offset: 6850},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElementWithoutSubtitution210,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							run: (*parser).callonInlineElementWithoutSubtitution212,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 186, col: 5, offset: 6934},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElementWithoutSubtitution215,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElementWithoutSubtitution218,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElementWithoutSubtitution221,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElementWithoutSubtitution224,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 186, col: 24, offset: 6953},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 24, offset: 6953},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 186, col: 29, offset: 6958},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElementWithoutSubtitution241,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 787, col: 40, offset: 33910},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 789, col: 9, offset: 34016},
																run: (*parser).callonInlineElementWithoutSubtitution244,
																expr: &seqExpr{
																	pos: position{line: 789, col: 9, offset: 34016},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 789, col: 9, offset: 34016},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 789, col: 13, offset: 34020},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonInlineElementWithoutSubtitution248,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 789, col: 34, offset: 34041},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 790, col: 9, offset: 34053},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonInlineElementWithoutSubtitution260,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 790, col: 32, offset: 34076},
																			expr: &litMatcher{
																				pos:        position{line: 790, col: 32, offset: 34076},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 791, col: 9, offset: 34089},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 791, col: 20, offset: 34100},
																				expr: &choiceExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							run: (*parser).callonInlineElementWithoutSubtitution275,
																							expr: &seqExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 184, col: 21, offset: 6799},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElementWithoutSubtitution278,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElementWithoutSubtitution281,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElementWithoutSubtitution284,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElementWithoutSubtitution287,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 184, col: 40, offset: 6818},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 184, col: 44, offset: 6822},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 194, col: 19, offset: 7173},
																											run: (*parser).callonInlineElementWithoutSubtitution301,
																											expr: &labeledExpr{
																												pos:   position{line: 194, col: 19, offset: 7173},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 194, col: 25, offset: 7179},
																													expr: &seqExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 27, offset: 7181},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 31, offset: 7185},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 32, offset: 7186},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 36, offset: 7190},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 37, offset: 7191},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 194, col: 41, offset: 7195,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 184, col: 67, offset: 6845},
																										expr: &litMatcher{
																											pos:        position{line: 184, col: 67, offset: 6845},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 184, col: 72, offset: 6850},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElementWithoutSubtitution317,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							run: (*parser).callonInlineElementWithoutSubtitution319,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 186, col: 5, offset: 6934},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElementWithoutSubtitution322,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElementWithoutSubtitution325,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElementWithoutSubtitution328,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElementWithoutSubtitution331,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 186, col: 24, offset: 6953},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 24, offset: 6953},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 186, col: 29, offset: 6958},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElementWithoutSubtitution348,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 791, col: 40, offset: 34120},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 793, col: 9, offset: 34223},
																run: (*parser).callonInlineElementWithoutSubtitution351,
																expr: &seqExpr{
																	pos: position{line: 793, col: 9, offset: 34223},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 793, col: 9, offset: 34223},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 793, col: 13, offset: 34227},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 801, col: 19, offset: 34548},
																				run: (*parser).callonInlineElementWithoutSubtitution355,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 801, col: 19, offset: 34548},
																					expr: &seqExpr{
																						pos: position{line: 801, col: 20, offset: 34549},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 801, col: 20, offset: 34549},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 21, offset: 34550},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 25, offset: 34554},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 26, offset: 34555},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 801, col: 30, offset: 34559},
																								expr: &litMatcher{
																									pos:        position{line: 801, col: 31, offset: 34560},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 801, col: 35, offset: 34564,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 793, col: 34, offset: 34248},
																			expr: &litMatcher{
																				pos:        position{line: 793, col: 34, offset: 34248},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 794, col: 9, offset: 34261},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 794, col: 20, offset: 34272},
																				expr: &choiceExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							run: (*parser).callonInlineElementWithoutSubtitution370,
																							expr: &seqExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 184, col: 21, offset: 6799},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElementWithoutSubtitution373,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElementWithoutSubtitution376,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElementWithoutSubtitution379,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElementWithoutSubtitution382,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 184, col: 40, offset: 6818},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 184, col: 44, offset: 6822},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 194, col: 19, offset: 7173},
																											run: (*parser).callonInlineElementWithoutSubtitution396,
																											expr: &labeledExpr{
																												pos:   position{line: 194, col: 19, offset: 7173},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 194, col: 25, offset: 7179},
																													expr: &seqExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 27, offset: 7181},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 31, offset: 7185},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 32, offset: 7186},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 36, offset: 7190},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 37, offset: 7191},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 194, col: 41, offset: 7195,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 184, col: 67, offset: 6845},
																										expr: &litMatcher{
																											pos:        position{line: 184, col: 67, offset: 6845},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 184, col: 72, offset: 6850},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElementWithoutSubtitution412,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							run: (*parser).callonInlineElementWithoutSubtitution414,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 186, col: 5, offset: 6934},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElementWithoutSubtitution417,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElementWithoutSubtitution420,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElementWithoutSubtitution423,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElementWithoutSubtitution426,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 186, col: 24, offset: 6953},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 24, offset: 6953},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 186, col: 29, offset: 6958},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElementWithoutSubtitution443,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 794, col: 40, offset: 34292},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 796, col: 9, offset: 34393},
																run: (*parser).callonInlineElementWithoutSubtitution446,
																expr: &seqExpr{
																	pos: position{line: 796, col: 9, offset: 34393},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 796, col: 9, offset: 34393},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 796, col: 13, offset: 34397},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 796, col: 24, offset: 34408},
																				expr: &choiceExpr{
																					pos: position{line: 184, col: 21, offset: 6799},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 184, col: 21, offset: 6799},
																							run: (*parser).callonInlineElementWithoutSubtitution452,
																							expr: &seqExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 184, col: 21, offset: 6799},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElementWithoutSubtitution455,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElementWithoutSubtitution458,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElementWithoutSubtitution461,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElementWithoutSubtitution464,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 184, col: 40, offset: 6818},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 184, col: 44, offset: 6822},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 194, col: 19, offset: 7173},
																											run: (*parser).callonInlineElementWithoutSubtitution478,
																											expr: &labeledExpr{
																												pos:   position{line: 194, col: 19, offset: 7173},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 194, col: 25, offset: 7179},
																													expr: &seqExpr{
																														pos: position{line: 194, col: 26, offset: 7180},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 194, col: 26, offset: 7180},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 27, offset: 7181},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 31, offset: 7185},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 32, offset: 7186},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 194, col: 36, offset: 7190},
																																expr: &litMatcher{
																																	pos:        position{line: 194, col: 37, offset: 7191},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 194, col: 41, offset: 7195,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 184, col: 67, offset: 6845},
																										expr: &litMatcher{
																											pos:        position{line: 184, col: 67, offset: 6845},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 184, col: 72, offset: 6850},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElementWithoutSubtitution494,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 5, offset: 6934},
																							run: (*parser).callonInlineElementWithoutSubtitution496,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 186, col: 5, offset: 6934},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 190, col: 17, offset: 7059},
																											run: (*parser).callonInlineElementWithoutSubtitution499,
																											expr: &seqExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 190, col: 17, offset: 7059},
																														expr: &actionExpr{
																															pos: position{line: 214, col: 14, offset: 7892},
																															run: (*parser).callonInlineElementWithoutSubtitution502,
																															expr: &litMatcher{
																																pos:        position{line: 214, col: 14, offset: 7892},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 28, offset: 7070},
																														expr: &actionExpr{
																															pos: position{line: 230, col: 14, offset: 8489},
																															run: (*parser).callonInlineElementWithoutSubtitution505,
																															expr: &litMatcher{
																																pos:        position{line: 230, col: 14, offset: 8489},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 190, col: 39, offset: 7081},
																														expr: &actionExpr{
																															pos: position{line: 1040, col: 16, offset: 44408},
																															run: (*parser).callonInlineElementWithoutSubtitution508,
																															expr: &litMatcher{
																																pos:        position{line: 1040, col: 16, offset: 44408},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 190, col: 52, offset: 7094},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 190, col: 56, offset: 7098},
																															expr: &seqExpr{
																																pos: position{line: 190, col: 57, offset: 7099},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 57, offset: 7099},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 58, offset: 7100},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 62, offset: 7104},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 63, offset: 7105},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 67, offset: 7109},
																																		expr: &litMatcher{
																																			pos:        position{line: 190, col: 68, offset: 7110},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 190, col: 72, offset: 7114,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 186, col: 24, offset: 6953},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 24, offset: 6953},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 186, col: 29, offset: 6958},
																										expr: &choiceExpr{
																											pos: position{line: 1094, col: 7, offset: 45764},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1094, col: 7, offset: 45764},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1094, col: 13, offset: 45770},
																													run: (*parser).callonInlineElementWithoutSubtitution525,
																													expr: &litMatcher{
																														pos:        position{line: 1094, col: 13, offset: 45770},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 796, col: 44, offset: 34428},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 738, col: 9, offset: 32149},
										run: (*parser).callonInlineElementWithoutSubtitution528,
										expr: &labeledExpr{
											pos:   position{line: 738, col: 9, offset: 32149},
											label: "link",
											expr: &choiceExpr{
												pos: position{line: 738, col: 15, offset: 32155},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 753, col: 17, offset: 32607},
														run: (*parser).callonInlineElementWithoutSubtitution531,
														expr: &seqExpr{
															pos: position{line: 753, col: 17, offset: 32607},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 753, col: 17, offset: 32607},
																	val:        "link:",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 753, col: 25, offset: 32615},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 757, col: 20, offset: 32784},
																		run: (*parser).callonInlineElementWithoutSubtitution535,
																		expr: &seqExpr{
																			pos: position{line: 757, col: 20, offset: 32784},
																			exprs: []interface{}{
																				&zeroOrOneExpr{
																					pos: position{line: 757, col: 20, offset: 32784},
																					expr: &choiceExpr{
																						pos: position{line: 1088, col: 15, offset: 45649},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1088, col: 15, offset: 45649},
																								val:        "http://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1088, col: 27, offset: 45661},
																								val:        "https://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1088, col: 40, offset: 45674},
																								val:        "ftp://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1088, col: 51, offset: 45685},
																								val:        "irc://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1088, col: 62, offset: 45696},
																								val:        "mailto:",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1076, col: 8, offset: 45412},
																					run: (*parser).callonInlineElementWithoutSubtitution544,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1076, col: 8, offset: 45412},
																						expr: &seqExpr{
																							pos: position{line: 1076, col: 9, offset: 45413},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1076, col: 9, offset: 45413},
																									expr: &choiceExpr{
																										pos: position{line: 1098, col: 12, offset: 45826},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1098, col: 12, offset: 45826},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1098, col: 21, offset: 45835},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1076, col: 18, offset: 45422},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonInlineElementWithoutSubtitution554,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1076, col: 22, offset: 45426},
																									expr: &litMatcher{
																										pos:        position{line: 1076, col: 23, offset: 45427},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1076, col: 27, offset: 45431},
																									expr: &litMatcher{
																										pos:        position{line: 1076, col: 28, offset: 45432},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1076, col: 32, offset: 45436,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 753, col: 47, offset: 32637},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 761, col: 19, offset: 32854},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 761, col: 19, offset: 32854},
																				run: (*parser).callonInlineElementWithoutSubtitution563,
																				expr: &seqExpr{
																					pos: position{line: 761, col: 19, offset: 32854},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 761, col: 19, offset: 32854},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 761, col: 23, offset: 32858},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 768, col: 22, offset: 33146},
																								run: (*parser).callonInlineElementWithoutSubtitution567,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 768, col: 22, offset: 33146},
																									expr: &seqExpr{
																										pos: position{line: 768, col: 23, offset: 33147},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 768, col: 23, offset: 33147},
																												expr: &litMatcher{
																													pos:        position{line: 768, col: 24, offset: 33148},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 768, col: 28, offset: 33152},
																												expr: &litMatcher{
																													pos:        position{line: 768, col: 29, offset: 33153},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 768, col: 33, offset: 33157,
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 762, col: 9, offset: 32891},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 762, col: 20, offset: 32902},
																								expr: &choiceExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 184, col: 21, offset: 6799},
																											run: (*parser).callonInlineElementWithoutSubtitution578,
																											expr: &seqExpr{
																												pos: position{line: 184, col: 21, offset: 6799},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 184, col: 21, offset: 6799},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElementWithoutSubtitution581,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElementWithoutSubtitution584,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElementWithoutSubtitution587,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElementWithoutSubtitution590,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 184, col: 40, offset: 6818},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 184, col: 44, offset: 6822},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 194, col: 19, offset: 7173},
																															run: (*parser).callonInlineElementWithoutSubtitution604,
																															expr: &labeledExpr{
																																pos:   position{line: 194, col: 19, offset: 7173},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 194, col: 25, offset: 7179},
																																	expr: &seqExpr{
																																		pos: position{line: 194, col: 26, offset: 7180},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 194, col: 26, offset: 7180},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 27, offset: 7181},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 31, offset: 7185},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 32, offset: 7186},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 36, offset: 7190},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 37, offset: 7191},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 194, col: 41, offset: 7195,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 184, col: 67, offset: 6845},
																														expr: &litMatcher{
																															pos:        position{line: 184, col: 67, offset: 6845},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 184, col: 72, offset: 6850},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElementWithoutSubtitution620,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 186, col: 5, offset: 6934},
																											run: (*parser).callonInlineElementWithoutSubtitution622,
																											expr: &seqExpr{
																												pos: position{line: 186, col: 5, offset: 6934},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 186, col: 5, offset: 6934},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElementWithoutSubtitution625,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElementWithoutSubtitution628,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElementWithoutSubtitution631,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElementWithoutSubtitution634,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 186, col: 24, offset: 6953},
																														expr: &litMatcher{
																															pos:        position{line: 186, col: 24, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 186, col: 29, offset: 6958},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElementWithoutSubtitution651,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 762, col: 40, offset: 32922},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 764, col: 5, offset: 33007},
																				run: (*parser).callonInlineElementWithoutSubtitution654,
																				expr: &seqExpr{
																					pos: position{line: 764, col: 5, offset: 33007},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 764, col: 5, offset: 33007},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 764, col: 9, offset: 33011},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 764, col: 20, offset: 33022},
																								expr: &choiceExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 184, col: 21, offset: 6799},
																											run: (*parser).callonInlineElementWithoutSubtitution660,
																											expr: &seqExpr{
																												pos: position{line: 184, col: 21, offset: 6799},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 184, col: 21, offset: 6799},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElementWithoutSubtitution663,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElementWithoutSubtitution666,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElementWithoutSubtitution669,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElementWithoutSubtitution672,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 184, col: 40, offset: 6818},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 184, col: 44, offset: 6822},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 194, col: 19, offset: 7173},
																															run: (*parser).callonInlineElementWithoutSubtitution686,
																															expr: &labeledExpr{
																																pos:   position{line: 194, col: 19, offset: 7173},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 194, col: 25, offset: 7179},
																																	expr: &seqExpr{
																																		pos: position{line: 194, col: 26, offset: 7180},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 194, col: 26, offset: 7180},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 27, offset: 7181},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 31, offset: 7185},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 32, offset: 7186},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 36, offset: 7190},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 37, offset: 7191},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 194, col: 41, offset: 7195,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 184, col: 67, offset: 6845},
																														expr: &litMatcher{
																															pos:        position{line: 184, col: 67, offset: 6845},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 184, col: 72, offset: 6850},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElementWithoutSubtitution702,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 186, col: 5, offset: 6934},
																											run: (*parser).callonInlineElementWithoutSubtitution704,
																											expr: &seqExpr{
																												pos: position{line: 186, col: 5, offset: 6934},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 186, col: 5, offset: 6934},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElementWithoutSubtitution707,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElementWithoutSubtitution710,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElementWithoutSubtitution713,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElementWithoutSubtitution716,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 186, col: 24, offset: 6953},
																														expr: &litMatcher{
																															pos:        position{line: 186, col: 24, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 186, col: 29, offset: 6958},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElementWithoutSubtitution733,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 764, col: 40, offset: 33042},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 742, col: 17, offset: 32226},
														run: (*parser).callonInlineElementWithoutSubtitution736,
														expr: &seqExpr{
															pos: position{line: 742, col: 17, offset: 32226},
															exprs: []interface{}{
																&labeledExpr{
																	pos:   position{line: 742, col: 17, offset: 32226},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 748, col: 20, offset: 32473},
																		run: (*parser).callonInlineElementWithoutSubtitution739,
																		expr: &seqExpr{
																			pos: position{line: 748, col: 20, offset: 32473},
																			exprs: []interface{}{
																				&choiceExpr{
																					pos: position{line: 1088, col: 15, offset: 45649},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1088, col: 15, offset: 45649},
																							val:        "http://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1088, col: 27, offset: 45661},
																							val:        "https://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1088, col: 40, offset: 45674},
																							val:        "ftp://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1088, col: 51, offset: 45685},
																							val:        "irc://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1088, col: 62, offset: 45696},
																							val:        "mailto:",
																							ignoreCase: false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1076, col: 8, offset: 45412},
																					run: (*parser).callonInlineElementWithoutSubtitution747,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1076, col: 8, offset: 45412},
																						expr: &seqExpr{
																							pos: position{line: 1076, col: 9, offset: 45413},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1076, col: 9, offset: 45413},
																									expr: &choiceExpr{
																										pos: position{line: 1098, col: 12, offset: 45826},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1098, col: 12, offset: 45826},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1098, col: 21, offset: 45835},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1076, col: 18, offset: 45422},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonInlineElementWithoutSubtitution757,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1076, col: 22, offset: 45426},
																									expr: &litMatcher{
																										pos:        position{line: 1076, col: 23, offset: 45427},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1076, col: 27, offset: 45431},
																									expr: &litMatcher{
																										pos:        position{line: 1076, col: 28, offset: 45432},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1076, col: 32, offset: 45436,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 742, col: 39, offset: 32248},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 761, col: 19, offset: 32854},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 761, col: 19, offset: 32854},
																				run: (*parser).callonInlineElementWithoutSubtitution766,
																				expr: &seqExpr{
																					pos: position{line: 761, col: 19, offset: 32854},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 761, col: 19, offset: 32854},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 761, col: 23, offset: 32858},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 768, col: 22, offset: 33146},
																								run: (*parser).callonInlineElementWithoutSubtitution770,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 768, col: 22, offset: 33146},
																									expr: &seqExpr{
																										pos: position{line: 768, col: 23, offset: 33147},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 768, col: 23, offset: 33147},
																												expr: &litMatcher{
																													pos:        position{line: 768, col: 24, offset: 33148},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 768, col: 28, offset: 33152},
																												expr: &litMatcher{
																													pos:        position{line: 768, col: 29, offset: 33153},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 768, col: 33, offset: 33157,
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 762, col: 9, offset: 32891},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 762, col: 20, offset: 32902},
																								expr: &choiceExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 184, col: 21, offset: 6799},
																											run: (*parser).callonInlineElementWithoutSubtitution781,
																											expr: &seqExpr{
																												pos: position{line: 184, col: 21, offset: 6799},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 184, col: 21, offset: 6799},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElementWithoutSubtitution784,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElementWithoutSubtitution787,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElementWithoutSubtitution790,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElementWithoutSubtitution793,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 184, col: 40, offset: 6818},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 184, col: 44, offset: 6822},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 194, col: 19, offset: 7173},
																															run: (*parser).callonInlineElementWithoutSubtitution807,
																															expr: &labeledExpr{
																																pos:   position{line: 194, col: 19, offset: 7173},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 194, col: 25, offset: 7179},
																																	expr: &seqExpr{
																																		pos: position{line: 194, col: 26, offset: 7180},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 194, col: 26, offset: 7180},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 27, offset: 7181},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 31, offset: 7185},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 32, offset: 7186},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 36, offset: 7190},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 37, offset: 7191},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 194, col: 41, offset: 7195,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 184, col: 67, offset: 6845},
																														expr: &litMatcher{
																															pos:        position{line: 184, col: 67, offset: 6845},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 184, col: 72, offset: 6850},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElementWithoutSubtitution823,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 186, col: 5, offset: 6934},
																											run: (*parser).callonInlineElementWithoutSubtitution825,
																											expr: &seqExpr{
																												pos: position{line: 186, col: 5, offset: 6934},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 186, col: 5, offset: 6934},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElementWithoutSubtitution828,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElementWithoutSubtitution831,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElementWithoutSubtitution834,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElementWithoutSubtitution837,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 186, col: 24, offset: 6953},
																														expr: &litMatcher{
																															pos:        position{line: 186, col: 24, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 186, col: 29, offset: 6958},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElementWithoutSubtitution854,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 762, col: 40, offset: 32922},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 764, col: 5, offset: 33007},
																				run: (*parser).callonInlineElementWithoutSubtitution857,
																				expr: &seqExpr{
																					pos: position{line: 764, col: 5, offset: 33007},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 764, col: 5, offset: 33007},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 764, col: 9, offset: 33011},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 764, col: 20, offset: 33022},
																								expr: &choiceExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 184, col: 21, offset: 6799},
																											run: (*parser).callonInlineElementWithoutSubtitution863,
																											expr: &seqExpr{
																												pos: position{line: 184, col: 21, offset: 6799},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 184, col: 21, offset: 6799},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElementWithoutSubtitution866,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElementWithoutSubtitution869,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElementWithoutSubtitution872,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElementWithoutSubtitution875,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 184, col: 40, offset: 6818},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 184, col: 44, offset: 6822},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 194, col: 19, offset: 7173},
																															run: (*parser).callonInlineElementWithoutSubtitution889,
																															expr: &labeledExpr{
																																pos:   position{line: 194, col: 19, offset: 7173},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 194, col: 25, offset: 7179},
																																	expr: &seqExpr{
																																		pos: position{line: 194, col: 26, offset: 7180},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 194, col: 26, offset: 7180},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 27, offset: 7181},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 31, offset: 7185},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 32, offset: 7186},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 194, col: 36, offset: 7190},
																																				expr: &litMatcher{
																																					pos:        position{line: 194, col: 37, offset: 7191},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 194, col: 41, offset: 7195,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 184, col: 67, offset: 6845},
																														expr: &litMatcher{
																															pos:        position{line: 184, col: 67, offset: 6845},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 184, col: 72, offset: 6850},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElementWithoutSubtitution905,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 186, col: 5, offset: 6934},
																											run: (*parser).callonInlineElementWithoutSubtitution907,
																											expr: &seqExpr{
																												pos: position{line: 186, col: 5, offset: 6934},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 186, col: 5, offset: 6934},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															run: (*parser).callonInlineElementWithoutSubtitution910,
																															expr: &seqExpr{
																																pos: position{line: 190, col: 17, offset: 7059},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 190, col: 17, offset: 7059},
																																		expr: &actionExpr{
																																			pos: position{line: 214, col: 14, offset: 7892},
																																			run: (*parser).callonInlineElementWithoutSubtitution913,
																																			expr: &litMatcher{
																																				pos:        position{line: 214, col: 14, offset: 7892},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 28, offset: 7070},
																																		expr: &actionExpr{
																																			pos: position{line: 230, col: 14, offset: 8489},
																																			run: (*parser).callonInlineElementWithoutSubtitution916,
																																			expr: &litMatcher{
																																				pos:        position{line: 230, col: 14, offset: 8489},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 190, col: 39, offset: 7081},
																																		expr: &actionExpr{
																																			pos: position{line: 1040, col: 16, offset: 44408},
																																			run: (*parser).callonInlineElementWithoutSubtitution919,
																																			expr: &litMatcher{
																																				pos:        position{line: 1040, col: 16, offset: 44408},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 190, col: 52, offset: 7094},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 190, col: 56, offset: 7098},
																																			expr: &seqExpr{
																																				pos: position{line: 190, col: 57, offset: 7099},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 190, col: 57, offset: 7099},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 58, offset: 7100},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 62, offset: 7104},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 63, offset: 7105},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 190, col: 67, offset: 7109},
																																						expr: &litMatcher{
																																							pos:        position{line: 190, col: 68, offset: 7110},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 190, col: 72, offset: 7114,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 186, col: 24, offset: 6953},
																														expr: &litMatcher{
																															pos:        position{line: 186, col: 24, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 186, col: 29, offset: 6958},
																														expr: &choiceExpr{
																															pos: position{line: 1094, col: 7, offset: 45764},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1094, col: 7, offset: 45764},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1094, col: 13, offset: 45770},
																																	run: (*parser).callonInlineElementWithoutSubtitution936,
																																	expr: &litMatcher{
																																		pos:        position{line: 1094, col: 13, offset: 45770},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 764, col: 40, offset: 33042},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 744, col: 5, offset: 32377},
														run: (*parser).callonInlineElementWithoutSubtitution939,
														expr: &labeledExpr{
															pos:   position{line: 744, col: 5, offset: 32377},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 748, col: 20, offset: 32473},
																run: (*parser).callonInlineElementWithoutSubtitution941,
																expr: &seqExpr{
																	pos: position{line: 748, col: 20, offset: 32473},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1088, col: 15, offset: 45649},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1088, col: 15, offset: 45649},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1088, col: 27, offset: 45661},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1088, col: 40, offset: 45674},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1088, col: 51, offset: 45685},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1088, col: 62, offset: 45696},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1076, col: 8, offset: 45412},
																			run: (*parser).callonInlineElementWithoutSubtitution949,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1076, col: 8, offset: 45412},
																				expr: &seqExpr{
																					pos: position{line: 1076, col: 9, offset: 45413},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1076, col: 9, offset: 45413},
																							expr: &choiceExpr{
																								pos: position{line: 1098, col: 12, offset: 45826},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1098, col: 12, offset: 45826},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1098, col: 21, offset: 45835},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1076, col: 18, offset: 45422},
																							expr: &choiceExpr{
																								pos: position{line: 1094, col: 7, offset: 45764},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1094, col: 7, offset: 45764},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1094, col: 13, offset: 45770},
																										run: (*parser).callonInlineElementWithoutSubtitution959,
																										expr: &litMatcher{
																											pos:        position{line: 1094, col: 13, offset: 45770},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1076, col: 22, offset: 45426},
																							expr: &litMatcher{
																								pos:        position{line: 1076, col: 23, offset: 45427},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1076, col: 27, offset: 45431},
																							expr: &litMatcher{
																								pos:        position{line: 1076, col: 28, offset: 45432},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1076, col: 32, offset: 45436,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 150, col: 20, offset: 5697},
										run: (*parser).callonInlineElementWithoutSubtitution966,
										expr: &seqExpr{
											pos: position{line: 150, col: 20, offset: 5697},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 150, col: 20, offset: 5697},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 150, col: 25, offset: 5702},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														run: (*parser).callonInlineElementWithoutSubtitution970,
														expr: &oneOrMoreExpr{
															pos: position{line: 1080, col: 7, offset: 45482},
															expr: &seqExpr{
																pos: position{line: 1080, col: 8, offset: 45483},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1080, col: 8, offset: 45483},
																		expr: &choiceExpr{
																			pos: position{line: 1098, col: 12, offset: 45826},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 17, offset: 45492},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonInlineElementWithoutSubtitution980,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 21, offset: 45496},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 22, offset: 45497},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 26, offset: 45501},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 27, offset: 45502},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 31, offset: 45506},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 32, offset: 45507},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 37, offset: 45512},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 38, offset: 45513},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 43, offset: 45518},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 44, offset: 45519},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1080, col: 48, offset: 45523,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 150, col: 33, offset: 5710},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 150, col: 38, offset: 5715},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonInlineElementWithoutSubtitution997,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
									&charClassMatcher{
										pos:        position{line: 1070, col: 16, offset: 45144},
										val:        "[()[]]",
										chars:      []rune{'(', ')', '[', ']'},
										ignoreCase: false,
										inverted:   false,
									},
									&ruleRefExpr{
										pos:  position{line: 561, col: 157, offset: 22135},
										name: "Word",
									},
									&zeroOrMoreExpr{
										pos: position{line: 561, col: 164, offset: 22142},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonInlineElementWithoutSubtitution1004,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedText",
			pos:  position{line: 575, col: 1, offset: 22668},
			expr: &choiceExpr{
				pos: position{line: 575, col: 15, offset: 22682},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 575, col: 15, offset: 22682},
						name: "BoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 575, col: 26, offset: 22693},
						name: "ItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 575, col: 39, offset: 22706},
						name: "MonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 575, col: 55, offset: 22722},
						name: "SubscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 575, col: 71, offset: 22738},
						name: "SuperscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 576, col: 13, offset: 22768},
						name: "EscapedBoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 576, col: 31, offset: 22786},
						name: "EscapedItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 576, col: 51, offset: 22806},
						name: "EscapedMonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 576, col: 74, offset: 22829},
						name: "EscapedSubscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 576, col: 97, offset: 22852},
						name: "EscapedSuperscriptText",
					},
				},
			},
		},
		{
			name: "SubScriptOrSuperScriptText",
			pos:  position{line: 578, col: 1, offset: 22876},
			expr: &choiceExpr{
				pos: position{line: 578, col: 31, offset: 22906},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 578, col: 31, offset: 22906},
						name: "SubscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 578, col: 47, offset: 22922},
						name: "SuperscriptText",
					},
				},
			},
		},
		{
			name: "BoldText",
			pos:  position{line: 580, col: 1, offset: 23032},
			expr: &choiceExpr{
				pos: position{line: 581, col: 5, offset: 23049},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 581, col: 5, offset: 23049},
						run: (*parser).callonBoldText2,
						expr: &seqExpr{
							pos: position{line: 581, col: 5, offset: 23049},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 581, col: 5, offset: 23049},
									expr: &litMatcher{
										pos:        position{line: 581, col: 6, offset: 23050},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 581, col: 11, offset: 23055},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 581, col: 16, offset: 23060},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 581, col: 25, offset: 23069},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 581, col: 44, offset: 23088},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 583, col: 9, offset: 23221},
						run: (*parser).callonBoldText10,
						expr: &seqExpr{
							pos: position{line: 583, col: 9, offset: 23221},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 583, col: 9, offset: 23221},
									expr: &litMatcher{
										pos:        position{line: 583, col: 10, offset: 23222},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 583, col: 15, offset: 23227},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 583, col: 20, offset: 23232},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 583, col: 29, offset: 23241},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 583, col: 48, offset: 23260},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 586, col: 9, offset: 23437},
						run: (*parser).callonBoldText18,
						expr: &seqExpr{
							pos: position{line: 586, col: 9, offset: 23437},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 586, col: 9, offset: 23437},
									expr: &litMatcher{
										pos:        position{line: 586, col: 10, offset: 23438},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 586, col: 14, offset: 23442},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 586, col: 18, offset: 23446},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 586, col: 27, offset: 23455},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 586, col: 46, offset: 23474},
									val:        "*",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 586, col: 50, offset: 23478},
									expr: &charClassMatcher{
										pos:        position{line: 1068, col: 13, offset: 45116},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedBoldText",
			pos:  position{line: 590, col: 1, offset: 23672},
			expr: &choiceExpr{
				pos: position{line: 591, col: 5, offset: 23696},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 591, col: 5, offset: 23696},
						run: (*parser).callonEscapedBoldText2,
						expr: &seqExpr{
							pos: position{line: 591, col: 5, offset: 23696},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 591, col: 5, offset: 23696},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 604, col: 25, offset: 24500},
										run: (*parser).callonEscapedBoldText5,
										expr: &seqExpr{
											pos: position{line: 604, col: 25, offset: 24500},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 604, col: 25, offset: 24500},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 604, col: 30, offset: 24505},
													expr: &litMatcher{
														pos:        position{line: 604, col: 30, offset: 24505},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 591, col: 40, offset: 23731},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 591, col: 45, offset: 23736},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 591, col: 54, offset: 23745},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 591, col: 73, offset: 23764},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 593, col: 9, offset: 23920},
						run: (*parser).callonEscapedBoldText14,
						expr: &seqExpr{
							pos: position{line: 593, col: 9, offset: 23920},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 593, col: 9, offset: 23920},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 600, col: 25, offset: 24431},
										run: (*parser).callonEscapedBoldText17,
										expr: &seqExpr{
											pos: position{line: 600, col: 25, offset: 24431},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 600, col: 25, offset: 24431},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 600, col: 29, offset: 24435},
													expr: &litMatcher{
														pos:        position{line: 600, col: 29, offset: 24435},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 593, col: 44, offset: 23955},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 593, col: 49, offset: 23960},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 593, col: 58, offset: 23969},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 593, col: 77, offset: 23988},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 596, col: 9, offset: 24187},
						run: (*parser).callonEscapedBoldText26,
						expr: &seqExpr{
							pos: position{line: 596, col: 9, offset: 24187},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 596, col: 9, offset: 24187},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 600, col: 25, offset: 24431},
										run: (*parser).callonEscapedBoldText29,
										expr: &seqExpr{
											pos: position{line: 600, col: 25, offset: 24431},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 600, col: 25, offset: 24431},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 600, col: 29, offset: 24435},
													expr: &litMatcher{
														pos:        position{line: 600, col: 29, offset: 24435},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 596, col: 44, offset: 24222},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 596, col: 48, offset: 24226},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 596, col: 57, offset: 24235},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 596, col: 76, offset: 24254},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ItalicText",
			pos:  position{line: 608, col: 1, offset: 24546},
			expr: &choiceExpr{
				pos: position{line: 609, col: 5, offset: 24565},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 609, col: 5, offset: 24565},
						run: (*parser).callonItalicText2,
						expr: &seqExpr{
							pos: position{line: 609, col: 5, offset: 24565},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 609, col: 5, offset: 24565},
									expr: &litMatcher{
										pos:        position{line: 609, col: 6, offset: 24566},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 609, col: 11, offset: 24571},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 609, col: 16, offset: 24576},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 609, col: 25, offset: 24585},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 609, col: 44, offset: 24604},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 611, col: 9, offset: 24693},
						run: (*parser).callonItalicText10,
						expr: &seqExpr{
							pos: position{line: 611, col: 9, offset: 24693},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 611, col: 9, offset: 24693},
									expr: &litMatcher{
										pos:        position{line: 611, col: 10, offset: 24694},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 611, col: 15, offset: 24699},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 611, col: 20, offset: 24704},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 611, col: 29, offset: 24713},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 611, col: 48, offset: 24732},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 614, col: 9, offset: 24911},
						run: (*parser).callonItalicText18,
						expr: &seqExpr{
							pos: position{line: 614, col: 9, offset: 24911},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 614, col: 9, offset: 24911},
									expr: &litMatcher{
										pos:        position{line: 614, col: 10, offset: 24912},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 614, col: 14, offset: 24916},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 614, col: 18, offset: 24920},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 614, col: 27, offset: 24929},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 614, col: 46, offset: 24948},
									val:        "_",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 614, col: 50, offset: 24952},
									expr: &charClassMatcher{
										pos:        position{line: 1068, col: 13, offset: 45116},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedItalicText",
			pos:  position{line: 618, col: 1, offset: 25147},
			expr: &choiceExpr{
				pos: position{line: 619, col: 5, offset: 25173},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 619, col: 5, offset: 25173},
						run: (*parser).callonEscapedItalicText2,
						expr: &seqExpr{
							pos: position{line: 619, col: 5, offset: 25173},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 619, col: 5, offset: 25173},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 604, col: 25, offset: 24500},
										run: (*parser).callonEscapedItalicText5,
										expr: &seqExpr{
											pos: position{line: 604, col: 25, offset: 24500},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 604, col: 25, offset: 24500},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 604, col: 30, offset: 24505},
													expr: &litMatcher{
														pos:        position{line: 604, col: 30, offset: 24505},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 619, col: 40, offset: 25208},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 619, col: 45, offset: 25213},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 619, col: 54, offset: 25222},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 619, col: 73, offset: 25241},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 621, col: 9, offset: 25397},
						run: (*parser).callonEscapedItalicText14,
						expr: &seqExpr{
							pos: position{line: 621, col: 9, offset: 25397},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 621, col: 9, offset: 25397},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 600, col: 25, offset: 24431},
										run: (*parser).callonEscapedItalicText17,
										expr: &seqExpr{
											pos: position{line: 600, col: 25, offset: 24431},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 600, col: 25, offset: 24431},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 600, col: 29, offset: 24435},
													expr: &litMatcher{
														pos:        position{line: 600, col: 29, offset: 24435},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 621, col: 44, offset: 25432},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 621, col: 49, offset: 25437},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 621, col: 58, offset: 25446},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 621, col: 77, offset: 25465},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 624, col: 9, offset: 25664},
						run: (*parser).callonEscapedItalicText26,
						expr: &seqExpr{
							pos: position{line: 624, col: 9, offset: 25664},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 624, col: 9, offset: 25664},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 600, col: 25, offset: 24431},
										run: (*parser).callonEscapedItalicText29,
										expr: &seqExpr{
											pos: position{line: 600, col: 25, offset: 24431},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 600, col: 25, offset: 24431},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 600, col: 29, offset: 24435},
													expr: &litMatcher{
														pos:        position{line: 600, col: 29, offset: 24435},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 624, col: 44, offset: 25699},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 624, col: 48, offset: 25703},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 624, col: 57, offset: 25712},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 624, col: 76, offset: 25731},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "MonospaceText",
			pos:  position{line: 628, col: 1, offset: 25884},
			expr: &choiceExpr{
				pos: position{line: 629, col: 5, offset: 25906},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 629, col: 5, offset: 25906},
						run: (*parser).callonMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 629, col: 5, offset: 25906},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 629, col: 5, offset: 25906},
									expr: &litMatcher{
										pos:        position{line: 629, col: 6, offset: 25907},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 629, col: 11, offset: 25912},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 629, col: 16, offset: 25917},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 629, col: 25, offset: 25926},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 629, col: 44, offset: 25945},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 631, col: 9, offset: 26083},
						run: (*parser).callonMonospaceText10,
						expr: &seqExpr{
							pos: position{line: 631, col: 9, offset: 26083},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 631, col: 9, offset: 26083},
									expr: &litMatcher{
										pos:        position{line: 631, col: 10, offset: 26084},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 631, col: 15, offset: 26089},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 631, col: 20, offset: 26094},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 631, col: 29, offset: 26103},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 631, col: 48, offset: 26122},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 634, col: 9, offset: 26304},
						run: (*parser).callonMonospaceText18,
						expr: &seqExpr{
							pos: position{line: 634, col: 9, offset: 26304},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 634, col: 9, offset: 26304},
									expr: &litMatcher{
										pos:        position{line: 634, col: 10, offset: 26305},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 634, col: 14, offset: 26309},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 634, col: 18, offset: 26313},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 634, col: 27, offset: 26322},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 634, col: 46, offset: 26341},
									val:        "`",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 634, col: 50, offset: 26345},
									expr: &charClassMatcher{
										pos:        position{line: 1068, col: 13, offset: 45116},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedMonospaceText",
			pos:  position{line: 638, col: 1, offset: 26543},
			expr: &choiceExpr{
				pos: position{line: 639, col: 5, offset: 26572},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 639, col: 5, offset: 26572},
						run: (*parser).callonEscapedMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 639, col: 5, offset: 26572},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 639, col: 5, offset: 26572},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 604, col: 25, offset: 24500},
										run: (*parser).callonEscapedMonospaceText5,
										expr: &seqExpr{
											pos: position{line: 604, col: 25, offset: 24500},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 604, col: 25, offset: 24500},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 604, col: 30, offset: 24505},
													expr: &litMatcher{
														pos:        position{line: 604, col: 30, offset: 24505},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 639, col: 40, offset: 26607},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 639, col: 45, offset: 26612},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 639, col: 54, offset: 26621},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 639, col: 73, offset: 26640},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 641, col: 9, offset: 26796},
						run: (*parser).callonEscapedMonospaceText14,
						expr: &seqExpr{
							pos: position{line: 641, col: 9, offset: 26796},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 641, col: 9, offset: 26796},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 600, col: 25, offset: 24431},
										run: (*parser).callonEscapedMonospaceText17,
										expr: &seqExpr{
											pos: position{line: 600, col: 25, offset: 24431},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 600, col: 25, offset: 24431},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 600, col: 29, offset: 24435},
													expr: &litMatcher{
														pos:        position{line: 600, col: 29, offset: 24435},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 641, col: 44, offset: 26831},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 641, col: 49, offset: 26836},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 641, col: 58, offset: 26845},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 641, col: 77, offset: 26864},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 644, col: 9, offset: 27063},
						run: (*parser).callonEscapedMonospaceText26,
						expr: &seqExpr{
							pos: position{line: 644, col: 9, offset: 27063},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 644, col: 9, offset: 27063},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 600, col: 25, offset: 24431},
										run: (*parser).callonEscapedMonospaceText29,
										expr: &seqExpr{
											pos: position{line: 600, col: 25, offset: 24431},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 600, col: 25, offset: 24431},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 600, col: 29, offset: 24435},
													expr: &litMatcher{
														pos:        position{line: 600, col: 29, offset: 24435},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 644, col: 44, offset: 27098},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 644, col: 48, offset: 27102},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 644, col: 57, offset: 27111},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 644, col: 76, offset: 27130},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SubscriptText",
			pos:  position{line: 648, col: 1, offset: 27283},
			expr: &choiceExpr{
				pos: position{line: 649, col: 5, offset: 27305},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 649, col: 5, offset: 27305},
						run: (*parser).callonSubscriptText2,
						expr: &seqExpr{
							pos: position{line: 649, col: 5, offset: 27305},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 649, col: 5, offset: 27305},
									expr: &litMatcher{
										pos:        position{line: 649, col: 6, offset: 27306},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 649, col: 11, offset: 27311},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 649, col: 16, offset: 27316},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 649, col: 25, offset: 27325},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 649, col: 44, offset: 27344},
									val:        "~~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 651, col: 9, offset: 27482},
						run: (*parser).callonSubscriptText10,
						expr: &seqExpr{
							pos: position{line: 651, col: 9, offset: 27482},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 651, col: 9, offset: 27482},
									expr: &litMatcher{
										pos:        position{line: 651, col: 10, offset: 27483},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 651, col: 15, offset: 27488},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 651, col: 20, offset: 27493},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 651, col: 29, offset: 27502},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 651, col: 48, offset: 27521},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 654, col: 9, offset: 27703},
						run: (*parser).callonSubscriptText18,
						expr: &seqExpr{
							pos: position{line: 654, col: 9, offset: 27703},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 654, col: 9, offset: 27703},
									expr: &litMatcher{
										pos:        position{line: 654, col: 10, offset: 27704},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 654, col: 14, offset: 27708},
									val:        "~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 654, col: 18, offset: 27712},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 654, col: 27, offset: 27721},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 654, col: 46, offset: 27740},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedSubscriptText",
			pos:  position{line: 658, col: 1, offset: 27932},
			expr: &choiceExpr{
				pos: position{line: 659, col: 5, offset: 27961},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 659, col: 5, offset: 27961},
						run: (*parser).callonEscapedSubscriptText2,
						expr: &seqExpr{
							pos: position{line: 659, col: 5, offset: 27961},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 659, col: 5, offset: 27961},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 604, col: 25, offset: 24500},
										run: (*parser).callonEscapedSubscriptText5,
										expr: &seqExpr{
											pos: position{line: 604, col: 25, offset: 24500},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 604, col: 25, offset: 24500},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 604, col: 30, offset: 24505},
													expr: &litMatcher{
														pos:        position{line: 604, col: 30, offset: 24505},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 659, col: 40, offset: 27996},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 659, col: 45, offset: 28001},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 659, col: 54, offset: 28010},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 659, col: 73, offset: 28029},
									val:        "~~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 661, col: 9, offset: 28185},
						run: (*parser).callonEscapedSubscriptText14,
						expr: &seqExpr{
							pos: position{line: 661, col: 9, offset: 28185},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 661, col: 9, offset: 28185},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 600, col: 25, offset: 24431},
										run: (*parser).callonEscapedSubscriptText17,
										expr: &seqExpr{
											pos: position{line: 600, col: 25, offset: 24431},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 600, col: 25, offset: 24431},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 600, col: 29, offset: 24435},
													expr: &litMatcher{
														pos:        position{line: 600, col: 29, offset: 24435},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 661, col: 44, offset: 28220},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 661, col: 49, offset: 28225},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 661, col: 58, offset: 28234},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 661, col: 77, offset: 28253},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 664, col: 9, offset: 28452},
						run: (*parser).callonEscapedSubscriptText26,
						expr: &seqExpr{
							pos: position{line: 664, col: 9, offset: 28452},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 664, col: 9, offset: 28452},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 600, col: 25, offset: 24431},
										run: (*parser).callonEscapedSubscriptText29,
										expr: &seqExpr{
											pos: position{line: 600, col: 25, offset: 24431},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 600, col: 25, offset: 24431},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 600, col: 29, offset: 24435},
													expr: &litMatcher{
														pos:        position{line: 600, col: 29, offset: 24435},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 664, col: 44, offset: 28487},
									val:        "~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 664, col: 48, offset: 28491},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 664, col: 57, offset: 28500},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 664, col: 76, offset: 28519},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SuperscriptText",
			pos:  position{line: 668, col: 1, offset: 28672},
			expr: &choiceExpr{
				pos: position{line: 669, col: 5, offset: 28696},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 669, col: 5, offset: 28696},
						run: (*parser).callonSuperscriptText2,
						expr: &seqExpr{
							pos: position{line: 669, col: 5, offset: 28696},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 669, col: 5, offset: 28696},
									expr: &litMatcher{
										pos:        position{line: 669, col: 6, offset: 28697},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 669, col: 11, offset: 28702},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 669, col: 16, offset: 28707},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 669, col: 25, offset: 28716},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 669, col: 44, offset: 28735},
									val:        "^^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 671, col: 9, offset: 28875},
						run: (*parser).callonSuperscriptText10,
						expr: &seqExpr{
							pos: position{line: 671, col: 9, offset: 28875},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 671, col: 9, offset: 28875},
									expr: &litMatcher{
										pos:        position{line: 671, col: 10, offset: 28876},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 671, col: 15, offset: 28881},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 671, col: 20, offset: 28886},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 671, col: 29, offset: 28895},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 671, col: 48, offset: 28914},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 674, col: 9, offset: 29098},
						run: (*parser).callonSuperscriptText18,
						expr: &seqExpr{
							pos: position{line: 674, col: 9, offset: 29098},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 674, col: 9, offset: 29098},
									expr: &litMatcher{
										pos:        position{line: 674, col: 10, offset: 29099},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 674, col: 14, offset: 29103},
									val:        "^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 674, col: 18, offset: 29107},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 674, col: 27, offset: 29116},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 674, col: 46, offset: 29135},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedSuperscriptText",
			pos:  position{line: 678, col: 1, offset: 29329},
			expr: &choiceExpr{
				pos: position{line: 679, col: 5, offset: 29360},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 679, col: 5, offset: 29360},
						run: (*parser).callonEscapedSuperscriptText2,
						expr: &seqExpr{
							pos: position{line: 679, col: 5, offset: 29360},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 679, col: 5, offset: 29360},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 604, col: 25, offset: 24500},
										run: (*parser).callonEscapedSuperscriptText5,
										expr: &seqExpr{
											pos: position{line: 604, col: 25, offset: 24500},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 604, col: 25, offset: 24500},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 604, col: 30, offset: 24505},
													expr: &litMatcher{
														pos:        position{line: 604, col: 30, offset: 24505},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 679, col: 40, offset: 29395},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 679, col: 45, offset: 29400},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 679, col: 54, offset: 29409},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 679, col: 73, offset: 29428},
									val:        "^^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 681, col: 9, offset: 29584},
						run: (*parser).callonEscapedSuperscriptText14,
						expr: &seqExpr{
							pos: position{line: 681, col: 9, offset: 29584},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 681, col: 9, offset: 29584},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 600, col: 25, offset: 24431},
										run: (*parser).callonEscapedSuperscriptText17,
										expr: &seqExpr{
											pos: position{line: 600, col: 25, offset: 24431},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 600, col: 25, offset: 24431},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 600, col: 29, offset: 24435},
													expr: &litMatcher{
														pos:        position{line: 600, col: 29, offset: 24435},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 681, col: 44, offset: 29619},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 681, col: 49, offset: 29624},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 681, col: 58, offset: 29633},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 681, col: 77, offset: 29652},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 684, col: 9, offset: 29851},
						run: (*parser).callonEscapedSuperscriptText26,
						expr: &seqExpr{
							pos: position{line: 684, col: 9, offset: 29851},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 684, col: 9, offset: 29851},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 600, col: 25, offset: 24431},
										run: (*parser).callonEscapedSuperscriptText29,
										expr: &seqExpr{
											pos: position{line: 600, col: 25, offset: 24431},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 600, col: 25, offset: 24431},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 600, col: 29, offset: 24435},
													expr: &litMatcher{
														pos:        position{line: 600, col: 29, offset: 24435},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 684, col: 44, offset: 29886},
									val:        "^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 684, col: 48, offset: 29890},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 684, col: 57, offset: 29899},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 684, col: 76, offset: 29918},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContent",
			pos:  position{line: 688, col: 1, offset: 30071},
			expr: &seqExpr{
				pos: position{line: 688, col: 22, offset: 30092},
				exprs: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 688, col: 22, offset: 30092},
						name: "QuotedTextContentElement",
					},
					&zeroOrMoreExpr{
						pos: position{line: 688, col: 47, offset: 30117},
						expr: &seqExpr{
							pos: position{line: 688, col: 48, offset: 30118},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 688, col: 48, offset: 30118},
									expr: &choiceExpr{
										pos: position{line: 1094, col: 7, offset: 45764},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonQuotedTextContent8,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 688, col: 52, offset: 30122},
									name: "QuotedTextContentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContentElement",
			pos:  position{line: 690, col: 1, offset: 30150},
			expr: &choiceExpr{
				pos: position{line: 690, col: 29, offset: 30178},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 690, col: 29, offset: 30178},
						name: "QuotedText",
					},
					&oneOrMoreExpr{
						pos: position{line: 692, col: 19, offset: 30355},
						expr: &seqExpr{
							pos: position{line: 692, col: 20, offset: 30356},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 692, col: 20, offset: 30356},
									expr: &choiceExpr{
										pos: position{line: 1098, col: 12, offset: 45826},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1098, col: 12, offset: 45826},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1098, col: 21, offset: 45835},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 692, col: 29, offset: 30365},
									expr: &choiceExpr{
										pos: position{line: 1094, col: 7, offset: 45764},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonQuotedTextContentElement12,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 692, col: 33, offset: 30369},
									expr: &litMatcher{
										pos:        position{line: 692, col: 34, offset: 30370},
										val:        "*",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 692, col: 38, offset: 30374},
									expr: &litMatcher{
										pos:        position{line: 692, col: 39, offset: 30375},
										val:        "_",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 692, col: 43, offset: 30379},
									expr: &litMatcher{
										pos:        position{line: 692, col: 44, offset: 30380},
										val:        "`",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 692, col: 48, offset: 30384},
									expr: &litMatcher{
										pos:        position{line: 692, col: 49, offset: 30385},
										val:        "~",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 692, col: 53, offset: 30389},
									expr: &litMatcher{
										pos:        position{line: 692, col: 54, offset: 30390},
										val:        "^",
										ignoreCase: false,
									},
								},
								&anyMatcher{
									line: 692, col: 57, offset: 30393,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 694, col: 29, offset: 30474},
						run: (*parser).callonQuotedTextContentElement25,
						expr: &oneOrMoreExpr{
							pos: position{line: 694, col: 29, offset: 30474},
							expr: &seqExpr{
								pos: position{line: 694, col: 30, offset: 30475},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 694, col: 30, offset: 30475},
										expr: &choiceExpr{
											pos: position{line: 1098, col: 12, offset: 45826},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 694, col: 39, offset: 30484},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonQuotedTextContentElement35,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&anyMatcher{
										line: 694, col: 44, offset: 30489,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Passthrough",
			pos:  position{line: 704, col: 1, offset: 30914},
			expr: &choiceExpr{
				pos: position{line: 704, col: 16, offset: 30929},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 710, col: 26, offset: 31171},
						run: (*parser).callonPassthrough2,
						expr: &seqExpr{
							pos: position{line: 710, col: 26, offset: 31171},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 710, col: 26, offset: 31171},
									val:        "+++",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 710, col: 32, offset: 31177},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 710, col: 40, offset: 31185},
										expr: &seqExpr{
											pos: position{line: 710, col: 41, offset: 31186},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 710, col: 41, offset: 31186},
													expr: &litMatcher{
														pos:        position{line: 710, col: 42, offset: 31187},
														val:        "+++",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 710, col: 48, offset: 31193,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 710, col: 52, offset: 31197},
									val:        "+++",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 706, col: 26, offset: 31020},
						run: (*parser).callonPassthrough12,
						expr: &seqExpr{
							pos: position{line: 706, col: 26, offset: 31020},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 706, col: 26, offset: 31020},
									val:        "+",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 706, col: 30, offset: 31024},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 706, col: 38, offset: 31032},
										expr: &seqExpr{
											pos: position{line: 706, col: 39, offset: 31033},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 706, col: 39, offset: 31033},
													expr: &choiceExpr{
														pos: position{line: 1098, col: 12, offset: 45826},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 706, col: 48, offset: 31042},
													expr: &litMatcher{
														pos:        position{line: 706, col: 49, offset: 31043},
														val:        "+",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 706, col: 53, offset: 31047,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 706, col: 57, offset: 31051},
									val:        "+",
									ignoreCase: false,
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 704, col: 64, offset: 30977},
						name: "PassthroughMacro",
					},
				},
			},
		},
		{
			name: "PassthroughMacro",
			pos:  position{line: 714, col: 1, offset: 31294},
			expr: &choiceExpr{
				pos: position{line: 714, col: 21, offset: 31314},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 714, col: 21, offset: 31314},
						run: (*parser).callonPassthroughMacro2,
						expr: &seqExpr{
							pos: position{line: 714, col: 21, offset: 31314},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 714, col: 21, offset: 31314},
									val:        "pass:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 714, col: 30, offset: 31323},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 714, col: 38, offset: 31331},
										expr: &seqExpr{
											pos: position{line: 720, col: 31, offset: 31631},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 720, col: 31, offset: 31631},
													expr: &litMatcher{
														pos:        position{line: 720, col: 32, offset: 31632},
														val:        "]",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 720, col: 36, offset: 31636,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 714, col: 67, offset: 31360},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 716, col: 5, offset: 31451},
						run: (*parser).callonPassthroughMacro12,
						expr: &seqExpr{
							pos: position{line: 716, col: 5, offset: 31451},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 716, col: 5, offset: 31451},
									val:        "pass:q[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 716, col: 15, offset: 31461},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 716, col: 23, offset: 31469},
										expr: &choiceExpr{
											pos: position{line: 716, col: 24, offset: 31470},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 716, col: 24, offset: 31470},
													name: "QuotedText",
												},
												&seqExpr{
													pos: position{line: 720, col: 31, offset: 31631},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 720, col: 31, offset: 31631},
															expr: &litMatcher{
																pos:        position{line: 720, col: 32, offset: 31632},
																val:        "]",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 720, col: 36, offset: 31636,
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 716, col: 65, offset: 31511},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineFootnote",
			pos:  position{line: 808, col: 1, offset: 34872},
			expr: &choiceExpr{
				pos: position{line: 808, col: 19, offset: 34890},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 808, col: 19, offset: 34890},
						run: (*parser).callonInlineFootnote2,
						expr: &seqExpr{
							pos: position{line: 808, col: 19, offset: 34890},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 808, col: 19, offset: 34890},
									val:        "footnote:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 808, col: 32, offset: 34903},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 808, col: 41, offset: 34912},
										name: "FootnoteContent",
									},
								},
								&litMatcher{
									pos:        position{line: 808, col: 58, offset: 34929},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 810, col: 9, offset: 35012},
						run: (*parser).callonInlineFootnote8,
						expr: &seqExpr{
							pos: position{line: 810, col: 9, offset: 35012},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 810, col: 9, offset: 35012},
									val:        "footnoteref:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 810, col: 25, offset: 35028},
									label: "ref",
									expr: &actionExpr{
										pos: position{line: 816, col: 16, offset: 35341},
										run: (*parser).callonInlineFootnote12,
										expr: &zeroOrMoreExpr{
											pos: position{line: 816, col: 16, offset: 35341},
											expr: &seqExpr{
												pos: position{line: 816, col: 17, offset: 35342},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 816, col: 17, offset: 35342},
														expr: &litMatcher{
															pos:        position{line: 816, col: 18, offset: 35343},
															val:        ",",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 816, col: 22, offset: 35347},
														expr: &litMatcher{
															pos:        position{line: 816, col: 23, offset: 35348},
															val:        "]",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 816, col: 27, offset: 35352},
														expr: &choiceExpr{
															pos: position{line: 1102, col: 8, offset: 45866},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1098, col: 12, offset: 45826},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1098, col: 21, offset: 45835},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1100, col: 8, offset: 45855},
																	expr: &anyMatcher{
																		line: 1100, col: 9, offset: 45856,
																	},
																},
															},
														},
													},
													&anyMatcher{
														line: 816, col: 32, offset: 35357,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 810, col: 43, offset: 35046},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 810, col: 47, offset: 35050},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 810, col: 56, offset: 35059},
										name: "FootnoteContent",
									},
								},
								&litMatcher{
									pos:        position{line: 810, col: 73, offset: 35076},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 812, col: 9, offset: 35169},
						run: (*parser).callonInlineFootnote30,
						expr: &seqExpr{
							pos: position{line: 812, col: 9, offset: 35169},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 812, col: 9, offset: 35169},
									val:        "footnoteref:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 812, col: 25, offset: 35185},
									label: "ref",
									expr: &actionExpr{
										pos: position{line: 816, col: 16, offset: 35341},
										run: (*parser).callonInlineFootnote34,
										expr: &zeroOrMoreExpr{
											pos: position{line: 816, col: 16, offset: 35341},
											expr: &seqExpr{
												pos: position{line: 816, col: 17, offset: 35342},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 816, col: 17, offset: 35342},
														expr: &litMatcher{
															pos:        position{line: 816, col: 18, offset: 35343},
															val:        ",",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 816, col: 22, offset: 35347},
														expr: &litMatcher{
															pos:        position{line: 816, col: 23, offset: 35348},
															val:        "]",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 816, col: 27, offset: 35352},
														expr: &choiceExpr{
															pos: position{line: 1102, col: 8, offset: 45866},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1098, col: 12, offset: 45826},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1098, col: 21, offset: 45835},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1100, col: 8, offset: 45855},
																	expr: &anyMatcher{
																		line: 1100, col: 9, offset: 45856,
																	},
																},
															},
														},
													},
													&anyMatcher{
														line: 816, col: 32, offset: 35357,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 812, col: 43, offset: 35203},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FootnoteContent",
			pos:  position{line: 820, col: 1, offset: 35441},
			expr: &actionExpr{
				pos: position{line: 820, col: 20, offset: 35460},
				run: (*parser).callonFootnoteContent1,
				expr: &labeledExpr{
					pos:   position{line: 820, col: 20, offset: 35460},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 820, col: 29, offset: 35469},
						expr: &seqExpr{
							pos: position{line: 820, col: 30, offset: 35470},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 820, col: 30, offset: 35470},
									expr: &litMatcher{
										pos:        position{line: 820, col: 31, offset: 35471},
										val:        "]",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 820, col: 35, offset: 35475},
									expr: &choiceExpr{
										pos: position{line: 1102, col: 8, offset: 45866},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1098, col: 12, offset: 45826},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1098, col: 21, offset: 45835},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1100, col: 8, offset: 45855},
												expr: &anyMatcher{
													line: 1100, col: 9, offset: 45856,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 820, col: 40, offset: 35480},
									expr: &choiceExpr{
										pos: position{line: 1094, col: 7, offset: 45764},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonFootnoteContent16,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 820, col: 44, offset: 35484},
									expr: &actionExpr{
										pos: position{line: 150, col: 20, offset: 5697},
										run: (*parser).callonFootnoteContent19,
										expr: &seqExpr{
											pos: position{line: 150, col: 20, offset: 5697},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 150, col: 20, offset: 5697},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 150, col: 25, offset: 5702},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1080, col: 7, offset: 45482},
														run: (*parser).callonFootnoteContent23,
														expr: &oneOrMoreExpr{
															pos: position{line: 1080, col: 7, offset: 45482},
															expr: &seqExpr{
																pos: position{line: 1080, col: 8, offset: 45483},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1080, col: 8, offset: 45483},
																		expr: &choiceExpr{
																			pos: position{line: 1098, col: 12, offset: 45826},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1098, col: 12, offset: 45826},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1098, col: 21, offset: 45835},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 17, offset: 45492},
																		expr: &choiceExpr{
																			pos: position{line: 1094, col: 7, offset: 45764},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1094, col: 7, offset: 45764},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1094, col: 13, offset: 45770},
																					run: (*parser).callonFootnoteContent33,
																					expr: &litMatcher{
																						pos:        position{line: 1094, col: 13, offset: 45770},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 21, offset: 45496},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 22, offset: 45497},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 26, offset: 45501},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 27, offset: 45502},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 31, offset: 45506},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 32, offset: 45507},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 37, offset: 45512},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 38, offset: 45513},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1080, col: 43, offset: 45518},
																		expr: &litMatcher{
																			pos:        position{line: 1080, col: 44, offset: 45519},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1080, col: 48, offset: 45523,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 150, col: 33, offset: 5710},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 150, col: 38, offset: 5715},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonFootnoteContent50,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 820, col: 61, offset: 35501},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 820, col: 75, offset: 35515},
									expr: &choiceExpr{
										pos: position{line: 1094, col: 7, offset: 45764},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonFootnoteContent56,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DelimitedBlock",
			pos:  position{line: 828, col: 1, offset: 35830},
			expr: &choiceExpr{
				pos: position{line: 828, col: 19, offset: 35848},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 828, col: 19, offset: 35848},
						name: "FencedBlock",
					},
					&actionExpr{
						pos: position{line: 854, col: 17, offset: 36962},
						run: (*parser).callonDelimitedBlock3,
						expr: &seqExpr{
							pos: position{line: 854, col: 17, offset: 36962},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 851, col: 26, offset: 36895},
									val:        "----",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 851, col: 33, offset: 36902},
									expr: &choiceExpr{
										pos: position{line: 1094, col: 7, offset: 45764},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonDelimitedBlock9,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1102, col: 8, offset: 45866},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1098, col: 12, offset: 45826},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1098, col: 21, offset: 45835},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1100, col: 8, offset: 45855},
											expr: &anyMatcher{
												line: 1100, col: 9, offset: 45856,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 854, col: 39, offset: 36984},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 854, col: 47, offset: 36992},
										expr: &actionExpr{
											pos: position{line: 858, col: 24, offset: 37162},
											run: (*parser).callonDelimitedBlock18,
											expr: &labeledExpr{
												pos:   position{line: 858, col: 24, offset: 37162},
												label: "lines",
												expr: &oneOrMoreExpr{
													pos: position{line: 858, col: 30, offset: 37168},
													expr: &actionExpr{
														pos: position{line: 862, col: 21, offset: 37271},
														run: (*parser).callonDelimitedBlock21,
														expr: &seqExpr{
															pos: position{line: 862, col: 21, offset: 37271},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 862, col: 21, offset: 37271},
																	expr: &seqExpr{
																		pos: position{line: 851, col: 26, offset: 36895},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 851, col: 26, offset: 36895},
																				val:        "----",
																				ignoreCase: false,
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 851, col: 33, offset: 36902},
																				expr: &choiceExpr{
																					pos: position{line: 1094, col: 7, offset: 45764},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1094, col: 7, offset: 45764},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1094, col: 13, offset: 45770},
																							run: (*parser).callonDelimitedBlock29,
																							expr: &litMatcher{
																								pos:        position{line: 1094, col: 13, offset: 45770},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1102, col: 8, offset: 45866},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1098, col: 12, offset: 45826},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1098, col: 21, offset: 45835},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1100, col: 8, offset: 45855},
																						expr: &anyMatcher{
																							line: 1100, col: 9, offset: 45856,
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 862, col: 44, offset: 37294},
																	expr: &notExpr{
																		pos: position{line: 1100, col: 8, offset: 45855},
																		expr: &anyMatcher{
																			line: 1100, col: 9, offset: 45856,
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 862, col: 49, offset: 37299},
																	label: "line",
																	expr: &actionExpr{
																		pos: position{line: 866, col: 28, offset: 37410},
																		run: (*parser).callonDelimitedBlock40,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 866, col: 28, offset: 37410},
																			expr: &seqExpr{
																				pos: position{line: 866, col: 29, offset: 37411},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 866, col: 29, offset: 37411},
																						expr: &seqExpr{
																							pos: position{line: 851, col: 26, offset: 36895},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 851, col: 26, offset: 36895},
																									val:        "----",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 851, col: 33, offset: 36902},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonDelimitedBlock49,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&choiceExpr{
																									pos: position{line: 1102, col: 8, offset: 45866},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1098, col: 12, offset: 45826},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 1098, col: 21, offset: 45835},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																										&notExpr{
																											pos: position{line: 1100, col: 8, offset: 45855},
																											expr: &anyMatcher{
																												line: 1100, col: 9, offset: 45856,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 866, col: 52, offset: 37434},
																						expr: &choiceExpr{
																							pos: position{line: 1102, col: 8, offset: 45866},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1098, col: 12, offset: 45826},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1098, col: 21, offset: 45835},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1100, col: 8, offset: 45855},
																									expr: &anyMatcher{
																										line: 1100, col: 9, offset: 45856,
																									},
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 866, col: 57, offset: 37439,
																					},
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1102, col: 8, offset: 45866},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1098, col: 12, offset: 45826},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1098, col: 21, offset: 45835},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1100, col: 8, offset: 45855},
																			expr: &anyMatcher{
																				line: 1100, col: 9, offset: 45856,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 854, col: 71, offset: 37016},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 851, col: 26, offset: 36895},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 851, col: 26, offset: 36895},
													val:        "----",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 851, col: 33, offset: 36902},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonDelimitedBlock74,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1102, col: 8, offset: 45866},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1100, col: 8, offset: 45855},
															expr: &anyMatcher{
																line: 1100, col: 9, offset: 45856,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1100, col: 8, offset: 45855},
											expr: &anyMatcher{
												line: 1100, col: 9, offset: 45856,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 828, col: 48, offset: 35877},
						name: "ExampleBlock",
					},
					&actionExpr{
						pos: position{line: 976, col: 17, offset: 41759},
						run: (*parser).callonDelimitedBlock84,
						expr: &seqExpr{
							pos: position{line: 976, col: 17, offset: 41759},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 974, col: 26, offset: 41735},
									val:        "////",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 976, col: 39, offset: 41781},
									expr: &choiceExpr{
										pos: position{line: 1094, col: 7, offset: 45764},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonDelimitedBlock90,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1098, col: 12, offset: 45826},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1098, col: 12, offset: 45826},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1098, col: 21, offset: 45835},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 976, col: 51, offset: 41793},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 976, col: 59, offset: 41801},
										expr: &actionExpr{
											pos: position{line: 980, col: 21, offset: 41978},
											run: (*parser).callonDelimitedBlock97,
											expr: &seqExpr{
												pos: position{line: 980, col: 21, offset: 41978},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 980, col: 21, offset: 41978},
														expr: &seqExpr{
															pos: position{line: 980, col: 22, offset: 41979},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 980, col: 22, offset: 41979},
																	expr: &litMatcher{
																		pos:        position{line: 974, col: 26, offset: 41735},
																		val:        "////",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 980, col: 45, offset: 42002},
																	expr: &choiceExpr{
																		pos: position{line: 1102, col: 8, offset: 45866},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1098, col: 12, offset: 45826},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1098, col: 21, offset: 45835},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1100, col: 8, offset: 45855},
																				expr: &anyMatcher{
																					line: 1100, col: 9, offset: 45856,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 980, col: 50, offset: 42007,
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1102, col: 8, offset: 45866},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1100, col: 8, offset: 45855},
																expr: &anyMatcher{
																	line: 1100, col: 9, offset: 45856,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 976, col: 81, offset: 41823},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 976, col: 82, offset: 41824},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 974, col: 26, offset: 41735},
													val:        "////",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 976, col: 104, offset: 41846},
													expr: &choiceExpr{
														pos: position{line: 1094, col: 7, offset: 45764},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1094, col: 7, offset: 45764},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1094, col: 13, offset: 45770},
																run: (*parser).callonDelimitedBlock121,
																expr: &litMatcher{
																	pos:        position{line: 1094, col: 13, offset: 45770},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1102, col: 8, offset: 45866},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1098, col: 12, offset: 45826},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1098, col: 21, offset: 45835},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1100, col: 8, offset: 45855},
															expr: &anyMatcher{
																line: 1100, col: 9, offset: 45856,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1100, col: 8, offset: 45855},
											expr: &anyMatcher{
												line: 1100, col: 9, offset: 45856,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 829, col: 34, offset: 35924},
						name: "VerseBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 829, col: 47, offset: 35937},
						name: "QuoteBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 830, col: 19, offset: 35967},
						name: "SidebarBlock",
					},
				},
			},
		},
		{
			name: "FencedBlock",
			pos:  position{line: 842, col: 1, offset: 36431},
			expr: &actionExpr{
				pos: position{line: 842, col: 16, offset: 36446},
				run: (*parser).callonFencedBlock1,
				expr: &seqExpr{
					pos: position{line: 842, col: 16, offset: 36446},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 840, col: 25, offset: 36416},
							val:        "```",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 840, col: 31, offset: 36422},
							expr: &choiceExpr{
								pos: position{line: 1094, col: 7, offset: 45764},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1094, col: 7, offset: 45764},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1094, col: 13, offset: 45770},
										run: (*parser).callonFencedBlock7,
										expr: &litMatcher{
											pos:        position{line: 1094, col: 13, offset: 45770},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 842, col: 37, offset: 36467},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 842, col: 45, offset: 36475},
								expr: &ruleRefExpr{
									pos:  position{line: 842, col: 46, offset: 36476},
									name: "FencedBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 842, col: 68, offset: 36498},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 840, col: 25, offset: 36416},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 840, col: 25, offset: 36416},
											val:        "```",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 840, col: 31, offset: 36422},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonFencedBlock23,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FencedBlockContent",
			pos:  position{line: 846, col: 1, offset: 36617},
			expr: &choiceExpr{
				pos: position{line: 846, col: 23, offset: 36639},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 846, col: 23, offset: 36639},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 846, col: 30, offset: 36646},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 1061, col: 14, offset: 44948},
						run: (*parser).callonFencedBlockContent4,
						expr: &seqExpr{
							pos: position{line: 1061, col: 14, offset: 44948},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 1061, col: 14, offset: 44948},
									expr: &notExpr{
										pos: position{line: 1100, col: 8, offset: 45855},
										expr: &anyMatcher{
											line: 1100, col: 9, offset: 45856,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 1061, col: 19, offset: 44953},
									expr: &choiceExpr{
										pos: position{line: 1094, col: 7, offset: 45764},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonFencedBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1102, col: 8, offset: 45866},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1098, col: 12, offset: 45826},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1098, col: 21, offset: 45835},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1100, col: 8, offset: 45855},
											expr: &anyMatcher{
												line: 1100, col: 9, offset: 45856,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ExampleBlock",
			pos:  position{line: 875, col: 1, offset: 37816},
			expr: &actionExpr{
				pos: position{line: 875, col: 17, offset: 37832},
				run: (*parser).callonExampleBlock1,
				expr: &seqExpr{
					pos: position{line: 875, col: 17, offset: 37832},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 873, col: 26, offset: 37800},
							val:        "====",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 873, col: 33, offset: 37807},
							expr: &choiceExpr{
								pos: position{line: 1094, col: 7, offset: 45764},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1094, col: 7, offset: 45764},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1094, col: 13, offset: 45770},
										run: (*parser).callonExampleBlock7,
										expr: &litMatcher{
											pos:        position{line: 1094, col: 13, offset: 45770},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 875, col: 39, offset: 37854},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 875, col: 47, offset: 37862},
								expr: &choiceExpr{
									pos: position{line: 875, col: 48, offset: 37863},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 875, col: 48, offset: 37863},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 875, col: 55, offset: 37870},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 1061, col: 14, offset: 44948},
											run: (*parser).callonExampleBlock19,
											expr: &seqExpr{
												pos: position{line: 1061, col: 14, offset: 44948},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 1061, col: 14, offset: 44948},
														expr: &notExpr{
															pos: position{line: 1100, col: 8, offset: 45855},
															expr: &anyMatcher{
																line: 1100, col: 9, offset: 45856,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 1061, col: 19, offset: 44953},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonExampleBlock27,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1102, col: 8, offset: 45866},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1100, col: 8, offset: 45855},
																expr: &anyMatcher{
																	line: 1100, col: 9, offset: 45856,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 875, col: 86, offset: 37901},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 873, col: 26, offset: 37800},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 873, col: 26, offset: 37800},
											val:        "====",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 873, col: 33, offset: 37807},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonExampleBlock40,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "BlockParagraph",
			pos:  position{line: 880, col: 1, offset: 38040},
			expr: &actionExpr{
				pos: position{line: 880, col: 20, offset: 38059},
				run: (*parser).callonBlockParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 880, col: 20, offset: 38059},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 880, col: 26, offset: 38065},
						expr: &ruleRefExpr{
							pos:  position{line: 880, col: 27, offset: 38066},
							name: "BlockParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "BlockParagraphLine",
			pos:  position{line: 884, col: 1, offset: 38151},
			expr: &actionExpr{
				pos: position{line: 884, col: 23, offset: 38173},
				run: (*parser).callonBlockParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 884, col: 23, offset: 38173},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 884, col: 23, offset: 38173},
							expr: &actionExpr{
								pos: position{line: 415, col: 26, offset: 15179},
								run: (*parser).callonBlockParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 415, col: 26, offset: 15179},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 415, col: 26, offset: 15179},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonBlockParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 415, col: 30, offset: 15183},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 417, col: 5, offset: 15238},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 417, col: 5, offset: 15238},
														run: (*parser).callonBlockParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 417, col: 5, offset: 15238},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 419, col: 9, offset: 15351},
														run: (*parser).callonBlockParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 419, col: 9, offset: 15351},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 421, col: 9, offset: 15462},
														run: (*parser).callonBlockParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 421, col: 9, offset: 15462},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 423, col: 9, offset: 15571},
														run: (*parser).callonBlockParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 423, col: 9, offset: 15571},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 425, col: 9, offset: 15678},
														run: (*parser).callonBlockParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 425, col: 9, offset: 15678},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 428, col: 9, offset: 15805},
														run: (*parser).callonBlockParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 428, col: 9, offset: 15805},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 428, col: 9, offset: 15805},
																	expr: &charClassMatcher{
																		pos:        position{line: 428, col: 10, offset: 15806},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 428, col: 18, offset: 15814},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 430, col: 9, offset: 15917},
														run: (*parser).callonBlockParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 430, col: 9, offset: 15917},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 430, col: 10, offset: 15918},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 430, col: 17, offset: 15925},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 432, col: 9, offset: 16031},
														run: (*parser).callonBlockParagraphLine32,
														expr: &seqExpr{
															pos: position{line: 432, col: 9, offset: 16031},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 432, col: 10, offset: 16032},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 432, col: 17, offset: 16039},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 434, col: 9, offset: 16145},
														run: (*parser).callonBlockParagraphLine36,
														expr: &seqExpr{
															pos: position{line: 434, col: 9, offset: 16145},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 434, col: 9, offset: 16145},
																	expr: &charClassMatcher{
																		pos:        position{line: 434, col: 10, offset: 16146},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 434, col: 18, offset: 16154},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 436, col: 9, offset: 16260},
														run: (*parser).callonBlockParagraphLine41,
														expr: &seqExpr{
															pos: position{line: 436, col: 9, offset: 16260},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 436, col: 9, offset: 16260},
																	expr: &charClassMatcher{
																		pos:        position{line: 436, col: 10, offset: 16261},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 436, col: 18, offset: 16269},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 438, col: 8, offset: 16374},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonBlockParagraphLine49,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 885, col: 9, offset: 38207},
							expr: &actionExpr{
								pos: position{line: 454, col: 5, offset: 17034},
								run: (*parser).callonBlockParagraphLine52,
								expr: &seqExpr{
									pos: position{line: 454, col: 5, offset: 17034},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 454, col: 5, offset: 17034},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonBlockParagraphLine57,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 454, col: 9, offset: 17038},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 455, col: 9, offset: 17055},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 455, col: 9, offset: 17055},
														run: (*parser).callonBlockParagraphLine61,
														expr: &litMatcher{
															pos:        position{line: 455, col: 9, offset: 17055},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 458, col: 11, offset: 17224},
														run: (*parser).callonBlockParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 458, col: 11, offset: 17224},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 461, col: 11, offset: 17393},
														run: (*parser).callonBlockParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 461, col: 11, offset: 17393},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 464, col: 11, offset: 17562},
														run: (*parser).callonBlockParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 464, col: 11, offset: 17562},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 467, col: 11, offset: 17728},
														run: (*parser).callonBlockParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 467, col: 11, offset: 17728},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 470, col: 11, offset: 17892},
														run: (*parser).callonBlockParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 470, col: 11, offset: 17892},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 472, col: 12, offset: 18039},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonBlockParagraphLine76,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 886, col: 9, offset: 38243},
							expr: &seqExpr{
								pos: position{line: 886, col: 11, offset: 38245},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 487, col: 24, offset: 18729},
										run: (*parser).callonBlockParagraphLine80,
										expr: &zeroOrMoreExpr{
											pos: position{line: 487, col: 24, offset: 18729},
											expr: &seqExpr{
												pos: position{line: 487, col: 25, offset: 18730},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 487, col: 25, offset: 18730},
														expr: &choiceExpr{
															pos: position{line: 1098, col: 12, offset: 45826},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1098, col: 12, offset: 45826},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1098, col: 21, offset: 45835},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 487, col: 34, offset: 18739},
														expr: &litMatcher{
															pos:        position{line: 487, col: 35, offset: 18740},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 487, col: 40, offset: 18745,
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 492, col: 29, offset: 18891},
										run: (*parser).callonBlockParagraphLine90,
										expr: &choiceExpr{
											pos: position{line: 492, col: 30, offset: 18892},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 492, col: 30, offset: 18892},
													val:        "::::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 492, col: 39, offset: 18901},
													val:        ":::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 492, col: 47, offset: 18909},
													val:        "::",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 887, col: 9, offset: 38300},
							expr: &actionExpr{
								pos: position{line: 400, col: 25, offset: 14623},
								run: (*parser).callonBlockParagraphLine96,
								expr: &seqExpr{
									pos: position{line: 400, col: 25, offset: 14623},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 400, col: 25, offset: 14623},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 400, col: 29, offset: 14627},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonBlockParagraphLine102,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 888, col: 9, offset: 38333},
							expr: &choiceExpr{
								pos: position{line: 832, col: 19, offset: 35999},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 998, col: 26, offset: 42680},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 840, col: 25, offset: 36416},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 840, col: 25, offset: 36416},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 840, col: 31, offset: 36422},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonBlockParagraphLine117,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 851, col: 26, offset: 36895},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 851, col: 26, offset: 36895},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 851, col: 33, offset: 36902},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonBlockParagraphLine129,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 873, col: 26, offset: 37800},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 873, col: 26, offset: 37800},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 873, col: 33, offset: 37807},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonBlockParagraphLine141,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 974, col: 26, offset: 41735},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 896, col: 24, offset: 38625},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 896, col: 24, offset: 38625},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 896, col: 31, offset: 38632},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonBlockParagraphLine154,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 931, col: 26, offset: 40218},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 931, col: 26, offset: 40218},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 931, col: 33, offset: 40225},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonBlockParagraphLine166,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 889, col: 9, offset: 38360},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 889, col: 15, offset: 38366},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlock",
			pos:  position{line: 898, col: 1, offset: 38666},
			expr: &actionExpr{
				pos: position{line: 898, col: 15, offset: 38680},
				run: (*parser).callonQuoteBlock1,
				expr: &seqExpr{
					pos: position{line: 898, col: 15, offset: 38680},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 898, col: 15, offset: 38680},
							label: "attributes",
							expr: &seqExpr{
								pos: position{line: 898, col: 27, offset: 38692},
								exprs: []interface{}{
									&choiceExpr{
										pos: position{line: 202, col: 20, offset: 7358},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 202, col: 20, offset: 7358},
												run: (*parser).callonQuoteBlock6,
												expr: &seqExpr{
													pos: position{line: 202, col: 20, offset: 7358},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 202, col: 20, offset: 7358},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 202, col: 24, offset: 7362},
															label: "kind",
															expr: &actionExpr{
																pos: position{line: 214, col: 14, offset: 7892},
																run: (*parser).callonQuoteBlock10,
																expr: &litMatcher{
																	pos:        position{line: 214, col: 14, offset: 7892},
																	val:        "quote",
																	ignoreCase: false,
																},
															},
														},
														&zeroOrMoreExpr{
															pos: position{line: 202, col: 41, offset: 7379},
															expr: &choiceExpr{
																pos: position{line: 1094, col: 7, offset: 45764},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1094, col: 7, offset: 45764},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1094, col: 13, offset: 45770},
																		run: (*parser).callonQuoteBlock15,
																		expr: &litMatcher{
																			pos:        position{line: 1094, col: 13, offset: 45770},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 202, col: 45, offset: 7383},
															val:        ",",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 202, col: 49, offset: 7387},
															label: "author",
															expr: &actionExpr{
																pos: position{line: 234, col: 16, offset: 8548},
																run: (*parser).callonQuoteBlock19,
																expr: &zeroOrMoreExpr{
																	pos: position{line: 234, col: 16, offset: 8548},
																	expr: &seqExpr{
																		pos: position{line: 234, col: 17, offset: 8549},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 234, col: 17, offset: 8549},
																				expr: &choiceExpr{
																					pos: position{line: 1102, col: 8, offset: 45866},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1098, col: 12, offset: 45826},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1098, col: 21, offset: 45835},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1100, col: 8, offset: 45855},
																							expr: &anyMatcher{
																								line: 1100, col: 9, offset: 45856,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 234, col: 22, offset: 8554},
																				expr: &litMatcher{
																					pos:        position{line: 234, col: 23, offset: 8555},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 234, col: 27, offset: 8559},
																				expr: &litMatcher{
																					pos:        position{line: 234, col: 28, offset: 8560},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 234, col: 32, offset: 8564,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 202, col: 70, offset: 7408},
															val:        ",",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 202, col: 74, offset: 7412},
															label: "title",
															expr: &actionExpr{
																pos: position{line: 238, col: 15, offset: 8618},
																run: (*parser).callonQuoteBlock35,
																expr: &zeroOrMoreExpr{
																	pos: position{line: 238, col: 15, offset: 8618},
																	expr: &seqExpr{
																		pos: position{line: 238, col: 16, offset: 8619},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 238, col: 16, offset: 8619},
																				expr: &choiceExpr{
																					pos: position{line: 1102, col: 8, offset: 45866},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1098, col: 12, offset: 45826},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1098, col: 21, offset: 45835},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1100, col: 8, offset: 45855},
																							expr: &anyMatcher{
																								line: 1100, col: 9, offset: 45856,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 238, col: 21, offset: 8624},
																				expr: &litMatcher{
																					pos:        position{line: 238, col: 22, offset: 8625},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 238, col: 26, offset: 8629},
																				expr: &litMatcher{
																					pos:        position{line: 238, col: 27, offset: 8630},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 238, col: 31, offset: 8634,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 202, col: 93, offset: 7431},
															val:        "]",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 202, col: 97, offset: 7435},
															expr: &choiceExpr{
																pos: position{line: 1094, col: 7, offset: 45764},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1094, col: 7, offset: 45764},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1094, col: 13, offset: 45770},
																		run: (*parser).callonQuoteBlock53,
																		expr: &litMatcher{
																			pos:        position{line: 1094, col: 13, offset: 45770},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1102, col: 8, offset: 45866},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1098, col: 12, offset: 45826},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1098, col: 21, offset: 45835},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1100, col: 8, offset: 45855},
																	expr: &anyMatcher{
																		line: 1100, col: 9, offset: 45856,
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 206, col: 5, offset: 7582},
												run: (*parser).callonQuoteBlock60,
												expr: &seqExpr{
													pos: position{line: 206, col: 5, offset: 7582},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 206, col: 5, offset: 7582},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 206, col: 9, offset: 7586},
															label: "kind",
															expr: &actionExpr{
																pos: position{line: 214, col: 14, offset: 7892},
																run: (*parser).callonQuoteBlock64,
																expr: &litMatcher{
																	pos:        position{line: 214, col: 14, offset: 7892},
																	val:        "quote",
																	ignoreCase: false,
																},
															},
														},
														&zeroOrMoreExpr{
															pos: position{line: 206, col: 26, offset: 7603},
															expr: &choiceExpr{
																pos: position{line: 1094, col: 7, offset: 45764},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1094, col: 7, offset: 45764},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1094, col: 13, offset: 45770},
																		run: (*parser).callonQuoteBlock69,
																		expr: &litMatcher{
																			pos:        position{line: 1094, col: 13, offset: 45770},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 206, col: 30, offset: 7607},
															val:        ",",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 206, col: 34, offset: 7611},
															label: "author",
															expr: &actionExpr{
																pos: position{line: 234, col: 16, offset: 8548},
																run: (*parser).callonQuoteBlock73,
																expr: &zeroOrMoreExpr{
																	pos: position{line: 234, col: 16, offset: 8548},
																	expr: &seqExpr{
																		pos: position{line: 234, col: 17, offset: 8549},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 234, col: 17, offset: 8549},
																				expr: &choiceExpr{
																					pos: position{line: 1102, col: 8, offset: 45866},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1098, col: 12, offset: 45826},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1098, col: 21, offset: 45835},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1100, col: 8, offset: 45855},
																							expr: &anyMatcher{
																								line: 1100, col: 9, offset: 45856,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 234, col: 22, offset: 8554},
																				expr: &litMatcher{
																					pos:        position{line: 234, col: 23, offset: 8555},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 234, col: 27, offset: 8559},
																				expr: &litMatcher{
																					pos:        position{line: 234, col: 28, offset: 8560},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 234, col: 32, offset: 8564,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 206, col: 55, offset: 7632},
															val:        "]",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 206, col: 59, offset: 7636},
															expr: &choiceExpr{
																pos: position{line: 1094, col: 7, offset: 45764},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1094, col: 7, offset: 45764},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1094, col: 13, offset: 45770},
																		run: (*parser).callonQuoteBlock91,
																		expr: &litMatcher{
																			pos:        position{line: 1094, col: 13, offset: 45770},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1102, col: 8, offset: 45866},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1098, col: 12, offset: 45826},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1098, col: 21, offset: 45835},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1100, col: 8, offset: 45855},
																	expr: &anyMatcher{
																		line: 1100, col: 9, offset: 45856,
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 210, col: 5, offset: 7771},
												run: (*parser).callonQuoteBlock98,
												expr: &seqExpr{
													pos: position{line: 210, col: 5, offset: 7771},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 210, col: 5, offset: 7771},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 210, col: 9, offset: 7775},
															label: "kind",
															expr: &actionExpr{
																pos: position{line: 214, col: 14, offset: 7892},
																run: (*parser).callonQuoteBlock102,
																expr: &litMatcher{
																	pos:        position{line: 214, col: 14, offset: 7892},
																	val:        "quote",
																	ignoreCase: false,
																},
															},
														},
														&zeroOrMoreExpr{
															pos: position{line: 210, col: 26, offset: 7792},
															expr: &choiceExpr{
																pos: position{line: 1094, col: 7, offset: 45764},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1094, col: 7, offset: 45764},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1094, col: 13, offset: 45770},
																		run: (*parser).callonQuoteBlock107,
																		expr: &litMatcher{
																			pos:        position{line: 1094, col: 13, offset: 45770},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 210, col: 30, offset: 7796},
															val:        "]",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 210, col: 34, offset: 7800},
															expr: &choiceExpr{
																pos: position{line: 1094, col: 7, offset: 45764},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1094, col: 7, offset: 45764},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1094, col: 13, offset: 45770},
																		run: (*parser).callonQuoteBlock113,
																		expr: &litMatcher{
																			pos:        position{line: 1094, col: 13, offset: 45770},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1102, col: 8, offset: 45866},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1098, col: 12, offset: 45826},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1098, col: 21, offset: 45835},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1100, col: 8, offset: 45855},
																	expr: &anyMatcher{
																		line: 1100, col: 9, offset: 45856,
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&zeroOrMoreExpr{
										pos: position{line: 898, col: 43, offset: 38708},
										expr: &actionExpr{
											pos: position{line: 136, col: 21, offset: 5092},
											run: (*parser).callonQuoteBlock121,
											expr: &seqExpr{
												pos: position{line: 136, col: 21, offset: 5092},
												exprs: []interface{}{
													&andExpr{
														pos: position{line: 136, col: 21, offset: 5092},
														expr: &charClassMatcher{
															pos:        position{line: 136, col: 23, offset: 5094},
															val:        "[[.#]",
															chars:      []rune{'[', '.', '#'},
															ignoreCase: false,
															inverted:   false,
														},
													},
													&labeledExpr{
														pos:   position{line: 137, col: 5, offset: 5182},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 137, col: 11, offset: 5188},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 144, col: 14, offset: 5546},
																	run: (*parser).callonQuoteBlock127,
																	expr: &seqExpr{
																		pos: position{line: 144, col: 14, offset: 5546},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 144, col: 14, offset: 5546},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 144, col: 19, offset: 5551},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1080, col: 7, offset: 45482},
																					run: (*parser).callonQuoteBlock131,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1080, col: 7, offset: 45482},
																						expr: &seqExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1080, col: 8, offset: 45483},
																									expr: &choiceExpr{
																										pos: position{line: 1098, col: 12, offset: 45826},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1098, col: 12, offset: 45826},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1098, col: 21, offset: 45835},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 17, offset: 45492},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonQuoteBlock141,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 21, offset: 45496},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 22, offset: 45497},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 26, offset: 45501},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 27, offset: 45502},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 31, offset: 45506},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 32, offset: 45507},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 37, offset: 45512},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 38, offset: 45513},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 43, offset: 45518},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 44, offset: 45519},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1080, col: 48, offset: 45523,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 144, col: 27, offset: 5559},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 146, col: 5, offset: 5613},
																	run: (*parser).callonQuoteBlock155,
																	expr: &seqExpr{
																		pos: position{line: 146, col: 5, offset: 5613},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 146, col: 5, offset: 5613},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 146, col: 10, offset: 5618},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1080, col: 7, offset: 45482},
																					run: (*parser).callonQuoteBlock159,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1080, col: 7, offset: 45482},
																						expr: &seqExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1080, col: 8, offset: 45483},
																									expr: &choiceExpr{
																										pos: position{line: 1098, col: 12, offset: 45826},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1098, col: 12, offset: 45826},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1098, col: 21, offset: 45835},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 17, offset: 45492},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonQuoteBlock169,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 21, offset: 45496},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 22, offset: 45497},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 26, offset: 45501},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 27, offset: 45502},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 31, offset: 45506},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 32, offset: 45507},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 37, offset: 45512},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 38, offset: 45513},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 43, offset: 45518},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 44, offset: 45519},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1080, col: 48, offset: 45523,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 146, col: 18, offset: 5626},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 156, col: 17, offset: 5929},
																	run: (*parser).callonQuoteBlock183,
																	expr: &seqExpr{
																		pos: position{line: 156, col: 17, offset: 5929},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 156, col: 17, offset: 5929},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 156, col: 21, offset: 5933},
																				expr: &litMatcher{
																					pos:        position{line: 156, col: 22, offset: 5934},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 156, col: 26, offset: 5938},
																				expr: &choiceExpr{
																					pos: position{line: 1094, col: 7, offset: 45764},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1094, col: 7, offset: 45764},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1094, col: 13, offset: 45770},
																							run: (*parser).callonQuoteBlock191,
																							expr: &litMatcher{
																								pos:        position{line: 1094, col: 13, offset: 45770},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 156, col: 30, offset: 5942},
																				label: "title",
																				expr: &actionExpr{
																					pos: position{line: 160, col: 24, offset: 6047},
																					run: (*parser).callonQuoteBlock194,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 160, col: 24, offset: 6047},
																						expr: &seqExpr{
																							pos: position{line: 160, col: 25, offset: 6048},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 160, col: 25, offset: 6048},
																									expr: &choiceExpr{
																										pos: position{line: 1098, col: 12, offset: 45826},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1098, col: 12, offset: 45826},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1098, col: 21, offset: 45835},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 160, col: 34, offset: 6057,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 166, col: 16, offset: 6206},
																	run: (*parser).callonQuoteBlock202,
																	expr: &seqExpr{
																		pos: position{line: 166, col: 16, offset: 6206},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 166, col: 16, offset: 6206},
																				val:        "[.",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 166, col: 21, offset: 6211},
																				expr: &choiceExpr{
																					pos: position{line: 1094, col: 7, offset: 45764},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1094, col: 7, offset: 45764},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1094, col: 13, offset: 45770},
																							run: (*parser).callonQuoteBlock208,
																							expr: &litMatcher{
																								pos:        position{line: 1094, col: 13, offset: 45770},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 166, col: 25, offset: 6215},
																				label: "role",
																				expr: &actionExpr{
																					pos: position{line: 170, col: 23, offset: 6319},
																					run: (*parser).callonQuoteBlock211,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 170, col: 23, offset: 6319},
																						expr: &seqExpr{
																							pos: position{line: 170, col: 24, offset: 6320},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 170, col: 24, offset: 6320},
																									expr: &choiceExpr{
																										pos: position{line: 1098, col: 12, offset: 45826},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1098, col: 12, offset: 45826},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1098, col: 21, offset: 45835},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 170, col: 33, offset: 6329},
																									expr: &litMatcher{
																										pos:        position{line: 170, col: 34, offset: 6330},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 170, col: 38, offset: 6334,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 166, col: 51, offset: 6241},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 175, col: 30, offset: 6483},
																	run: (*parser).callonQuoteBlock222,
																	expr: &seqExpr{
																		pos: position{line: 175, col: 30, offset: 6483},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 175, col: 30, offset: 6483},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 175, col: 34, offset: 6487},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 508, col: 19, offset: 19492},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 508, col: 19, offset: 19492},
																							run: (*parser).callonQuoteBlock227,
																							expr: &litMatcher{
																								pos:        position{line: 508, col: 19, offset: 19492},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 510, col: 5, offset: 19530},
																							run: (*parser).callonQuoteBlock229,
																							expr: &litMatcher{
																								pos:        position{line: 510, col: 5, offset: 19530},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 512, col: 5, offset: 19570},
																							run: (*parser).callonQuoteBlock231,
																							expr: &litMatcher{
																								pos:        position{line: 512, col: 5, offset: 19570},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 514, col: 5, offset: 19620},
																							run: (*parser).callonQuoteBlock233,
																							expr: &litMatcher{
																								pos:        position{line: 514, col: 5, offset: 19620},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 516, col: 5, offset: 19666},
																							run: (*parser).callonQuoteBlock235,
																							expr: &litMatcher{
																								pos:        position{line: 516, col: 5, offset: 19666},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 175, col: 53, offset: 6506},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 198, col: 21, offset: 7255},
																	run: (*parser).callonQuoteBlock238,
																	expr: &litMatcher{
																		pos:        position{line: 198, col: 21, offset: 7255},
																		val:        "[horizontal]",
																		ignoreCase: false,
																	},
																},
																&actionExpr{
																	pos: position{line: 180, col: 19, offset: 6667},
																	run: (*parser).callonQuoteBlock240,
																	expr: &seqExpr{
																		pos: position{line: 180, col: 19, offset: 6667},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 180, col: 19, offset: 6667},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 180, col: 23, offset: 6671},
																				expr: &choiceExpr{
																					pos: position{line: 1094, col: 7, offset: 45764},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1094, col: 7, offset: 45764},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1094, col: 13, offset: 45770},
																							run: (*parser).callonQuoteBlock246,
																							expr: &litMatcher{
																								pos:        position{line: 1094, col: 13, offset: 45770},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 180, col: 27, offset: 6675},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 180, col: 38, offset: 6686},
																					expr: &choiceExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								run: (*parser).callonQuoteBlock251,
																								expr: &seqExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 184, col: 21, offset: 6799},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												run: (*parser).callonQuoteBlock254,
																												expr: &seqExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															expr: &actionExpr{
																																pos: position{line: 214, col: 14, offset: 7892},
																																run: (*parser).callonQuoteBlock257,
																																expr: &litMatcher{
																																	pos:        position{line: 214, col: 14, offset: 7892},
																																	val:        "quote",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 190, col: 28, offset: 7070},
																															expr: &actionExpr{
																																pos: position{line: 230, col: 14, offset: 8489},
																																run: (*parser).callonQuoteBlock260,
																																expr: &litMatcher{
																																	pos:        position{line: 230, col: 14, offset: 8489},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 190, col: 39, offset: 7081},
																															expr: &actionExpr{
																																pos: position{line: 1040, col: 16, offset: 44408},
																																run: (*parser).callonQuoteBlock263,
																																expr: &litMatcher{
																																	pos:        position{line: 1040, col: 16, offset: 44408},
																																	val:        "literal",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 190, col: 52, offset: 7094},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 190, col: 56, offset: 7098},
																																expr: &seqExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 190, col: 57, offset: 7099},
																																			expr: &litMatcher{
																																				pos:        position{line: 190, col: 58, offset: 7100},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 190, col: 62, offset: 7104},
																																			expr: &litMatcher{
																																				pos:        position{line: 190, col: 63, offset: 7105},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 190, col: 67, offset: 7109},
																																			expr: &litMatcher{
																																				pos:        position{line: 190, col: 68, offset: 7110},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 190, col: 72, offset: 7114,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 184, col: 40, offset: 6818},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 184, col: 44, offset: 6822},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 194, col: 19, offset: 7173},
																												run: (*parser).callonQuoteBlock277,
																												expr: &labeledExpr{
																													pos:   position{line: 194, col: 19, offset: 7173},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 194, col: 25, offset: 7179},
																														expr: &seqExpr{
																															pos: position{line: 194, col: 26, offset: 7180},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 194, col: 26, offset: 7180},
																																	expr: &litMatcher{
																																		pos:        position{line: 194, col: 27, offset: 7181},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 194, col: 31, offset: 7185},
																																	expr: &litMatcher{
																																		pos:        position{line: 194, col: 32, offset: 7186},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 194, col: 36, offset: 7190},
																																	expr: &litMatcher{
																																		pos:        position{line: 194, col: 37, offset: 7191},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 194, col: 41, offset: 7195,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 184, col: 67, offset: 6845},
																											expr: &litMatcher{
																												pos:        position{line: 184, col: 67, offset: 6845},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 184, col: 72, offset: 6850},
																											expr: &choiceExpr{
																												pos: position{line: 1094, col: 7, offset: 45764},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1094, col: 7, offset: 45764},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1094, col: 13, offset: 45770},
																														run: (*parser).callonQuoteBlock293,
																														expr: &litMatcher{
																															pos:        position{line: 1094, col: 13, offset: 45770},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								run: (*parser).callonQuoteBlock295,
																								expr: &seqExpr{
																									pos: position{line: 186, col: 5, offset: 6934},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 186, col: 5, offset: 6934},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												run: (*parser).callonQuoteBlock298,
																												expr: &seqExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															expr: &actionExpr{
																																pos: position{line: 214, col: 14, offset: 7892},
																																run: (*parser).callonQuoteBlock301,
																																expr: &litMatcher{
																																	pos:        position{line: 214, col: 14, offset: 7892},
																																	val:        "quote",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 190, col: 28, offset: 7070},
																															expr: &actionExpr{
																																pos: position{line: 230, col: 14, offset: 8489},
																																run: (*parser).callonQuoteBlock304,
																																expr: &litMatcher{
																																	pos:        position{line: 230, col: 14, offset: 8489},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 190, col: 39, offset: 7081},
																															expr: &actionExpr{
																																pos: position{line: 1040, col: 16, offset: 44408},
																																run: (*parser).callonQuoteBlock307,
																																expr: &litMatcher{
																																	pos:        position{line: 1040, col: 16, offset: 44408},
																																	val:        "literal",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 190, col: 52, offset: 7094},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 190, col: 56, offset: 7098},
																																expr: &seqExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 190, col: 57, offset: 7099},
																																			expr: &litMatcher{
																																				pos:        position{line: 190, col: 58, offset: 7100},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 190, col: 62, offset: 7104},
																																			expr: &litMatcher{
																																				pos:        position{line: 190, col: 63, offset: 7105},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 190, col: 67, offset: 7109},
																																			expr: &litMatcher{
																																				pos:        position{line: 190, col: 68, offset: 7110},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 190, col: 72, offset: 7114,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 186, col: 24, offset: 6953},
																											expr: &litMatcher{
																												pos:        position{line: 186, col: 24, offset: 6953},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 186, col: 29, offset: 6958},
																											expr: &choiceExpr{
																												pos: position{line: 1094, col: 7, offset: 45764},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1094, col: 7, offset: 45764},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1094, col: 13, offset: 45770},
																														run: (*parser).callonQuoteBlock324,
																														expr: &litMatcher{
																															pos:        position{line: 1094, col: 13, offset: 45770},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 180, col: 59, offset: 6707},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 137, col: 115, offset: 5292},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonQuoteBlock330,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1102, col: 8, offset: 45866},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1100, col: 8, offset: 45855},
																expr: &anyMatcher{
																	line: 1100, col: 9, offset: 45856,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 896, col: 24, offset: 38625},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 896, col: 31, offset: 38632},
							expr: &choiceExpr{
								pos: position{line: 1094, col: 7, offset: 45764},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1094, col: 7, offset: 45764},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1094, col: 13, offset: 45770},
										run: (*parser).callonQuoteBlock341,
										expr: &litMatcher{
											pos:        position{line: 1094, col: 13, offset: 45770},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 898, col: 82, offset: 38747},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 898, col: 90, offset: 38755},
								expr: &ruleRefExpr{
									pos:  position{line: 898, col: 91, offset: 38756},
									name: "QuoteBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 898, col: 113, offset: 38778},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 896, col: 24, offset: 38625},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 896, col: 24, offset: 38625},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 896, col: 31, offset: 38632},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonQuoteBlock357,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlockContent",
			pos:  position{line: 902, col: 1, offset: 38923},
			expr: &actionExpr{
				pos: position{line: 903, col: 5, offset: 38949},
				run: (*parser).callonQuoteBlockContent1,
				expr: &seqExpr{
					pos: position{line: 903, col: 5, offset: 38949},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 903, col: 5, offset: 38949},
							expr: &seqExpr{
								pos: position{line: 896, col: 24, offset: 38625},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 896, col: 24, offset: 38625},
										val:        "____",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 896, col: 31, offset: 38632},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonQuoteBlockContent9,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1102, col: 8, offset: 45866},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1098, col: 12, offset: 45826},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1098, col: 21, offset: 45835},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1100, col: 8, offset: 45855},
												expr: &anyMatcher{
													line: 1100, col: 9, offset: 45856,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 903, col: 26, offset: 38970},
							expr: &notExpr{
								pos: position{line: 1100, col: 8, offset: 45855},
								expr: &anyMatcher{
									line: 1100, col: 9, offset: 45856,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 903, col: 31, offset: 38975},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 903, col: 40, offset: 38984},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlock",
			pos:  position{line: 912, col: 1, offset: 39282},
			expr: &actionExpr{
				pos: position{line: 912, col: 15, offset: 39296},
				run: (*parser).callonVerseBlock1,
				expr: &seqExpr{
					pos: position{line: 912, col: 15, offset: 39296},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 912, col: 15, offset: 39296},
							label: "attributes",
							expr: &seqExpr{
								pos: position{line: 912, col: 27, offset: 39308},
								exprs: []interface{}{
									&choiceExpr{
										pos: position{line: 218, col: 20, offset: 7955},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 218, col: 20, offset: 7955},
												run: (*parser).callonVerseBlock6,
												expr: &seqExpr{
													pos: position{line: 218, col: 20, offset: 7955},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 218, col: 20, offset: 7955},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 218, col: 24, offset: 7959},
															label: "kind",
															expr: &actionExpr{
																pos: position{line: 230, col: 14, offset: 8489},
																run: (*parser).callonVerseBlock10,
																expr: &litMatcher{
																	pos:        position{line: 230, col: 14, offset: 8489},
																	val:        "verse",
																	ignoreCase: false,
																},
															},
														},
														&zeroOrMoreExpr{
															pos: position{line: 218, col: 41, offset: 7976},
															expr: &choiceExpr{
																pos: position{line: 1094, col: 7, offset: 45764},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1094, col: 7, offset: 45764},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1094, col: 13, offset: 45770},
																		run: (*parser).callonVerseBlock15,
																		expr: &litMatcher{
																			pos:        position{line: 1094, col: 13, offset: 45770},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 218, col: 45, offset: 7980},
															val:        ",",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 218, col: 49, offset: 7984},
															label: "author",
															expr: &actionExpr{
																pos: position{line: 234, col: 16, offset: 8548},
																run: (*parser).callonVerseBlock19,
																expr: &zeroOrMoreExpr{
																	pos: position{line: 234, col: 16, offset: 8548},
																	expr: &seqExpr{
																		pos: position{line: 234, col: 17, offset: 8549},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 234, col: 17, offset: 8549},
																				expr: &choiceExpr{
																					pos: position{line: 1102, col: 8, offset: 45866},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1098, col: 12, offset: 45826},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1098, col: 21, offset: 45835},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1100, col: 8, offset: 45855},
																							expr: &anyMatcher{
																								line: 1100, col: 9, offset: 45856,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 234, col: 22, offset: 8554},
																				expr: &litMatcher{
																					pos:        position{line: 234, col: 23, offset: 8555},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 234, col: 27, offset: 8559},
																				expr: &litMatcher{
																					pos:        position{line: 234, col: 28, offset: 8560},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 234, col: 32, offset: 8564,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 218, col: 70, offset: 8005},
															val:        ",",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 218, col: 74, offset: 8009},
															label: "title",
															expr: &actionExpr{
																pos: position{line: 238, col: 15, offset: 8618},
																run: (*parser).callonVerseBlock35,
																expr: &zeroOrMoreExpr{
																	pos: position{line: 238, col: 15, offset: 8618},
																	expr: &seqExpr{
																		pos: position{line: 238, col: 16, offset: 8619},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 238, col: 16, offset: 8619},
																				expr: &choiceExpr{
																					pos: position{line: 1102, col: 8, offset: 45866},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1098, col: 12, offset: 45826},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1098, col: 21, offset: 45835},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1100, col: 8, offset: 45855},
																							expr: &anyMatcher{
																								line: 1100, col: 9, offset: 45856,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 238, col: 21, offset: 8624},
																				expr: &litMatcher{
																					pos:        position{line: 238, col: 22, offset: 8625},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 238, col: 26, offset: 8629},
																				expr: &litMatcher{
																					pos:        position{line: 238, col: 27, offset: 8630},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 238, col: 31, offset: 8634,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 218, col: 93, offset: 8028},
															val:        "]",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 218, col: 97, offset: 8032},
															expr: &choiceExpr{
																pos: position{line: 1094, col: 7, offset: 45764},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1094, col: 7, offset: 45764},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1094, col: 13, offset: 45770},
																		run: (*parser).callonVerseBlock53,
																		expr: &litMatcher{
																			pos:        position{line: 1094, col: 13, offset: 45770},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1102, col: 8, offset: 45866},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1098, col: 12, offset: 45826},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1098, col: 21, offset: 45835},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1100, col: 8, offset: 45855},
																	expr: &anyMatcher{
																		line: 1100, col: 9, offset: 45856,
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 222, col: 5, offset: 8179},
												run: (*parser).callonVerseBlock60,
												expr: &seqExpr{
													pos: position{line: 222, col: 5, offset: 8179},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 222, col: 5, offset: 8179},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 222, col: 9, offset: 8183},
															label: "kind",
															expr: &actionExpr{
																pos: position{line: 230, col: 14, offset: 8489},
																run: (*parser).callonVerseBlock64,
																expr: &litMatcher{
																	pos:        position{line: 230, col: 14, offset: 8489},
																	val:        "verse",
																	ignoreCase: false,
																},
															},
														},
														&zeroOrMoreExpr{
															pos: position{line: 222, col: 26, offset: 8200},
															expr: &choiceExpr{
																pos: position{line: 1094, col: 7, offset: 45764},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1094, col: 7, offset: 45764},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1094, col: 13, offset: 45770},
																		run: (*parser).callonVerseBlock69,
																		expr: &litMatcher{
																			pos:        position{line: 1094, col: 13, offset: 45770},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 222, col: 30, offset: 8204},
															val:        ",",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 222, col: 34, offset: 8208},
															label: "author",
															expr: &actionExpr{
																pos: position{line: 234, col: 16, offset: 8548},
																run: (*parser).callonVerseBlock73,
																expr: &zeroOrMoreExpr{
																	pos: position{line: 234, col: 16, offset: 8548},
																	expr: &seqExpr{
																		pos: position{line: 234, col: 17, offset: 8549},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 234, col: 17, offset: 8549},
																				expr: &choiceExpr{
																					pos: position{line: 1102, col: 8, offset: 45866},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1098, col: 12, offset: 45826},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1098, col: 21, offset: 45835},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1100, col: 8, offset: 45855},
																							expr: &anyMatcher{
																								line: 1100, col: 9, offset: 45856,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 234, col: 22, offset: 8554},
																				expr: &litMatcher{
																					pos:        position{line: 234, col: 23, offset: 8555},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 234, col: 27, offset: 8559},
																				expr: &litMatcher{
																					pos:        position{line: 234, col: 28, offset: 8560},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 234, col: 32, offset: 8564,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 222, col: 55, offset: 8229},
															val:        "]",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 222, col: 59, offset: 8233},
															expr: &choiceExpr{
																pos: position{line: 1094, col: 7, offset: 45764},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1094, col: 7, offset: 45764},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1094, col: 13, offset: 45770},
																		run: (*parser).callonVerseBlock91,
																		expr: &litMatcher{
																			pos:        position{line: 1094, col: 13, offset: 45770},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1102, col: 8, offset: 45866},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1098, col: 12, offset: 45826},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1098, col: 21, offset: 45835},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1100, col: 8, offset: 45855},
																	expr: &anyMatcher{
																		line: 1100, col: 9, offset: 45856,
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 226, col: 5, offset: 8368},
												run: (*parser).callonVerseBlock98,
												expr: &seqExpr{
													pos: position{line: 226, col: 5, offset: 8368},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 226, col: 5, offset: 8368},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 226, col: 9, offset: 8372},
															label: "kind",
															expr: &actionExpr{
																pos: position{line: 230, col: 14, offset: 8489},
																run: (*parser).callonVerseBlock102,
																expr: &litMatcher{
																	pos:        position{line: 230, col: 14, offset: 8489},
																	val:        "verse",
																	ignoreCase: false,
																},
															},
														},
														&zeroOrMoreExpr{
															pos: position{line: 226, col: 26, offset: 8389},
															expr: &choiceExpr{
																pos: position{line: 1094, col: 7, offset: 45764},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1094, col: 7, offset: 45764},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1094, col: 13, offset: 45770},
																		run: (*parser).callonVerseBlock107,
																		expr: &litMatcher{
																			pos:        position{line: 1094, col: 13, offset: 45770},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 226, col: 30, offset: 8393},
															val:        "]",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 226, col: 34, offset: 8397},
															expr: &choiceExpr{
																pos: position{line: 1094, col: 7, offset: 45764},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1094, col: 7, offset: 45764},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1094, col: 13, offset: 45770},
																		run: (*parser).callonVerseBlock113,
																		expr: &litMatcher{
																			pos:        position{line: 1094, col: 13, offset: 45770},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1102, col: 8, offset: 45866},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1098, col: 12, offset: 45826},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1098, col: 21, offset: 45835},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1100, col: 8, offset: 45855},
																	expr: &anyMatcher{
																		line: 1100, col: 9, offset: 45856,
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&zeroOrMoreExpr{
										pos: position{line: 912, col: 43, offset: 39324},
										expr: &actionExpr{
											pos: position{line: 136, col: 21, offset: 5092},
											run: (*parser).callonVerseBlock121,
											expr: &seqExpr{
												pos: position{line: 136, col: 21, offset: 5092},
												exprs: []interface{}{
													&andExpr{
														pos: position{line: 136, col: 21, offset: 5092},
														expr: &charClassMatcher{
															pos:        position{line: 136, col: 23, offset: 5094},
															val:        "[[.#]",
															chars:      []rune{'[', '.', '#'},
															ignoreCase: false,
															inverted:   false,
														},
													},
													&labeledExpr{
														pos:   position{line: 137, col: 5, offset: 5182},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 137, col: 11, offset: 5188},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 144, col: 14, offset: 5546},
																	run: (*parser).callonVerseBlock127,
																	expr: &seqExpr{
																		pos: position{line: 144, col: 14, offset: 5546},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 144, col: 14, offset: 5546},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 144, col: 19, offset: 5551},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1080, col: 7, offset: 45482},
																					run: (*parser).callonVerseBlock131,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1080, col: 7, offset: 45482},
																						expr: &seqExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1080, col: 8, offset: 45483},
																									expr: &choiceExpr{
																										pos: position{line: 1098, col: 12, offset: 45826},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1098, col: 12, offset: 45826},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1098, col: 21, offset: 45835},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 17, offset: 45492},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonVerseBlock141,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 21, offset: 45496},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 22, offset: 45497},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 26, offset: 45501},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 27, offset: 45502},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 31, offset: 45506},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 32, offset: 45507},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 37, offset: 45512},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 38, offset: 45513},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 43, offset: 45518},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 44, offset: 45519},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1080, col: 48, offset: 45523,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 144, col: 27, offset: 5559},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 146, col: 5, offset: 5613},
																	run: (*parser).callonVerseBlock155,
																	expr: &seqExpr{
																		pos: position{line: 146, col: 5, offset: 5613},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 146, col: 5, offset: 5613},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 146, col: 10, offset: 5618},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1080, col: 7, offset: 45482},
																					run: (*parser).callonVerseBlock159,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1080, col: 7, offset: 45482},
																						expr: &seqExpr{
																							pos: position{line: 1080, col: 8, offset: 45483},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1080, col: 8, offset: 45483},
																									expr: &choiceExpr{
																										pos: position{line: 1098, col: 12, offset: 45826},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1098, col: 12, offset: 45826},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1098, col: 21, offset: 45835},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 17, offset: 45492},
																									expr: &choiceExpr{
																										pos: position{line: 1094, col: 7, offset: 45764},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1094, col: 7, offset: 45764},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1094, col: 13, offset: 45770},
																												run: (*parser).callonVerseBlock169,
																												expr: &litMatcher{
																													pos:        position{line: 1094, col: 13, offset: 45770},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 21, offset: 45496},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 22, offset: 45497},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 26, offset: 45501},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 27, offset: 45502},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 31, offset: 45506},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 32, offset: 45507},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 37, offset: 45512},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 38, offset: 45513},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1080, col: 43, offset: 45518},
																									expr: &litMatcher{
																										pos:        position{line: 1080, col: 44, offset: 45519},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1080, col: 48, offset: 45523,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 146, col: 18, offset: 5626},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 156, col: 17, offset: 5929},
																	run: (*parser).callonVerseBlock183,
																	expr: &seqExpr{
																		pos: position{line: 156, col: 17, offset: 5929},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 156, col: 17, offset: 5929},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 156, col: 21, offset: 5933},
																				expr: &litMatcher{
																					pos:        position{line: 156, col: 22, offset: 5934},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 156, col: 26, offset: 5938},
																				expr: &choiceExpr{
																					pos: position{line: 1094, col: 7, offset: 45764},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1094, col: 7, offset: 45764},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1094, col: 13, offset: 45770},
																							run: (*parser).callonVerseBlock191,
																							expr: &litMatcher{
																								pos:        position{line: 1094, col: 13, offset: 45770},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 156, col: 30, offset: 5942},
																				label: "title",
																				expr: &actionExpr{
																					pos: position{line: 160, col: 24, offset: 6047},
																					run: (*parser).callonVerseBlock194,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 160, col: 24, offset: 6047},
																						expr: &seqExpr{
																							pos: position{line: 160, col: 25, offset: 6048},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 160, col: 25, offset: 6048},
																									expr: &choiceExpr{
																										pos: position{line: 1098, col: 12, offset: 45826},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1098, col: 12, offset: 45826},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1098, col: 21, offset: 45835},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 160, col: 34, offset: 6057,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 166, col: 16, offset: 6206},
																	run: (*parser).callonVerseBlock202,
																	expr: &seqExpr{
																		pos: position{line: 166, col: 16, offset: 6206},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 166, col: 16, offset: 6206},
																				val:        "[.",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 166, col: 21, offset: 6211},
																				expr: &choiceExpr{
																					pos: position{line: 1094, col: 7, offset: 45764},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1094, col: 7, offset: 45764},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1094, col: 13, offset: 45770},
																							run: (*parser).callonVerseBlock208,
																							expr: &litMatcher{
																								pos:        position{line: 1094, col: 13, offset: 45770},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 166, col: 25, offset: 6215},
																				label: "role",
																				expr: &actionExpr{
																					pos: position{line: 170, col: 23, offset: 6319},
																					run: (*parser).callonVerseBlock211,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 170, col: 23, offset: 6319},
																						expr: &seqExpr{
																							pos: position{line: 170, col: 24, offset: 6320},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 170, col: 24, offset: 6320},
																									expr: &choiceExpr{
																										pos: position{line: 1098, col: 12, offset: 45826},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1098, col: 12, offset: 45826},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1098, col: 21, offset: 45835},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 170, col: 33, offset: 6329},
																									expr: &litMatcher{
																										pos:        position{line: 170, col: 34, offset: 6330},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 170, col: 38, offset: 6334,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 166, col: 51, offset: 6241},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 175, col: 30, offset: 6483},
																	run: (*parser).callonVerseBlock222,
																	expr: &seqExpr{
																		pos: position{line: 175, col: 30, offset: 6483},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 175, col: 30, offset: 6483},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 175, col: 34, offset: 6487},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 508, col: 19, offset: 19492},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 508, col: 19, offset: 19492},
																							run: (*parser).callonVerseBlock227,
																							expr: &litMatcher{
																								pos:        position{line: 508, col: 19, offset: 19492},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 510, col: 5, offset: 19530},
																							run: (*parser).callonVerseBlock229,
																							expr: &litMatcher{
																								pos:        position{line: 510, col: 5, offset: 19530},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 512, col: 5, offset: 19570},
																							run: (*parser).callonVerseBlock231,
																							expr: &litMatcher{
																								pos:        position{line: 512, col: 5, offset: 19570},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 514, col: 5, offset: 19620},
																							run: (*parser).callonVerseBlock233,
																							expr: &litMatcher{
																								pos:        position{line: 514, col: 5, offset: 19620},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 516, col: 5, offset: 19666},
																							run: (*parser).callonVerseBlock235,
																							expr: &litMatcher{
																								pos:        position{line: 516, col: 5, offset: 19666},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 175, col: 53, offset: 6506},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 198, col: 21, offset: 7255},
																	run: (*parser).callonVerseBlock238,
																	expr: &litMatcher{
																		pos:        position{line: 198, col: 21, offset: 7255},
																		val:        "[horizontal]",
																		ignoreCase: false,
																	},
																},
																&actionExpr{
																	pos: position{line: 180, col: 19, offset: 6667},
																	run: (*parser).callonVerseBlock240,
																	expr: &seqExpr{
																		pos: position{line: 180, col: 19, offset: 6667},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 180, col: 19, offset: 6667},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 180, col: 23, offset: 6671},
																				expr: &choiceExpr{
																					pos: position{line: 1094, col: 7, offset: 45764},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1094, col: 7, offset: 45764},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1094, col: 13, offset: 45770},
																							run: (*parser).callonVerseBlock246,
																							expr: &litMatcher{
																								pos:        position{line: 1094, col: 13, offset: 45770},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 180, col: 27, offset: 6675},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 180, col: 38, offset: 6686},
																					expr: &choiceExpr{
																						pos: position{line: 184, col: 21, offset: 6799},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 184, col: 21, offset: 6799},
																								run: (*parser).callonVerseBlock251,
																								expr: &seqExpr{
																									pos: position{line: 184, col: 21, offset: 6799},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 184, col: 21, offset: 6799},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												run: (*parser).callonVerseBlock254,
																												expr: &seqExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															expr: &actionExpr{
																																pos: position{line: 214, col: 14, offset: 7892},
																																run: (*parser).callonVerseBlock257,
																																expr: &litMatcher{
																																	pos:        position{line: 214, col: 14, offset: 7892},
																																	val:        "quote",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 190, col: 28, offset: 7070},
																															expr: &actionExpr{
																																pos: position{line: 230, col: 14, offset: 8489},
																																run: (*parser).callonVerseBlock260,
																																expr: &litMatcher{
																																	pos:        position{line: 230, col: 14, offset: 8489},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 190, col: 39, offset: 7081},
																															expr: &actionExpr{
																																pos: position{line: 1040, col: 16, offset: 44408},
																																run: (*parser).callonVerseBlock263,
																																expr: &litMatcher{
																																	pos:        position{line: 1040, col: 16, offset: 44408},
																																	val:        "literal",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 190, col: 52, offset: 7094},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 190, col: 56, offset: 7098},
																																expr: &seqExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 190, col: 57, offset: 7099},
																																			expr: &litMatcher{
																																				pos:        position{line: 190, col: 58, offset: 7100},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 190, col: 62, offset: 7104},
																																			expr: &litMatcher{
																																				pos:        position{line: 190, col: 63, offset: 7105},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 190, col: 67, offset: 7109},
																																			expr: &litMatcher{
																																				pos:        position{line: 190, col: 68, offset: 7110},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 190, col: 72, offset: 7114,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 184, col: 40, offset: 6818},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 184, col: 44, offset: 6822},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 194, col: 19, offset: 7173},
																												run: (*parser).callonVerseBlock277,
																												expr: &labeledExpr{
																													pos:   position{line: 194, col: 19, offset: 7173},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 194, col: 25, offset: 7179},
																														expr: &seqExpr{
																															pos: position{line: 194, col: 26, offset: 7180},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 194, col: 26, offset: 7180},
																																	expr: &litMatcher{
																																		pos:        position{line: 194, col: 27, offset: 7181},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 194, col: 31, offset: 7185},
																																	expr: &litMatcher{
																																		pos:        position{line: 194, col: 32, offset: 7186},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 194, col: 36, offset: 7190},
																																	expr: &litMatcher{
																																		pos:        position{line: 194, col: 37, offset: 7191},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 194, col: 41, offset: 7195,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 184, col: 67, offset: 6845},
																											expr: &litMatcher{
																												pos:        position{line: 184, col: 67, offset: 6845},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 184, col: 72, offset: 6850},
																											expr: &choiceExpr{
																												pos: position{line: 1094, col: 7, offset: 45764},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1094, col: 7, offset: 45764},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1094, col: 13, offset: 45770},
																														run: (*parser).callonVerseBlock293,
																														expr: &litMatcher{
																															pos:        position{line: 1094, col: 13, offset: 45770},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 186, col: 5, offset: 6934},
																								run: (*parser).callonVerseBlock295,
																								expr: &seqExpr{
																									pos: position{line: 186, col: 5, offset: 6934},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 186, col: 5, offset: 6934},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 190, col: 17, offset: 7059},
																												run: (*parser).callonVerseBlock298,
																												expr: &seqExpr{
																													pos: position{line: 190, col: 17, offset: 7059},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 190, col: 17, offset: 7059},
																															expr: &actionExpr{
																																pos: position{line: 214, col: 14, offset: 7892},
																																run: (*parser).callonVerseBlock301,
																																expr: &litMatcher{
																																	pos:        position{line: 214, col: 14, offset: 7892},
																																	val:        "quote",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 190, col: 28, offset: 7070},
																															expr: &actionExpr{
																																pos: position{line: 230, col: 14, offset: 8489},
																																run: (*parser).callonVerseBlock304,
																																expr: &litMatcher{
																																	pos:        position{line: 230, col: 14, offset: 8489},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 190, col: 39, offset: 7081},
																															expr: &actionExpr{
																																pos: position{line: 1040, col: 16, offset: 44408},
																																run: (*parser).callonVerseBlock307,
																																expr: &litMatcher{
																																	pos:        position{line: 1040, col: 16, offset: 44408},
																																	val:        "literal",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 190, col: 52, offset: 7094},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 190, col: 56, offset: 7098},
																																expr: &seqExpr{
																																	pos: position{line: 190, col: 57, offset: 7099},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 190, col: 57, offset: 7099},
																																			expr: &litMatcher{
																																				pos:        position{line: 190, col: 58, offset: 7100},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 190, col: 62, offset: 7104},
																																			expr: &litMatcher{
																																				pos:        position{line: 190, col: 63, offset: 7105},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 190, col: 67, offset: 7109},
																																			expr: &litMatcher{
																																				pos:        position{line: 190, col: 68, offset: 7110},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 190, col: 72, offset: 7114,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 186, col: 24, offset: 6953},
																											expr: &litMatcher{
																												pos:        position{line: 186, col: 24, offset: 6953},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 186, col: 29, offset: 6958},
																											expr: &choiceExpr{
																												pos: position{line: 1094, col: 7, offset: 45764},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1094, col: 7, offset: 45764},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1094, col: 13, offset: 45770},
																														run: (*parser).callonVerseBlock324,
																														expr: &litMatcher{
																															pos:        position{line: 1094, col: 13, offset: 45770},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 180, col: 59, offset: 6707},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 137, col: 115, offset: 5292},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonVerseBlock330,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1102, col: 8, offset: 45866},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1098, col: 12, offset: 45826},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1098, col: 21, offset: 45835},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1100, col: 8, offset: 45855},
																expr: &anyMatcher{
																	line: 1100, col: 9, offset: 45856,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 896, col: 24, offset: 38625},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 896, col: 31, offset: 38632},
							expr: &choiceExpr{
								pos: position{line: 1094, col: 7, offset: 45764},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1094, col: 7, offset: 45764},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1094, col: 13, offset: 45770},
										run: (*parser).callonVerseBlock341,
										expr: &litMatcher{
											pos:        position{line: 1094, col: 13, offset: 45770},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 912, col: 82, offset: 39363},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 912, col: 90, offset: 39371},
								expr: &ruleRefExpr{
									pos:  position{line: 912, col: 91, offset: 39372},
									name: "VerseBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 912, col: 112, offset: 39393},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 896, col: 24, offset: 38625},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 896, col: 24, offset: 38625},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 896, col: 31, offset: 38632},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonVerseBlock357,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockContent",
			pos:  position{line: 916, col: 1, offset: 39538},
			expr: &actionExpr{
				pos: position{line: 916, col: 22, offset: 39559},
				run: (*parser).callonVerseBlockContent1,
				expr: &labeledExpr{
					pos:   position{line: 916, col: 22, offset: 39559},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 916, col: 28, offset: 39565},
						expr: &ruleRefExpr{
							pos:  position{line: 916, col: 29, offset: 39566},
							name: "VerseBlockLine",
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLine",
			pos:  position{line: 920, col: 1, offset: 39646},
			expr: &actionExpr{
				pos: position{line: 920, col: 19, offset: 39664},
				run: (*parser).callonVerseBlockLine1,
				expr: &seqExpr{
					pos: position{line: 920, col: 19, offset: 39664},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 920, col: 19, offset: 39664},
							expr: &seqExpr{
								pos: position{line: 896, col: 24, offset: 38625},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 896, col: 24, offset: 38625},
										val:        "____",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 896, col: 31, offset: 38632},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonVerseBlockLine9,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1102, col: 8, offset: 45866},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1098, col: 12, offset: 45826},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1098, col: 21, offset: 45835},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1100, col: 8, offset: 45855},
												expr: &anyMatcher{
													line: 1100, col: 9, offset: 45856,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 920, col: 40, offset: 39685},
							expr: &notExpr{
								pos: position{line: 1100, col: 8, offset: 45855},
								expr: &anyMatcher{
									line: 1100, col: 9, offset: 45856,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 920, col: 45, offset: 39690},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 920, col: 51, offset: 39696},
								name: "VerseBlockLineContent",
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLineContent",
			pos:  position{line: 924, col: 1, offset: 39772},
			expr: &actionExpr{
				pos: position{line: 924, col: 26, offset: 39797},
				run: (*parser).callonVerseBlockLineContent1,
				expr: &labeledExpr{
					pos:   position{line: 924, col: 26, offset: 39797},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 924, col: 35, offset: 39806},
						expr: &seqExpr{
							pos: position{line: 924, col: 36, offset: 39807},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 924, col: 36, offset: 39807},
									expr: &seqExpr{
										pos: position{line: 896, col: 24, offset: 38625},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 896, col: 24, offset: 38625},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 896, col: 31, offset: 38632},
												expr: &choiceExpr{
													pos: position{line: 1094, col: 7, offset: 45764},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1094, col: 7, offset: 45764},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1094, col: 13, offset: 45770},
															run: (*parser).callonVerseBlockLineContent11,
															expr: &litMatcher{
																pos:        position{line: 1094, col: 13, offset: 45770},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 924, col: 57, offset: 39828},
									expr: &choiceExpr{
										pos: position{line: 1102, col: 8, offset: 45866},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1098, col: 12, offset: 45826},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1098, col: 21, offset: 45835},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1100, col: 8, offset: 45855},
												expr: &anyMatcher{
													line: 1100, col: 9, offset: 45856,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 924, col: 62, offset: 39833},
									expr: &choiceExpr{
										pos: position{line: 1094, col: 7, offset: 45764},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonVerseBlockLineContent27,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 924, col: 66, offset: 39837},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 924, col: 80, offset: 39851},
									expr: &choiceExpr{
										pos: position{line: 1094, col: 7, offset: 45764},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonVerseBlockLineContent33,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlock",
			pos:  position{line: 933, col: 1, offset: 40234},
			expr: &actionExpr{
				pos: position{line: 933, col: 17, offset: 40250},
				run: (*parser).callonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 933, col: 17, offset: 40250},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 931, col: 26, offset: 40218},
							val:        "****",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 931, col: 33, offset: 40225},
							expr: &choiceExpr{
								pos: position{line: 1094, col: 7, offset: 45764},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1094, col: 7, offset: 45764},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1094, col: 13, offset: 45770},
										run: (*parser).callonSidebarBlock7,
										expr: &litMatcher{
											pos:        position{line: 1094, col: 13, offset: 45770},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 933, col: 39, offset: 40272},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 933, col: 47, offset: 40280},
								expr: &ruleRefExpr{
									pos:  position{line: 933, col: 48, offset: 40281},
									name: "SidebarBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 933, col: 72, offset: 40305},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 931, col: 26, offset: 40218},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 931, col: 26, offset: 40218},
											val:        "****",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 931, col: 33, offset: 40225},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonSidebarBlock23,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlockContent",
			pos:  position{line: 937, col: 1, offset: 40426},
			expr: &choiceExpr{
				pos: position{line: 937, col: 24, offset: 40449},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 937, col: 24, offset: 40449},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 937, col: 31, offset: 40456},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 1061, col: 14, offset: 44948},
						run: (*parser).callonSidebarBlockContent4,
						expr: &seqExpr{
							pos: position{line: 1061, col: 14, offset: 44948},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 1061, col: 14, offset: 44948},
									expr: &notExpr{
										pos: position{line: 1100, col: 8, offset: 45855},
										expr: &anyMatcher{
											line: 1100, col: 9, offset: 45856,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 1061, col: 19, offset: 44953},
									expr: &choiceExpr{
										pos: position{line: 1094, col: 7, offset: 45764},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1094, col: 7, offset: 45764},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1094, col: 13, offset: 45770},
												run: (*parser).callonSidebarBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 1094, col: 13, offset: 45770},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1102, col: 8, offset: 45866},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1098, col: 12, offset: 45826},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1098, col: 21, offset: 45835},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1100, col: 8, offset: 45855},
											expr: &anyMatcher{
												line: 1100, col: 9, offset: 45856,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 937, col: 60, offset: 40485},
						name: "NonSidebarBlock",
					},
				},
			},
		},
		{
			name: "NonSidebarBlock",
			pos:  position{line: 939, col: 1, offset: 40502},
			expr: &actionExpr{
				pos: position{line: 939, col: 20, offset: 40521},
				run: (*parser).callonNonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 939, col: 20, offset: 40521},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 939, col: 20, offset: 40521},
							expr: &ruleRefExpr{
								pos:  position{line: 939, col: 21, offset: 40522},
								name: "SidebarBlock",
							},
						},
						&labeledExpr{
							pos:   position{line: 939, col: 34, offset: 40535},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 939, col: 43, offset: 40544},
								name: "DelimitedBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "Table",
			pos:  position{line: 946, col: 1, offset: 40777},
			expr: &actionExpr{
				pos: position{line: 946, col: 10, offset: 40786},
				run: (*parser).callonTable1,
				expr: &seqExpr{
					pos: position{line: 946, col: 10, offset: 40786},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 955, col: 19, offset: 41052},
							val:        "|===",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 955, col: 26, offset: 41059},
							expr: &choiceExpr{
								pos: position{line: 1094, col: 7, offset: 45764},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1094, col: 7, offset: 45764},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1094, col: 13, offset: 45770},
										run: (*parser).callonTable7,
										expr: &litMatcher{
											pos:        position{line: 1094, col: 13, offset: 45770},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 947, col: 9, offset: 40809},
							label: "header",
							expr: &zeroOrOneExpr{
								pos: position{line: 947, col: 16, offset: 40816},
								expr: &ruleRefExpr{
									pos:  position{line: 947, col: 17, offset: 40817},
									name: "TableLineHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 948, col: 9, offset: 40843},
							label: "lines",
							expr: &zeroOrMoreExpr{
								pos: position{line: 948, col: 15, offset: 40849},
								expr: &ruleRefExpr{
									pos:  position{line: 948, col: 16, offset: 40850},
									name: "TableLine",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 949, col: 10, offset: 40871},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 955, col: 19, offset: 41052},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 955, col: 19, offset: 41052},
											val:        "|===",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 955, col: 26, offset: 41059},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonTable26,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLineHeader",
			pos:  position{line: 958, col: 1, offset: 41131},
			expr: &actionExpr{
				pos: position{line: 958, col: 20, offset: 41150},
				run: (*parser).callonTableLineHeader1,
				expr: &seqExpr{
					pos: position{line: 958, col: 20, offset: 41150},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 958, col: 20, offset: 41150},
							expr: &seqExpr{
								pos: position{line: 955, col: 19, offset: 41052},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 955, col: 19, offset: 41052},
										val:        "|===",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 955, col: 26, offset: 41059},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonTableLineHeader9,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1102, col: 8, offset: 45866},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1098, col: 12, offset: 45826},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1098, col: 21, offset: 45835},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1100, col: 8, offset: 45855},
												expr: &anyMatcher{
													line: 1100, col: 9, offset: 45856,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 958, col: 36, offset: 41166},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 958, col: 42, offset: 41172},
								expr: &ruleRefExpr{
									pos:  position{line: 958, col: 43, offset: 41173},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
						&actionExpr{
							pos: position{line: 1061, col: 14, offset: 44948},
							run: (*parser).callonTableLineHeader24,
							expr: &seqExpr{
								pos: position{line: 1061, col: 14, offset: 44948},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 1061, col: 14, offset: 44948},
										expr: &notExpr{
											pos: position{line: 1100, col: 8, offset: 45855},
											expr: &anyMatcher{
												line: 1100, col: 9, offset: 45856,
											},
										},
									},
									&zeroOrMoreExpr{
										pos: position{line: 1061, col: 19, offset: 44953},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonTableLineHeader32,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1102, col: 8, offset: 45866},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1098, col: 12, offset: 45826},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1098, col: 21, offset: 45835},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1100, col: 8, offset: 45855},
												expr: &anyMatcher{
													line: 1100, col: 9, offset: 45856,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLine",
			pos:  position{line: 962, col: 1, offset: 41257},
			expr: &actionExpr{
				pos: position{line: 962, col: 14, offset: 41270},
				run: (*parser).callonTableLine1,
				expr: &seqExpr{
					pos: position{line: 962, col: 14, offset: 41270},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 962, col: 14, offset: 41270},
							expr: &seqExpr{
								pos: position{line: 955, col: 19, offset: 41052},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 955, col: 19, offset: 41052},
										val:        "|===",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 955, col: 26, offset: 41059},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonTableLine9,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1102, col: 8, offset: 45866},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1098, col: 12, offset: 45826},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1098, col: 21, offset: 45835},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1100, col: 8, offset: 45855},
												expr: &anyMatcher{
													line: 1100, col: 9, offset: 45856,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 962, col: 30, offset: 41286},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 962, col: 36, offset: 41292},
								expr: &ruleRefExpr{
									pos:  position{line: 962, col: 37, offset: 41293},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1102, col: 8, offset: 45866},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1098, col: 12, offset: 45826},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1098, col: 21, offset: 45835},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1100, col: 8, offset: 45855},
									expr: &anyMatcher{
										line: 1100, col: 9, offset: 45856,
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 962, col: 53, offset: 41309},
							expr: &actionExpr{
								pos: position{line: 1061, col: 14, offset: 44948},
								run: (*parser).callonTableLine25,
								expr: &seqExpr{
									pos: position{line: 1061, col: 14, offset: 44948},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1061, col: 14, offset: 44948},
											expr: &notExpr{
												pos: position{line: 1100, col: 8, offset: 45855},
												expr: &anyMatcher{
													line: 1100, col: 9, offset: 45856,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1061, col: 19, offset: 44953},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonTableLine33,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1102, col: 8, offset: 45866},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1100, col: 8, offset: 45855},
													expr: &anyMatcher{
														line: 1100, col: 9, offset: 45856,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableCell",
			pos:  position{line: 966, col: 1, offset: 41378},
			expr: &actionExpr{
				pos: position{line: 966, col: 14, offset: 41391},
				run: (*parser).callonTableCell1,
				expr: &seqExpr{
					pos: position{line: 966, col: 14, offset: 41391},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 953, col: 23, offset: 41025},
							val:        "|",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 953, col: 27, offset: 41029},
							expr: &choiceExpr{
								pos: position{line: 1094, col: 7, offset: 45764},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1094, col: 7, offset: 45764},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1094, col: 13, offset: 45770},
										run: (*parser).callonTableCell7,
										expr: &litMatcher{
											pos:        position{line: 1094, col: 13, offset: 45770},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 966, col: 33, offset: 41410},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 966, col: 42, offset: 41419},
								expr: &seqExpr{
									pos: position{line: 966, col: 43, offset: 41420},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 966, col: 43, offset: 41420},
											expr: &seqExpr{
												pos: position{line: 953, col: 23, offset: 41025},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 953, col: 23, offset: 41025},
														val:        "|",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 953, col: 27, offset: 41029},
														expr: &choiceExpr{
															pos: position{line: 1094, col: 7, offset: 45764},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1094, col: 7, offset: 45764},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1094, col: 13, offset: 45770},
																	run: (*parser).callonTableCell18,
																	expr: &litMatcher{
																		pos:        position{line: 1094, col: 13, offset: 45770},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 966, col: 63, offset: 41440},
											expr: &choiceExpr{
												pos: position{line: 1102, col: 8, offset: 45866},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1098, col: 12, offset: 45826},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1098, col: 21, offset: 45835},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1100, col: 8, offset: 45855},
														expr: &anyMatcher{
															line: 1100, col: 9, offset: 45856,
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 966, col: 68, offset: 41445},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonTableCell29,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&ruleRefExpr{
											pos:  position{line: 966, col: 72, offset: 41449},
											name: "InlineElement",
										},
										&zeroOrMoreExpr{
											pos: position{line: 966, col: 86, offset: 41463},
											expr: &choiceExpr{
												pos: position{line: 1094, col: 7, offset: 45764},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1094, col: 7, offset: 45764},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1094, col: 13, offset: 45770},
														run: (*parser).callonTableCell35,
														expr: &litMatcher{
															pos:        position{line: 1094, col: 13, offset: 45770},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Word",
			pos:  position{line: 1072, col: 1, offset: 45167},
			expr: &actionExpr{
				pos: position{line: 1072, col: 9, offset: 45175},
				run: (*parser).callonWord1,
				expr: &choiceExpr{
					pos: position{line: 1072, col: 10, offset: 45176},
					alternatives: []interface{}{
						&oneOrMoreExpr{
							pos: position{line: 1072, col: 10, offset: 45176},
							expr: &seqExpr{
								pos: position{line: 1072, col: 11, offset: 45177},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 1072, col: 11, offset: 45177},
										expr: &choiceExpr{
											pos: position{line: 1098, col: 12, offset: 45826},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1098, col: 12, offset: 45826},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1098, col: 21, offset: 45835},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 1072, col: 20, offset: 45186},
										expr: &choiceExpr{
											pos: position{line: 1094, col: 7, offset: 45764},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1094, col: 7, offset: 45764},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1094, col: 13, offset: 45770},
													run: (*parser).callonWord12,
													expr: &litMatcher{
														pos:        position{line: 1094, col: 13, offset: 45770},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 1072, col: 24, offset: 45190},
										expr: &charClassMatcher{
											pos:        position{line: 1070, col: 16, offset: 45144},
											val:        "[()[]]",
											chars:      []rune{'(', ')', '[', ']'},
											ignoreCase: false,
											inverted:   false,
										},
									},
									&notExpr{
										pos: position{line: 1072, col: 37, offset: 45203},
										expr: &litMatcher{
											pos:        position{line: 1072, col: 38, offset: 45204},
											val:        ".",
											ignoreCase: false,
										},
									},
									&notExpr{
										pos: position{line: 1072, col: 42, offset: 45208},
										expr: &ruleRefExpr{
											pos:  position{line: 1072, col: 43, offset: 45209},
											name: "SubScriptOrSuperScriptText",
										},
									},
									&anyMatcher{
										line: 1072, col: 70, offset: 45236,
									},
								},
							},
						},
						&oneOrMoreExpr{
							pos: position{line: 1072, col: 77, offset: 45243},
							expr: &litMatcher{
								pos:        position{line: 1072, col: 77, offset: 45243},
								val:        ".",
								ignoreCase: false,
							},
						},
					},
				},
			},
		},
		{
			name: "WS",
			pos:  position{line: 1094, col: 1, offset: 45758},
			expr: &choiceExpr{
				pos: position{line: 1094, col: 7, offset: 45764},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 1094, col: 7, offset: 45764},
						val:        " ",
						ignoreCase: false,
					},
					&actionExpr{
						pos: position{line: 1094, col: 13, offset: 45770},
						run: (*parser).callonWS3,
						expr: &litMatcher{
							pos:        position{line: 1094, col: 13, offset: 45770},
							val:        "\t",
							ignoreCase: false,
						},
					},
				},
			},
		},
		{
			name: "NEWLINE",
			pos:  position{line: 1098, col: 1, offset: 45815},
			expr: &choiceExpr{
				pos: position{line: 1098, col: 12, offset: 45826},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 1098, col: 12, offset: 45826},
						val:        "\r\n",
						ignoreCase: false,
					},
					&charClassMatcher{
						pos:        position{line: 1098, col: 21, offset: 45835},
						val:        "[\\r\\n]",
						chars:      []rune{'\r', '\n'},
						ignoreCase: false,
						inverted:   false,
					},
				},
			},
		},
	},
}

func (c *current) onDocument1(frontMatter, documentHeader, blocks interface{}) (interface{}, error) {
	return types.NewDocument(frontMatter, documentHeader, blocks.([]interface{}))
}

func (p *parser) callonDocument1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocument1(stack["frontMatter"], stack["documentHeader"], stack["blocks"])
}

func (c *current) onDocumentBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock25()
}

func (c *current) onDocumentBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock15()
}

func (c *current) onDocumentBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock11(stack["id"])
}

func (c *current) onDocumentBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock53()
}

func (c *current) onDocumentBlock43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock43()
}

func (c *current) onDocumentBlock39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock39(stack["id"])
}

func (c *current) onDocumentBlock75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock75()
}

func (c *current) onDocumentBlock78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock78()
}

func (c *current) onDocumentBlock67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentBlock67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock67(stack["title"])
}

func (c *current) onDocumentBlock92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock92()
}

func (c *current) onDocumentBlock95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock95()
}

func (c *current) onDocumentBlock86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentBlock86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock86(stack["role"])
}

func (c *current) onDocumentBlock111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock111()
}

func (c *current) onDocumentBlock113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock113()
}

func (c *current) onDocumentBlock115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock115()
}

func (c *current) onDocumentBlock117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentBlock117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock117()
}

func (c *current) onDocumentBlock119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock119()
}

func (c *current) onDocumentBlock106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentBlock106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock106(stack["k"])
}

func (c *current) onDocumentBlock122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock122()
}

func (c *current) onDocumentBlock130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock130()
}

func (c *current) onDocumentBlock141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock141()
}

func (c *current) onDocumentBlock144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock144()
}

func (c *current) onDocumentBlock147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock147()
}

func (c *current) onDocumentBlock138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock138(stack["key"])
}

func (c *current) onDocumentBlock161(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock161(stack["value"])
}

func (c *current) onDocumentBlock177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock177()
}

func (c *current) onDocumentBlock135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock135(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock185()
}

func (c *current) onDocumentBlock188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock188()
}

func (c *current) onDocumentBlock191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock191()
}

func (c *current) onDocumentBlock182(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock182(stack["key"])
}

func (c *current) onDocumentBlock208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock208()
}

func (c *current) onDocumentBlock179(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock179(stack["key"])
}

func (c *current) onDocumentBlock124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock124(stack["attributes"])
}

func (c *current) onDocumentBlock214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock214()
}

func (c *current) onDocumentBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonDocumentBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock5(stack["attr"])
}

func (c *current) onDocumentBlock1(attributes, block interface{}) (interface{}, error) {
	return types.WithAttributes(block, attributes.([]interface{}))

}

func (p *parser) callonDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1(stack["attributes"], stack["block"])
}

func (c *current) onFrontMatter10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter10()
}

func (c *current) onFrontMatter1(content interface{}) (interface{}, error) {
	return types.NewYamlFrontMatter(content.(string))
}

func (p *parser) callonFrontMatter1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter1(stack["content"])
}

func (c *current) onDocumentHeader13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader13()
}

func (c *current) onDocumentHeader24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader24()
}

func (c *current) onDocumentHeader42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader42()
}

func (c *current) onDocumentHeader48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader48()
}

func (c *current) onDocumentHeader27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader27()
}

func (c *current) onDocumentHeader67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader67()
}

func (c *current) onDocumentHeader73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader73()
}

func (c *current) onDocumentHeader52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader52()
}

func (c *current) onDocumentHeader92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader92()
}

func (c *current) onDocumentHeader98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader98()
}

func (c *current) onDocumentHeader77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader77()
}

func (c *current) onDocumentHeader102(email interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader102(stack["email"])
}

func (c *current) onDocumentHeader121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader121()
}

func (c *current) onDocumentHeader128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader128()
}

func (c *current) onDocumentHeader19(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader19(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader8(authors interface{}) (interface{}, error) {
	return types.NewDocumentAuthors(authors.([]interface{}))
}

func (p *parser) callonDocumentHeader8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader8(stack["authors"])
}

func (c *current) onDocumentHeader140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader140()
}

func (c *current) onDocumentHeader149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader149()
}

func (c *current) onDocumentHeader167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader167()
}

func (c *current) onDocumentHeader173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader173()
}

func (c *current) onDocumentHeader152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader152()
}

func (c *current) onDocumentHeader246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader246()
}

func (c *current) onDocumentHeader253() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader253()
}

func (c *current) onDocumentHeader144(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader144(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader135(author interface{}) (interface{}, error) {
	return []types.DocumentAuthor{author.(types.DocumentAuthor)}, nil
}

func (p *parser) callonDocumentHeader135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader135(stack["author"])
}

func (c *current) onDocumentHeader262() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader262()
}

func (c *current) onDocumentHeader272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader272()
}

func (c *current) onDocumentHeader269() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader269() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader269()
}

func (c *current) onDocumentHeader291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader291()
}

func (c *current) onDocumentHeader309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader309()
}

func (c *current) onDocumentHeader287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader287()
}

func (c *current) onDocumentHeader317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader317()
}

func (c *current) onDocumentHeader333() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader333()
}

func (c *current) onDocumentHeader257(revnumber, revdate, revremark interface{}) (interface{}, error) {
	return types.NewDocumentRevision(revnumber, revdate, revremark)
}

func (p *parser) callonDocumentHeader257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader257(stack["revnumber"], stack["revdate"], stack["revremark"])
}

func (c *current) onDocumentHeader355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader355()
}

func (c *current) onDocumentHeader364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader364()
}

func (c *current) onDocumentHeader351(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentHeader351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader351(stack["name"])
}

func (c *current) onDocumentHeader375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader375()
}

func (c *current) onDocumentHeader384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader384()
}

func (c *current) onDocumentHeader387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader387()
}

func (c *current) onDocumentHeader371(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentHeader371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader371(stack["name"], stack["value"])
}

func (c *current) onDocumentHeader1(header, authors, revision, otherAttributes interface{}) (interface{}, error) {

	return types.NewDocumentHeader(header, authors, revision, otherAttributes.([]interface{}))
}

func (p *parser) callonDocumentHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader1(stack["header"], stack["authors"], stack["revision"], stack["otherAttributes"])
}

func (c *current) onDocumentElement16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement16()
}

func (c *current) onDocumentElement8() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement8()
}

func (c *current) onDocumentElement27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement27()
}

func (c *current) onDocumentElement36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement36()
}

func (c *current) onDocumentElement23(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentElement23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement23(stack["name"])
}

func (c *current) onDocumentElement47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement47()
}

func (c *current) onDocumentElement56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement56()
}

func (c *current) onDocumentElement59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement59()
}

func (c *current) onDocumentElement43(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentElement43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement43(stack["name"], stack["value"])
}

func (c *current) onDocumentElement76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement76()
}

func (c *current) onDocumentElement85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement85()
}

func (c *current) onDocumentElement72(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentElement72() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement72(stack["name"])
}

func (c *current) onDocumentElement96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement96()
}

func (c *current) onDocumentElement105() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement105()
}

func (c *current) onDocumentElement92(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentElement92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement92(stack["name"])
}

func (c *current) onDocumentElement132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement132()
}

func (c *current) onDocumentElement122() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement122()
}

func (c *current) onDocumentElement145() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement145()
}

func (c *current) onDocumentElement157() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement157()
}

func (c *current) onDocumentElement169() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement169()
}

func (c *current) onDocumentElement190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement190()
}

func (c *current) onDocumentElement193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement193()
}

func (c *current) onDocumentElement196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement196()
}

func (c *current) onDocumentElement187(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement187(stack["key"])
}

func (c *current) onDocumentElement210(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement210(stack["value"])
}

func (c *current) onDocumentElement226() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement226()
}

func (c *current) onDocumentElement184(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement184(stack["key"], stack["value"])
}

func (c *current) onDocumentElement234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement234()
}

func (c *current) onDocumentElement237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement237()
}

func (c *current) onDocumentElement240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement240()
}

func (c *current) onDocumentElement231(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement231(stack["key"])
}

func (c *current) onDocumentElement257() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement257()
}

func (c *current) onDocumentElement228(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement228(stack["key"])
}

func (c *current) onDocumentElement141(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentElement141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement141(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onDocumentElement264() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement264()
}

func (c *current) onDocumentElement276() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement276()
}

func (c *current) onDocumentElement297() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement297() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement297()
}

func (c *current) onDocumentElement300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement300()
}

func (c *current) onDocumentElement303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement303()
}

func (c *current) onDocumentElement294(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement294(stack["key"])
}

func (c *current) onDocumentElement317(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement317(stack["value"])
}

func (c *current) onDocumentElement333() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement333()
}

func (c *current) onDocumentElement291(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement291(stack["key"], stack["value"])
}

func (c *current) onDocumentElement341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement341()
}

func (c *current) onDocumentElement344() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement344()
}

func (c *current) onDocumentElement347() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement347()
}

func (c *current) onDocumentElement338(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement338(stack["key"])
}

func (c *current) onDocumentElement364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement364()
}

func (c *current) onDocumentElement335(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement335() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement335(stack["key"])
}

func (c *current) onDocumentElement260(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentElement260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement260(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onDocumentElement371() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement371()
}

func (c *current) onDocumentElement392() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement392() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement392()
}

func (c *current) onDocumentElement395() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement395() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement395()
}

func (c *current) onDocumentElement398() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement398()
}

func (c *current) onDocumentElement389(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement389(stack["key"])
}

func (c *current) onDocumentElement412(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement412(stack["value"])
}

func (c *current) onDocumentElement428() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement428() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement428()
}

func (c *current) onDocumentElement386(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement386(stack["key"], stack["value"])
}

func (c *current) onDocumentElement436() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement436()
}

func (c *current) onDocumentElement439() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement439() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement439()
}

func (c *current) onDocumentElement442() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement442()
}

func (c *current) onDocumentElement433(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement433() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement433(stack["key"])
}

func (c *current) onDocumentElement459() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement459() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement459()
}

func (c *current) onDocumentElement430(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement430() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement430(stack["key"])
}

func (c *current) onDocumentElement367(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentElement367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement367(stack["alt"], stack["otherAttrs"])
}

func (c *current) onDocumentElement474() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement474() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement474()
}

func (c *current) onDocumentElement477() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement477()
}

func (c *current) onDocumentElement480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement480()
}

func (c *current) onDocumentElement471(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement471() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement471(stack["key"])
}

func (c *current) onDocumentElement494(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement494(stack["value"])
}

func (c *current) onDocumentElement510() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement510() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement510()
}

func (c *current) onDocumentElement468(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement468(stack["key"], stack["value"])
}

func (c *current) onDocumentElement518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement518()
}

func (c *current) onDocumentElement521() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement521() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement521()
}

func (c *current) onDocumentElement524() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement524() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement524()
}

func (c *current) onDocumentElement515(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement515(stack["key"])
}

func (c *current) onDocumentElement541() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement541() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement541()
}

func (c *current) onDocumentElement512(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement512() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement512(stack["key"])
}

func (c *current) onDocumentElement462(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentElement462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement462(stack["otherAttrs"])
}

func (c *current) onDocumentElement547() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement547() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement547()
}

func (c *current) onDocumentElement118(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewImageBlock(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonDocumentElement118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement118(stack["path"], stack["inlineAttributes"])
}

func (c *current) onDocumentElement566() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement566() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement566()
}

func (c *current) onDocumentElement562() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement562() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement562()
}

func (c *current) onDocumentElement598() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement598() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement598()
}

func (c *current) onDocumentElement590() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement590() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement590()
}

func (c *current) onDocumentElement587() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement587() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement587()
}

func (c *current) onDocumentElement584(otherLine interface{}) (interface{}, error) {
	return otherLine, nil // do not include the trailing 'EOL'

}

func (p *parser) callonDocumentElement584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement584(stack["otherLine"])
}

func (c *current) onDocumentElement559(firstLine, otherLines interface{}) (interface{}, error) {

	return append([]interface{}{firstLine}, otherLines.([]interface{})...), nil

}

func (p *parser) callonDocumentElement559() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement559(stack["firstLine"], stack["otherLines"])
}

func (c *current) onDocumentElement557(lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithSpacesOnFirstLine, lines.([]interface{}))
}

func (p *parser) callonDocumentElement557() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement557(stack["lines"])
}

func (c *current) onDocumentElement625() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement625() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement625()
}

func (c *current) onDocumentElement637() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement637() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement637()
}

func (c *current) onDocumentElement634(line interface{}) (interface{}, error) {

	return line, nil // do not include the trailing 'EOL'

}

func (p *parser) callonDocumentElement634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement634(stack["line"])
}

func (c *current) onDocumentElement631(lines interface{}) (interface{}, error) {
	return lines.([]interface{}), nil

}

func (p *parser) callonDocumentElement631() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement631(stack["lines"])
}

func (c *current) onDocumentElement661() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement661() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement661()
}

func (c *current) onDocumentElement619(lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithDelimiter, lines.([]interface{}))
}

func (p *parser) callonDocumentElement619() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement619(stack["lines"])
}

func (c *current) onDocumentElement680() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement680() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement680()
}

func (c *current) onDocumentElement674() (interface{}, error) {
	return types.NewLiteralAttribute()
}

func (p *parser) callonDocumentElement674() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement674()
}

func (c *current) onDocumentElement706() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement706() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement706()
}

func (c *current) onDocumentElement696() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement696() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement696()
}

func (c *current) onDocumentElement692(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentElement692() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement692(stack["id"])
}

func (c *current) onDocumentElement734() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement734() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement734()
}

func (c *current) onDocumentElement724() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement724() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement724()
}

func (c *current) onDocumentElement720(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentElement720() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement720(stack["id"])
}

func (c *current) onDocumentElement756() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement756() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement756()
}

func (c *current) onDocumentElement759() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement759() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement759()
}

func (c *current) onDocumentElement748(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentElement748() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement748(stack["title"])
}

func (c *current) onDocumentElement773() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement773() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement773()
}

func (c *current) onDocumentElement776() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement776() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement776()
}

func (c *current) onDocumentElement767(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentElement767() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement767(stack["role"])
}

func (c *current) onDocumentElement792() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentElement792() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement792()
}

func (c *current) onDocumentElement794() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentElement794() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement794()
}

func (c *current) onDocumentElement796() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentElement796() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement796()
}

func (c *current) onDocumentElement798() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentElement798() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement798()
}

func (c *current) onDocumentElement800() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentElement800() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement800()
}

func (c *current) onDocumentElement787(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentElement787() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement787(stack["k"])
}

func (c *current) onDocumentElement803() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentElement803() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement803()
}

func (c *current) onDocumentElement811() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement811() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement811()
}

func (c *current) onDocumentElement822() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement822() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement822()
}

func (c *current) onDocumentElement825() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement825() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement825()
}

func (c *current) onDocumentElement828() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement828()
}

func (c *current) onDocumentElement819(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement819() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement819(stack["key"])
}

func (c *current) onDocumentElement842(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement842() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement842(stack["value"])
}

func (c *current) onDocumentElement858() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement858() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement858()
}

func (c *current) onDocumentElement816(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement816() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement816(stack["key"], stack["value"])
}

func (c *current) onDocumentElement866() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement866() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement866()
}

func (c *current) onDocumentElement869() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement869() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement869()
}

func (c *current) onDocumentElement872() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement872() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement872()
}

func (c *current) onDocumentElement863(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement863() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement863(stack["key"])
}

func (c *current) onDocumentElement889() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement889() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement889()
}

func (c *current) onDocumentElement860(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement860() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement860(stack["key"])
}

func (c *current) onDocumentElement805(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentElement805() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement805(stack["attributes"])
}

func (c *current) onDocumentElement895() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement895() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement895()
}

func (c *current) onDocumentElement686(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonDocumentElement686() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement686(stack["attr"])
}

func (c *current) onDocumentElement920() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement920() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement920()
}

func (c *current) onDocumentElement912() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement912() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement912()
}

func (c *current) onDocumentElement909() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement909() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement909()
}

func (c *current) onDocumentElement906(line interface{}) (interface{}, error) {
	return line, nil // do not include the trailing 'EOL'

}

func (p *parser) callonDocumentElement906() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement906(stack["line"])
}

func (c *current) onDocumentElement903(lines interface{}) (interface{}, error) {

	return lines.([]interface{}), nil

}

func (p *parser) callonDocumentElement903() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement903(stack["lines"])
}

func (c *current) onDocumentElement670(attributes, lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithAttribute, lines.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonDocumentElement670() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement670(stack["attributes"], stack["lines"])
}

func (c *current) onDocumentElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonDocumentElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1(stack["element"])
}

func (c *current) onSection1(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1(stack["section"])
}

func (c *current) onSection01(header, elements interface{}) (interface{}, error) {
	return types.NewSection(0, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection01() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection01(stack["header"], stack["elements"])
}

func (c *current) onSection0Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title7()
}

func (c *current) onSection0Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title27()
}

func (c *current) onSection0Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title17()
}

func (c *current) onSection0Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title44()
}

func (c *current) onSection0Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection0Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title13(stack["id"])
}

func (c *current) onSection0Title1(elements, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection0Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title1(stack["elements"], stack["id"])
}

func (c *current) onSection0TitleWithAttributes25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes25()
}

func (c *current) onSection0TitleWithAttributes15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes15()
}

func (c *current) onSection0TitleWithAttributes11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0TitleWithAttributes11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes11(stack["id"])
}

func (c *current) onSection0TitleWithAttributes53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes53()
}

func (c *current) onSection0TitleWithAttributes43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes43()
}

func (c *current) onSection0TitleWithAttributes39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0TitleWithAttributes39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes39(stack["id"])
}

func (c *current) onSection0TitleWithAttributes75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes75()
}

func (c *current) onSection0TitleWithAttributes78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes78()
}

func (c *current) onSection0TitleWithAttributes67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection0TitleWithAttributes67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes67(stack["title"])
}

func (c *current) onSection0TitleWithAttributes92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes92()
}

func (c *current) onSection0TitleWithAttributes95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes95()
}

func (c *current) onSection0TitleWithAttributes86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection0TitleWithAttributes86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes86(stack["role"])
}

func (c *current) onSection0TitleWithAttributes111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection0TitleWithAttributes111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes111()
}

func (c *current) onSection0TitleWithAttributes113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection0TitleWithAttributes113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes113()
}

func (c *current) onSection0TitleWithAttributes115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection0TitleWithAttributes115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes115()
}

func (c *current) onSection0TitleWithAttributes117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection0TitleWithAttributes117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes117()
}

func (c *current) onSection0TitleWithAttributes119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0TitleWithAttributes119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes119()
}

func (c *current) onSection0TitleWithAttributes106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0TitleWithAttributes106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes106(stack["k"])
}

func (c *current) onSection0TitleWithAttributes122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0TitleWithAttributes122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes122()
}

func (c *current) onSection0TitleWithAttributes130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes130()
}

func (c *current) onSection0TitleWithAttributes141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes141()
}

func (c *current) onSection0TitleWithAttributes144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes144()
}

func (c *current) onSection0TitleWithAttributes147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes147()
}

func (c *current) onSection0TitleWithAttributes138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes138(stack["key"])
}

func (c *current) onSection0TitleWithAttributes161(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes161(stack["value"])
}

func (c *current) onSection0TitleWithAttributes177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes177()
}

func (c *current) onSection0TitleWithAttributes135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection0TitleWithAttributes135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes135(stack["key"], stack["value"])
}

func (c *current) onSection0TitleWithAttributes185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes185()
}

func (c *current) onSection0TitleWithAttributes188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes188()
}

func (c *current) onSection0TitleWithAttributes191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes191()
}

func (c *current) onSection0TitleWithAttributes182(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes182(stack["key"])
}

func (c *current) onSection0TitleWithAttributes208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes208()
}

func (c *current) onSection0TitleWithAttributes179(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection0TitleWithAttributes179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes179(stack["key"])
}

func (c *current) onSection0TitleWithAttributes124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0TitleWithAttributes124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes124(stack["attributes"])
}

func (c *current) onSection0TitleWithAttributes214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes214()
}

func (c *current) onSection0TitleWithAttributes5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection0TitleWithAttributes5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes5(stack["attr"])
}

func (c *current) onSection0TitleWithAttributes1(attributes, title interface{}) (interface{}, error) {
	return types.WithAttributes(title, attributes.([]interface{}))

}

func (p *parser) callonSection0TitleWithAttributes1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes1(stack["attributes"], stack["title"])
}

func (c *current) onSection0Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element9()
}

func (c *current) onSection0Element33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element33()
}

func (c *current) onSection0Element23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element23()
}

func (c *current) onSection0Element19(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Element19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element19(stack["id"])
}

func (c *current) onSection0Element61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element61()
}

func (c *current) onSection0Element51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element51()
}

func (c *current) onSection0Element47(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Element47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element47(stack["id"])
}

func (c *current) onSection0Element83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element83()
}

func (c *current) onSection0Element86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element86()
}

func (c *current) onSection0Element75(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection0Element75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element75(stack["title"])
}

func (c *current) onSection0Element100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element100()
}

func (c *current) onSection0Element103() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element103()
}

func (c *current) onSection0Element94(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection0Element94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element94(stack["role"])
}

func (c *current) onSection0Element119() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection0Element119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element119()
}

func (c *current) onSection0Element121() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection0Element121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element121()
}

func (c *current) onSection0Element123() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection0Element123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element123()
}

func (c *current) onSection0Element125() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection0Element125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element125()
}

func (c *current) onSection0Element127() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0Element127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element127()
}

func (c *current) onSection0Element114(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0Element114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element114(stack["k"])
}

func (c *current) onSection0Element130() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0Element130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element130()
}

func (c *current) onSection0Element138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element138()
}

func (c *current) onSection0Element149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element149()
}

func (c *current) onSection0Element152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element152()
}

func (c *current) onSection0Element155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element155()
}

func (c *current) onSection0Element146(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element146(stack["key"])
}

func (c *current) onSection0Element169(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element169(stack["value"])
}

func (c *current) onSection0Element185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element185()
}

func (c *current) onSection0Element143(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection0Element143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element143(stack["key"], stack["value"])
}

func (c *current) onSection0Element193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element193()
}

func (c *current) onSection0Element196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element196()
}

func (c *current) onSection0Element199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element199()
}

func (c *current) onSection0Element190(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element190(stack["key"])
}

func (c *current) onSection0Element216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element216()
}

func (c *current) onSection0Element187(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection0Element187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element187(stack["key"])
}

func (c *current) onSection0Element132(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0Element132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element132(stack["attributes"])
}

func (c *current) onSection0Element222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element222()
}

func (c *current) onSection0Element13(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection0Element13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element13(stack["attr"])
}

func (c *current) onSection0Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection0Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection11(header, elements interface{}) (interface{}, error) {
	return types.NewSection(1, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection11(stack["header"], stack["elements"])
}

func (c *current) onSection1Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title7()
}

func (c *current) onSection1Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title27()
}

func (c *current) onSection1Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title17()
}

func (c *current) onSection1Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title44()
}

func (c *current) onSection1Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection1Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title13(stack["id"])
}

func (c *current) onSection1Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection1Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title1(stack["elements"], stack["id"])
}

func (c *current) onSection1Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element9()
}

func (c *current) onSection1Element33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element33()
}

func (c *current) onSection1Element23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element23()
}

func (c *current) onSection1Element19(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Element19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element19(stack["id"])
}

func (c *current) onSection1Element61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element61()
}

func (c *current) onSection1Element51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element51()
}

func (c *current) onSection1Element47(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Element47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element47(stack["id"])
}

func (c *current) onSection1Element83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element83()
}

func (c *current) onSection1Element86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element86()
}

func (c *current) onSection1Element75(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection1Element75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element75(stack["title"])
}

func (c *current) onSection1Element100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element100()
}

func (c *current) onSection1Element103() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element103()
}

func (c *current) onSection1Element94(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection1Element94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element94(stack["role"])
}

func (c *current) onSection1Element119() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection1Element119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element119()
}

func (c *current) onSection1Element121() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection1Element121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element121()
}

func (c *current) onSection1Element123() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection1Element123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element123()
}

func (c *current) onSection1Element125() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection1Element125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element125()
}

func (c *current) onSection1Element127() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection1Element127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element127()
}

func (c *current) onSection1Element114(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection1Element114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element114(stack["k"])
}

func (c *current) onSection1Element130() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection1Element130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element130()
}

func (c *current) onSection1Element138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element138()
}

func (c *current) onSection1Element149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element149()
}

func (c *current) onSection1Element152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element152()
}

func (c *current) onSection1Element155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element155()
}

func (c *current) onSection1Element146(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element146(stack["key"])
}

func (c *current) onSection1Element169(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element169(stack["value"])
}

func (c *current) onSection1Element185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element185()
}

func (c *current) onSection1Element143(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection1Element143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element143(stack["key"], stack["value"])
}

func (c *current) onSection1Element193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element193()
}

func (c *current) onSection1Element196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element196()
}

func (c *current) onSection1Element199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element199()
}

func (c *current) onSection1Element190(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element190(stack["key"])
}

func (c *current) onSection1Element216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element216()
}

func (c *current) onSection1Element187(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection1Element187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element187(stack["key"])
}

func (c *current) onSection1Element132(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection1Element132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element132(stack["attributes"])
}

func (c *current) onSection1Element222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element222()
}

func (c *current) onSection1Element13(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection1Element13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element13(stack["attr"])
}

func (c *current) onSection1Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection1Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection21(header, elements interface{}) (interface{}, error) {
	return types.NewSection(2, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection21(stack["header"], stack["elements"])
}

func (c *current) onSection2Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title7()
}

func (c *current) onSection2Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title27()
}

func (c *current) onSection2Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title17()
}

func (c *current) onSection2Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title44()
}

func (c *current) onSection2Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection2Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title13(stack["id"])
}

func (c *current) onSection2Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection2Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title1(stack["elements"], stack["id"])
}

func (c *current) onSection2Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element9()
}

func (c *current) onSection2Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element17()
}

func (c *current) onSection2Element41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element41()
}

func (c *current) onSection2Element31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element31()
}

func (c *current) onSection2Element27(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Element27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element27(stack["id"])
}

func (c *current) onSection2Element69() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element69()
}

func (c *current) onSection2Element59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element59()
}

func (c *current) onSection2Element55(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Element55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element55(stack["id"])
}

func (c *current) onSection2Element91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element91()
}

func (c *current) onSection2Element94() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element94()
}

func (c *current) onSection2Element83(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection2Element83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element83(stack["title"])
}

func (c *current) onSection2Element108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element108()
}

func (c *current) onSection2Element111() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element111()
}

func (c *current) onSection2Element102(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection2Element102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element102(stack["role"])
}

func (c *current) onSection2Element127() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection2Element127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element127()
}

func (c *current) onSection2Element129() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection2Element129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element129()
}

func (c *current) onSection2Element131() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection2Element131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element131()
}

func (c *current) onSection2Element133() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection2Element133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element133()
}

func (c *current) onSection2Element135() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection2Element135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element135()
}

func (c *current) onSection2Element122(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection2Element122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element122(stack["k"])
}

func (c *current) onSection2Element138() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection2Element138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element138()
}

func (c *current) onSection2Element146() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element146()
}

func (c *current) onSection2Element157() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element157()
}

func (c *current) onSection2Element160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element160()
}

func (c *current) onSection2Element163() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element163()
}

func (c *current) onSection2Element154(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element154(stack["key"])
}

func (c *current) onSection2Element177(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element177(stack["value"])
}

func (c *current) onSection2Element193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element193()
}

func (c *current) onSection2Element151(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection2Element151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element151(stack["key"], stack["value"])
}

func (c *current) onSection2Element201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element201()
}

func (c *current) onSection2Element204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element204()
}

func (c *current) onSection2Element207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element207()
}

func (c *current) onSection2Element198(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element198(stack["key"])
}

func (c *current) onSection2Element224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element224()
}

func (c *current) onSection2Element195(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection2Element195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element195(stack["key"])
}

func (c *current) onSection2Element140(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection2Element140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element140(stack["attributes"])
}

func (c *current) onSection2Element230() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element230()
}

func (c *current) onSection2Element21(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection2Element21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element21(stack["attr"])
}

func (c *current) onSection2Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection2Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection31(header, elements interface{}) (interface{}, error) {
	return types.NewSection(3, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection31(stack["header"], stack["elements"])
}

func (c *current) onSection3Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title7()
}

func (c *current) onSection3Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title27()
}

func (c *current) onSection3Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title17()
}

func (c *current) onSection3Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title44()
}

func (c *current) onSection3Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection3Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title13(stack["id"])
}

func (c *current) onSection3Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection3Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title1(stack["elements"], stack["id"])
}

func (c *current) onSection3Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element9()
}

func (c *current) onSection3Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element17()
}

func (c *current) onSection3Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element25()
}

func (c *current) onSection3Element49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element49()
}

func (c *current) onSection3Element39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element39()
}

func (c *current) onSection3Element35(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Element35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element35(stack["id"])
}

func (c *current) onSection3Element77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element77()
}

func (c *current) onSection3Element67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element67()
}

func (c *current) onSection3Element63(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Element63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element63(stack["id"])
}

func (c *current) onSection3Element99() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element99()
}

func (c *current) onSection3Element102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element102()
}

func (c *current) onSection3Element91(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection3Element91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element91(stack["title"])
}

func (c *current) onSection3Element116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element116()
}

func (c *current) onSection3Element119() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element119()
}

func (c *current) onSection3Element110(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection3Element110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element110(stack["role"])
}

func (c *current) onSection3Element135() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection3Element135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element135()
}

func (c *current) onSection3Element137() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection3Element137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element137()
}

func (c *current) onSection3Element139() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection3Element139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element139()
}

func (c *current) onSection3Element141() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection3Element141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element141()
}

func (c *current) onSection3Element143() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection3Element143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element143()
}

func (c *current) onSection3Element130(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection3Element130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element130(stack["k"])
}

func (c *current) onSection3Element146() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection3Element146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element146()
}

func (c *current) onSection3Element154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element154()
}

func (c *current) onSection3Element165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element165()
}

func (c *current) onSection3Element168() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element168()
}

func (c *current) onSection3Element171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element171()
}

func (c *current) onSection3Element162(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element162(stack["key"])
}

func (c *current) onSection3Element185(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element185(stack["value"])
}

func (c *current) onSection3Element201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element201()
}

func (c *current) onSection3Element159(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection3Element159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element159(stack["key"], stack["value"])
}

func (c *current) onSection3Element209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element209()
}

func (c *current) onSection3Element212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element212()
}

func (c *current) onSection3Element215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element215()
}

func (c *current) onSection3Element206(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element206(stack["key"])
}

func (c *current) onSection3Element232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element232()
}

func (c *current) onSection3Element203(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection3Element203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element203(stack["key"])
}

func (c *current) onSection3Element148(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection3Element148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element148(stack["attributes"])
}

func (c *current) onSection3Element238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element238()
}

func (c *current) onSection3Element29(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection3Element29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element29(stack["attr"])
}

func (c *current) onSection3Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection3Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection41(header, elements interface{}) (interface{}, error) {
	return types.NewSection(4, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection41(stack["header"], stack["elements"])
}

func (c *current) onSection4Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title7()
}

func (c *current) onSection4Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title27()
}

func (c *current) onSection4Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title17()
}

func (c *current) onSection4Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title44()
}

func (c *current) onSection4Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection4Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title13(stack["id"])
}

func (c *current) onSection4Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection4Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title1(stack["elements"], stack["id"])
}

func (c *current) onSection4Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element9()
}

func (c *current) onSection4Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element17()
}

func (c *current) onSection4Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element25()
}

func (c *current) onSection4Element33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element33()
}

func (c *current) onSection4Element57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element57()
}

func (c *current) onSection4Element47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element47()
}

func (c *current) onSection4Element43(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Element43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element43(stack["id"])
}

func (c *current) onSection4Element85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element85()
}

func (c *current) onSection4Element75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element75()
}

func (c *current) onSection4Element71(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Element71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element71(stack["id"])
}

func (c *current) onSection4Element107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element107()
}

func (c *current) onSection4Element110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element110()
}

func (c *current) onSection4Element99(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection4Element99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element99(stack["title"])
}

func (c *current) onSection4Element124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element124()
}

func (c *current) onSection4Element127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element127()
}

func (c *current) onSection4Element118(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection4Element118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element118(stack["role"])
}

func (c *current) onSection4Element143() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection4Element143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element143()
}

func (c *current) onSection4Element145() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection4Element145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element145()
}

func (c *current) onSection4Element147() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection4Element147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element147()
}

func (c *current) onSection4Element149() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection4Element149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element149()
}

func (c *current) onSection4Element151() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection4Element151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element151()
}

func (c *current) onSection4Element138(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection4Element138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element138(stack["k"])
}

func (c *current) onSection4Element154() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection4Element154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element154()
}

func (c *current) onSection4Element162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element162()
}

func (c *current) onSection4Element173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element173()
}

func (c *current) onSection4Element176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element176()
}

func (c *current) onSection4Element179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element179()
}

func (c *current) onSection4Element170(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element170(stack["key"])
}

func (c *current) onSection4Element193(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element193(stack["value"])
}

func (c *current) onSection4Element209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element209()
}

func (c *current) onSection4Element167(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection4Element167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element167(stack["key"], stack["value"])
}

func (c *current) onSection4Element217() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element217()
}

func (c *current) onSection4Element220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element220()
}

func (c *current) onSection4Element223() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element223()
}

func (c *current) onSection4Element214(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element214(stack["key"])
}

func (c *current) onSection4Element240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element240()
}

func (c *current) onSection4Element211(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection4Element211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element211(stack["key"])
}

func (c *current) onSection4Element156(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection4Element156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element156(stack["attributes"])
}

func (c *current) onSection4Element246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element246()
}

func (c *current) onSection4Element37(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection4Element37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element37(stack["attr"])
}

func (c *current) onSection4Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection4Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection51(header, elements interface{}) (interface{}, error) {
	return types.NewSection(5, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection51(stack["header"], stack["elements"])
}

func (c *current) onSection5Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title7()
}

func (c *current) onSection5Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title27()
}

func (c *current) onSection5Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title17()
}

func (c *current) onSection5Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title44()
}

func (c *current) onSection5Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection5Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title13(stack["id"])
}

func (c *current) onSection5Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection5Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title1(stack["elements"], stack["id"])
}

func (c *current) onSection5Element35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element35()
}

func (c *current) onSection5Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element25()
}

func (c *current) onSection5Element21(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Element21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element21(stack["id"])
}

func (c *current) onSection5Element63() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element63()
}

func (c *current) onSection5Element53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element53()
}

func (c *current) onSection5Element49(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Element49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element49(stack["id"])
}

func (c *current) onSection5Element85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element85()
}

func (c *current) onSection5Element88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element88()
}

func (c *current) onSection5Element77(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection5Element77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element77(stack["title"])
}

func (c *current) onSection5Element102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element102()
}

func (c *current) onSection5Element105() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element105()
}

func (c *current) onSection5Element96(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection5Element96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element96(stack["role"])
}

func (c *current) onSection5Element121() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection5Element121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element121()
}

func (c *current) onSection5Element123() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection5Element123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element123()
}

func (c *current) onSection5Element125() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection5Element125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element125()
}

func (c *current) onSection5Element127() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection5Element127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element127()
}

func (c *current) onSection5Element129() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection5Element129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element129()
}

func (c *current) onSection5Element116(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection5Element116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element116(stack["k"])
}

func (c *current) onSection5Element132() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection5Element132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element132()
}

func (c *current) onSection5Element140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element140()
}

func (c *current) onSection5Element151() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element151()
}

func (c *current) onSection5Element154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element154()
}

func (c *current) onSection5Element157() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element157()
}

func (c *current) onSection5Element148(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element148(stack["key"])
}

func (c *current) onSection5Element171(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element171(stack["value"])
}

func (c *current) onSection5Element187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element187()
}

func (c *current) onSection5Element145(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection5Element145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element145(stack["key"], stack["value"])
}

func (c *current) onSection5Element195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element195()
}

func (c *current) onSection5Element198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element198()
}

func (c *current) onSection5Element201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element201()
}

func (c *current) onSection5Element192(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element192(stack["key"])
}

func (c *current) onSection5Element218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element218()
}

func (c *current) onSection5Element189(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection5Element189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element189(stack["key"])
}

func (c *current) onSection5Element134(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection5Element134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element134(stack["attributes"])
}

func (c *current) onSection5Element224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element224()
}

func (c *current) onSection5Element15(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection5Element15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element15(stack["attr"])
}

func (c *current) onSection5Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection5Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element1(stack["attributes"], stack["element"])
}

func (c *current) onTitleElements12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements12()
}

func (c *current) onTitleElements29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements29()
}

func (c *current) onTitleElements19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements19()
}

func (c *current) onTitleElements46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements46()
}

func (c *current) onTitleElements15(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonTitleElements15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements15(stack["id"])
}

func (c *current) onTitleElements52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements52()
}

func (c *current) onTitleElements1(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonTitleElements1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements1(stack["elements"])
}

func (c *current) onTitleElement18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement18()
}

func (c *current) onTitleElement8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement8()
}

func (c *current) onTitleElement34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement34()
}

func (c *current) onTitleElement38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement38()
}

func (c *current) onTitleElement4(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonTitleElement4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement4(stack["id"], stack["label"])
}

func (c *current) onTitleElement59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement59()
}

func (c *current) onTitleElement49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement49()
}

func (c *current) onTitleElement45(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonTitleElement45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement45(stack["id"])
}

func (c *current) onTitleElement90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement90()
}

func (c *current) onTitleElement80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement80()
}

func (c *current) onTitleElement103() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement103()
}

func (c *current) onTitleElement115() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement115()
}

func (c *current) onTitleElement127() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement127()
}

func (c *current) onTitleElement148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement148()
}

func (c *current) onTitleElement151() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement151()
}

func (c *current) onTitleElement154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement154()
}

func (c *current) onTitleElement145(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement145(stack["key"])
}

func (c *current) onTitleElement168(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement168(stack["value"])
}

func (c *current) onTitleElement184() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement184()
}

func (c *current) onTitleElement142(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement142(stack["key"], stack["value"])
}

func (c *current) onTitleElement192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement192()
}

func (c *current) onTitleElement195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement195()
}

func (c *current) onTitleElement198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement198()
}

func (c *current) onTitleElement189(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement189(stack["key"])
}

func (c *current) onTitleElement215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement215()
}

func (c *current) onTitleElement186(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement186(stack["key"])
}

func (c *current) onTitleElement99(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement99(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onTitleElement222() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement222()
}

func (c *current) onTitleElement234() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement234()
}

func (c *current) onTitleElement255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement255()
}

func (c *current) onTitleElement258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement258()
}

func (c *current) onTitleElement261() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement261()
}

func (c *current) onTitleElement252(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement252(stack["key"])
}

func (c *current) onTitleElement275(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement275(stack["value"])
}

func (c *current) onTitleElement291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement291()
}

func (c *current) onTitleElement249(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement249(stack["key"], stack["value"])
}

func (c *current) onTitleElement299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement299()
}

func (c *current) onTitleElement302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement302()
}

func (c *current) onTitleElement305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement305()
}

func (c *current) onTitleElement296(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement296(stack["key"])
}

func (c *current) onTitleElement322() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement322()
}

func (c *current) onTitleElement293(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement293(stack["key"])
}

func (c *current) onTitleElement218(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement218(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onTitleElement329() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement329()
}

func (c *current) onTitleElement350() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement350() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement350()
}

func (c *current) onTitleElement353() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement353()
}

func (c *current) onTitleElement356() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement356()
}

func (c *current) onTitleElement347(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement347(stack["key"])
}

func (c *current) onTitleElement370(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement370(stack["value"])
}

func (c *current) onTitleElement386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement386()
}

func (c *current) onTitleElement344(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement344(stack["key"], stack["value"])
}

func (c *current) onTitleElement394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement394()
}

func (c *current) onTitleElement397() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement397() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement397()
}

func (c *current) onTitleElement400() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement400()
}

func (c *current) onTitleElement391(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement391() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement391(stack["key"])
}

func (c *current) onTitleElement417() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement417()
}

func (c *current) onTitleElement388(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement388(stack["key"])
}

func (c *current) onTitleElement325(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement325(stack["alt"], stack["otherAttrs"])
}

func (c *current) onTitleElement432() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement432()
}

func (c *current) onTitleElement435() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement435()
}

func (c *current) onTitleElement438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement438()
}

func (c *current) onTitleElement429(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement429(stack["key"])
}

func (c *current) onTitleElement452(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement452(stack["value"])
}

func (c *current) onTitleElement468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement468()
}

func (c *current) onTitleElement426(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement426(stack["key"], stack["value"])
}

func (c *current) onTitleElement476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement476()
}

func (c *current) onTitleElement479() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement479() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement479()
}

func (c *current) onTitleElement482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement482()
}

func (c *current) onTitleElement473(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement473(stack["key"])
}

func (c *current) onTitleElement499() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement499() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement499()
}

func (c *current) onTitleElement470(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement470() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement470(stack["key"])
}

func (c *current) onTitleElement420(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement420(stack["otherAttrs"])
}

func (c *current) onTitleElement74(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement74(stack["path"], stack["inlineAttributes"])
}

func (c *current) onTitleElement529() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement529() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement529()
}

func (c *current) onTitleElement519() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement519()
}

func (c *current) onTitleElement510() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement510() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement510()
}

func (c *current) onTitleElement542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement542()
}

func (c *current) onTitleElement559() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement559() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement559()
}

func (c *current) onTitleElement562() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement562() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement562()
}

func (c *current) onTitleElement565() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement565() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement565()
}

func (c *current) onTitleElement556(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement556() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement556(stack["key"])
}

func (c *current) onTitleElement579(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement579() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement579(stack["value"])
}

func (c *current) onTitleElement595() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement595() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement595()
}

func (c *current) onTitleElement553(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement553() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement553(stack["key"], stack["value"])
}

func (c *current) onTitleElement603() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement603() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement603()
}

func (c *current) onTitleElement606() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement606() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement606()
}

func (c *current) onTitleElement609() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement609() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement609()
}

func (c *current) onTitleElement600(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement600() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement600(stack["key"])
}

func (c *current) onTitleElement626() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement626() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement626()
}

func (c *current) onTitleElement597(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement597() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement597(stack["key"])
}

func (c *current) onTitleElement538(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement538(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement641() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement641() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement641()
}

func (c *current) onTitleElement644() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement644() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement644()
}

func (c *current) onTitleElement647() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement647() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement647()
}

func (c *current) onTitleElement638(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement638() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement638(stack["key"])
}

func (c *current) onTitleElement661(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement661() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement661(stack["value"])
}

func (c *current) onTitleElement677() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement677() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement677()
}

func (c *current) onTitleElement635(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement635() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement635(stack["key"], stack["value"])
}

func (c *current) onTitleElement685() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement685() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement685()
}

func (c *current) onTitleElement688() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement688() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement688()
}

func (c *current) onTitleElement691() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement691() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement691()
}

func (c *current) onTitleElement682(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement682() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement682(stack["key"])
}

func (c *current) onTitleElement708() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement708() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement708()
}

func (c *current) onTitleElement679(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement679() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement679(stack["key"])
}

func (c *current) onTitleElement629(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement629() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement629(stack["otherAttrs"])
}

func (c *current) onTitleElement506(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement506(stack["url"], stack["inlineAttributes"])
}

func (c *current) onTitleElement732() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement732() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement732()
}

func (c *current) onTitleElement722() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement722() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement722()
}

func (c *current) onTitleElement714() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement714() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement714()
}

func (c *current) onTitleElement745() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement745() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement745()
}

func (c *current) onTitleElement762() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement762() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement762()
}

func (c *current) onTitleElement765() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement765() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement765()
}

func (c *current) onTitleElement768() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement768() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement768()
}

func (c *current) onTitleElement759(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement759() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement759(stack["key"])
}

func (c *current) onTitleElement782(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement782() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement782(stack["value"])
}

func (c *current) onTitleElement798() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement798() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement798()
}

func (c *current) onTitleElement756(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement756() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement756(stack["key"], stack["value"])
}

func (c *current) onTitleElement806() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement806() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement806()
}

func (c *current) onTitleElement809() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement809() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement809()
}

func (c *current) onTitleElement812() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement812() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement812()
}

func (c *current) onTitleElement803(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement803() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement803(stack["key"])
}

func (c *current) onTitleElement829() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement829() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement829()
}

func (c *current) onTitleElement800(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement800() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement800(stack["key"])
}

func (c *current) onTitleElement741(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement741() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement741(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement844() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement844() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement844()
}

func (c *current) onTitleElement847() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement847() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement847()
}

func (c *current) onTitleElement850() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement850() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement850()
}

func (c *current) onTitleElement841(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement841() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement841(stack["key"])
}

func (c *current) onTitleElement864(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement864() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement864(stack["value"])
}

func (c *current) onTitleElement880() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement880() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement880()
}

func (c *current) onTitleElement838(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement838() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement838(stack["key"], stack["value"])
}

func (c *current) onTitleElement888() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement888() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement888()
}

func (c *current) onTitleElement891() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement891() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement891()
}

func (c *current) onTitleElement894() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement894() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement894()
}

func (c *current) onTitleElement885(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement885() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement885(stack["key"])
}

func (c *current) onTitleElement911() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement911() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement911()
}

func (c *current) onTitleElement882(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement882() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement882(stack["key"])
}

func (c *current) onTitleElement832(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement832() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement832(stack["otherAttrs"])
}

func (c *current) onTitleElement711(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement711() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement711(stack["url"], stack["inlineAttributes"])
}

func (c *current) onTitleElement934() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement934() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement934()
}

func (c *current) onTitleElement924() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement924() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement924()
}

func (c *current) onTitleElement916() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement916() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement916()
}

func (c *current) onTitleElement914(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonTitleElement914() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement914(stack["url"])
}

func (c *current) onTitleElement503(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonTitleElement503() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement503(stack["link"])
}

func (c *current) onTitleElement945() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement945() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement945()
}

func (c *current) onTitleElement941(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonTitleElement941() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement941(stack["name"])
}

func (c *current) onTitleElement957() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement957() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement957()
}

func (c *current) onTitleElement963() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement963() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement963()
}

func (c *current) onTitleElement953() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonTitleElement953() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement953()
}

func (c *current) onTitleElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonTitleElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1(stack["element"])
}

func (c *current) onList1(elements interface{}) (interface{}, error) {
	return types.NewList(elements.([]interface{}))
}

func (p *parser) callonList1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList1(stack["elements"])
}

func (c *current) onListParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}))
}

func (p *parser) callonListParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph1(stack["lines"])
}

func (c *current) onListParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine9()
}

func (c *current) onListParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonListParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine13()
}

func (c *current) onListParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonListParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine15()
}

func (c *current) onListParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonListParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine17()
}

func (c *current) onListParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonListParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine19()
}

func (c *current) onListParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonListParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine21()
}

func (c *current) onListParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonListParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine23()
}

func (c *current) onListParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonListParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine28()
}

func (c *current) onListParagraphLine32() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonListParagraphLine32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine32()
}

func (c *current) onListParagraphLine36() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonListParagraphLine36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine36()
}

func (c *current) onListParagraphLine41() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonListParagraphLine41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine41()
}

func (c *current) onListParagraphLine49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine49()
}

func (c *current) onListParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine4(stack["prefix"])
}

func (c *current) onListParagraphLine57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine57()
}

func (c *current) onListParagraphLine61() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonListParagraphLine61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine61()
}

func (c *current) onListParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonListParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine63()
}

func (c *current) onListParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonListParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine65()
}

func (c *current) onListParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonListParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine67()
}

func (c *current) onListParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonListParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine69()
}

func (c *current) onListParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonListParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine71()
}

func (c *current) onListParagraphLine76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine76()
}

func (c *current) onListParagraphLine52(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine52(stack["prefix"])
}

func (c *current) onListParagraphLine80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine80()
}

func (c *current) onListParagraphLine90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine90()
}

func (c *current) onListParagraphLine102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine102()
}

func (c *current) onListParagraphLine96() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonListParagraphLine96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine96()
}

func (c *current) onListParagraphLine130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine130()
}

func (c *current) onListParagraphLine120() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine120()
}

func (c *current) onListParagraphLine116(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine116(stack["id"])
}

func (c *current) onListParagraphLine158() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine158()
}

func (c *current) onListParagraphLine148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine148()
}

func (c *current) onListParagraphLine144(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine144(stack["id"])
}

func (c *current) onListParagraphLine180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine180()
}

func (c *current) onListParagraphLine183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine183()
}

func (c *current) onListParagraphLine172(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonListParagraphLine172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine172(stack["title"])
}

func (c *current) onListParagraphLine197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine197()
}

func (c *current) onListParagraphLine200() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine200() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine200()
}

func (c *current) onListParagraphLine191(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonListParagraphLine191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine191(stack["role"])
}

func (c *current) onListParagraphLine216() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonListParagraphLine216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine216()
}

func (c *current) onListParagraphLine218() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonListParagraphLine218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine218()
}

func (c *current) onListParagraphLine220() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonListParagraphLine220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine220()
}

func (c *current) onListParagraphLine222() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonListParagraphLine222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine222()
}

func (c *current) onListParagraphLine224() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonListParagraphLine224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine224()
}

func (c *current) onListParagraphLine211(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonListParagraphLine211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine211(stack["k"])
}

func (c *current) onListParagraphLine227() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonListParagraphLine227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine227()
}

func (c *current) onListParagraphLine235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine235()
}

func (c *current) onListParagraphLine246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine246()
}

func (c *current) onListParagraphLine249() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine249()
}

func (c *current) onListParagraphLine252() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine252()
}

func (c *current) onListParagraphLine243(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine243(stack["key"])
}

func (c *current) onListParagraphLine266(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine266() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine266(stack["value"])
}

func (c *current) onListParagraphLine282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine282()
}

func (c *current) onListParagraphLine240(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonListParagraphLine240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine240(stack["key"], stack["value"])
}

func (c *current) onListParagraphLine290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine290()
}

func (c *current) onListParagraphLine293() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine293()
}

func (c *current) onListParagraphLine296() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine296()
}

func (c *current) onListParagraphLine287(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine287(stack["key"])
}

func (c *current) onListParagraphLine313() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine313()
}

func (c *current) onListParagraphLine284(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonListParagraphLine284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine284(stack["key"])
}

func (c *current) onListParagraphLine229(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonListParagraphLine229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine229(stack["attributes"])
}

func (c *current) onListParagraphLine319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine319()
}

func (c *current) onListParagraphLine110(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonListParagraphLine110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine110(stack["attr"])
}

func (c *current) onListParagraphLine334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine334()
}

func (c *current) onListParagraphLine346() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine346() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine346()
}

func (c *current) onListParagraphLine358() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine358() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine358()
}

func (c *current) onListParagraphLine371() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine371()
}

func (c *current) onListParagraphLine383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine383()
}

func (c *current) onListParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonListParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine1(stack["line"])
}

func (c *current) onContinuedDocumentElement9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonContinuedDocumentElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement9()
}

func (c *current) onContinuedDocumentElement3() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonContinuedDocumentElement3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement3()
}

func (c *current) onContinuedDocumentElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonContinuedDocumentElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement1(stack["element"])
}

func (c *current) onOrderedListItem25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem25()
}

func (c *current) onOrderedListItem15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem15()
}

func (c *current) onOrderedListItem11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem11(stack["id"])
}

func (c *current) onOrderedListItem53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem53()
}

func (c *current) onOrderedListItem43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem43()
}

func (c *current) onOrderedListItem39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem39(stack["id"])
}

func (c *current) onOrderedListItem75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem75()
}

func (c *current) onOrderedListItem78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem78()
}

func (c *current) onOrderedListItem67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonOrderedListItem67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem67(stack["title"])
}

func (c *current) onOrderedListItem92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem92()
}

func (c *current) onOrderedListItem95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem95()
}

func (c *current) onOrderedListItem86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonOrderedListItem86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem86(stack["role"])
}

func (c *current) onOrderedListItem111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonOrderedListItem111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem111()
}

func (c *current) onOrderedListItem113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonOrderedListItem113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem113()
}

func (c *current) onOrderedListItem115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonOrderedListItem115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem115()
}

func (c *current) onOrderedListItem117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonOrderedListItem117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem117()
}

func (c *current) onOrderedListItem119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonOrderedListItem119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem119()
}

func (c *current) onOrderedListItem106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonOrderedListItem106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem106(stack["k"])
}

func (c *current) onOrderedListItem122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonOrderedListItem122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem122()
}

func (c *current) onOrderedListItem130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem130()
}

func (c *current) onOrderedListItem141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem141()
}

func (c *current) onOrderedListItem144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem144()
}

func (c *current) onOrderedListItem147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem147()
}

func (c *current) onOrderedListItem138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem138(stack["key"])
}

func (c *current) onOrderedListItem161(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem161(stack["value"])
}

func (c *current) onOrderedListItem177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem177()
}

func (c *current) onOrderedListItem135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonOrderedListItem135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem135(stack["key"], stack["value"])
}

func (c *current) onOrderedListItem185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem185()
}

func (c *current) onOrderedListItem188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem188()
}

func (c *current) onOrderedListItem191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem191()
}

func (c *current) onOrderedListItem182(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem182(stack["key"])
}

func (c *current) onOrderedListItem208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem208()
}

func (c *current) onOrderedListItem179(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonOrderedListItem179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem179(stack["key"])
}

func (c *current) onOrderedListItem124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem124(stack["attributes"])
}

func (c *current) onOrderedListItem214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem214()
}

func (c *current) onOrderedListItem5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonOrderedListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem5(stack["attr"])
}

func (c *current) onOrderedListItem227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem227()
}

func (c *current) onOrderedListItem231() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonOrderedListItem231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem231()
}

func (c *current) onOrderedListItem233() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonOrderedListItem233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem233()
}

func (c *current) onOrderedListItem235() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonOrderedListItem235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem235()
}

func (c *current) onOrderedListItem237() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonOrderedListItem237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem237()
}

func (c *current) onOrderedListItem239() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonOrderedListItem239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem239()
}

func (c *current) onOrderedListItem241() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonOrderedListItem241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem241()
}

func (c *current) onOrderedListItem246() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonOrderedListItem246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem246()
}

func (c *current) onOrderedListItem250() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonOrderedListItem250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem250()
}

func (c *current) onOrderedListItem254() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonOrderedListItem254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem254()
}

func (c *current) onOrderedListItem259() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonOrderedListItem259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem259()
}

func (c *current) onOrderedListItem267() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem267() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem267()
}

func (c *current) onOrderedListItem222(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonOrderedListItem222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem222(stack["prefix"])
}

func (c *current) onOrderedListItem280() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem280() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem280()
}

func (c *current) onOrderedListItem272() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonOrderedListItem272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem272()
}

func (c *current) onOrderedListItem1(attributes, prefix, content interface{}) (interface{}, error) {
	return types.NewOrderedListItem(prefix.(types.OrderedListItemPrefix), content.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem1(stack["attributes"], stack["prefix"], stack["content"])
}

func (c *current) onOrderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonOrderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItemContent1(stack["elements"])
}

func (c *current) onUnorderedListItem9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem9()
}

func (c *current) onUnorderedListItem13() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonUnorderedListItem13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem13()
}

func (c *current) onUnorderedListItem15() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonUnorderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem15()
}

func (c *current) onUnorderedListItem17() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonUnorderedListItem17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem17()
}

func (c *current) onUnorderedListItem19() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonUnorderedListItem19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem19()
}

func (c *current) onUnorderedListItem21() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonUnorderedListItem21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem21()
}

func (c *current) onUnorderedListItem23() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonUnorderedListItem23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem23()
}

func (c *current) onUnorderedListItem28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem28()
}

func (c *current) onUnorderedListItem4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonUnorderedListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem4(stack["prefix"])
}

func (c *current) onUnorderedListItem41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem41()
}

func (c *current) onUnorderedListItem33() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonUnorderedListItem33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem33()
}

func (c *current) onUnorderedListItem1(prefix, content interface{}) (interface{}, error) {
	return types.NewUnorderedListItem(prefix.(types.UnorderedListItemPrefix), content.([]interface{}))
}

func (p *parser) callonUnorderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem1(stack["prefix"], stack["content"])
}

func (c *current) onUnorderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonUnorderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItemContent1(stack["elements"])
}

func (c *current) onLabeledListItem4() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem4()
}

func (c *current) onLabeledListItem15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem15()
}

func (c *current) onLabeledListItem1(term, separator, description interface{}) (interface{}, error) {
	return types.NewLabeledListItem(len(separator.(string))-1, term.(string), description.([]interface{}))
}

func (p *parser) callonLabeledListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem1(stack["term"], stack["separator"], stack["description"])
}

func (c *current) onLabeledListItemDescription7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItemDescription7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription7()
}

func (c *current) onLabeledListItemDescription2(elements interface{}) (interface{}, error) {
	// TODO: replace with (ListParagraph+ ContinuedDocumentElement*) and use a single rule for all item contents ?
	return types.NewListItemContent(elements.([]interface{}))

}

func (p *parser) callonLabeledListItemDescription2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription2(stack["elements"])
}

func (c *current) onLabeledListItemDescription21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItemDescription21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription21()
}

func (c *current) onLabeledListItemDescription16() (interface{}, error) {
	// here, WS is optional since there is no description afterwards
	return []interface{}{}, nil

}

func (p *parser) callonLabeledListItemDescription16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription16()
}

func (c *current) onParagraph11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph11()
}

func (c *current) onParagraph19() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph19()
}

func (c *current) onParagraph21() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph21()
}

func (c *current) onParagraph23() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph23()
}

func (c *current) onParagraph25() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph25()
}

func (c *current) onParagraph27() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph27()
}

func (c *current) onParagraph2(t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind))

}

func (p *parser) callonParagraph2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph2(stack["t"], stack["lines"])
}

func (c *current) onParagraph42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph42()
}

func (c *current) onParagraph33(lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}))

}

func (p *parser) callonParagraph33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph33(stack["lines"])
}

func (c *current) onMasqueradeParagraph11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph11()
}

func (c *current) onMasqueradeParagraph16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph16()
}

func (c *current) onMasqueradeParagraph20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph20()
}

func (c *current) onMasqueradeParagraph36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph36()
}

func (c *current) onMasqueradeParagraph54() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph54()
}

func (c *current) onMasqueradeParagraph7(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonMasqueradeParagraph7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph7(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onMasqueradeParagraph65() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph65()
}

func (c *current) onMasqueradeParagraph70() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph70() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph70()
}

func (c *current) onMasqueradeParagraph74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph74()
}

func (c *current) onMasqueradeParagraph92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph92()
}

func (c *current) onMasqueradeParagraph61(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonMasqueradeParagraph61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph61(stack["kind"], stack["author"])
}

func (c *current) onMasqueradeParagraph103() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph103()
}

func (c *current) onMasqueradeParagraph108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph108()
}

func (c *current) onMasqueradeParagraph114() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph114()
}

func (c *current) onMasqueradeParagraph99(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonMasqueradeParagraph99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph99(stack["kind"])
}

func (c *current) onMasqueradeParagraph125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph125()
}

func (c *current) onMasqueradeParagraph130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph130()
}

func (c *current) onMasqueradeParagraph134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph134()
}

func (c *current) onMasqueradeParagraph150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph150()
}

func (c *current) onMasqueradeParagraph168() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph168()
}

func (c *current) onMasqueradeParagraph121(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonMasqueradeParagraph121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph121(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onMasqueradeParagraph179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph179()
}

func (c *current) onMasqueradeParagraph184() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph184()
}

func (c *current) onMasqueradeParagraph188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph188()
}

func (c *current) onMasqueradeParagraph206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph206()
}

func (c *current) onMasqueradeParagraph175(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonMasqueradeParagraph175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph175(stack["kind"], stack["author"])
}

func (c *current) onMasqueradeParagraph217() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph217()
}

func (c *current) onMasqueradeParagraph222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph222()
}

func (c *current) onMasqueradeParagraph228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph228()
}

func (c *current) onMasqueradeParagraph213(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonMasqueradeParagraph213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph213(stack["kind"])
}

func (c *current) onMasqueradeParagraph256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph256()
}

func (c *current) onMasqueradeParagraph246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph246()
}

func (c *current) onMasqueradeParagraph242(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonMasqueradeParagraph242() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph242(stack["id"])
}

func (c *current) onMasqueradeParagraph284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph284()
}

func (c *current) onMasqueradeParagraph274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph274()
}

func (c *current) onMasqueradeParagraph270(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonMasqueradeParagraph270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph270(stack["id"])
}

func (c *current) onMasqueradeParagraph306() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph306()
}

func (c *current) onMasqueradeParagraph309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph309()
}

func (c *current) onMasqueradeParagraph298(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonMasqueradeParagraph298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph298(stack["title"])
}

func (c *current) onMasqueradeParagraph323() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph323()
}

func (c *current) onMasqueradeParagraph326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph326()
}

func (c *current) onMasqueradeParagraph317(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonMasqueradeParagraph317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph317(stack["role"])
}

func (c *current) onMasqueradeParagraph342() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonMasqueradeParagraph342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph342()
}

func (c *current) onMasqueradeParagraph344() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonMasqueradeParagraph344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph344()
}

func (c *current) onMasqueradeParagraph346() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonMasqueradeParagraph346() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph346()
}

func (c *current) onMasqueradeParagraph348() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonMasqueradeParagraph348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph348()
}

func (c *current) onMasqueradeParagraph350() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonMasqueradeParagraph350() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph350()
}

func (c *current) onMasqueradeParagraph337(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonMasqueradeParagraph337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph337(stack["k"])
}

func (c *current) onMasqueradeParagraph353() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonMasqueradeParagraph353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph353()
}

func (c *current) onMasqueradeParagraph361() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph361() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph361()
}

func (c *current) onMasqueradeParagraph372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph372()
}

func (c *current) onMasqueradeParagraph375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph375()
}

func (c *current) onMasqueradeParagraph378() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph378()
}

func (c *current) onMasqueradeParagraph369(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph369(stack["key"])
}

func (c *current) onMasqueradeParagraph392(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph392() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph392(stack["value"])
}

func (c *current) onMasqueradeParagraph408() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph408()
}

func (c *current) onMasqueradeParagraph366(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonMasqueradeParagraph366() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph366(stack["key"], stack["value"])
}

func (c *current) onMasqueradeParagraph416() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph416()
}

func (c *current) onMasqueradeParagraph419() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph419()
}

func (c *current) onMasqueradeParagraph422() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph422()
}

func (c *current) onMasqueradeParagraph413(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph413(stack["key"])
}

func (c *current) onMasqueradeParagraph439() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph439() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph439()
}

func (c *current) onMasqueradeParagraph410(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonMasqueradeParagraph410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph410(stack["key"])
}

func (c *current) onMasqueradeParagraph355(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonMasqueradeParagraph355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph355(stack["attributes"])
}

func (c *current) onMasqueradeParagraph445() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph445()
}

func (c *current) onMasqueradeParagraph236(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonMasqueradeParagraph236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph236(stack["attr"])
}

func (c *current) onMasqueradeParagraph459() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph459() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph459()
}

func (c *current) onMasqueradeParagraph467() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonMasqueradeParagraph467() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph467()
}

func (c *current) onMasqueradeParagraph469() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonMasqueradeParagraph469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph469()
}

func (c *current) onMasqueradeParagraph471() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonMasqueradeParagraph471() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph471()
}

func (c *current) onMasqueradeParagraph473() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonMasqueradeParagraph473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph473()
}

func (c *current) onMasqueradeParagraph475() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonMasqueradeParagraph475() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph475()
}

func (c *current) onMasqueradeParagraph2(attributes, t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind), attributes.([]interface{})...)

}

func (p *parser) callonMasqueradeParagraph2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph2(stack["attributes"], stack["t"], stack["lines"])
}

func (c *current) onMasqueradeParagraph490() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph490()
}

func (c *current) onMasqueradeParagraph495() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph495() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph495()
}

func (c *current) onMasqueradeParagraph499() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph499() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph499()
}

func (c *current) onMasqueradeParagraph515() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph515()
}

func (c *current) onMasqueradeParagraph533() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph533() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph533()
}

func (c *current) onMasqueradeParagraph486(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonMasqueradeParagraph486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph486(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onMasqueradeParagraph544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph544()
}

func (c *current) onMasqueradeParagraph549() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph549() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph549()
}

func (c *current) onMasqueradeParagraph553() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph553() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph553()
}

func (c *current) onMasqueradeParagraph571() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph571() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph571()
}

func (c *current) onMasqueradeParagraph540(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonMasqueradeParagraph540() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph540(stack["kind"], stack["author"])
}

func (c *current) onMasqueradeParagraph582() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph582() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph582()
}

func (c *current) onMasqueradeParagraph587() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph587() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph587()
}

func (c *current) onMasqueradeParagraph593() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph593() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph593()
}

func (c *current) onMasqueradeParagraph578(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonMasqueradeParagraph578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph578(stack["kind"])
}

func (c *current) onMasqueradeParagraph604() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph604()
}

func (c *current) onMasqueradeParagraph609() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph609() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph609()
}

func (c *current) onMasqueradeParagraph613() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph613() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph613()
}

func (c *current) onMasqueradeParagraph629() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph629() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph629()
}

func (c *current) onMasqueradeParagraph647() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph647() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph647()
}

func (c *current) onMasqueradeParagraph600(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonMasqueradeParagraph600() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph600(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onMasqueradeParagraph658() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph658() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph658()
}

func (c *current) onMasqueradeParagraph663() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph663() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph663()
}

func (c *current) onMasqueradeParagraph667() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph667() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph667()
}

func (c *current) onMasqueradeParagraph685() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph685() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph685()
}

func (c *current) onMasqueradeParagraph654(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonMasqueradeParagraph654() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph654(stack["kind"], stack["author"])
}

func (c *current) onMasqueradeParagraph696() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph696() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph696()
}

func (c *current) onMasqueradeParagraph701() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph701() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph701()
}

func (c *current) onMasqueradeParagraph707() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph707() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph707()
}

func (c *current) onMasqueradeParagraph692(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonMasqueradeParagraph692() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph692(stack["kind"])
}

func (c *current) onMasqueradeParagraph735() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph735() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph735()
}

func (c *current) onMasqueradeParagraph725() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph725() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph725()
}

func (c *current) onMasqueradeParagraph721(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonMasqueradeParagraph721() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph721(stack["id"])
}

func (c *current) onMasqueradeParagraph763() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph763() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph763()
}

func (c *current) onMasqueradeParagraph753() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph753() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph753()
}

func (c *current) onMasqueradeParagraph749(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonMasqueradeParagraph749() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph749(stack["id"])
}

func (c *current) onMasqueradeParagraph785() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph785() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph785()
}

func (c *current) onMasqueradeParagraph788() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph788() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph788()
}

func (c *current) onMasqueradeParagraph777(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonMasqueradeParagraph777() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph777(stack["title"])
}

func (c *current) onMasqueradeParagraph802() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph802() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph802()
}

func (c *current) onMasqueradeParagraph805() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph805() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph805()
}

func (c *current) onMasqueradeParagraph796(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonMasqueradeParagraph796() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph796(stack["role"])
}

func (c *current) onMasqueradeParagraph821() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonMasqueradeParagraph821() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph821()
}

func (c *current) onMasqueradeParagraph823() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonMasqueradeParagraph823() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph823()
}

func (c *current) onMasqueradeParagraph825() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonMasqueradeParagraph825() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph825()
}

func (c *current) onMasqueradeParagraph827() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonMasqueradeParagraph827() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph827()
}

func (c *current) onMasqueradeParagraph829() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonMasqueradeParagraph829() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph829()
}

func (c *current) onMasqueradeParagraph816(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonMasqueradeParagraph816() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph816(stack["k"])
}

func (c *current) onMasqueradeParagraph832() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonMasqueradeParagraph832() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph832()
}

func (c *current) onMasqueradeParagraph840() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph840() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph840()
}

func (c *current) onMasqueradeParagraph851() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph851() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph851()
}

func (c *current) onMasqueradeParagraph854() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph854() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph854()
}

func (c *current) onMasqueradeParagraph857() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph857() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph857()
}

func (c *current) onMasqueradeParagraph848(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph848() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph848(stack["key"])
}

func (c *current) onMasqueradeParagraph871(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph871() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph871(stack["value"])
}

func (c *current) onMasqueradeParagraph887() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph887() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph887()
}

func (c *current) onMasqueradeParagraph845(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonMasqueradeParagraph845() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph845(stack["key"], stack["value"])
}

func (c *current) onMasqueradeParagraph895() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph895() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph895()
}

func (c *current) onMasqueradeParagraph898() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph898() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph898()
}

func (c *current) onMasqueradeParagraph901() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph901() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph901()
}

func (c *current) onMasqueradeParagraph892(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph892() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph892(stack["key"])
}

func (c *current) onMasqueradeParagraph918() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph918() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph918()
}

func (c *current) onMasqueradeParagraph889(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonMasqueradeParagraph889() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph889(stack["key"])
}

func (c *current) onMasqueradeParagraph834(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonMasqueradeParagraph834() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph834(stack["attributes"])
}

func (c *current) onMasqueradeParagraph924() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph924() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph924()
}

func (c *current) onMasqueradeParagraph715(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonMasqueradeParagraph715() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph715(stack["attr"])
}

func (c *current) onMasqueradeParagraph938() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonMasqueradeParagraph938() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph938()
}

func (c *current) onMasqueradeParagraph481(attributes, lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}), attributes.([]interface{})...)

}

func (p *parser) callonMasqueradeParagraph481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMasqueradeParagraph481(stack["attributes"], stack["lines"])
}

func (c *current) onInlineElements10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements10()
}

func (c *current) onInlineElements4(content interface{}) (interface{}, error) {
	return types.NewSingleLineComment(content.(string))
}

func (p *parser) callonInlineElements4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements4(stack["content"])
}

func (c *current) onInlineElements2(comment interface{}) (interface{}, error) {
	return types.NewInlineElements([]interface{}{comment})

}

func (p *parser) callonInlineElements2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements2(stack["comment"])
}

func (c *current) onInlineElements36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements36()
}

func (c *current) onInlineElements28() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonInlineElements28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements28()
}

func (c *current) onInlineElements51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements51()
}

func (c *current) onInlineElements63() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements63()
}

func (c *current) onInlineElements75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements75()
}

func (c *current) onInlineElements88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements88()
}

func (c *current) onInlineElements100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements100()
}

func (c *current) onInlineElements116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements116()
}

func (c *current) onInlineElements122() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements122()
}

func (c *current) onInlineElements112() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElements112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements112()
}

func (c *current) onInlineElements25(elements, linebreak interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(append(elements.([]interface{}), linebreak))

}

func (p *parser) callonInlineElements25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements25(stack["elements"], stack["linebreak"])
}

func (c *current) onInlineElement14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement14()
}

func (c *current) onInlineElement20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement20()
}

func (c *current) onInlineElement10() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElement10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement10()
}

func (c *current) onInlineElement44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement44()
}

func (c *current) onInlineElement34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement34()
}

func (c *current) onInlineElement60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement60()
}

func (c *current) onInlineElement64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement64()
}

func (c *current) onInlineElement30(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElement30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement30(stack["id"], stack["label"])
}

func (c *current) onInlineElement85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement85()
}

func (c *current) onInlineElement75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement75()
}

func (c *current) onInlineElement71(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElement71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement71(stack["id"])
}

func (c *current) onInlineElement116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement116()
}

func (c *current) onInlineElement106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement106()
}

func (c *current) onInlineElement129() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement129()
}

func (c *current) onInlineElement141() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement141()
}

func (c *current) onInlineElement153() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement153()
}

func (c *current) onInlineElement174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement174()
}

func (c *current) onInlineElement177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement177()
}

func (c *current) onInlineElement180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement180()
}

func (c *current) onInlineElement171(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement171(stack["key"])
}

func (c *current) onInlineElement194(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement194(stack["value"])
}

func (c *current) onInlineElement210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement210()
}

func (c *current) onInlineElement168(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement168(stack["key"], stack["value"])
}

func (c *current) onInlineElement218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement218()
}

func (c *current) onInlineElement221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement221()
}

func (c *current) onInlineElement224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement224()
}

func (c *current) onInlineElement215(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement215(stack["key"])
}

func (c *current) onInlineElement241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement241()
}

func (c *current) onInlineElement212(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement212(stack["key"])
}

func (c *current) onInlineElement125(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement125(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElement248() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement248()
}

func (c *current) onInlineElement260() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement260()
}

func (c *current) onInlineElement281() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement281()
}

func (c *current) onInlineElement284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement284()
}

func (c *current) onInlineElement287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement287()
}

func (c *current) onInlineElement278(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement278(stack["key"])
}

func (c *current) onInlineElement301(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement301(stack["value"])
}

func (c *current) onInlineElement317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement317()
}

func (c *current) onInlineElement275(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement275(stack["key"], stack["value"])
}

func (c *current) onInlineElement325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement325()
}

func (c *current) onInlineElement328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement328()
}

func (c *current) onInlineElement331() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement331()
}

func (c *current) onInlineElement322(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement322(stack["key"])
}

func (c *current) onInlineElement348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement348()
}

func (c *current) onInlineElement319(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement319(stack["key"])
}

func (c *current) onInlineElement244(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement244(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElement355() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement355()
}

func (c *current) onInlineElement376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement376()
}

func (c *current) onInlineElement379() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement379()
}

func (c *current) onInlineElement382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement382()
}

func (c *current) onInlineElement373(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement373() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement373(stack["key"])
}

func (c *current) onInlineElement396(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement396(stack["value"])
}

func (c *current) onInlineElement412() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement412()
}

func (c *current) onInlineElement370(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement370(stack["key"], stack["value"])
}

func (c *current) onInlineElement420() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement420()
}

func (c *current) onInlineElement423() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement423() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement423()
}

func (c *current) onInlineElement426() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement426()
}

func (c *current) onInlineElement417(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement417(stack["key"])
}

func (c *current) onInlineElement443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement443()
}

func (c *current) onInlineElement414(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement414(stack["key"])
}

func (c *current) onInlineElement351(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement351(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElement458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement458()
}

func (c *current) onInlineElement461() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement461() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement461()
}

func (c *current) onInlineElement464() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement464()
}

func (c *current) onInlineElement455(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement455() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement455(stack["key"])
}

func (c *current) onInlineElement478(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement478() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement478(stack["value"])
}

func (c *current) onInlineElement494() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement494()
}

func (c *current) onInlineElement452(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement452(stack["key"], stack["value"])
}

func (c *current) onInlineElement502() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement502() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement502()
}

func (c *current) onInlineElement505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement505()
}

func (c *current) onInlineElement508() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement508()
}

func (c *current) onInlineElement499(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement499() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement499(stack["key"])
}

func (c *current) onInlineElement525() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement525()
}

func (c *current) onInlineElement496(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement496(stack["key"])
}

func (c *current) onInlineElement446(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement446(stack["otherAttrs"])
}

func (c *current) onInlineElement100(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement100(stack["path"], stack["inlineAttributes"])
}

func (c *current) onInlineElement554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement554()
}

func (c *current) onInlineElement544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement544()
}

func (c *current) onInlineElement535() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement535()
}

func (c *current) onInlineElement567() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement567() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement567()
}

func (c *current) onInlineElement584() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement584()
}

func (c *current) onInlineElement587() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement587() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement587()
}

func (c *current) onInlineElement590() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement590() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement590()
}

func (c *current) onInlineElement581(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement581() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement581(stack["key"])
}

func (c *current) onInlineElement604(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement604(stack["value"])
}

func (c *current) onInlineElement620() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement620()
}

func (c *current) onInlineElement578(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement578(stack["key"], stack["value"])
}

func (c *current) onInlineElement628() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement628()
}

func (c *current) onInlineElement631() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement631() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement631()
}

func (c *current) onInlineElement634() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement634()
}

func (c *current) onInlineElement625(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement625() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement625(stack["key"])
}

func (c *current) onInlineElement651() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement651() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement651()
}

func (c *current) onInlineElement622(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement622() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement622(stack["key"])
}

func (c *current) onInlineElement563(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement563() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement563(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement666() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement666() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement666()
}

func (c *current) onInlineElement669() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement669()
}

func (c *current) onInlineElement672() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement672() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement672()
}

func (c *current) onInlineElement663(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement663() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement663(stack["key"])
}

func (c *current) onInlineElement686(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement686() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement686(stack["value"])
}

func (c *current) onInlineElement702() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement702() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement702()
}

func (c *current) onInlineElement660(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement660() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement660(stack["key"], stack["value"])
}

func (c *current) onInlineElement710() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement710() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement710()
}

func (c *current) onInlineElement713() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement713() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement713()
}

func (c *current) onInlineElement716() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement716()
}

func (c *current) onInlineElement707(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement707() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement707(stack["key"])
}

func (c *current) onInlineElement733() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement733() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement733()
}

func (c *current) onInlineElement704(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement704(stack["key"])
}

func (c *current) onInlineElement654(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement654() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement654(stack["otherAttrs"])
}

func (c *current) onInlineElement531(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement531(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElement757() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement757() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement757()
}

func (c *current) onInlineElement747() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement747() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement747()
}

func (c *current) onInlineElement739() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement739() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement739()
}

func (c *current) onInlineElement770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement770()
}

func (c *current) onInlineElement787() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement787() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement787()
}

func (c *current) onInlineElement790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement790()
}

func (c *current) onInlineElement793() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement793() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement793()
}

func (c *current) onInlineElement784(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement784() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement784(stack["key"])
}

func (c *current) onInlineElement807(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement807() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement807(stack["value"])
}

func (c *current) onInlineElement823() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement823() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement823()
}

func (c *current) onInlineElement781(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement781() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement781(stack["key"], stack["value"])
}

func (c *current) onInlineElement831() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement831() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement831()
}

func (c *current) onInlineElement834() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement834() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement834()
}

func (c *current) onInlineElement837() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement837()
}

func (c *current) onInlineElement828(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement828(stack["key"])
}

func (c *current) onInlineElement854() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement854() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement854()
}

func (c *current) onInlineElement825(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement825() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement825(stack["key"])
}

func (c *current) onInlineElement766(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement766() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement766(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement869() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement869() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement869()
}

func (c *current) onInlineElement872() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement872() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement872()
}

func (c *current) onInlineElement875() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement875() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement875()
}

func (c *current) onInlineElement866(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement866() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement866(stack["key"])
}

func (c *current) onInlineElement889(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement889() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement889(stack["value"])
}

func (c *current) onInlineElement905() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement905() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement905()
}

func (c *current) onInlineElement863(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement863() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement863(stack["key"], stack["value"])
}

func (c *current) onInlineElement913() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement913() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement913()
}

func (c *current) onInlineElement916() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement916() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement916()
}

func (c *current) onInlineElement919() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement919() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement919()
}

func (c *current) onInlineElement910(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement910() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement910(stack["key"])
}

func (c *current) onInlineElement936() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement936() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement936()
}

func (c *current) onInlineElement907(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement907(stack["key"])
}

func (c *current) onInlineElement857(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement857() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement857(stack["otherAttrs"])
}

func (c *current) onInlineElement736(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement736() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement736(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElement959() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement959() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement959()
}

func (c *current) onInlineElement949() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement949() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement949()
}

func (c *current) onInlineElement941() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement941() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement941()
}

func (c *current) onInlineElement939(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonInlineElement939() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement939(stack["url"])
}

func (c *current) onInlineElement528(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElement528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement528(stack["link"])
}

func (c *current) onInlineElement970() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement970() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement970()
}

func (c *current) onInlineElement966(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonInlineElement966() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement966(stack["name"])
}

func (c *current) onInlineElement991() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement991() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement991()
}

func (c *current) onInlineElement981() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement981() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement981()
}

func (c *current) onInlineElement1008() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1008() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1008()
}

func (c *current) onInlineElement977(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonInlineElement977() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement977(stack["id"])
}

func (c *current) onInlineElement1015() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1015() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1015()
}

func (c *current) onInlineElement1021() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1021() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1021()
}

func (c *current) onInlineElement1011() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElement1011() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1011()
}

func (c *current) onInlineElement1032() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1032() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1032()
}

func (c *current) onInlineElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1(stack["element"])
}

func (c *current) onInlineElementsWithoutSubtitution12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution12()
}

func (c *current) onInlineElementsWithoutSubtitution4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonInlineElementsWithoutSubtitution4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution4()
}

func (c *current) onInlineElementsWithoutSubtitution27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution27()
}

func (c *current) onInlineElementsWithoutSubtitution39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution39()
}

func (c *current) onInlineElementsWithoutSubtitution51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution51()
}

func (c *current) onInlineElementsWithoutSubtitution64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution64()
}

func (c *current) onInlineElementsWithoutSubtitution76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution76()
}

func (c *current) onInlineElementsWithoutSubtitution92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution92()
}

func (c *current) onInlineElementsWithoutSubtitution98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution98()
}

func (c *current) onInlineElementsWithoutSubtitution88() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElementsWithoutSubtitution88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution88()
}

func (c *current) onInlineElementsWithoutSubtitution1(elements, linebreak interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(append(elements.([]interface{}), linebreak))
}

func (p *parser) callonInlineElementsWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution1(stack["elements"], stack["linebreak"])
}

func (c *current) onInlineElementWithoutSubtitution14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution14()
}

func (c *current) onInlineElementWithoutSubtitution20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution20()
}

func (c *current) onInlineElementWithoutSubtitution10() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElementWithoutSubtitution10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution10()
}

func (c *current) onInlineElementWithoutSubtitution44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution44()
}

func (c *current) onInlineElementWithoutSubtitution34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution34()
}

func (c *current) onInlineElementWithoutSubtitution60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution60()
}

func (c *current) onInlineElementWithoutSubtitution64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution64()
}

func (c *current) onInlineElementWithoutSubtitution30(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElementWithoutSubtitution30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution30(stack["id"], stack["label"])
}

func (c *current) onInlineElementWithoutSubtitution85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution85()
}

func (c *current) onInlineElementWithoutSubtitution75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution75()
}

func (c *current) onInlineElementWithoutSubtitution71(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution71(stack["id"])
}

func (c *current) onInlineElementWithoutSubtitution116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution116()
}

func (c *current) onInlineElementWithoutSubtitution106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution106()
}

func (c *current) onInlineElementWithoutSubtitution129() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution129()
}

func (c *current) onInlineElementWithoutSubtitution141() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution141()
}

func (c *current) onInlineElementWithoutSubtitution153() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution153()
}

func (c *current) onInlineElementWithoutSubtitution174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution174()
}

func (c *current) onInlineElementWithoutSubtitution177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution177()
}

func (c *current) onInlineElementWithoutSubtitution180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution180()
}

func (c *current) onInlineElementWithoutSubtitution171(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution171(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution194(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution194(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution210()
}

func (c *current) onInlineElementWithoutSubtitution168(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution168(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution218()
}

func (c *current) onInlineElementWithoutSubtitution221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution221()
}

func (c *current) onInlineElementWithoutSubtitution224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution224()
}

func (c *current) onInlineElementWithoutSubtitution215(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution215(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution241()
}

func (c *current) onInlineElementWithoutSubtitution212(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution212(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution125(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution125(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution248() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution248()
}

func (c *current) onInlineElementWithoutSubtitution260() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution260()
}

func (c *current) onInlineElementWithoutSubtitution281() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution281()
}

func (c *current) onInlineElementWithoutSubtitution284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution284()
}

func (c *current) onInlineElementWithoutSubtitution287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution287()
}

func (c *current) onInlineElementWithoutSubtitution278(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution278(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution301(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution301(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution317()
}

func (c *current) onInlineElementWithoutSubtitution275(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution275(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution325()
}

func (c *current) onInlineElementWithoutSubtitution328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution328()
}

func (c *current) onInlineElementWithoutSubtitution331() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution331()
}

func (c *current) onInlineElementWithoutSubtitution322(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution322(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution348()
}

func (c *current) onInlineElementWithoutSubtitution319(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution319(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution244(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution244(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution355() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution355()
}

func (c *current) onInlineElementWithoutSubtitution376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution376()
}

func (c *current) onInlineElementWithoutSubtitution379() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution379()
}

func (c *current) onInlineElementWithoutSubtitution382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution382()
}

func (c *current) onInlineElementWithoutSubtitution373(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution373() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution373(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution396(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution396(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution412() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution412()
}

func (c *current) onInlineElementWithoutSubtitution370(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution370(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution420() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution420()
}

func (c *current) onInlineElementWithoutSubtitution423() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution423() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution423()
}

func (c *current) onInlineElementWithoutSubtitution426() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution426()
}

func (c *current) onInlineElementWithoutSubtitution417(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution417(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution443()
}

func (c *current) onInlineElementWithoutSubtitution414(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution414(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution351(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution351(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution458()
}

func (c *current) onInlineElementWithoutSubtitution461() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution461() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution461()
}

func (c *current) onInlineElementWithoutSubtitution464() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution464()
}

func (c *current) onInlineElementWithoutSubtitution455(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution455() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution455(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution478(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution478() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution478(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution494() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution494()
}

func (c *current) onInlineElementWithoutSubtitution452(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution452(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution502() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution502() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution502()
}

func (c *current) onInlineElementWithoutSubtitution505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution505()
}

func (c *current) onInlineElementWithoutSubtitution508() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution508()
}

func (c *current) onInlineElementWithoutSubtitution499(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution499() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution499(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution525() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution525()
}

func (c *current) onInlineElementWithoutSubtitution496(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution496(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution446(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution446(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution100(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution100(stack["path"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution554()
}

func (c *current) onInlineElementWithoutSubtitution544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution544()
}

func (c *current) onInlineElementWithoutSubtitution535() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution535()
}

func (c *current) onInlineElementWithoutSubtitution567() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution567() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution567()
}

func (c *current) onInlineElementWithoutSubtitution584() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution584()
}

func (c *current) onInlineElementWithoutSubtitution587() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution587() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution587()
}

func (c *current) onInlineElementWithoutSubtitution590() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution590() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution590()
}

func (c *current) onInlineElementWithoutSubtitution581(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution581() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution581(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution604(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution604(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution620() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution620()
}

func (c *current) onInlineElementWithoutSubtitution578(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution578(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution628() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution628()
}

func (c *current) onInlineElementWithoutSubtitution631() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution631() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution631()
}

func (c *current) onInlineElementWithoutSubtitution634() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution634()
}

func (c *current) onInlineElementWithoutSubtitution625(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution625() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution625(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution651() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution651() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution651()
}

func (c *current) onInlineElementWithoutSubtitution622(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution622() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution622(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution563(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution563() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution563(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution666() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution666() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution666()
}

func (c *current) onInlineElementWithoutSubtitution669() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution669()
}

func (c *current) onInlineElementWithoutSubtitution672() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution672() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution672()
}

func (c *current) onInlineElementWithoutSubtitution663(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution663() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution663(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution686(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution686() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution686(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution702() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution702() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution702()
}

func (c *current) onInlineElementWithoutSubtitution660(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution660() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution660(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution710() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution710() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution710()
}

func (c *current) onInlineElementWithoutSubtitution713() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution713() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution713()
}

func (c *current) onInlineElementWithoutSubtitution716() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution716()
}

func (c *current) onInlineElementWithoutSubtitution707(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution707() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution707(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution733() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution733() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution733()
}

func (c *current) onInlineElementWithoutSubtitution704(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution704(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution654(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution654() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution654(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution531(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution531(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution757() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution757() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution757()
}

func (c *current) onInlineElementWithoutSubtitution747() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution747() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution747()
}

func (c *current) onInlineElementWithoutSubtitution739() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution739() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution739()
}

func (c *current) onInlineElementWithoutSubtitution770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution770()
}

func (c *current) onInlineElementWithoutSubtitution787() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution787() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution787()
}

func (c *current) onInlineElementWithoutSubtitution790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution790()
}

func (c *current) onInlineElementWithoutSubtitution793() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution793() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution793()
}

func (c *current) onInlineElementWithoutSubtitution784(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution784() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution784(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution807(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution807() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution807(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution823() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution823() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution823()
}

func (c *current) onInlineElementWithoutSubtitution781(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution781() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution781(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution831() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution831() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution831()
}

func (c *current) onInlineElementWithoutSubtitution834() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution834() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution834()
}

func (c *current) onInlineElementWithoutSubtitution837() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution837()
}

func (c *current) onInlineElementWithoutSubtitution828(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution828(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution854() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution854() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution854()
}

func (c *current) onInlineElementWithoutSubtitution825(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution825() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution825(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution766(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution766() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution766(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution869() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution869() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution869()
}

func (c *current) onInlineElementWithoutSubtitution872() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution872() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution872()
}

func (c *current) onInlineElementWithoutSubtitution875() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution875() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution875()
}

func (c *current) onInlineElementWithoutSubtitution866(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution866() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution866(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution889(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution889() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution889(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution905() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution905() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution905()
}

func (c *current) onInlineElementWithoutSubtitution863(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution863() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution863(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution913() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution913() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution913()
}

func (c *current) onInlineElementWithoutSubtitution916() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution916() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution916()
}

func (c *current) onInlineElementWithoutSubtitution919() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution919() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution919()
}

func (c *current) onInlineElementWithoutSubtitution910(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution910() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution910(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution936() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution936() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution936()
}

func (c *current) onInlineElementWithoutSubtitution907(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution907(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution857(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution857() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution857(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution736(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution736() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution736(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution959() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution959() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution959()
}

func (c *current) onInlineElementWithoutSubtitution949() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution949() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution949()
}

func (c *current) onInlineElementWithoutSubtitution941() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution941() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution941()
}

func (c *current) onInlineElementWithoutSubtitution939(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution939() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution939(stack["url"])
}

func (c *current) onInlineElementWithoutSubtitution528(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElementWithoutSubtitution528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution528(stack["link"])
}

func (c *current) onInlineElementWithoutSubtitution980() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution980() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution980()
}

func (c *current) onInlineElementWithoutSubtitution970() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution970() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution970()
}

func (c *current) onInlineElementWithoutSubtitution997() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution997() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution997()
}

func (c *current) onInlineElementWithoutSubtitution966(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonInlineElementWithoutSubtitution966() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution966(stack["id"])
}

func (c *current) onInlineElementWithoutSubtitution1004() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1004() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1004()
}

func (c *current) onInlineElementWithoutSubtitution1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElementWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1(stack["element"])
}

func (c *current) onBoldText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText2(stack["content"])
}

func (c *current) onBoldText10(content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewQuotedText(types.Bold, result)

}

func (p *parser) callonBoldText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText10(stack["content"])
}

func (c *current) onBoldText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText18(stack["content"])
}

func (c *current) onEscapedBoldText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText5()
}

func (c *current) onEscapedBoldText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "**", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText17()
}

func (c *current) onEscapedBoldText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "*", result)

}

func (p *parser) callonEscapedBoldText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText29()
}

func (c *current) onEscapedBoldText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "*", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText26(stack["backslashes"], stack["content"])
}

func (c *current) onItalicText2(content interface{}) (interface{}, error) {
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText2(stack["content"])
}

func (c *current) onItalicText10(content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewQuotedText(types.Italic, result)

}

func (p *parser) callonItalicText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText10(stack["content"])
}

func (c *current) onItalicText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '__' to emphazise a portion of a word)
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText18(stack["content"])
}

func (c *current) onEscapedItalicText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText5()
}

func (c *current) onEscapedItalicText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "__", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText17()
}

func (c *current) onEscapedItalicText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "_", result)

}

func (p *parser) callonEscapedItalicText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText29()
}

func (c *current) onEscapedItalicText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "_", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText26(stack["backslashes"], stack["content"])
}

func (c *current) onMonospaceText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText2(stack["content"])
}

func (c *current) onMonospaceText10(content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewQuotedText(types.Monospace, result)

}

func (p *parser) callonMonospaceText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText10(stack["content"])
}

func (c *current) onMonospaceText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '``' to emphazise a portion of a word)
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText18(stack["content"])
}

func (c *current) onEscapedMonospaceText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText5()
}

func (c *current) onEscapedMonospaceText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "``", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText17()
}

func (c *current) onEscapedMonospaceText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "`", result)

}

func (p *parser) callonEscapedMonospaceText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText29()
}

func (c *current) onEscapedMonospaceText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "`", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText26(stack["backslashes"], stack["content"])
}

func (c *current) onSubscriptText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Subscript, content.([]interface{}))

}

func (p *parser) callonSubscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText2(stack["content"])
}

func (c *current) onSubscriptText10(content interface{}) (interface{}, error) {
	// unbalanced "~~" vs "~" punctuation
	result := append([]interface{}{"~"}, content.([]interface{}))
	return types.NewQuotedText(types.Subscript, result)

}

func (p *parser) callonSubscriptText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText10(stack["content"])
}

func (c *current) onSubscriptText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '~~' to emphazise a portion of a word)
	return types.NewQuotedText(types.Subscript, content.([]interface{}))

}

func (p *parser) callonSubscriptText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText18(stack["content"])
}

func (c *current) onEscapedSubscriptText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText5()
}

func (c *current) onEscapedSubscriptText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "~~", content.([]interface{}))

}

func (p *parser) callonEscapedSubscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSubscriptText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText17()
}

func (c *current) onEscapedSubscriptText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "~~" vs "~" punctuation
	result := append([]interface{}{"~"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "~", result)

}

func (p *parser) callonEscapedSubscriptText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSubscriptText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText29()
}

func (c *current) onEscapedSubscriptText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "~", content.([]interface{}))

}

func (p *parser) callonEscapedSubscriptText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText26(stack["backslashes"], stack["content"])
}

func (c *current) onSuperscriptText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Superscript, content.([]interface{}))

}

func (p *parser) callonSuperscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText2(stack["content"])
}

func (c *current) onSuperscriptText10(content interface{}) (interface{}, error) {
	// unbalanced "^^" vs "^" punctuation
	result := append([]interface{}{"^"}, content.([]interface{}))
	return types.NewQuotedText(types.Superscript, result)

}

func (p *parser) callonSuperscriptText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText10(stack["content"])
}

func (c *current) onSuperscriptText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Superscript, content.([]interface{}))

}

func (p *parser) callonSuperscriptText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText18(stack["content"])
}

func (c *current) onEscapedSuperscriptText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText5()
}

func (c *current) onEscapedSuperscriptText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "^^", content.([]interface{}))

}

func (p *parser) callonEscapedSuperscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSuperscriptText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText17()
}

func (c *current) onEscapedSuperscriptText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "^^" vs "^" punctuation
	result := append([]interface{}{"^"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "^", result)

}

func (p *parser) callonEscapedSuperscriptText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSuperscriptText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText29()
}

func (c *current) onEscapedSuperscriptText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "^", content.([]interface{}))

}

func (p *parser) callonEscapedSuperscriptText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText26(stack["backslashes"], stack["content"])
}

func (c *current) onQuotedTextContent8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContent8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContent8()
}

func (c *current) onQuotedTextContentElement12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement12()
}

func (c *current) onQuotedTextContentElement35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement35()
}

func (c *current) onQuotedTextContentElement25() (interface{}, error) {
	// cannot have "*", "_", "`", "~" or "^" within, maybe because the user inserted another quote, or made an error (extra or missing space, for example)
	return c.text, nil
}

func (p *parser) callonQuotedTextContentElement25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement25()
}

func (c *current) onPassthrough2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.TriplePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough2(stack["content"])
}

func (c *current) onPassthrough12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.SinglePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough12(stack["content"])
}

func (c *current) onPassthroughMacro2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro2(stack["content"])
}

func (c *current) onPassthroughMacro12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro12(stack["content"])
}

func (c *current) onInlineFootnote2(content interface{}) (interface{}, error) {
	return types.NewFootnote("", content.(types.InlineElements))

}

func (p *parser) callonInlineFootnote2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote2(stack["content"])
}

func (c *current) onInlineFootnote12() (interface{}, error) {
	// footnote ID not may span multiple lines
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote12()
}

func (c *current) onInlineFootnote8(ref, content interface{}) (interface{}, error) {
	return types.NewFootnote(ref.(string), content.(types.InlineElements))

}

func (p *parser) callonInlineFootnote8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote8(stack["ref"], stack["content"])
}

func (c *current) onInlineFootnote34() (interface{}, error) {
	// footnote ID not may span multiple lines
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote34()
}

func (c *current) onInlineFootnote30(ref interface{}) (interface{}, error) {
	return types.NewFootnote(ref.(string), types.InlineElements{}) // foot note referring to another note

}

func (p *parser) callonInlineFootnote30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote30(stack["ref"])
}

func (c *current) onFootnoteContent16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent16()
}

func (c *current) onFootnoteContent33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent33()
}

func (c *current) onFootnoteContent23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent23()
}

func (c *current) onFootnoteContent50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent50()
}

func (c *current) onFootnoteContent19(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonFootnoteContent19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent19(stack["id"])
}

func (c *current) onFootnoteContent56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent56()
}

func (c *current) onFootnoteContent1(elements interface{}) (interface{}, error) {
	// footnote content may span multiple lines
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonFootnoteContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent1(stack["elements"])
}

func (c *current) onDelimitedBlock9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock9()
}

func (c *current) onDelimitedBlock29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock29()
}

func (c *current) onDelimitedBlock49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock49()
}

func (c *current) onDelimitedBlock40() (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(string(c.text))
}

func (p *parser) callonDelimitedBlock40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock40()
}

func (c *current) onDelimitedBlock21(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonDelimitedBlock21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock21(stack["line"])
}

func (c *current) onDelimitedBlock18(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonDelimitedBlock18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock18(stack["lines"])
}

func (c *current) onDelimitedBlock74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock74()
}

func (c *current) onDelimitedBlock3(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Listing, content.([]interface{}), types.None)
}

func (p *parser) callonDelimitedBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock3(stack["content"])
}

func (c *current) onDelimitedBlock90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock90()
}

func (c *current) onDelimitedBlock97() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock97()
}

func (c *current) onDelimitedBlock121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock121()
}

func (c *current) onDelimitedBlock84(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Comment, content.([]interface{}), types.Verbatim)
}

func (p *parser) callonDelimitedBlock84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock84(stack["content"])
}

func (c *current) onFencedBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock7()
}

func (c *current) onFencedBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock23()
}

func (c *current) onFencedBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Fenced, content.([]interface{}), types.None)
}

func (p *parser) callonFencedBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock1(stack["content"])
}

func (c *current) onFencedBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent12()
}

func (c *current) onFencedBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonFencedBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent4()
}

func (c *current) onExampleBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock7()
}

func (c *current) onExampleBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock27()
}

func (c *current) onExampleBlock19() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonExampleBlock19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock19()
}

func (c *current) onExampleBlock40() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock40()
}

func (c *current) onExampleBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Example, content.([]interface{}), types.None)
}

func (p *parser) callonExampleBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock1(stack["content"])
}

func (c *current) onBlockParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonBlockParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph1(stack["lines"])
}

func (c *current) onBlockParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine9()
}

func (c *current) onBlockParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonBlockParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine13()
}

func (c *current) onBlockParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonBlockParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine15()
}

func (c *current) onBlockParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonBlockParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine17()
}

func (c *current) onBlockParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonBlockParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine19()
}

func (c *current) onBlockParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonBlockParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine21()
}

func (c *current) onBlockParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonBlockParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine23()
}

func (c *current) onBlockParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonBlockParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine28()
}

func (c *current) onBlockParagraphLine32() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonBlockParagraphLine32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine32()
}

func (c *current) onBlockParagraphLine36() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonBlockParagraphLine36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine36()
}

func (c *current) onBlockParagraphLine41() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonBlockParagraphLine41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine41()
}

func (c *current) onBlockParagraphLine49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine49()
}

func (c *current) onBlockParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine4(stack["prefix"])
}

func (c *current) onBlockParagraphLine57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine57()
}

func (c *current) onBlockParagraphLine61() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonBlockParagraphLine61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine61()
}

func (c *current) onBlockParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonBlockParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine63()
}

func (c *current) onBlockParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonBlockParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine65()
}

func (c *current) onBlockParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonBlockParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine67()
}

func (c *current) onBlockParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonBlockParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine69()
}

func (c *current) onBlockParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonBlockParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine71()
}

func (c *current) onBlockParagraphLine76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine76()
}

func (c *current) onBlockParagraphLine52(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine52(stack["prefix"])
}

func (c *current) onBlockParagraphLine80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine80()
}

func (c *current) onBlockParagraphLine90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine90()
}

func (c *current) onBlockParagraphLine102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine102()
}

func (c *current) onBlockParagraphLine96() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonBlockParagraphLine96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine96()
}

func (c *current) onBlockParagraphLine117() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine117()
}

func (c *current) onBlockParagraphLine129() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine129()
}

func (c *current) onBlockParagraphLine141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine141()
}

func (c *current) onBlockParagraphLine154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine154()
}

func (c *current) onBlockParagraphLine166() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine166()
}

func (c *current) onBlockParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonBlockParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine1(stack["line"])
}

func (c *current) onQuoteBlock10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock10()
}

func (c *current) onQuoteBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock15()
}

func (c *current) onQuoteBlock19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock19()
}

func (c *current) onQuoteBlock35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock35()
}

func (c *current) onQuoteBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock53()
}

func (c *current) onQuoteBlock6(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonQuoteBlock6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock6(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onQuoteBlock64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock64()
}

func (c *current) onQuoteBlock69() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock69()
}

func (c *current) onQuoteBlock73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock73()
}

func (c *current) onQuoteBlock91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock91()
}

func (c *current) onQuoteBlock60(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonQuoteBlock60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock60(stack["kind"], stack["author"])
}

func (c *current) onQuoteBlock102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock102()
}

func (c *current) onQuoteBlock107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock107()
}

func (c *current) onQuoteBlock113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock113()
}

func (c *current) onQuoteBlock98(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonQuoteBlock98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock98(stack["kind"])
}

func (c *current) onQuoteBlock141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock141()
}

func (c *current) onQuoteBlock131() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock131()
}

func (c *current) onQuoteBlock127(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonQuoteBlock127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock127(stack["id"])
}

func (c *current) onQuoteBlock169() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock169()
}

func (c *current) onQuoteBlock159() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock159()
}

func (c *current) onQuoteBlock155(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonQuoteBlock155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock155(stack["id"])
}

func (c *current) onQuoteBlock191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock191()
}

func (c *current) onQuoteBlock194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock194()
}

func (c *current) onQuoteBlock183(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonQuoteBlock183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock183(stack["title"])
}

func (c *current) onQuoteBlock208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock208()
}

func (c *current) onQuoteBlock211() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock211()
}

func (c *current) onQuoteBlock202(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonQuoteBlock202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock202(stack["role"])
}

func (c *current) onQuoteBlock227() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock227()
}

func (c *current) onQuoteBlock229() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock229()
}

func (c *current) onQuoteBlock231() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock231()
}

func (c *current) onQuoteBlock233() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock233()
}

func (c *current) onQuoteBlock235() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock235()
}

func (c *current) onQuoteBlock222(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonQuoteBlock222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock222(stack["k"])
}

func (c *current) onQuoteBlock238() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonQuoteBlock238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock238()
}

func (c *current) onQuoteBlock246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock246()
}

func (c *current) onQuoteBlock257() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock257()
}

func (c *current) onQuoteBlock260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock260()
}

func (c *current) onQuoteBlock263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock263()
}

func (c *current) onQuoteBlock254(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock254(stack["key"])
}

func (c *current) onQuoteBlock277(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock277() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock277(stack["value"])
}

func (c *current) onQuoteBlock293() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock293()
}

func (c *current) onQuoteBlock251(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonQuoteBlock251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock251(stack["key"], stack["value"])
}

func (c *current) onQuoteBlock301() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock301()
}

func (c *current) onQuoteBlock304() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock304()
}

func (c *current) onQuoteBlock307() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock307()
}

func (c *current) onQuoteBlock298(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock298(stack["key"])
}

func (c *current) onQuoteBlock324() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock324()
}

func (c *current) onQuoteBlock295(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonQuoteBlock295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock295(stack["key"])
}

func (c *current) onQuoteBlock240(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonQuoteBlock240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock240(stack["attributes"])
}

func (c *current) onQuoteBlock330() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock330() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock330()
}

func (c *current) onQuoteBlock121(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonQuoteBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock121(stack["attr"])
}

func (c *current) onQuoteBlock341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock341()
}

func (c *current) onQuoteBlock357() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock357()
}

func (c *current) onQuoteBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Quote, content.([]interface{}), types.None, attributes.([]interface{}))
}

func (p *parser) callonQuoteBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock1(stack["attributes"], stack["content"])
}

func (c *current) onQuoteBlockContent9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlockContent9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockContent9()
}

func (c *current) onQuoteBlockContent1(element interface{}) (interface{}, error) {
	return element, nil

}

func (p *parser) callonQuoteBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockContent1(stack["element"])
}

func (c *current) onVerseBlock10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock10()
}

func (c *current) onVerseBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock15()
}

func (c *current) onVerseBlock19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock19()
}

func (c *current) onVerseBlock35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock35()
}

func (c *current) onVerseBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock53()
}

func (c *current) onVerseBlock6(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonVerseBlock6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock6(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onVerseBlock64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock64()
}

func (c *current) onVerseBlock69() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock69()
}

func (c *current) onVerseBlock73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock73()
}

func (c *current) onVerseBlock91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock91()
}

func (c *current) onVerseBlock60(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonVerseBlock60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock60(stack["kind"], stack["author"])
}

func (c *current) onVerseBlock102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock102()
}

func (c *current) onVerseBlock107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock107()
}

func (c *current) onVerseBlock113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock113()
}

func (c *current) onVerseBlock98(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonVerseBlock98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock98(stack["kind"])
}

func (c *current) onVerseBlock141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock141()
}

func (c *current) onVerseBlock131() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock131()
}

func (c *current) onVerseBlock127(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonVerseBlock127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock127(stack["id"])
}

func (c *current) onVerseBlock169() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock169()
}

func (c *current) onVerseBlock159() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock159()
}

func (c *current) onVerseBlock155(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonVerseBlock155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock155(stack["id"])
}

func (c *current) onVerseBlock191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock191()
}

func (c *current) onVerseBlock194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock194()
}

func (c *current) onVerseBlock183(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonVerseBlock183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock183(stack["title"])
}

func (c *current) onVerseBlock208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock208()
}

func (c *current) onVerseBlock211() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock211()
}

func (c *current) onVerseBlock202(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonVerseBlock202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock202(stack["role"])
}

func (c *current) onVerseBlock227() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonVerseBlock227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock227()
}

func (c *current) onVerseBlock229() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonVerseBlock229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock229()
}

func (c *current) onVerseBlock231() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonVerseBlock231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock231()
}

func (c *current) onVerseBlock233() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonVerseBlock233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock233()
}

func (c *current) onVerseBlock235() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonVerseBlock235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock235()
}

func (c *current) onVerseBlock222(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonVerseBlock222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock222(stack["k"])
}

func (c *current) onVerseBlock238() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonVerseBlock238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock238()
}

func (c *current) onVerseBlock246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock246()
}

func (c *current) onVerseBlock257() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock257()
}

func (c *current) onVerseBlock260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock260()
}

func (c *current) onVerseBlock263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock263()
}

func (c *current) onVerseBlock254(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock254(stack["key"])
}

func (c *current) onVerseBlock277(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock277() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock277(stack["value"])
}

func (c *current) onVerseBlock293() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock293()
}

func (c *current) onVerseBlock251(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonVerseBlock251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock251(stack["key"], stack["value"])
}

func (c *current) onVerseBlock301() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock301()
}

func (c *current) onVerseBlock304() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock304()
}

func (c *current) onVerseBlock307() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock307()
}

func (c *current) onVerseBlock298(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock298(stack["key"])
}

func (c *current) onVerseBlock324() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock324()
}

func (c *current) onVerseBlock295(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonVerseBlock295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock295(stack["key"])
}

func (c *current) onVerseBlock240(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonVerseBlock240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock240(stack["attributes"])
}

func (c *current) onVerseBlock330() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock330() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock330()
}

func (c *current) onVerseBlock121(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonVerseBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock121(stack["attr"])
}

func (c *current) onVerseBlock341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock341()
}

func (c *current) onVerseBlock357() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock357()
}

func (c *current) onVerseBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Verse, content.([]interface{}), types.None, attributes.([]interface{}))
}

func (p *parser) callonVerseBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock1(stack["attributes"], stack["content"])
}

func (c *current) onVerseBlockContent1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonVerseBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockContent1(stack["lines"])
}

func (c *current) onVerseBlockLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine9()
}

func (c *current) onVerseBlockLine1(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonVerseBlockLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine1(stack["line"])
}

func (c *current) onVerseBlockLineContent11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent11()
}

func (c *current) onVerseBlockLineContent27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent27()
}

func (c *current) onVerseBlockLineContent33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent33()
}

func (c *current) onVerseBlockLineContent1(elements interface{}) (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonVerseBlockLineContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent1(stack["elements"])
}

func (c *current) onSidebarBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock7()
}

func (c *current) onSidebarBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock23()
}

func (c *current) onSidebarBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Sidebar, content.([]interface{}), types.None)
}

func (p *parser) callonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock1(stack["content"])
}

func (c *current) onSidebarBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent12()
}

func (c *current) onSidebarBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonSidebarBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent4()
}

func (c *current) onNonSidebarBlock1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonNonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onNonSidebarBlock1(stack["content"])
}

func (c *current) onTable7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable7()
}

func (c *current) onTable26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable26()
}

func (c *current) onTable1(header, lines interface{}) (interface{}, error) {
	// end delimiter or end of file
	return types.NewTable(header, lines.([]interface{}))

}

func (p *parser) callonTable1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable1(stack["header"], stack["lines"])
}

func (c *current) onTableLineHeader9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader9()
}

func (c *current) onTableLineHeader32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader32()
}

func (c *current) onTableLineHeader24(cells interface{}) (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLineHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader24(stack["cells"])
}

func (c *current) onTableLineHeader1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLineHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader1(stack["cells"])
}

func (c *current) onTableLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine9()
}

func (c *current) onTableLine33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine33()
}

func (c *current) onTableLine25() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLine25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine25()
}

func (c *current) onTableLine1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine1(stack["cells"])
}

func (c *current) onTableCell7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell7()
}

func (c *current) onTableCell18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell18()
}

func (c *current) onTableCell29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell29()
}

func (c *current) onTableCell35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell35()
}

func (c *current) onTableCell1(elements interface{}) (interface{}, error) {
	return types.NewInlineElements(elements)
}

func (p *parser) callonTableCell1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell1(stack["elements"])
}

func (c *current) onWord12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonWord12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWord12()
}

func (c *current) onWord1() (interface{}, error) {
	// word cannot contain parenthesis. Dots and ellipsis are treated as independent words (but will be combined afterwards)
	return string(c.text), nil
}

func (p *parser) callonWord1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWord1()
}

func (c *current) onWS3() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonWS3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWS3()
}

var (
	// errNoRule is returned when the grammar to parse has no rule.
	errNoRule = errors.New("grammar has no rule")

	// errInvalidEntrypoint is returned when the specified entrypoint rule
	// does not exit.
	errInvalidEntrypoint = errors.New("invalid entrypoint")

	// errInvalidEncoding is returned when the source is not properly
	// utf8-encoded.
	errInvalidEncoding = errors.New("invalid encoding")

	// errMaxExprCnt is used to signal that the maximum number of
	// expressions have been parsed.
	errMaxExprCnt = errors.New("max number of expresssions parsed")
)

// Option is a function that can set an option on the parser. It returns
// the previous setting as an Option.
type Option func(*parser) Option

// MaxExpressions creates an Option to stop parsing after the provided
// number of expressions have been parsed, if the value is 0 then the parser will
// parse for as many steps as needed (possibly an infinite number).
//
// The default for maxExprCnt is 0.
func MaxExpressions(maxExprCnt uint64) Option {
	return func(p *parser) Option {
		oldMaxExprCnt := p.maxExprCnt
		p.maxExprCnt = maxExprCnt
		return MaxExpressions(oldMaxExprCnt)
	}
}

// Entrypoint creates an Option to set the rule name to use as entrypoint.
// The rule name must have been specified in the -alternate-entrypoints
// if generating the parser with the -optimize-grammar flag, otherwise
// it may have been optimized out. Passing an empty string sets the
// entrypoint to the first rule in the grammar.
//
// The default is to start parsing at the first rule in the grammar.
func Entrypoint(ruleName string) Option {
	return func(p *parser) Option {
		oldEntrypoint := p.entrypoint
		p.entrypoint = ruleName
		if ruleName == "" {
			p.entrypoint = g.rules[0].name
		}
		return Entrypoint(oldEntrypoint)
	}
}

// Statistics adds a user provided Stats struct to the parser to allow
// the user to process the results after the parsing has finished.
// Also the key for the "no match" counter is set.
//
// Example usage:
//
//     input := "input"
//     stats := Stats{}
//     _, err := Parse("input-file", []byte(input), Statistics(&stats, "no match"))
//     if err != nil {
//         log.Panicln(err)
//     }
//     b, err := json.MarshalIndent(stats.ChoiceAltCnt, "", "  ")
//     if err != nil {
//         log.Panicln(err)
//     }
//     fmt.Println(string(b))
//
func Statistics(stats *Stats, choiceNoMatch string) Option {
	return func(p *parser) Option {
		oldStats := p.Stats
		p.Stats = stats
		oldChoiceNoMatch := p.choiceNoMatch
		p.choiceNoMatch = choiceNoMatch
		if p.Stats.ChoiceAltCnt == nil {
			p.Stats.ChoiceAltCnt = make(map[string]map[string]int)
		}
		return Statistics(oldStats, oldChoiceNoMatch)
	}
}

// Debug creates an Option to set the debug flag to b. When set to true,
// debugging information is printed to stdout while parsing.
//
// The default is false.
func Debug(b bool) Option {
	return func(p *parser) Option {
		old := p.debug
		p.debug = b
		return Debug(old)
	}
}

// Memoize creates an Option to set the memoize flag to b. When set to true,
// the parser will cache all results so each expression is evaluated only
// once. This guarantees linear parsing time even for pathological cases,
// at the expense of more memory and slower times for typical cases.
//
// The default is false.
func Memoize(b bool) Option {
	return func(p *parser) Option {
		old := p.memoize
		p.memoize = b
		return Memoize(old)
	}
}

// AllowInvalidUTF8 creates an Option to allow invalid UTF-8 bytes.
// Every invalid UTF-8 byte is treated as a utf8.RuneError (U+FFFD)
// by character class matchers and is matched by the any matcher.
// The returned matched value, c.text and c.offset are NOT affected.
//
// The default is false.
func AllowInvalidUTF8(b bool) Option {
	return func(p *parser) Option {
		old := p.allowInvalidUTF8
		p.allowInvalidUTF8 = b
		return AllowInvalidUTF8(old)
	}
}

// Recover creates an Option to set the recover flag to b. When set to
// true, this causes the parser to recover from panics and convert it
// to an error. Setting it to false can be useful while debugging to
// access the full stack trace.
//
// The default is true.
func Recover(b bool) Option {
	return func(p *parser) Option {
		old := p.recover
		p.recover = b
		return Recover(old)
	}
}

// GlobalStore creates an Option to set a key to a certain value in
// the globalStore.
func GlobalStore(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.globalStore[key]
		p.cur.globalStore[key] = value
		return GlobalStore(key, old)
	}
}

// InitState creates an Option to set a key to a certain value in
// the global "state" store.
func InitState(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.state[key]
		p.cur.state[key] = value
		return InitState(key, old)
	}
}

// ParseFile parses the file identified by filename.
func ParseFile(filename string, opts ...Option) (i interface{}, err error) {
	f, err := os.Open(filename)
	if err != nil {
		return nil, err
	}
	defer func() {
		if closeErr := f.Close(); closeErr != nil {
			err = closeErr
		}
	}()
	return ParseReader(filename, f, opts...)
}

// ParseReader parses the data from r using filename as information in the
// error messages.
func ParseReader(filename string, r io.Reader, opts ...Option) (interface{}, error) {
	b, err := ioutil.ReadAll(r)
	if err != nil {
		return nil, err
	}

	return Parse(filename, b, opts...)
}

// Parse parses the data from b using filename as information in the
// error messages.
func Parse(filename string, b []byte, opts ...Option) (interface{}, error) {
	return newParser(filename, b, opts...).parse(g)
}

// position records a position in the text.
type position struct {
	line, col, offset int
}

func (p position) String() string {
	return fmt.Sprintf("%d:%d [%d]", p.line, p.col, p.offset)
}

// savepoint stores all state required to go back to this point in the
// parser.
type savepoint struct {
	position
	rn rune
	w  int
}

type current struct {
	pos  position // start position of the match
	text []byte   // raw text of the match

	// state is a store for arbitrary key,value pairs that the user wants to be
	// tied to the backtracking of the parser.
	// This is always rolled back if a parsing rule fails.
	state storeDict

	// globalStore is a general store for the user to store arbitrary key-value
	// pairs that they need to manage and that they do not want tied to the
	// backtracking of the parser. This is only modified by the user and never
	// rolled back by the parser. It is always up to the user to keep this in a
	// consistent state.
	globalStore storeDict
}

type storeDict map[string]interface{}

// the AST types...

type grammar struct {
	pos   position
	rules []*rule
}

type rule struct {
	pos         position
	name        string
	displayName string
	expr        interface{}
}

type choiceExpr struct {
	pos          position
	alternatives []interface{}
}

type actionExpr struct {
	pos  position
	expr interface{}
	run  func(*parser) (interface{}, error)
}

type recoveryExpr struct {
	pos          position
	expr         interface{}
	recoverExpr  interface{}
	failureLabel []string
}

type seqExpr struct {
	pos   position
	exprs []interface{}
}

type throwExpr struct {
	pos   position
	label string
}

type labeledExpr struct {
	pos   position
	label string
	expr  interface{}
}

type expr struct {
	pos  position
	expr interface{}
}

type andExpr expr
type notExpr expr
type zeroOrOneExpr expr
type zeroOrMoreExpr expr
type oneOrMoreExpr expr

type ruleRefExpr struct {
	pos  position
	name string
}

type stateCodeExpr struct {
	pos position
	run func(*parser) error
}

type andCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type notCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type litMatcher struct {
	pos        position
	val        string
	ignoreCase bool
}

type charClassMatcher struct {
	pos             position
	val             string
	basicLatinChars [128]bool
	chars           []rune
	ranges          []rune
	classes         []*unicode.RangeTable
	ignoreCase      bool
	inverted        bool
}

type anyMatcher position

// errList cumulates the errors found by the parser.
type errList []error

func (e *errList) add(err error) {
	*e = append(*e, err)
}

func (e errList) err() error {
	if len(e) == 0 {
		return nil
	}
	e.dedupe()
	return e
}

func (e *errList) dedupe() {
	var cleaned []error
	set := make(map[string]bool)
	for _, err := range *e {
		if msg := err.Error(); !set[msg] {
			set[msg] = true
			cleaned = append(cleaned, err)
		}
	}
	*e = cleaned
}

func (e errList) Error() string {
	switch len(e) {
	case 0:
		return ""
	case 1:
		return e[0].Error()
	default:
		var buf bytes.Buffer

		for i, err := range e {
			if i > 0 {
				buf.WriteRune('\n')
			}
			buf.WriteString(err.Error())
		}
		return buf.String()
	}
}

// parserError wraps an error with a prefix indicating the rule in which
// the error occurred. The original error is stored in the Inner field.
type parserError struct {
	Inner    error
	pos      position
	prefix   string
	expected []string
}

// Error returns the error message.
func (p *parserError) Error() string {
	return p.prefix + ": " + p.Inner.Error()
}

// newParser creates a parser with the specified input source and options.
func newParser(filename string, b []byte, opts ...Option) *parser {
	stats := Stats{
		ChoiceAltCnt: make(map[string]map[string]int),
	}

	p := &parser{
		filename: filename,
		errs:     new(errList),
		data:     b,
		pt:       savepoint{position: position{line: 1}},
		recover:  true,
		cur: current{
			state:       make(storeDict),
			globalStore: make(storeDict),
		},
		maxFailPos:      position{col: 1, line: 1},
		maxFailExpected: make([]string, 0, 20),
		Stats:           &stats,
		// start rule is rule [0] unless an alternate entrypoint is specified
		entrypoint: g.rules[0].name,
	}
	p.setOptions(opts)

	if p.maxExprCnt == 0 {
		p.maxExprCnt = math.MaxUint64
	}

	return p
}

// setOptions applies the options to the parser.
func (p *parser) setOptions(opts []Option) {
	for _, opt := range opts {
		opt(p)
	}
}

type resultTuple struct {
	v   interface{}
	b   bool
	end savepoint
}

const choiceNoMatch = -1

// Stats stores some statistics, gathered during parsing
type Stats struct {
	// ExprCnt counts the number of expressions processed during parsing
	// This value is compared to the maximum number of expressions allowed
	// (set by the MaxExpressions option).
	ExprCnt uint64

	// ChoiceAltCnt is used to count for each ordered choice expression,
	// which alternative is used how may times.
	// These numbers allow to optimize the order of the ordered choice expression
	// to increase the performance of the parser
	//
	// The outer key of ChoiceAltCnt is composed of the name of the rule as well
	// as the line and the column of the ordered choice.
	// The inner key of ChoiceAltCnt is the number (one-based) of the matching alternative.
	// For each alternative the number of matches are counted. If an ordered choice does not
	// match, a special counter is incremented. The name of this counter is set with
	// the parser option Statistics.
	// For an alternative to be included in ChoiceAltCnt, it has to match at least once.
	ChoiceAltCnt map[string]map[string]int
}

type parser struct {
	filename string
	pt       savepoint
	cur      current

	data []byte
	errs *errList

	depth   int
	recover bool
	debug   bool

	memoize bool
	// memoization table for the packrat algorithm:
	// map[offset in source] map[expression or rule] {value, match}
	memo map[int]map[interface{}]resultTuple

	// rules table, maps the rule identifier to the rule node
	rules map[string]*rule
	// variables stack, map of label to value
	vstack []map[string]interface{}
	// rule stack, allows identification of the current rule in errors
	rstack []*rule

	// parse fail
	maxFailPos            position
	maxFailExpected       []string
	maxFailInvertExpected bool

	// max number of expressions to be parsed
	maxExprCnt uint64
	// entrypoint for the parser
	entrypoint string

	allowInvalidUTF8 bool

	*Stats

	choiceNoMatch string
	// recovery expression stack, keeps track of the currently available recovery expression, these are traversed in reverse
	recoveryStack []map[string]interface{}
}

// push a variable set on the vstack.
func (p *parser) pushV() {
	if cap(p.vstack) == len(p.vstack) {
		// create new empty slot in the stack
		p.vstack = append(p.vstack, nil)
	} else {
		// slice to 1 more
		p.vstack = p.vstack[:len(p.vstack)+1]
	}

	// get the last args set
	m := p.vstack[len(p.vstack)-1]
	if m != nil && len(m) == 0 {
		// empty map, all good
		return
	}

	m = make(map[string]interface{})
	p.vstack[len(p.vstack)-1] = m
}

// pop a variable set from the vstack.
func (p *parser) popV() {
	// if the map is not empty, clear it
	m := p.vstack[len(p.vstack)-1]
	if len(m) > 0 {
		// GC that map
		p.vstack[len(p.vstack)-1] = nil
	}
	p.vstack = p.vstack[:len(p.vstack)-1]
}

// push a recovery expression with its labels to the recoveryStack
func (p *parser) pushRecovery(labels []string, expr interface{}) {
	if cap(p.recoveryStack) == len(p.recoveryStack) {
		// create new empty slot in the stack
		p.recoveryStack = append(p.recoveryStack, nil)
	} else {
		// slice to 1 more
		p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)+1]
	}

	m := make(map[string]interface{}, len(labels))
	for _, fl := range labels {
		m[fl] = expr
	}
	p.recoveryStack[len(p.recoveryStack)-1] = m
}

// pop a recovery expression from the recoveryStack
func (p *parser) popRecovery() {
	// GC that map
	p.recoveryStack[len(p.recoveryStack)-1] = nil

	p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)-1]
}

func (p *parser) print(prefix, s string) string {
	if !p.debug {
		return s
	}

	fmt.Printf("%s %d:%d:%d: %s [%#U]\n",
		prefix, p.pt.line, p.pt.col, p.pt.offset, s, p.pt.rn)
	return s
}

func (p *parser) in(s string) string {
	p.depth++
	return p.print(strings.Repeat(" ", p.depth)+">", s)
}

func (p *parser) out(s string) string {
	p.depth--
	return p.print(strings.Repeat(" ", p.depth)+"<", s)
}

func (p *parser) addErr(err error) {
	p.addErrAt(err, p.pt.position, []string{})
}

func (p *parser) addErrAt(err error, pos position, expected []string) {
	var buf bytes.Buffer
	if p.filename != "" {
		buf.WriteString(p.filename)
	}
	if buf.Len() > 0 {
		buf.WriteString(":")
	}
	buf.WriteString(fmt.Sprintf("%d:%d (%d)", pos.line, pos.col, pos.offset))
	if len(p.rstack) > 0 {
		if buf.Len() > 0 {
			buf.WriteString(": ")
		}
		rule := p.rstack[len(p.rstack)-1]
		if rule.displayName != "" {
			buf.WriteString("rule " + rule.displayName)
		} else {
			buf.WriteString("rule " + rule.name)
		}
	}
	pe := &parserError{Inner: err, pos: pos, prefix: buf.String(), expected: expected}
	p.errs.add(pe)
}

func (p *parser) failAt(fail bool, pos position, want string) {
	// process fail if parsing fails and not inverted or parsing succeeds and invert is set
	if fail == p.maxFailInvertExpected {
		if pos.offset < p.maxFailPos.offset {
			return
		}

		if pos.offset > p.maxFailPos.offset {
			p.maxFailPos = pos
			p.maxFailExpected = p.maxFailExpected[:0]
		}

		if p.maxFailInvertExpected {
			want = "!" + want
		}
		p.maxFailExpected = append(p.maxFailExpected, want)
	}
}

// read advances the parser to the next rune.
func (p *parser) read() {
	p.pt.offset += p.pt.w
	rn, n := utf8.DecodeRune(p.data[p.pt.offset:])
	p.pt.rn = rn
	p.pt.w = n
	p.pt.col++
	if rn == '\n' {
		p.pt.line++
		p.pt.col = 0
	}

	if rn == utf8.RuneError && n == 1 { // see utf8.DecodeRune
		if !p.allowInvalidUTF8 {
			p.addErr(errInvalidEncoding)
		}
	}
}

// restore parser position to the savepoint pt.
func (p *parser) restore(pt savepoint) {
	if p.debug {
		defer p.out(p.in("restore"))
	}
	if pt.offset == p.pt.offset {
		return
	}
	p.pt = pt
}

// Cloner is implemented by any value that has a Clone method, which returns a
// copy of the value. This is mainly used for types which are not passed by
// value (e.g map, slice, chan) or structs that contain such types.
//
// This is used in conjunction with the global state feature to create proper
// copies of the state to allow the parser to properly restore the state in
// the case of backtracking.
type Cloner interface {
	Clone() interface{}
}

// clone and return parser current state.
func (p *parser) cloneState() storeDict {
	if p.debug {
		defer p.out(p.in("cloneState"))
	}

	state := make(storeDict, len(p.cur.state))
	for k, v := range p.cur.state {
		if c, ok := v.(Cloner); ok {
			state[k] = c.Clone()
		} else {
			state[k] = v
		}
	}
	return state
}

// restore parser current state to the state storeDict.
// every restoreState should applied only one time for every cloned state
func (p *parser) restoreState(state storeDict) {
	if p.debug {
		defer p.out(p.in("restoreState"))
	}
	p.cur.state = state
}

// get the slice of bytes from the savepoint start to the current position.
func (p *parser) sliceFrom(start savepoint) []byte {
	return p.data[start.position.offset:p.pt.position.offset]
}

func (p *parser) getMemoized(node interface{}) (resultTuple, bool) {
	if len(p.memo) == 0 {
		return resultTuple{}, false
	}
	m := p.memo[p.pt.offset]
	if len(m) == 0 {
		return resultTuple{}, false
	}
	res, ok := m[node]
	return res, ok
}

func (p *parser) setMemoized(pt savepoint, node interface{}, tuple resultTuple) {
	if p.memo == nil {
		p.memo = make(map[int]map[interface{}]resultTuple)
	}
	m := p.memo[pt.offset]
	if m == nil {
		m = make(map[interface{}]resultTuple)
		p.memo[pt.offset] = m
	}
	m[node] = tuple
}

func (p *parser) buildRulesTable(g *grammar) {
	p.rules = make(map[string]*rule, len(g.rules))
	for _, r := range g.rules {
		p.rules[r.name] = r
	}
}

func (p *parser) parse(g *grammar) (val interface{}, err error) {
	if len(g.rules) == 0 {
		p.addErr(errNoRule)
		return nil, p.errs.err()
	}

	// TODO : not super critical but this could be generated
	p.buildRulesTable(g)

	if p.recover {
		// panic can be used in action code to stop parsing immediately
		// and return the panic as an error.
		defer func() {
			if e := recover(); e != nil {
				if p.debug {
					defer p.out(p.in("panic handler"))
				}
				val = nil
				switch e := e.(type) {
				case error:
					p.addErr(e)
				default:
					p.addErr(fmt.Errorf("%v", e))
				}
				err = p.errs.err()
			}
		}()
	}

	startRule, ok := p.rules[p.entrypoint]
	if !ok {
		p.addErr(errInvalidEntrypoint)
		return nil, p.errs.err()
	}

	p.read() // advance to first rune
	val, ok = p.parseRule(startRule)
	if !ok {
		if len(*p.errs) == 0 {
			// If parsing fails, but no errors have been recorded, the expected values
			// for the farthest parser position are returned as error.
			maxFailExpectedMap := make(map[string]struct{}, len(p.maxFailExpected))
			for _, v := range p.maxFailExpected {
				maxFailExpectedMap[v] = struct{}{}
			}
			expected := make([]string, 0, len(maxFailExpectedMap))
			eof := false
			if _, ok := maxFailExpectedMap["!."]; ok {
				delete(maxFailExpectedMap, "!.")
				eof = true
			}
			for k := range maxFailExpectedMap {
				expected = append(expected, k)
			}
			sort.Strings(expected)
			if eof {
				expected = append(expected, "EOF")
			}
			p.addErrAt(errors.New("no match found, expected: "+listJoin(expected, ", ", "or")), p.maxFailPos, expected)
		}

		return nil, p.errs.err()
	}
	return val, p.errs.err()
}

func listJoin(list []string, sep string, lastSep string) string {
	switch len(list) {
	case 0:
		return ""
	case 1:
		return list[0]
	default:
		return fmt.Sprintf("%s %s %s", strings.Join(list[:len(list)-1], sep), lastSep, list[len(list)-1])
	}
}

func (p *parser) parseRule(rule *rule) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRule " + rule.name))
	}

	if p.memoize {
		res, ok := p.getMemoized(rule)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
	}

	start := p.pt
	p.rstack = append(p.rstack, rule)
	p.pushV()
	val, ok := p.parseExpr(rule.expr)
	p.popV()
	p.rstack = p.rstack[:len(p.rstack)-1]
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}

	if p.memoize {
		p.setMemoized(start, rule, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseExpr(expr interface{}) (interface{}, bool) {
	var pt savepoint

	if p.memoize {
		res, ok := p.getMemoized(expr)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
		pt = p.pt
	}

	p.ExprCnt++
	if p.ExprCnt > p.maxExprCnt {
		panic(errMaxExprCnt)
	}

	var val interface{}
	var ok bool
	switch expr := expr.(type) {
	case *actionExpr:
		val, ok = p.parseActionExpr(expr)
	case *andCodeExpr:
		val, ok = p.parseAndCodeExpr(expr)
	case *andExpr:
		val, ok = p.parseAndExpr(expr)
	case *anyMatcher:
		val, ok = p.parseAnyMatcher(expr)
	case *charClassMatcher:
		val, ok = p.parseCharClassMatcher(expr)
	case *choiceExpr:
		val, ok = p.parseChoiceExpr(expr)
	case *labeledExpr:
		val, ok = p.parseLabeledExpr(expr)
	case *litMatcher:
		val, ok = p.parseLitMatcher(expr)
	case *notCodeExpr:
		val, ok = p.parseNotCodeExpr(expr)
	case *notExpr:
		val, ok = p.parseNotExpr(expr)
	case *oneOrMoreExpr:
		val, ok = p.parseOneOrMoreExpr(expr)
	case *recoveryExpr:
		val, ok = p.parseRecoveryExpr(expr)
	case *ruleRefExpr:
		val, ok = p.parseRuleRefExpr(expr)
	case *seqExpr:
		val, ok = p.parseSeqExpr(expr)
	case *stateCodeExpr:
		val, ok = p.parseStateCodeExpr(expr)
	case *throwExpr:
		val, ok = p.parseThrowExpr(expr)
	case *zeroOrMoreExpr:
		val, ok = p.parseZeroOrMoreExpr(expr)
	case *zeroOrOneExpr:
		val, ok = p.parseZeroOrOneExpr(expr)
	default:
		panic(fmt.Sprintf("unknown expression type %T", expr))
	}
	if p.memoize {
		p.setMemoized(pt, expr, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseActionExpr(act *actionExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseActionExpr"))
	}

	start := p.pt
	val, ok := p.parseExpr(act.expr)
	if ok {
		p.cur.pos = start.position
		p.cur.text = p.sliceFrom(start)
		state := p.cloneState()
		actVal, err := act.run(p)
		if err != nil {
			p.addErrAt(err, start.position, []string{})
		}
		p.restoreState(state)

		val = actVal
	}
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}
	return val, ok
}

func (p *parser) parseAndCodeExpr(and *andCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndCodeExpr"))
	}

	state := p.cloneState()

	ok, err := and.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, ok
}

func (p *parser) parseAndExpr(and *andExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	_, ok := p.parseExpr(and.expr)
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, ok
}

func (p *parser) parseAnyMatcher(any *anyMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAnyMatcher"))
	}

	if p.pt.rn == utf8.RuneError && p.pt.w == 0 {
		// EOF - see utf8.DecodeRune
		p.failAt(false, p.pt.position, ".")
		return nil, false
	}
	start := p.pt
	p.read()
	p.failAt(true, start.position, ".")
	return p.sliceFrom(start), true
}

func (p *parser) parseCharClassMatcher(chr *charClassMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseCharClassMatcher"))
	}

	cur := p.pt.rn
	start := p.pt

	// can't match EOF
	if cur == utf8.RuneError && p.pt.w == 0 { // see utf8.DecodeRune
		p.failAt(false, start.position, chr.val)
		return nil, false
	}

	if chr.ignoreCase {
		cur = unicode.ToLower(cur)
	}

	// try to match in the list of available chars
	for _, rn := range chr.chars {
		if rn == cur {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of ranges
	for i := 0; i < len(chr.ranges); i += 2 {
		if cur >= chr.ranges[i] && cur <= chr.ranges[i+1] {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of Unicode classes
	for _, cl := range chr.classes {
		if unicode.Is(cl, cur) {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	if chr.inverted {
		p.read()
		p.failAt(true, start.position, chr.val)
		return p.sliceFrom(start), true
	}
	p.failAt(false, start.position, chr.val)
	return nil, false
}

func (p *parser) incChoiceAltCnt(ch *choiceExpr, altI int) {
	choiceIdent := fmt.Sprintf("%s %d:%d", p.rstack[len(p.rstack)-1].name, ch.pos.line, ch.pos.col)
	m := p.ChoiceAltCnt[choiceIdent]
	if m == nil {
		m = make(map[string]int)
		p.ChoiceAltCnt[choiceIdent] = m
	}
	// We increment altI by 1, so the keys do not start at 0
	alt := strconv.Itoa(altI + 1)
	if altI == choiceNoMatch {
		alt = p.choiceNoMatch
	}
	m[alt]++
}

func (p *parser) parseChoiceExpr(ch *choiceExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseChoiceExpr"))
	}

	for altI, alt := range ch.alternatives {
		// dummy assignment to prevent compile error if optimized
		_ = altI

		state := p.cloneState()

		p.pushV()
		val, ok := p.parseExpr(alt)
		p.popV()
		if ok {
			p.incChoiceAltCnt(ch, altI)
			return val, ok
		}
		p.restoreState(state)
	}
	p.incChoiceAltCnt(ch, choiceNoMatch)
	return nil, false
}

func (p *parser) parseLabeledExpr(lab *labeledExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLabeledExpr"))
	}

	p.pushV()
	val, ok := p.parseExpr(lab.expr)
	p.popV()
	if ok && lab.label != "" {
		m := p.vstack[len(p.vstack)-1]
		m[lab.label] = val
	}
	return val, ok
}

func (p *parser) parseLitMatcher(lit *litMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLitMatcher"))
	}

	ignoreCase := ""
	if lit.ignoreCase {
		ignoreCase = "i"
	}
	val := fmt.Sprintf("%q%s", lit.val, ignoreCase)
	start := p.pt
	for _, want := range lit.val {
		cur := p.pt.rn
		if lit.ignoreCase {
			cur = unicode.ToLower(cur)
		}
		if cur != want {
			p.failAt(false, start.position, val)
			p.restore(start)
			return nil, false
		}
		p.read()
	}
	p.failAt(true, start.position, val)
	return p.sliceFrom(start), true
}

func (p *parser) parseNotCodeExpr(not *notCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotCodeExpr"))
	}

	state := p.cloneState()

	ok, err := not.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, !ok
}

func (p *parser) parseNotExpr(not *notExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	_, ok := p.parseExpr(not.expr)
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, !ok
}

func (p *parser) parseOneOrMoreExpr(expr *oneOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseOneOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			if len(vals) == 0 {
				// did not match once, no match
				return nil, false
			}
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseRecoveryExpr(recover *recoveryExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRecoveryExpr (" + strings.Join(recover.failureLabel, ",") + ")"))
	}

	p.pushRecovery(recover.failureLabel, recover.recoverExpr)
	val, ok := p.parseExpr(recover.expr)
	p.popRecovery()

	return val, ok
}

func (p *parser) parseRuleRefExpr(ref *ruleRefExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRuleRefExpr " + ref.name))
	}

	if ref.name == "" {
		panic(fmt.Sprintf("%s: invalid rule: missing name", ref.pos))
	}

	rule := p.rules[ref.name]
	if rule == nil {
		p.addErr(fmt.Errorf("undefined rule: %s", ref.name))
		return nil, false
	}
	return p.parseRule(rule)
}

func (p *parser) parseSeqExpr(seq *seqExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseSeqExpr"))
	}

	vals := make([]interface{}, 0, len(seq.exprs))

	pt := p.pt
	state := p.cloneState()
	for _, expr := range seq.exprs {
		val, ok := p.parseExpr(expr)
		if !ok {
			p.restoreState(state)
			p.restore(pt)
			return nil, false
		}
		vals = append(vals, val)
	}
	return vals, true
}

func (p *parser) parseStateCodeExpr(state *stateCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseStateCodeExpr"))
	}

	err := state.run(p)
	if err != nil {
		p.addErr(err)
	}
	return nil, true
}

func (p *parser) parseThrowExpr(expr *throwExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseThrowExpr"))
	}

	for i := len(p.recoveryStack) - 1; i >= 0; i-- {
		if recoverExpr, ok := p.recoveryStack[i][expr.label]; ok {
			if val, ok := p.parseExpr(recoverExpr); ok {
				return val, ok
			}
		}
	}

	return nil, false
}

func (p *parser) parseZeroOrMoreExpr(expr *zeroOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseZeroOrOneExpr(expr *zeroOrOneExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrOneExpr"))
	}

	p.pushV()
	val, _ := p.parseExpr(expr.expr)
	p.popV()
	// whether it matched or not, consider it a match
	return val, true
}
