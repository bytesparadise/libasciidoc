// Code generated by pigeon; DO NOT EDIT.

package parser

import (
	"bytes"
	"errors"
	"fmt"
	"io"
	"io/ioutil"
	"math"
	"os"
	"sort"
	"strconv"
	"strings"
	"unicode"
	"unicode/utf8"

	"github.com/bytesparadise/libasciidoc/pkg/types"
)

// *****************************************************************************************
// This file is generated after its sibling `asciidoc-grammar.peg` file. DO NOT MODIFY !
// *****************************************************************************************

var g = &grammar{
	rules: []*rule{
		{
			name: "Document",
			pos:  position{line: 18, col: 1, offset: 504},
			expr: &actionExpr{
				pos: position{line: 18, col: 13, offset: 516},
				run: (*parser).callonDocument1,
				expr: &seqExpr{
					pos: position{line: 18, col: 13, offset: 516},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 18, col: 13, offset: 516},
							label: "frontMatter",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 26, offset: 529},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 26, offset: 529},
									name: "FrontMatter",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 40, offset: 543},
							label: "documentHeader",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 56, offset: 559},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 56, offset: 559},
									name: "DocumentHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 73, offset: 576},
							label: "blocks",
							expr: &zeroOrMoreExpr{
								pos: position{line: 18, col: 80, offset: 583},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 81, offset: 584},
									name: "DocumentBlock",
								},
							},
						},
						&notExpr{
							pos: position{line: 1159, col: 8, offset: 46832},
							expr: &anyMatcher{
								line: 1159, col: 9, offset: 46833,
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentBlock",
			pos:  position{line: 22, col: 1, offset: 688},
			expr: &actionExpr{
				pos: position{line: 22, col: 18, offset: 705},
				run: (*parser).callonDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 22, col: 18, offset: 705},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 22, col: 18, offset: 705},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 22, col: 29, offset: 716},
								expr: &actionExpr{
									pos: position{line: 151, col: 21, offset: 5356},
									run: (*parser).callonDocumentBlock5,
									expr: &seqExpr{
										pos: position{line: 151, col: 21, offset: 5356},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 151, col: 21, offset: 5356},
												expr: &charClassMatcher{
													pos:        position{line: 151, col: 23, offset: 5358},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 152, col: 5, offset: 5446},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 152, col: 11, offset: 5452},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 161, col: 14, offset: 5913},
															run: (*parser).callonDocumentBlock11,
															expr: &seqExpr{
																pos: position{line: 161, col: 14, offset: 5913},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 161, col: 14, offset: 5913},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 161, col: 19, offset: 5918},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonDocumentBlock15,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonDocumentBlock25,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 161, col: 27, offset: 5926},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 163, col: 5, offset: 5980},
															run: (*parser).callonDocumentBlock39,
															expr: &seqExpr{
																pos: position{line: 163, col: 5, offset: 5980},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 163, col: 5, offset: 5980},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 163, col: 10, offset: 5985},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonDocumentBlock43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonDocumentBlock53,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 163, col: 18, offset: 5993},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 173, col: 17, offset: 6296},
															run: (*parser).callonDocumentBlock67,
															expr: &seqExpr{
																pos: position{line: 173, col: 17, offset: 6296},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 173, col: 17, offset: 6296},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 173, col: 21, offset: 6300},
																		expr: &litMatcher{
																			pos:        position{line: 173, col: 22, offset: 6301},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 173, col: 26, offset: 6305},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonDocumentBlock75,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 173, col: 30, offset: 6309},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 173, col: 37, offset: 6316},
																			run: (*parser).callonDocumentBlock78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 173, col: 37, offset: 6316},
																				expr: &seqExpr{
																					pos: position{line: 173, col: 38, offset: 6317},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 173, col: 38, offset: 6317},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 173, col: 47, offset: 6326,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 16, offset: 6537},
															run: (*parser).callonDocumentBlock86,
															expr: &seqExpr{
																pos: position{line: 181, col: 16, offset: 6537},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 16, offset: 6537},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 21, offset: 6542},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonDocumentBlock92,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 25, offset: 6546},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 181, col: 31, offset: 6552},
																			run: (*parser).callonDocumentBlock95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 181, col: 31, offset: 6552},
																				expr: &seqExpr{
																					pos: position{line: 181, col: 32, offset: 6553},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 181, col: 32, offset: 6553},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 181, col: 41, offset: 6562},
																							expr: &litMatcher{
																								pos:        position{line: 181, col: 42, offset: 6563},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 181, col: 46, offset: 6567,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 183, col: 8, offset: 6615},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 193, col: 21, offset: 6978},
															run: (*parser).callonDocumentBlock106,
															expr: &litMatcher{
																pos:        position{line: 193, col: 21, offset: 6978},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 195, col: 5, offset: 7036},
															run: (*parser).callonDocumentBlock108,
															expr: &seqExpr{
																pos: position{line: 195, col: 5, offset: 7036},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 195, col: 5, offset: 7036},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 195, col: 16, offset: 7047},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 195, col: 26, offset: 7057},
																			run: (*parser).callonDocumentBlock112,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 195, col: 26, offset: 7057},
																				expr: &seqExpr{
																					pos: position{line: 195, col: 27, offset: 7058},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 195, col: 27, offset: 7058},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 195, col: 36, offset: 7067},
																							expr: &litMatcher{
																								pos:        position{line: 195, col: 37, offset: 7068},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 195, col: 41, offset: 7072,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 197, col: 7, offset: 7119},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 224, col: 20, offset: 7961},
															run: (*parser).callonDocumentBlock123,
															expr: &seqExpr{
																pos: position{line: 224, col: 20, offset: 7961},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 224, col: 20, offset: 7961},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 24, offset: 7965},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonDocumentBlock127,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 224, col: 41, offset: 7982},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonDocumentBlock132,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 45, offset: 7986},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 49, offset: 7990},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonDocumentBlock136,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 70, offset: 8011},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 74, offset: 8015},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 267, col: 15, offset: 9332},
																			run: (*parser).callonDocumentBlock152,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 267, col: 15, offset: 9332},
																				expr: &seqExpr{
																					pos: position{line: 267, col: 16, offset: 9333},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 267, col: 16, offset: 9333},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 21, offset: 9338},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 22, offset: 9339},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 26, offset: 9343},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 27, offset: 9344},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 267, col: 31, offset: 9348,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 93, offset: 8034},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 228, col: 5, offset: 8177},
															run: (*parser).callonDocumentBlock167,
															expr: &seqExpr{
																pos: position{line: 228, col: 5, offset: 8177},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 228, col: 5, offset: 8177},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 9, offset: 8181},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonDocumentBlock171,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 228, col: 26, offset: 8198},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonDocumentBlock176,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 30, offset: 8202},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 34, offset: 8206},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonDocumentBlock180,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 55, offset: 8227},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 232, col: 5, offset: 8358},
															run: (*parser).callonDocumentBlock195,
															expr: &seqExpr{
																pos: position{line: 232, col: 5, offset: 8358},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 232, col: 5, offset: 8358},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 232, col: 9, offset: 8362},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonDocumentBlock199,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 232, col: 26, offset: 8379},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonDocumentBlock204,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 232, col: 30, offset: 8383},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 240, col: 20, offset: 8534},
															run: (*parser).callonDocumentBlock207,
															expr: &seqExpr{
																pos: position{line: 240, col: 20, offset: 8534},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 240, col: 20, offset: 8534},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 240, col: 31, offset: 8545},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 240, col: 31, offset: 8545},
																					run: (*parser).callonDocumentBlock211,
																					expr: &seqExpr{
																						pos: position{line: 240, col: 31, offset: 8545},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 240, col: 31, offset: 8545},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 35, offset: 8549},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonDocumentBlock215,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 240, col: 52, offset: 8566},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonDocumentBlock220,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 56, offset: 8570},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 60, offset: 8574},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonDocumentBlock224,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 81, offset: 8595},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 85, offset: 8599},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 267, col: 15, offset: 9332},
																									run: (*parser).callonDocumentBlock240,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 267, col: 15, offset: 9332},
																										expr: &seqExpr{
																											pos: position{line: 267, col: 16, offset: 9333},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 267, col: 16, offset: 9333},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 21, offset: 9338},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 22, offset: 9339},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 26, offset: 9343},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 27, offset: 9344},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 267, col: 31, offset: 9348,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 104, offset: 8618},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 244, col: 9, offset: 8777},
																					run: (*parser).callonDocumentBlock255,
																					expr: &seqExpr{
																						pos: position{line: 244, col: 9, offset: 8777},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 244, col: 9, offset: 8777},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 13, offset: 8781},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonDocumentBlock259,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 244, col: 30, offset: 8798},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonDocumentBlock264,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 34, offset: 8802},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 38, offset: 8806},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonDocumentBlock268,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 59, offset: 8827},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 248, col: 9, offset: 8974},
																					run: (*parser).callonDocumentBlock283,
																					expr: &seqExpr{
																						pos: position{line: 248, col: 9, offset: 8974},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 248, col: 9, offset: 8974},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 248, col: 13, offset: 8978},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonDocumentBlock287,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 248, col: 30, offset: 8995},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonDocumentBlock292,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 248, col: 34, offset: 8999},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 252, col: 5, offset: 9091},
																		run: (*parser).callonDocumentBlock295,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 188, col: 30, offset: 6780},
															run: (*parser).callonDocumentBlock296,
															expr: &seqExpr{
																pos: position{line: 188, col: 30, offset: 6780},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 188, col: 30, offset: 6780},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 188, col: 34, offset: 6784},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 537, col: 19, offset: 20206},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 537, col: 19, offset: 20206},
																					run: (*parser).callonDocumentBlock301,
																					expr: &litMatcher{
																						pos:        position{line: 537, col: 19, offset: 20206},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 539, col: 5, offset: 20244},
																					run: (*parser).callonDocumentBlock303,
																					expr: &litMatcher{
																						pos:        position{line: 539, col: 5, offset: 20244},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 541, col: 5, offset: 20284},
																					run: (*parser).callonDocumentBlock305,
																					expr: &litMatcher{
																						pos:        position{line: 541, col: 5, offset: 20284},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 543, col: 5, offset: 20334},
																					run: (*parser).callonDocumentBlock307,
																					expr: &litMatcher{
																						pos:        position{line: 543, col: 5, offset: 20334},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 545, col: 5, offset: 20380},
																					run: (*parser).callonDocumentBlock309,
																					expr: &litMatcher{
																						pos:        position{line: 545, col: 5, offset: 20380},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 188, col: 53, offset: 6803},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 220, col: 21, offset: 7858},
															run: (*parser).callonDocumentBlock312,
															expr: &litMatcher{
																pos:        position{line: 220, col: 21, offset: 7858},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 202, col: 19, offset: 7270},
															run: (*parser).callonDocumentBlock314,
															expr: &seqExpr{
																pos: position{line: 202, col: 19, offset: 7270},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 202, col: 19, offset: 7270},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 202, col: 23, offset: 7274},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonDocumentBlock320,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 202, col: 27, offset: 7278},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 202, col: 38, offset: 7289},
																			expr: &choiceExpr{
																				pos: position{line: 206, col: 21, offset: 7402},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						run: (*parser).callonDocumentBlock325,
																						expr: &seqExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 206, col: 21, offset: 7402},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonDocumentBlock328,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonDocumentBlock331,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonDocumentBlock334,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonDocumentBlock337,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 206, col: 40, offset: 7421},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 206, col: 44, offset: 7425},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 216, col: 19, offset: 7776},
																										run: (*parser).callonDocumentBlock351,
																										expr: &labeledExpr{
																											pos:   position{line: 216, col: 19, offset: 7776},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 216, col: 25, offset: 7782},
																												expr: &seqExpr{
																													pos: position{line: 216, col: 26, offset: 7783},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 216, col: 26, offset: 7783},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 27, offset: 7784},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 31, offset: 7788},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 32, offset: 7789},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 36, offset: 7793},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 37, offset: 7794},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 216, col: 41, offset: 7798,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 206, col: 67, offset: 7448},
																									expr: &litMatcher{
																										pos:        position{line: 206, col: 67, offset: 7448},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 206, col: 72, offset: 7453},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonDocumentBlock367,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						run: (*parser).callonDocumentBlock369,
																						expr: &seqExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 208, col: 5, offset: 7537},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonDocumentBlock372,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonDocumentBlock375,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonDocumentBlock378,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonDocumentBlock381,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 208, col: 24, offset: 7556},
																									expr: &litMatcher{
																										pos:        position{line: 208, col: 24, offset: 7556},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 208, col: 29, offset: 7561},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonDocumentBlock398,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 202, col: 59, offset: 7310},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 152, col: 170, offset: 5611},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonDocumentBlock404,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 23, col: 3, offset: 739},
							label: "block",
							expr: &choiceExpr{
								pos: position{line: 23, col: 10, offset: 746},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 23, col: 10, offset: 746},
										name: "Section",
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 20, offset: 756},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 30, col: 1, offset: 957},
			expr: &ruleRefExpr{
				pos:  position{line: 30, col: 16, offset: 972},
				name: "YamlFrontMatter",
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 32, col: 1, offset: 990},
			expr: &actionExpr{
				pos: position{line: 32, col: 16, offset: 1005},
				run: (*parser).callonFrontMatter1,
				expr: &seqExpr{
					pos: position{line: 32, col: 16, offset: 1005},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1164},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 32, col: 37, offset: 1026},
							label: "content",
							expr: &actionExpr{
								pos: position{line: 38, col: 27, offset: 1201},
								run: (*parser).callonFrontMatter10,
								expr: &zeroOrMoreExpr{
									pos: position{line: 38, col: 27, offset: 1201},
									expr: &seqExpr{
										pos: position{line: 38, col: 28, offset: 1202},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 38, col: 28, offset: 1202},
												expr: &seqExpr{
													pos: position{line: 36, col: 26, offset: 1164},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 36, col: 26, offset: 1164},
															val:        "---",
															ignoreCase: false,
														},
														&choiceExpr{
															pos: position{line: 1161, col: 8, offset: 46843},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1157, col: 12, offset: 46803},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1157, col: 21, offset: 46812},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1159, col: 8, offset: 46832},
																	expr: &anyMatcher{
																		line: 1159, col: 9, offset: 46833,
																	},
																},
															},
														},
													},
												},
											},
											&anyMatcher{
												line: 38, col: 50, offset: 1224,
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1164},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentHeader",
			pos:  position{line: 46, col: 1, offset: 1448},
			expr: &actionExpr{
				pos: position{line: 46, col: 19, offset: 1466},
				run: (*parser).callonDocumentHeader1,
				expr: &seqExpr{
					pos: position{line: 46, col: 19, offset: 1466},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 46, col: 19, offset: 1466},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 46, col: 27, offset: 1474},
								name: "Section0TitleWithAttributes",
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 56, offset: 1503},
							label: "authors",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 65, offset: 1512},
								expr: &choiceExpr{
									pos: position{line: 50, col: 20, offset: 1726},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 52, col: 30, offset: 1813},
											run: (*parser).callonDocumentHeader8,
											expr: &seqExpr{
												pos: position{line: 52, col: 30, offset: 1813},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 52, col: 30, offset: 1813},
														expr: &choiceExpr{
															pos: position{line: 1153, col: 7, offset: 46741},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1153, col: 7, offset: 46741},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1153, col: 13, offset: 46747},
																	run: (*parser).callonDocumentHeader13,
																	expr: &litMatcher{
																		pos:        position{line: 1153, col: 13, offset: 46747},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 52, col: 34, offset: 1817},
														expr: &litMatcher{
															pos:        position{line: 52, col: 35, offset: 1818},
															val:        ":",
															ignoreCase: false,
														},
													},
													&labeledExpr{
														pos:   position{line: 52, col: 39, offset: 1822},
														label: "authors",
														expr: &oneOrMoreExpr{
															pos: position{line: 52, col: 48, offset: 1831},
															expr: &actionExpr{
																pos: position{line: 60, col: 19, offset: 2082},
																run: (*parser).callonDocumentHeader19,
																expr: &seqExpr{
																	pos: position{line: 60, col: 19, offset: 2082},
																	exprs: []interface{}{
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 19, offset: 2082},
																			expr: &choiceExpr{
																				pos: position{line: 1153, col: 7, offset: 46741},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1153, col: 7, offset: 46741},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1153, col: 13, offset: 46747},
																						run: (*parser).callonDocumentHeader24,
																						expr: &litMatcher{
																							pos:        position{line: 1153, col: 13, offset: 46747},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 23, offset: 2086},
																			label: "namePart1",
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2422},
																				run: (*parser).callonDocumentHeader27,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2422},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2423},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2427},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2428},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2432},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2433},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2433},
																										expr: &choiceExpr{
																											pos: position{line: 1157, col: 12, offset: 46803},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1157, col: 12, offset: 46803},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1157, col: 21, offset: 46812},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2442},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentHeader42,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2446,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2450},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonDocumentHeader48,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 58, offset: 2121},
																			label: "namePart2",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 68, offset: 2131},
																				expr: &actionExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					run: (*parser).callonDocumentHeader52,
																					expr: &seqExpr{
																						pos: position{line: 65, col: 27, offset: 2422},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 65, col: 27, offset: 2422},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 28, offset: 2423},
																									val:        "<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 65, col: 32, offset: 2427},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 33, offset: 2428},
																									val:        ";",
																									ignoreCase: false,
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 65, col: 37, offset: 2432},
																								expr: &seqExpr{
																									pos: position{line: 65, col: 38, offset: 2433},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 65, col: 38, offset: 2433},
																											expr: &choiceExpr{
																												pos: position{line: 1157, col: 12, offset: 46803},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1157, col: 12, offset: 46803},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1157, col: 21, offset: 46812},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 65, col: 47, offset: 2442},
																											expr: &choiceExpr{
																												pos: position{line: 1153, col: 7, offset: 46741},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1153, col: 7, offset: 46741},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1153, col: 13, offset: 46747},
																														run: (*parser).callonDocumentHeader67,
																														expr: &litMatcher{
																															pos:        position{line: 1153, col: 13, offset: 46747},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 65, col: 51, offset: 2446,
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 65, col: 55, offset: 2450},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonDocumentHeader73,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 94, offset: 2157},
																			label: "namePart3",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 104, offset: 2167},
																				expr: &actionExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					run: (*parser).callonDocumentHeader77,
																					expr: &seqExpr{
																						pos: position{line: 65, col: 27, offset: 2422},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 65, col: 27, offset: 2422},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 28, offset: 2423},
																									val:        "<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 65, col: 32, offset: 2427},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 33, offset: 2428},
																									val:        ";",
																									ignoreCase: false,
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 65, col: 37, offset: 2432},
																								expr: &seqExpr{
																									pos: position{line: 65, col: 38, offset: 2433},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 65, col: 38, offset: 2433},
																											expr: &choiceExpr{
																												pos: position{line: 1157, col: 12, offset: 46803},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1157, col: 12, offset: 46803},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1157, col: 21, offset: 46812},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 65, col: 47, offset: 2442},
																											expr: &choiceExpr{
																												pos: position{line: 1153, col: 7, offset: 46741},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1153, col: 7, offset: 46741},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1153, col: 13, offset: 46747},
																														run: (*parser).callonDocumentHeader92,
																														expr: &litMatcher{
																															pos:        position{line: 1153, col: 13, offset: 46747},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 65, col: 51, offset: 2446,
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 65, col: 55, offset: 2450},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonDocumentHeader98,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 130, offset: 2193},
																			label: "email",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 136, offset: 2199},
																				expr: &actionExpr{
																					pos: position{line: 69, col: 24, offset: 2513},
																					run: (*parser).callonDocumentHeader102,
																					expr: &seqExpr{
																						pos: position{line: 69, col: 24, offset: 2513},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 69, col: 24, offset: 2513},
																								val:        "<",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 69, col: 28, offset: 2517},
																								label: "email",
																								expr: &oneOrMoreExpr{
																									pos: position{line: 69, col: 34, offset: 2523},
																									expr: &seqExpr{
																										pos: position{line: 69, col: 35, offset: 2524},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 69, col: 35, offset: 2524},
																												expr: &litMatcher{
																													pos:        position{line: 69, col: 36, offset: 2525},
																													val:        ">",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 69, col: 40, offset: 2529},
																												expr: &choiceExpr{
																													pos: position{line: 1161, col: 8, offset: 46843},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1157, col: 12, offset: 46803},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1157, col: 21, offset: 46812},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 1159, col: 8, offset: 46832},
																															expr: &anyMatcher{
																																line: 1159, col: 9, offset: 46833,
																															},
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 69, col: 45, offset: 2534,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 69, col: 49, offset: 2538},
																								val:        ">",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 159, offset: 2222},
																			expr: &choiceExpr{
																				pos: position{line: 1153, col: 7, offset: 46741},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1153, col: 7, offset: 46741},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1153, col: 13, offset: 46747},
																						run: (*parser).callonDocumentHeader121,
																						expr: &litMatcher{
																							pos:        position{line: 1153, col: 13, offset: 46747},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 60, col: 163, offset: 2226},
																			expr: &litMatcher{
																				pos:        position{line: 60, col: 163, offset: 2226},
																				val:        ";",
																				ignoreCase: false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 168, offset: 2231},
																			expr: &choiceExpr{
																				pos: position{line: 1153, col: 7, offset: 46741},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1153, col: 7, offset: 46741},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1153, col: 13, offset: 46747},
																						run: (*parser).callonDocumentHeader128,
																						expr: &litMatcher{
																							pos:        position{line: 1153, col: 13, offset: 46747},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1161, col: 8, offset: 46843},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1157, col: 12, offset: 46803},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1157, col: 21, offset: 46812},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1159, col: 8, offset: 46832},
																expr: &anyMatcher{
																	line: 1159, col: 9, offset: 46833,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 56, col: 33, offset: 1950},
											run: (*parser).callonDocumentHeader135,
											expr: &seqExpr{
												pos: position{line: 56, col: 33, offset: 1950},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 56, col: 33, offset: 1950},
														expr: &choiceExpr{
															pos: position{line: 1153, col: 7, offset: 46741},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1153, col: 7, offset: 46741},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1153, col: 13, offset: 46747},
																	run: (*parser).callonDocumentHeader140,
																	expr: &litMatcher{
																		pos:        position{line: 1153, col: 13, offset: 46747},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 56, col: 37, offset: 1954},
														val:        ":author:",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 56, col: 48, offset: 1965},
														label: "author",
														expr: &actionExpr{
															pos: position{line: 60, col: 19, offset: 2082},
															run: (*parser).callonDocumentHeader144,
															expr: &seqExpr{
																pos: position{line: 60, col: 19, offset: 2082},
																exprs: []interface{}{
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 19, offset: 2082},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonDocumentHeader149,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 23, offset: 2086},
																		label: "namePart1",
																		expr: &actionExpr{
																			pos: position{line: 65, col: 27, offset: 2422},
																			run: (*parser).callonDocumentHeader152,
																			expr: &seqExpr{
																				pos: position{line: 65, col: 27, offset: 2422},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 65, col: 27, offset: 2422},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 28, offset: 2423},
																							val:        "<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 65, col: 32, offset: 2427},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 33, offset: 2428},
																							val:        ";",
																							ignoreCase: false,
																						},
																					},
																					&oneOrMoreExpr{
																						pos: position{line: 65, col: 37, offset: 2432},
																						expr: &seqExpr{
																							pos: position{line: 65, col: 38, offset: 2433},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 65, col: 38, offset: 2433},
																									expr: &choiceExpr{
																										pos: position{line: 1157, col: 12, offset: 46803},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1157, col: 12, offset: 46803},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1157, col: 21, offset: 46812},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 65, col: 47, offset: 2442},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonDocumentHeader167,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 65, col: 51, offset: 2446,
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 65, col: 55, offset: 2450},
																						expr: &choiceExpr{
																							pos: position{line: 1153, col: 7, offset: 46741},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1153, col: 7, offset: 46741},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1153, col: 13, offset: 46747},
																									run: (*parser).callonDocumentHeader173,
																									expr: &litMatcher{
																										pos:        position{line: 1153, col: 13, offset: 46747},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 58, offset: 2121},
																		label: "namePart2",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 68, offset: 2131},
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2422},
																				run: (*parser).callonDocumentHeader52,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2422},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2423},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2427},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2428},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2432},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2433},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2433},
																										expr: &choiceExpr{
																											pos: position{line: 1157, col: 12, offset: 46803},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1157, col: 12, offset: 46803},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1157, col: 21, offset: 46812},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2442},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentHeader67,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2446,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2450},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonDocumentHeader73,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 94, offset: 2157},
																		label: "namePart3",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 104, offset: 2167},
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2422},
																				run: (*parser).callonDocumentHeader77,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2422},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2422},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2423},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2427},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2428},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2432},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2433},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2433},
																										expr: &choiceExpr{
																											pos: position{line: 1157, col: 12, offset: 46803},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1157, col: 12, offset: 46803},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1157, col: 21, offset: 46812},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2442},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentHeader92,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2446,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2450},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonDocumentHeader98,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 130, offset: 2193},
																		label: "email",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 136, offset: 2199},
																			expr: &actionExpr{
																				pos: position{line: 69, col: 24, offset: 2513},
																				run: (*parser).callonDocumentHeader102,
																				expr: &seqExpr{
																					pos: position{line: 69, col: 24, offset: 2513},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 69, col: 24, offset: 2513},
																							val:        "<",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 69, col: 28, offset: 2517},
																							label: "email",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 69, col: 34, offset: 2523},
																								expr: &seqExpr{
																									pos: position{line: 69, col: 35, offset: 2524},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 69, col: 35, offset: 2524},
																											expr: &litMatcher{
																												pos:        position{line: 69, col: 36, offset: 2525},
																												val:        ">",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 69, col: 40, offset: 2529},
																											expr: &choiceExpr{
																												pos: position{line: 1161, col: 8, offset: 46843},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1157, col: 12, offset: 46803},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1157, col: 21, offset: 46812},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1159, col: 8, offset: 46832},
																														expr: &anyMatcher{
																															line: 1159, col: 9, offset: 46833,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 69, col: 45, offset: 2534,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 69, col: 49, offset: 2538},
																							val:        ">",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 159, offset: 2222},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonDocumentHeader246,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&zeroOrOneExpr{
																		pos: position{line: 60, col: 163, offset: 2226},
																		expr: &litMatcher{
																			pos:        position{line: 60, col: 163, offset: 2226},
																			val:        ";",
																			ignoreCase: false,
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 168, offset: 2231},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonDocumentHeader253,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 83, offset: 1530},
							label: "revision",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 93, offset: 1540},
								expr: &actionExpr{
									pos: position{line: 75, col: 21, offset: 2728},
									run: (*parser).callonDocumentHeader257,
									expr: &seqExpr{
										pos: position{line: 75, col: 21, offset: 2728},
										exprs: []interface{}{
											&zeroOrMoreExpr{
												pos: position{line: 75, col: 21, offset: 2728},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonDocumentHeader262,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 75, col: 25, offset: 2732},
												expr: &litMatcher{
													pos:        position{line: 75, col: 26, offset: 2733},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 30, offset: 2737},
												label: "revnumber",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 40, offset: 2747},
													expr: &choiceExpr{
														pos: position{line: 80, col: 27, offset: 3050},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 80, col: 27, offset: 3050},
																run: (*parser).callonDocumentHeader269,
																expr: &seqExpr{
																	pos: position{line: 80, col: 27, offset: 3050},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 80, col: 27, offset: 3050},
																			val:        "v",
																			ignoreCase: true,
																		},
																		&actionExpr{
																			pos: position{line: 1149, col: 10, offset: 46693},
																			run: (*parser).callonDocumentHeader272,
																			expr: &charClassMatcher{
																				pos:        position{line: 1149, col: 10, offset: 46693},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 80, col: 39, offset: 3062},
																			expr: &seqExpr{
																				pos: position{line: 80, col: 40, offset: 3063},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 80, col: 40, offset: 3063},
																						expr: &choiceExpr{
																							pos: position{line: 1161, col: 8, offset: 46843},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1157, col: 12, offset: 46803},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1157, col: 21, offset: 46812},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1159, col: 8, offset: 46832},
																									expr: &anyMatcher{
																										line: 1159, col: 9, offset: 46833,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 80, col: 45, offset: 3068},
																						expr: &litMatcher{
																							pos:        position{line: 80, col: 46, offset: 3069},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 80, col: 50, offset: 3073},
																						expr: &litMatcher{
																							pos:        position{line: 80, col: 51, offset: 3074},
																							val:        ":",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 80, col: 55, offset: 3078,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 82, col: 5, offset: 3119},
																run: (*parser).callonDocumentHeader287,
																expr: &seqExpr{
																	pos: position{line: 82, col: 5, offset: 3119},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 82, col: 5, offset: 3119},
																			expr: &litMatcher{
																				pos:        position{line: 82, col: 5, offset: 3119},
																				val:        "v",
																				ignoreCase: true,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1149, col: 10, offset: 46693},
																			run: (*parser).callonDocumentHeader291,
																			expr: &charClassMatcher{
																				pos:        position{line: 1149, col: 10, offset: 46693},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 82, col: 18, offset: 3132},
																			expr: &seqExpr{
																				pos: position{line: 82, col: 19, offset: 3133},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 82, col: 19, offset: 3133},
																						expr: &choiceExpr{
																							pos: position{line: 1161, col: 8, offset: 46843},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1157, col: 12, offset: 46803},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1157, col: 21, offset: 46812},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1159, col: 8, offset: 46832},
																									expr: &anyMatcher{
																										line: 1159, col: 9, offset: 46833,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 82, col: 24, offset: 3138},
																						expr: &litMatcher{
																							pos:        position{line: 82, col: 25, offset: 3139},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 82, col: 29, offset: 3143},
																						expr: &litMatcher{
																							pos:        position{line: 82, col: 30, offset: 3144},
																							val:        ":",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 82, col: 34, offset: 3148,
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 82, col: 38, offset: 3152},
																			expr: &choiceExpr{
																				pos: position{line: 1153, col: 7, offset: 46741},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1153, col: 7, offset: 46741},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1153, col: 13, offset: 46747},
																						run: (*parser).callonDocumentHeader309,
																						expr: &litMatcher{
																							pos:        position{line: 1153, col: 13, offset: 46747},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&andExpr{
																			pos: position{line: 82, col: 42, offset: 3156},
																			expr: &litMatcher{
																				pos:        position{line: 82, col: 43, offset: 3157},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 75, col: 66, offset: 2773},
												expr: &litMatcher{
													pos:        position{line: 75, col: 66, offset: 2773},
													val:        ",",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 71, offset: 2778},
												label: "revdate",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 79, offset: 2786},
													expr: &actionExpr{
														pos: position{line: 86, col: 25, offset: 3221},
														run: (*parser).callonDocumentHeader317,
														expr: &zeroOrMoreExpr{
															pos: position{line: 86, col: 25, offset: 3221},
															expr: &seqExpr{
																pos: position{line: 86, col: 26, offset: 3222},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 86, col: 26, offset: 3222},
																		expr: &choiceExpr{
																			pos: position{line: 1161, col: 8, offset: 46843},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1159, col: 8, offset: 46832},
																					expr: &anyMatcher{
																						line: 1159, col: 9, offset: 46833,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 86, col: 31, offset: 3227},
																		expr: &litMatcher{
																			pos:        position{line: 86, col: 32, offset: 3228},
																			val:        ":",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 86, col: 36, offset: 3232,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 75, col: 103, offset: 2810},
												expr: &litMatcher{
													pos:        position{line: 75, col: 103, offset: 2810},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 108, offset: 2815},
												label: "revremark",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 118, offset: 2825},
													expr: &actionExpr{
														pos: position{line: 90, col: 27, offset: 3298},
														run: (*parser).callonDocumentHeader333,
														expr: &zeroOrMoreExpr{
															pos: position{line: 90, col: 27, offset: 3298},
															expr: &seqExpr{
																pos: position{line: 90, col: 28, offset: 3299},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 90, col: 28, offset: 3299},
																		expr: &choiceExpr{
																			pos: position{line: 1161, col: 8, offset: 46843},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1159, col: 8, offset: 46832},
																					expr: &anyMatcher{
																						line: 1159, col: 9, offset: 46833,
																					},
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 90, col: 33, offset: 3304,
																	},
																},
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 112, offset: 1559},
							label: "otherAttributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 46, col: 129, offset: 1576},
								expr: &choiceExpr{
									pos: position{line: 97, col: 33, offset: 3491},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 97, col: 33, offset: 3491},
											run: (*parser).callonDocumentHeader351,
											expr: &seqExpr{
												pos: position{line: 97, col: 33, offset: 3491},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 97, col: 33, offset: 3491},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 97, col: 37, offset: 3495},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															run: (*parser).callonDocumentHeader355,
															expr: &seqExpr{
																pos: position{line: 116, col: 26, offset: 4341},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 116, col: 27, offset: 4342},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 116, col: 56, offset: 4371},
																		expr: &charClassMatcher{
																			pos:        position{line: 116, col: 57, offset: 4372},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 97, col: 66, offset: 3524},
														val:        ":",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 97, col: 70, offset: 3528},
														expr: &choiceExpr{
															pos: position{line: 1153, col: 7, offset: 46741},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1153, col: 7, offset: 46741},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1153, col: 13, offset: 46747},
																	run: (*parser).callonDocumentHeader364,
																	expr: &litMatcher{
																		pos:        position{line: 1153, col: 13, offset: 46747},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1161, col: 8, offset: 46843},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1157, col: 12, offset: 46803},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1157, col: 21, offset: 46812},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1159, col: 8, offset: 46832},
																expr: &anyMatcher{
																	line: 1159, col: 9, offset: 46833,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 99, col: 5, offset: 3611},
											run: (*parser).callonDocumentHeader371,
											expr: &seqExpr{
												pos: position{line: 99, col: 5, offset: 3611},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 99, col: 5, offset: 3611},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 99, col: 9, offset: 3615},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															run: (*parser).callonDocumentHeader375,
															expr: &seqExpr{
																pos: position{line: 116, col: 26, offset: 4341},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 116, col: 27, offset: 4342},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 116, col: 56, offset: 4371},
																		expr: &charClassMatcher{
																			pos:        position{line: 116, col: 57, offset: 4372},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 99, col: 38, offset: 3644},
														val:        ":",
														ignoreCase: false,
													},
													&oneOrMoreExpr{
														pos: position{line: 99, col: 42, offset: 3648},
														expr: &choiceExpr{
															pos: position{line: 1153, col: 7, offset: 46741},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1153, col: 7, offset: 46741},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1153, col: 13, offset: 46747},
																	run: (*parser).callonDocumentHeader384,
																	expr: &litMatcher{
																		pos:        position{line: 1153, col: 13, offset: 46747},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&labeledExpr{
														pos:   position{line: 99, col: 46, offset: 3652},
														label: "value",
														expr: &actionExpr{
															pos: position{line: 120, col: 27, offset: 4464},
															run: (*parser).callonDocumentHeader387,
															expr: &zeroOrMoreExpr{
																pos: position{line: 120, col: 27, offset: 4464},
																expr: &seqExpr{
																	pos: position{line: 120, col: 28, offset: 4465},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 120, col: 28, offset: 4465},
																			expr: &choiceExpr{
																				pos: position{line: 1157, col: 12, offset: 46803},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1157, col: 12, offset: 46803},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1157, col: 21, offset: 46812},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&anyMatcher{
																			line: 120, col: 37, offset: 4474,
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1161, col: 8, offset: 46843},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1157, col: 12, offset: 46803},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1157, col: 21, offset: 46812},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1159, col: 8, offset: 46832},
																expr: &anyMatcher{
																	line: 1159, col: 9, offset: 46833,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentElement",
			pos:  position{line: 127, col: 1, offset: 4625},
			expr: &actionExpr{
				pos: position{line: 127, col: 20, offset: 4644},
				run: (*parser).callonDocumentElement1,
				expr: &seqExpr{
					pos: position{line: 127, col: 20, offset: 4644},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 127, col: 20, offset: 4644},
							expr: &notExpr{
								pos: position{line: 1159, col: 8, offset: 46832},
								expr: &anyMatcher{
									line: 1159, col: 9, offset: 46833,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 128, col: 5, offset: 4722},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 128, col: 14, offset: 4731},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 1120, col: 14, offset: 45925},
										run: (*parser).callonDocumentElement8,
										expr: &seqExpr{
											pos: position{line: 1120, col: 14, offset: 45925},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 1120, col: 14, offset: 45925},
													expr: &notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 1120, col: 19, offset: 45930},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonDocumentElement16,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1161, col: 8, offset: 46843},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 97, col: 33, offset: 3491},
										run: (*parser).callonDocumentElement23,
										expr: &seqExpr{
											pos: position{line: 97, col: 33, offset: 3491},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 97, col: 33, offset: 3491},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 97, col: 37, offset: 3495},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonDocumentElement27,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 97, col: 66, offset: 3524},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 97, col: 70, offset: 3528},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonDocumentElement36,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1161, col: 8, offset: 46843},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 99, col: 5, offset: 3611},
										run: (*parser).callonDocumentElement43,
										expr: &seqExpr{
											pos: position{line: 99, col: 5, offset: 3611},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 99, col: 5, offset: 3611},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 99, col: 9, offset: 3615},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonDocumentElement47,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 99, col: 38, offset: 3644},
													val:        ":",
													ignoreCase: false,
												},
												&oneOrMoreExpr{
													pos: position{line: 99, col: 42, offset: 3648},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonDocumentElement56,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 99, col: 46, offset: 3652},
													label: "value",
													expr: &actionExpr{
														pos: position{line: 120, col: 27, offset: 4464},
														run: (*parser).callonDocumentElement59,
														expr: &zeroOrMoreExpr{
															pos: position{line: 120, col: 27, offset: 4464},
															expr: &seqExpr{
																pos: position{line: 120, col: 28, offset: 4465},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 120, col: 28, offset: 4465},
																		expr: &choiceExpr{
																			pos: position{line: 1157, col: 12, offset: 46803},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 120, col: 37, offset: 4474,
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1161, col: 8, offset: 46843},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 103, col: 27, offset: 3790},
										run: (*parser).callonDocumentElement72,
										expr: &seqExpr{
											pos: position{line: 103, col: 27, offset: 3790},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 103, col: 27, offset: 3790},
													val:        ":!",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 103, col: 32, offset: 3795},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonDocumentElement76,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 103, col: 61, offset: 3824},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 103, col: 65, offset: 3828},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonDocumentElement85,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1161, col: 8, offset: 46843},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 105, col: 5, offset: 3900},
										run: (*parser).callonDocumentElement92,
										expr: &seqExpr{
											pos: position{line: 105, col: 5, offset: 3900},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 105, col: 5, offset: 3900},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 105, col: 9, offset: 3904},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonDocumentElement96,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 105, col: 38, offset: 3933},
													val:        "!:",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 105, col: 43, offset: 3938},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonDocumentElement105,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1161, col: 8, offset: 46843},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 401, col: 25, offset: 14595},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 401, col: 25, offset: 14595},
												val:        "toc::[]",
												ignoreCase: false,
											},
											&choiceExpr{
												pos: position{line: 1157, col: 12, offset: 46803},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 132, col: 15, offset: 4873},
										name: "VerseBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 133, col: 15, offset: 4898},
										name: "VerseParagraph",
									},
									&actionExpr{
										pos: position{line: 817, col: 15, offset: 34102},
										run: (*parser).callonDocumentElement119,
										expr: &seqExpr{
											pos: position{line: 817, col: 15, offset: 34102},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 817, col: 15, offset: 34102},
													val:        "image::",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 817, col: 25, offset: 34112},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1135, col: 8, offset: 46389},
														run: (*parser).callonDocumentElement123,
														expr: &oneOrMoreExpr{
															pos: position{line: 1135, col: 8, offset: 46389},
															expr: &seqExpr{
																pos: position{line: 1135, col: 9, offset: 46390},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1135, col: 9, offset: 46390},
																		expr: &choiceExpr{
																			pos: position{line: 1157, col: 12, offset: 46803},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1135, col: 18, offset: 46399},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonDocumentElement133,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1135, col: 22, offset: 46403},
																		expr: &litMatcher{
																			pos:        position{line: 1135, col: 23, offset: 46404},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1135, col: 27, offset: 46408},
																		expr: &litMatcher{
																			pos:        position{line: 1135, col: 28, offset: 46409},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1135, col: 32, offset: 46413,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 817, col: 36, offset: 34123},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 826, col: 20, offset: 34558},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 826, col: 20, offset: 34558},
																run: (*parser).callonDocumentElement142,
																expr: &seqExpr{
																	pos: position{line: 826, col: 20, offset: 34558},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 826, col: 20, offset: 34558},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 826, col: 24, offset: 34562},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonDocumentElement146,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 826, col: 45, offset: 34583},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 827, col: 9, offset: 34595},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonDocumentElement158,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 827, col: 33, offset: 34619},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 828, col: 9, offset: 34631},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonDocumentElement170,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 828, col: 33, offset: 34655},
																			expr: &litMatcher{
																				pos:        position{line: 828, col: 33, offset: 34655},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 829, col: 9, offset: 34668},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 829, col: 20, offset: 34679},
																				expr: &choiceExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							run: (*parser).callonDocumentElement185,
																							expr: &seqExpr{
																								pos: position{line: 206, col: 21, offset: 7402},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 206, col: 21, offset: 7402},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonDocumentElement188,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonDocumentElement191,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonDocumentElement194,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonDocumentElement197,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 206, col: 40, offset: 7421},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 206, col: 44, offset: 7425},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 216, col: 19, offset: 7776},
																											run: (*parser).callonDocumentElement211,
																											expr: &labeledExpr{
																												pos:   position{line: 216, col: 19, offset: 7776},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 216, col: 25, offset: 7782},
																													expr: &seqExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 27, offset: 7784},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 31, offset: 7788},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 32, offset: 7789},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 36, offset: 7793},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 37, offset: 7794},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 216, col: 41, offset: 7798,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 206, col: 67, offset: 7448},
																										expr: &litMatcher{
																											pos:        position{line: 206, col: 67, offset: 7448},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 206, col: 72, offset: 7453},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement227,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							run: (*parser).callonDocumentElement229,
																							expr: &seqExpr{
																								pos: position{line: 208, col: 5, offset: 7537},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 208, col: 5, offset: 7537},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonDocumentElement232,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonDocumentElement235,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonDocumentElement238,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonDocumentElement241,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 208, col: 24, offset: 7556},
																										expr: &litMatcher{
																											pos:        position{line: 208, col: 24, offset: 7556},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 208, col: 29, offset: 7561},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement258,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 829, col: 40, offset: 34699},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 831, col: 9, offset: 34805},
																run: (*parser).callonDocumentElement261,
																expr: &seqExpr{
																	pos: position{line: 831, col: 9, offset: 34805},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 831, col: 9, offset: 34805},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 831, col: 13, offset: 34809},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonDocumentElement265,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 831, col: 34, offset: 34830},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 832, col: 9, offset: 34842},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonDocumentElement277,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 832, col: 32, offset: 34865},
																			expr: &litMatcher{
																				pos:        position{line: 832, col: 32, offset: 34865},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 833, col: 9, offset: 34878},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 833, col: 20, offset: 34889},
																				expr: &choiceExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							run: (*parser).callonDocumentElement292,
																							expr: &seqExpr{
																								pos: position{line: 206, col: 21, offset: 7402},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 206, col: 21, offset: 7402},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonDocumentElement295,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonDocumentElement298,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonDocumentElement301,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonDocumentElement304,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 206, col: 40, offset: 7421},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 206, col: 44, offset: 7425},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 216, col: 19, offset: 7776},
																											run: (*parser).callonDocumentElement318,
																											expr: &labeledExpr{
																												pos:   position{line: 216, col: 19, offset: 7776},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 216, col: 25, offset: 7782},
																													expr: &seqExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 27, offset: 7784},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 31, offset: 7788},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 32, offset: 7789},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 36, offset: 7793},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 37, offset: 7794},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 216, col: 41, offset: 7798,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 206, col: 67, offset: 7448},
																										expr: &litMatcher{
																											pos:        position{line: 206, col: 67, offset: 7448},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 206, col: 72, offset: 7453},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement334,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							run: (*parser).callonDocumentElement336,
																							expr: &seqExpr{
																								pos: position{line: 208, col: 5, offset: 7537},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 208, col: 5, offset: 7537},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonDocumentElement339,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonDocumentElement342,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonDocumentElement345,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonDocumentElement348,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 208, col: 24, offset: 7556},
																										expr: &litMatcher{
																											pos:        position{line: 208, col: 24, offset: 7556},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 208, col: 29, offset: 7561},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement365,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 833, col: 40, offset: 34909},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 835, col: 9, offset: 35012},
																run: (*parser).callonDocumentElement368,
																expr: &seqExpr{
																	pos: position{line: 835, col: 9, offset: 35012},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 835, col: 9, offset: 35012},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 835, col: 13, offset: 35016},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonDocumentElement372,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 835, col: 34, offset: 35037},
																			expr: &litMatcher{
																				pos:        position{line: 835, col: 34, offset: 35037},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 836, col: 9, offset: 35050},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 836, col: 20, offset: 35061},
																				expr: &choiceExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							run: (*parser).callonDocumentElement387,
																							expr: &seqExpr{
																								pos: position{line: 206, col: 21, offset: 7402},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 206, col: 21, offset: 7402},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonDocumentElement390,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonDocumentElement393,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonDocumentElement396,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonDocumentElement399,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 206, col: 40, offset: 7421},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 206, col: 44, offset: 7425},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 216, col: 19, offset: 7776},
																											run: (*parser).callonDocumentElement413,
																											expr: &labeledExpr{
																												pos:   position{line: 216, col: 19, offset: 7776},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 216, col: 25, offset: 7782},
																													expr: &seqExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 27, offset: 7784},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 31, offset: 7788},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 32, offset: 7789},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 36, offset: 7793},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 37, offset: 7794},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 216, col: 41, offset: 7798,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 206, col: 67, offset: 7448},
																										expr: &litMatcher{
																											pos:        position{line: 206, col: 67, offset: 7448},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 206, col: 72, offset: 7453},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement429,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							run: (*parser).callonDocumentElement431,
																							expr: &seqExpr{
																								pos: position{line: 208, col: 5, offset: 7537},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 208, col: 5, offset: 7537},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonDocumentElement434,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonDocumentElement437,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonDocumentElement440,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonDocumentElement443,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 208, col: 24, offset: 7556},
																										expr: &litMatcher{
																											pos:        position{line: 208, col: 24, offset: 7556},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 208, col: 29, offset: 7561},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement460,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 836, col: 40, offset: 35081},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 838, col: 9, offset: 35182},
																run: (*parser).callonDocumentElement463,
																expr: &seqExpr{
																	pos: position{line: 838, col: 9, offset: 35182},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 838, col: 9, offset: 35182},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 838, col: 13, offset: 35186},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 838, col: 24, offset: 35197},
																				expr: &choiceExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							run: (*parser).callonDocumentElement469,
																							expr: &seqExpr{
																								pos: position{line: 206, col: 21, offset: 7402},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 206, col: 21, offset: 7402},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonDocumentElement472,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonDocumentElement475,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonDocumentElement478,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonDocumentElement481,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 206, col: 40, offset: 7421},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 206, col: 44, offset: 7425},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 216, col: 19, offset: 7776},
																											run: (*parser).callonDocumentElement495,
																											expr: &labeledExpr{
																												pos:   position{line: 216, col: 19, offset: 7776},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 216, col: 25, offset: 7782},
																													expr: &seqExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 27, offset: 7784},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 31, offset: 7788},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 32, offset: 7789},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 36, offset: 7793},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 37, offset: 7794},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 216, col: 41, offset: 7798,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 206, col: 67, offset: 7448},
																										expr: &litMatcher{
																											pos:        position{line: 206, col: 67, offset: 7448},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 206, col: 72, offset: 7453},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement511,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							run: (*parser).callonDocumentElement513,
																							expr: &seqExpr{
																								pos: position{line: 208, col: 5, offset: 7537},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 208, col: 5, offset: 7537},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonDocumentElement516,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonDocumentElement519,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonDocumentElement522,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonDocumentElement525,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 208, col: 24, offset: 7556},
																										expr: &litMatcher{
																											pos:        position{line: 208, col: 24, offset: 7556},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 208, col: 29, offset: 7561},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement542,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 838, col: 44, offset: 35217},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 817, col: 71, offset: 34158},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonDocumentElement548,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1161, col: 8, offset: 46843},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 135, col: 15, offset: 4953},
										name: "FencedBlock",
									},
									&actionExpr{
										pos: position{line: 904, col: 17, offset: 37887},
										run: (*parser).callonDocumentElement556,
										expr: &seqExpr{
											pos: position{line: 904, col: 17, offset: 37887},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 901, col: 26, offset: 37820},
													val:        "----",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 901, col: 33, offset: 37827},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonDocumentElement562,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1161, col: 8, offset: 46843},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 904, col: 39, offset: 37909},
													label: "content",
													expr: &zeroOrMoreExpr{
														pos: position{line: 904, col: 47, offset: 37917},
														expr: &actionExpr{
															pos: position{line: 908, col: 24, offset: 38087},
															run: (*parser).callonDocumentElement571,
															expr: &labeledExpr{
																pos:   position{line: 908, col: 24, offset: 38087},
																label: "lines",
																expr: &oneOrMoreExpr{
																	pos: position{line: 908, col: 30, offset: 38093},
																	expr: &actionExpr{
																		pos: position{line: 912, col: 21, offset: 38196},
																		run: (*parser).callonDocumentElement574,
																		expr: &seqExpr{
																			pos: position{line: 912, col: 21, offset: 38196},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 912, col: 21, offset: 38196},
																					expr: &seqExpr{
																						pos: position{line: 901, col: 26, offset: 37820},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 901, col: 26, offset: 37820},
																								val:        "----",
																								ignoreCase: false,
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 901, col: 33, offset: 37827},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonDocumentElement582,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 912, col: 44, offset: 38219},
																					expr: &notExpr{
																						pos: position{line: 1159, col: 8, offset: 46832},
																						expr: &anyMatcher{
																							line: 1159, col: 9, offset: 46833,
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 912, col: 49, offset: 38224},
																					label: "line",
																					expr: &actionExpr{
																						pos: position{line: 916, col: 28, offset: 38335},
																						run: (*parser).callonDocumentElement593,
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 916, col: 28, offset: 38335},
																							expr: &seqExpr{
																								pos: position{line: 916, col: 29, offset: 38336},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 916, col: 29, offset: 38336},
																										expr: &seqExpr{
																											pos: position{line: 901, col: 26, offset: 37820},
																											exprs: []interface{}{
																												&litMatcher{
																													pos:        position{line: 901, col: 26, offset: 37820},
																													val:        "----",
																													ignoreCase: false,
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 901, col: 33, offset: 37827},
																													expr: &choiceExpr{
																														pos: position{line: 1153, col: 7, offset: 46741},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1153, col: 7, offset: 46741},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1153, col: 13, offset: 46747},
																																run: (*parser).callonDocumentElement602,
																																expr: &litMatcher{
																																	pos:        position{line: 1153, col: 13, offset: 46747},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&choiceExpr{
																													pos: position{line: 1161, col: 8, offset: 46843},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1157, col: 12, offset: 46803},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1157, col: 21, offset: 46812},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 1159, col: 8, offset: 46832},
																															expr: &anyMatcher{
																																line: 1159, col: 9, offset: 46833,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 916, col: 52, offset: 38359},
																										expr: &choiceExpr{
																											pos: position{line: 1161, col: 8, offset: 46843},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1157, col: 12, offset: 46803},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1157, col: 21, offset: 46812},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1159, col: 8, offset: 46832},
																													expr: &anyMatcher{
																														line: 1159, col: 9, offset: 46833,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 916, col: 57, offset: 38364,
																									},
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 1161, col: 8, offset: 46843},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1157, col: 12, offset: 46803},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1157, col: 21, offset: 46812},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1159, col: 8, offset: 46832},
																							expr: &anyMatcher{
																								line: 1159, col: 9, offset: 46833,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 904, col: 71, offset: 37941},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 901, col: 26, offset: 37820},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 901, col: 26, offset: 37820},
																	val:        "----",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 901, col: 33, offset: 37827},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonDocumentElement627,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1161, col: 8, offset: 46843},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1157, col: 12, offset: 46803},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1157, col: 21, offset: 46812},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1159, col: 8, offset: 46832},
																			expr: &anyMatcher{
																				line: 1159, col: 9, offset: 46833,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 137, col: 15, offset: 5006},
										name: "ExampleBlock",
									},
									&actionExpr{
										pos: position{line: 1035, col: 17, offset: 42736},
										run: (*parser).callonDocumentElement637,
										expr: &seqExpr{
											pos: position{line: 1035, col: 17, offset: 42736},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 1033, col: 26, offset: 42712},
													val:        "////",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 1035, col: 39, offset: 42758},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonDocumentElement643,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1157, col: 12, offset: 46803},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1035, col: 51, offset: 42770},
													label: "content",
													expr: &zeroOrMoreExpr{
														pos: position{line: 1035, col: 59, offset: 42778},
														expr: &actionExpr{
															pos: position{line: 1039, col: 21, offset: 42955},
															run: (*parser).callonDocumentElement650,
															expr: &seqExpr{
																pos: position{line: 1039, col: 21, offset: 42955},
																exprs: []interface{}{
																	&zeroOrMoreExpr{
																		pos: position{line: 1039, col: 21, offset: 42955},
																		expr: &seqExpr{
																			pos: position{line: 1039, col: 22, offset: 42956},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1039, col: 22, offset: 42956},
																					expr: &litMatcher{
																						pos:        position{line: 1033, col: 26, offset: 42712},
																						val:        "////",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1039, col: 45, offset: 42979},
																					expr: &choiceExpr{
																						pos: position{line: 1161, col: 8, offset: 46843},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1157, col: 12, offset: 46803},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1157, col: 21, offset: 46812},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																							&notExpr{
																								pos: position{line: 1159, col: 8, offset: 46832},
																								expr: &anyMatcher{
																									line: 1159, col: 9, offset: 46833,
																								},
																							},
																						},
																					},
																				},
																				&anyMatcher{
																					line: 1039, col: 50, offset: 42984,
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 1161, col: 8, offset: 46843},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1157, col: 12, offset: 46803},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1157, col: 21, offset: 46812},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1159, col: 8, offset: 46832},
																				expr: &anyMatcher{
																					line: 1159, col: 9, offset: 46833,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1035, col: 81, offset: 42800},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 1035, col: 82, offset: 42801},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 1033, col: 26, offset: 42712},
																	val:        "////",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 1035, col: 104, offset: 42823},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonDocumentElement674,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1161, col: 8, offset: 46843},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1157, col: 12, offset: 46803},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1157, col: 21, offset: 46812},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1159, col: 8, offset: 46832},
																			expr: &anyMatcher{
																				line: 1159, col: 9, offset: 46833,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 139, col: 15, offset: 5060},
										name: "QuoteBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 140, col: 15, offset: 5086},
										name: "SidebarBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 141, col: 15, offset: 5113},
										name: "Table",
									},
									&ruleRefExpr{
										pos:  position{line: 142, col: 15, offset: 5134},
										name: "List",
									},
									&actionExpr{
										pos: position{line: 1060, col: 31, offset: 43759},
										run: (*parser).callonDocumentElement687,
										expr: &labeledExpr{
											pos:   position{line: 1060, col: 31, offset: 43759},
											label: "lines",
											expr: &actionExpr{
												pos: position{line: 1066, col: 5, offset: 44024},
												run: (*parser).callonDocumentElement689,
												expr: &seqExpr{
													pos: position{line: 1066, col: 5, offset: 44024},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 1066, col: 5, offset: 44024},
															label: "firstLine",
															expr: &actionExpr{
																pos: position{line: 1066, col: 16, offset: 44035},
																run: (*parser).callonDocumentElement692,
																expr: &seqExpr{
																	pos: position{line: 1066, col: 16, offset: 44035},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonDocumentElement696,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&oneOrMoreExpr{
																			pos: position{line: 1066, col: 19, offset: 44038},
																			expr: &seqExpr{
																				pos: position{line: 1066, col: 20, offset: 44039},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 1066, col: 20, offset: 44039},
																						expr: &choiceExpr{
																							pos: position{line: 1161, col: 8, offset: 46843},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1157, col: 12, offset: 46803},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1157, col: 21, offset: 46812},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1159, col: 8, offset: 46832},
																									expr: &anyMatcher{
																										line: 1159, col: 9, offset: 46833,
																									},
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 1066, col: 25, offset: 44044,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1161, col: 8, offset: 46843},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1157, col: 12, offset: 46803},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1157, col: 21, offset: 46812},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1159, col: 8, offset: 46832},
																	expr: &anyMatcher{
																		line: 1159, col: 9, offset: 46833,
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 1069, col: 5, offset: 44155},
															label: "otherLines",
															expr: &zeroOrMoreExpr{
																pos: position{line: 1069, col: 16, offset: 44166},
																expr: &actionExpr{
																	pos: position{line: 1070, col: 9, offset: 44176},
																	run: (*parser).callonDocumentElement714,
																	expr: &seqExpr{
																		pos: position{line: 1070, col: 9, offset: 44176},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 1070, col: 9, offset: 44176},
																				label: "otherLine",
																				expr: &actionExpr{
																					pos: position{line: 1070, col: 20, offset: 44187},
																					run: (*parser).callonDocumentElement717,
																					expr: &seqExpr{
																						pos: position{line: 1070, col: 20, offset: 44187},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1070, col: 20, offset: 44187},
																								expr: &actionExpr{
																									pos: position{line: 1120, col: 14, offset: 45925},
																									run: (*parser).callonDocumentElement720,
																									expr: &seqExpr{
																										pos: position{line: 1120, col: 14, offset: 45925},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1120, col: 14, offset: 45925},
																												expr: &notExpr{
																													pos: position{line: 1159, col: 8, offset: 46832},
																													expr: &anyMatcher{
																														line: 1159, col: 9, offset: 46833,
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 1120, col: 19, offset: 45930},
																												expr: &choiceExpr{
																													pos: position{line: 1153, col: 7, offset: 46741},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1153, col: 7, offset: 46741},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1153, col: 13, offset: 46747},
																															run: (*parser).callonDocumentElement728,
																															expr: &litMatcher{
																																pos:        position{line: 1153, col: 13, offset: 46747},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&choiceExpr{
																												pos: position{line: 1161, col: 8, offset: 46843},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1157, col: 12, offset: 46803},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1157, col: 21, offset: 46812},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1159, col: 8, offset: 46832},
																														expr: &anyMatcher{
																															line: 1159, col: 9, offset: 46833,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 1070, col: 31, offset: 44198},
																								expr: &seqExpr{
																									pos: position{line: 1070, col: 32, offset: 44199},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1070, col: 32, offset: 44199},
																											expr: &choiceExpr{
																												pos: position{line: 1161, col: 8, offset: 46843},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1157, col: 12, offset: 46803},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1157, col: 21, offset: 46812},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1159, col: 8, offset: 46832},
																														expr: &anyMatcher{
																															line: 1159, col: 9, offset: 46833,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 1070, col: 37, offset: 44204,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1161, col: 8, offset: 46843},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1157, col: 12, offset: 46803},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1157, col: 21, offset: 46812},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1159, col: 8, offset: 46832},
																						expr: &anyMatcher{
																							line: 1159, col: 9, offset: 46833,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 1080, col: 39, offset: 44540},
										run: (*parser).callonDocumentElement749,
										expr: &seqExpr{
											pos: position{line: 1080, col: 39, offset: 44540},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 1057, col: 26, offset: 43657},
													val:        "....",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 1080, col: 61, offset: 44562},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonDocumentElement755,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1157, col: 12, offset: 46803},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1080, col: 73, offset: 44574},
													label: "lines",
													expr: &actionExpr{
														pos: position{line: 1085, col: 44, offset: 44847},
														run: (*parser).callonDocumentElement761,
														expr: &labeledExpr{
															pos:   position{line: 1085, col: 44, offset: 44847},
															label: "lines",
															expr: &oneOrMoreExpr{
																pos: position{line: 1085, col: 50, offset: 44853},
																expr: &actionExpr{
																	pos: position{line: 1086, col: 5, offset: 44859},
																	run: (*parser).callonDocumentElement764,
																	expr: &seqExpr{
																		pos: position{line: 1086, col: 5, offset: 44859},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 1086, col: 5, offset: 44859},
																				label: "line",
																				expr: &actionExpr{
																					pos: position{line: 1086, col: 11, offset: 44865},
																					run: (*parser).callonDocumentElement767,
																					expr: &seqExpr{
																						pos: position{line: 1086, col: 11, offset: 44865},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1086, col: 11, offset: 44865},
																								expr: &litMatcher{
																									pos:        position{line: 1057, col: 26, offset: 43657},
																									val:        "....",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 1086, col: 34, offset: 44888},
																								expr: &seqExpr{
																									pos: position{line: 1086, col: 35, offset: 44889},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1086, col: 35, offset: 44889},
																											expr: &choiceExpr{
																												pos: position{line: 1161, col: 8, offset: 46843},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1157, col: 12, offset: 46803},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1157, col: 21, offset: 46812},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1159, col: 8, offset: 46832},
																														expr: &anyMatcher{
																															line: 1159, col: 9, offset: 46833,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 1086, col: 40, offset: 44894,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1161, col: 8, offset: 46843},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1157, col: 12, offset: 46803},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1157, col: 21, offset: 46812},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1159, col: 8, offset: 46832},
																						expr: &anyMatcher{
																							line: 1159, col: 9, offset: 46833,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1080, col: 122, offset: 44623},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 1080, col: 123, offset: 44624},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 1057, col: 26, offset: 43657},
																	val:        "....",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 1080, col: 145, offset: 44646},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonDocumentElement791,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1161, col: 8, offset: 46843},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1157, col: 12, offset: 46803},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1157, col: 21, offset: 46812},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1159, col: 8, offset: 46832},
																			expr: &anyMatcher{
																				line: 1159, col: 9, offset: 46833,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 1095, col: 34, offset: 45157},
										run: (*parser).callonDocumentElement800,
										expr: &seqExpr{
											pos: position{line: 1095, col: 34, offset: 45157},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 1095, col: 34, offset: 45157},
													label: "attributes",
													expr: &seqExpr{
														pos: position{line: 1095, col: 46, offset: 45169},
														exprs: []interface{}{
															&actionExpr{
																pos: position{line: 1103, col: 21, offset: 45451},
																run: (*parser).callonDocumentElement804,
																expr: &seqExpr{
																	pos: position{line: 1103, col: 21, offset: 45451},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1103, col: 21, offset: 45451},
																			val:        "[literal]",
																			ignoreCase: false,
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 1103, col: 33, offset: 45463},
																			expr: &choiceExpr{
																				pos: position{line: 1153, col: 7, offset: 46741},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1153, col: 7, offset: 46741},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1153, col: 13, offset: 46747},
																						run: (*parser).callonDocumentElement810,
																						expr: &litMatcher{
																							pos:        position{line: 1153, col: 13, offset: 46747},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&choiceExpr{
																			pos: position{line: 1157, col: 12, offset: 46803},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 1095, col: 63, offset: 45186},
																expr: &actionExpr{
																	pos: position{line: 151, col: 21, offset: 5356},
																	run: (*parser).callonDocumentElement816,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 21, offset: 5356},
																		exprs: []interface{}{
																			&andExpr{
																				pos: position{line: 151, col: 21, offset: 5356},
																				expr: &charClassMatcher{
																					pos:        position{line: 151, col: 23, offset: 5358},
																					val:        "[[.#]",
																					chars:      []rune{'[', '.', '#'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 152, col: 5, offset: 5446},
																				label: "attr",
																				expr: &choiceExpr{
																					pos: position{line: 152, col: 11, offset: 5452},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 161, col: 14, offset: 5913},
																							run: (*parser).callonDocumentElement822,
																							expr: &seqExpr{
																								pos: position{line: 161, col: 14, offset: 5913},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 161, col: 14, offset: 5913},
																										val:        "[[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 161, col: 19, offset: 5918},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1139, col: 7, offset: 46459},
																											run: (*parser).callonDocumentElement826,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1139, col: 7, offset: 46459},
																												expr: &seqExpr{
																													pos: position{line: 1139, col: 8, offset: 46460},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 1139, col: 8, offset: 46460},
																															expr: &choiceExpr{
																																pos: position{line: 1157, col: 12, offset: 46803},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1157, col: 12, offset: 46803},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1157, col: 21, offset: 46812},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1139, col: 17, offset: 46469},
																															expr: &choiceExpr{
																																pos: position{line: 1153, col: 7, offset: 46741},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1153, col: 7, offset: 46741},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1153, col: 13, offset: 46747},
																																		run: (*parser).callonDocumentElement836,
																																		expr: &litMatcher{
																																			pos:        position{line: 1153, col: 13, offset: 46747},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1139, col: 21, offset: 46473},
																															expr: &litMatcher{
																																pos:        position{line: 1139, col: 22, offset: 46474},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1139, col: 26, offset: 46478},
																															expr: &litMatcher{
																																pos:        position{line: 1139, col: 27, offset: 46479},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1139, col: 31, offset: 46483},
																															expr: &litMatcher{
																																pos:        position{line: 1139, col: 32, offset: 46484},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1139, col: 37, offset: 46489},
																															expr: &litMatcher{
																																pos:        position{line: 1139, col: 38, offset: 46490},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1139, col: 43, offset: 46495},
																															expr: &litMatcher{
																																pos:        position{line: 1139, col: 44, offset: 46496},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 1139, col: 48, offset: 46500,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 161, col: 27, offset: 5926},
																										val:        "]]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 163, col: 5, offset: 5980},
																							run: (*parser).callonDocumentElement850,
																							expr: &seqExpr{
																								pos: position{line: 163, col: 5, offset: 5980},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 163, col: 5, offset: 5980},
																										val:        "[#",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 163, col: 10, offset: 5985},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1139, col: 7, offset: 46459},
																											run: (*parser).callonDocumentElement854,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1139, col: 7, offset: 46459},
																												expr: &seqExpr{
																													pos: position{line: 1139, col: 8, offset: 46460},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 1139, col: 8, offset: 46460},
																															expr: &choiceExpr{
																																pos: position{line: 1157, col: 12, offset: 46803},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1157, col: 12, offset: 46803},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1157, col: 21, offset: 46812},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1139, col: 17, offset: 46469},
																															expr: &choiceExpr{
																																pos: position{line: 1153, col: 7, offset: 46741},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1153, col: 7, offset: 46741},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1153, col: 13, offset: 46747},
																																		run: (*parser).callonDocumentElement864,
																																		expr: &litMatcher{
																																			pos:        position{line: 1153, col: 13, offset: 46747},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1139, col: 21, offset: 46473},
																															expr: &litMatcher{
																																pos:        position{line: 1139, col: 22, offset: 46474},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1139, col: 26, offset: 46478},
																															expr: &litMatcher{
																																pos:        position{line: 1139, col: 27, offset: 46479},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1139, col: 31, offset: 46483},
																															expr: &litMatcher{
																																pos:        position{line: 1139, col: 32, offset: 46484},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1139, col: 37, offset: 46489},
																															expr: &litMatcher{
																																pos:        position{line: 1139, col: 38, offset: 46490},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1139, col: 43, offset: 46495},
																															expr: &litMatcher{
																																pos:        position{line: 1139, col: 44, offset: 46496},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 1139, col: 48, offset: 46500,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 163, col: 18, offset: 5993},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 173, col: 17, offset: 6296},
																							run: (*parser).callonDocumentElement878,
																							expr: &seqExpr{
																								pos: position{line: 173, col: 17, offset: 6296},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 173, col: 17, offset: 6296},
																										val:        ".",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 173, col: 21, offset: 6300},
																										expr: &litMatcher{
																											pos:        position{line: 173, col: 22, offset: 6301},
																											val:        ".",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 173, col: 26, offset: 6305},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement886,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 173, col: 30, offset: 6309},
																										label: "title",
																										expr: &actionExpr{
																											pos: position{line: 173, col: 37, offset: 6316},
																											run: (*parser).callonDocumentElement889,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 173, col: 37, offset: 6316},
																												expr: &seqExpr{
																													pos: position{line: 173, col: 38, offset: 6317},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 173, col: 38, offset: 6317},
																															expr: &choiceExpr{
																																pos: position{line: 1157, col: 12, offset: 46803},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1157, col: 12, offset: 46803},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1157, col: 21, offset: 46812},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&anyMatcher{
																															line: 173, col: 47, offset: 6326,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 181, col: 16, offset: 6537},
																							run: (*parser).callonDocumentElement897,
																							expr: &seqExpr{
																								pos: position{line: 181, col: 16, offset: 6537},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 181, col: 16, offset: 6537},
																										val:        "[.",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 181, col: 21, offset: 6542},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement903,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 181, col: 25, offset: 6546},
																										label: "role",
																										expr: &actionExpr{
																											pos: position{line: 181, col: 31, offset: 6552},
																											run: (*parser).callonDocumentElement906,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 181, col: 31, offset: 6552},
																												expr: &seqExpr{
																													pos: position{line: 181, col: 32, offset: 6553},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 181, col: 32, offset: 6553},
																															expr: &choiceExpr{
																																pos: position{line: 1157, col: 12, offset: 46803},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1157, col: 12, offset: 46803},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1157, col: 21, offset: 46812},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 181, col: 41, offset: 6562},
																															expr: &litMatcher{
																																pos:        position{line: 181, col: 42, offset: 6563},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 181, col: 46, offset: 6567,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 183, col: 8, offset: 6615},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 193, col: 21, offset: 6978},
																							run: (*parser).callonDocumentElement917,
																							expr: &litMatcher{
																								pos:        position{line: 193, col: 21, offset: 6978},
																								val:        "[source]",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 195, col: 5, offset: 7036},
																							run: (*parser).callonDocumentElement919,
																							expr: &seqExpr{
																								pos: position{line: 195, col: 5, offset: 7036},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 195, col: 5, offset: 7036},
																										val:        "[source,",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 195, col: 16, offset: 7047},
																										label: "language",
																										expr: &actionExpr{
																											pos: position{line: 195, col: 26, offset: 7057},
																											run: (*parser).callonDocumentElement923,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 195, col: 26, offset: 7057},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 27, offset: 7058},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 27, offset: 7058},
																															expr: &choiceExpr{
																																pos: position{line: 1157, col: 12, offset: 46803},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1157, col: 12, offset: 46803},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1157, col: 21, offset: 46812},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7067},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7068},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7072,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 197, col: 7, offset: 7119},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 224, col: 20, offset: 7961},
																							run: (*parser).callonDocumentElement934,
																							expr: &seqExpr{
																								pos: position{line: 224, col: 20, offset: 7961},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 224, col: 20, offset: 7961},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 224, col: 24, offset: 7965},
																										label: "kind",
																										expr: &actionExpr{
																											pos: position{line: 236, col: 14, offset: 8471},
																											run: (*parser).callonDocumentElement938,
																											expr: &litMatcher{
																												pos:        position{line: 236, col: 14, offset: 8471},
																												val:        "quote",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 224, col: 41, offset: 7982},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement943,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 224, col: 45, offset: 7986},
																										val:        ",",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 224, col: 49, offset: 7990},
																										label: "author",
																										expr: &actionExpr{
																											pos: position{line: 263, col: 16, offset: 9262},
																											run: (*parser).callonDocumentElement947,
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 263, col: 16, offset: 9262},
																												expr: &seqExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 263, col: 17, offset: 9263},
																															expr: &choiceExpr{
																																pos: position{line: 1161, col: 8, offset: 46843},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1157, col: 12, offset: 46803},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1157, col: 21, offset: 46812},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1159, col: 8, offset: 46832},
																																		expr: &anyMatcher{
																																			line: 1159, col: 9, offset: 46833,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 263, col: 22, offset: 9268},
																															expr: &litMatcher{
																																pos:        position{line: 263, col: 23, offset: 9269},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 263, col: 27, offset: 9273},
																															expr: &litMatcher{
																																pos:        position{line: 263, col: 28, offset: 9274},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 263, col: 32, offset: 9278,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 224, col: 70, offset: 8011},
																										val:        ",",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 224, col: 74, offset: 8015},
																										label: "title",
																										expr: &actionExpr{
																											pos: position{line: 267, col: 15, offset: 9332},
																											run: (*parser).callonDocumentElement963,
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 267, col: 15, offset: 9332},
																												expr: &seqExpr{
																													pos: position{line: 267, col: 16, offset: 9333},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 267, col: 16, offset: 9333},
																															expr: &choiceExpr{
																																pos: position{line: 1161, col: 8, offset: 46843},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1157, col: 12, offset: 46803},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1157, col: 21, offset: 46812},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1159, col: 8, offset: 46832},
																																		expr: &anyMatcher{
																																			line: 1159, col: 9, offset: 46833,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 267, col: 21, offset: 9338},
																															expr: &litMatcher{
																																pos:        position{line: 267, col: 22, offset: 9339},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 267, col: 26, offset: 9343},
																															expr: &litMatcher{
																																pos:        position{line: 267, col: 27, offset: 9344},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 267, col: 31, offset: 9348,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 224, col: 93, offset: 8034},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 228, col: 5, offset: 8177},
																							run: (*parser).callonDocumentElement978,
																							expr: &seqExpr{
																								pos: position{line: 228, col: 5, offset: 8177},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 228, col: 5, offset: 8177},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 228, col: 9, offset: 8181},
																										label: "kind",
																										expr: &actionExpr{
																											pos: position{line: 236, col: 14, offset: 8471},
																											run: (*parser).callonDocumentElement982,
																											expr: &litMatcher{
																												pos:        position{line: 236, col: 14, offset: 8471},
																												val:        "quote",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 228, col: 26, offset: 8198},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement987,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 228, col: 30, offset: 8202},
																										val:        ",",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 228, col: 34, offset: 8206},
																										label: "author",
																										expr: &actionExpr{
																											pos: position{line: 263, col: 16, offset: 9262},
																											run: (*parser).callonDocumentElement991,
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 263, col: 16, offset: 9262},
																												expr: &seqExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 263, col: 17, offset: 9263},
																															expr: &choiceExpr{
																																pos: position{line: 1161, col: 8, offset: 46843},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1157, col: 12, offset: 46803},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1157, col: 21, offset: 46812},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1159, col: 8, offset: 46832},
																																		expr: &anyMatcher{
																																			line: 1159, col: 9, offset: 46833,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 263, col: 22, offset: 9268},
																															expr: &litMatcher{
																																pos:        position{line: 263, col: 23, offset: 9269},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 263, col: 27, offset: 9273},
																															expr: &litMatcher{
																																pos:        position{line: 263, col: 28, offset: 9274},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 263, col: 32, offset: 9278,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 228, col: 55, offset: 8227},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 232, col: 5, offset: 8358},
																							run: (*parser).callonDocumentElement1006,
																							expr: &seqExpr{
																								pos: position{line: 232, col: 5, offset: 8358},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 232, col: 5, offset: 8358},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 232, col: 9, offset: 8362},
																										label: "kind",
																										expr: &actionExpr{
																											pos: position{line: 236, col: 14, offset: 8471},
																											run: (*parser).callonDocumentElement1010,
																											expr: &litMatcher{
																												pos:        position{line: 236, col: 14, offset: 8471},
																												val:        "quote",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 232, col: 26, offset: 8379},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement1015,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 232, col: 30, offset: 8383},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 240, col: 20, offset: 8534},
																							run: (*parser).callonDocumentElement1018,
																							expr: &seqExpr{
																								pos: position{line: 240, col: 20, offset: 8534},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 240, col: 20, offset: 8534},
																										label: "attribute",
																										expr: &choiceExpr{
																											pos: position{line: 240, col: 31, offset: 8545},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 240, col: 31, offset: 8545},
																													run: (*parser).callonDocumentElement1022,
																													expr: &seqExpr{
																														pos: position{line: 240, col: 31, offset: 8545},
																														exprs: []interface{}{
																															&litMatcher{
																																pos:        position{line: 240, col: 31, offset: 8545},
																																val:        "[",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 240, col: 35, offset: 8549},
																																label: "kind",
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9203},
																																	run: (*parser).callonDocumentElement1026,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9203},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&zeroOrMoreExpr{
																																pos: position{line: 240, col: 52, offset: 8566},
																																expr: &choiceExpr{
																																	pos: position{line: 1153, col: 7, offset: 46741},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1153, col: 7, offset: 46741},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1153, col: 13, offset: 46747},
																																			run: (*parser).callonDocumentElement1031,
																																			expr: &litMatcher{
																																				pos:        position{line: 1153, col: 13, offset: 46747},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 240, col: 56, offset: 8570},
																																val:        ",",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 240, col: 60, offset: 8574},
																																label: "author",
																																expr: &actionExpr{
																																	pos: position{line: 263, col: 16, offset: 9262},
																																	run: (*parser).callonDocumentElement1035,
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 263, col: 16, offset: 9262},
																																		expr: &seqExpr{
																																			pos: position{line: 263, col: 17, offset: 9263},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 263, col: 17, offset: 9263},
																																					expr: &choiceExpr{
																																						pos: position{line: 1161, col: 8, offset: 46843},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1157, col: 12, offset: 46803},
																																								val:        "\r\n",
																																								ignoreCase: false,
																																							},
																																							&charClassMatcher{
																																								pos:        position{line: 1157, col: 21, offset: 46812},
																																								val:        "[\\r\\n]",
																																								chars:      []rune{'\r', '\n'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																							&notExpr{
																																								pos: position{line: 1159, col: 8, offset: 46832},
																																								expr: &anyMatcher{
																																									line: 1159, col: 9, offset: 46833,
																																								},
																																							},
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 263, col: 22, offset: 9268},
																																					expr: &litMatcher{
																																						pos:        position{line: 263, col: 23, offset: 9269},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 263, col: 27, offset: 9273},
																																					expr: &litMatcher{
																																						pos:        position{line: 263, col: 28, offset: 9274},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 263, col: 32, offset: 9278,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 240, col: 81, offset: 8595},
																																val:        ",",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 240, col: 85, offset: 8599},
																																label: "title",
																																expr: &actionExpr{
																																	pos: position{line: 267, col: 15, offset: 9332},
																																	run: (*parser).callonDocumentElement1051,
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 267, col: 15, offset: 9332},
																																		expr: &seqExpr{
																																			pos: position{line: 267, col: 16, offset: 9333},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 267, col: 16, offset: 9333},
																																					expr: &choiceExpr{
																																						pos: position{line: 1161, col: 8, offset: 46843},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1157, col: 12, offset: 46803},
																																								val:        "\r\n",
																																								ignoreCase: false,
																																							},
																																							&charClassMatcher{
																																								pos:        position{line: 1157, col: 21, offset: 46812},
																																								val:        "[\\r\\n]",
																																								chars:      []rune{'\r', '\n'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																							&notExpr{
																																								pos: position{line: 1159, col: 8, offset: 46832},
																																								expr: &anyMatcher{
																																									line: 1159, col: 9, offset: 46833,
																																								},
																																							},
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 267, col: 21, offset: 9338},
																																					expr: &litMatcher{
																																						pos:        position{line: 267, col: 22, offset: 9339},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 267, col: 26, offset: 9343},
																																					expr: &litMatcher{
																																						pos:        position{line: 267, col: 27, offset: 9344},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 267, col: 31, offset: 9348,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 240, col: 104, offset: 8618},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 244, col: 9, offset: 8777},
																													run: (*parser).callonDocumentElement1066,
																													expr: &seqExpr{
																														pos: position{line: 244, col: 9, offset: 8777},
																														exprs: []interface{}{
																															&litMatcher{
																																pos:        position{line: 244, col: 9, offset: 8777},
																																val:        "[",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 244, col: 13, offset: 8781},
																																label: "kind",
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9203},
																																	run: (*parser).callonDocumentElement1070,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9203},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&zeroOrMoreExpr{
																																pos: position{line: 244, col: 30, offset: 8798},
																																expr: &choiceExpr{
																																	pos: position{line: 1153, col: 7, offset: 46741},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1153, col: 7, offset: 46741},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1153, col: 13, offset: 46747},
																																			run: (*parser).callonDocumentElement1075,
																																			expr: &litMatcher{
																																				pos:        position{line: 1153, col: 13, offset: 46747},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 244, col: 34, offset: 8802},
																																val:        ",",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 244, col: 38, offset: 8806},
																																label: "author",
																																expr: &actionExpr{
																																	pos: position{line: 263, col: 16, offset: 9262},
																																	run: (*parser).callonDocumentElement1079,
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 263, col: 16, offset: 9262},
																																		expr: &seqExpr{
																																			pos: position{line: 263, col: 17, offset: 9263},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 263, col: 17, offset: 9263},
																																					expr: &choiceExpr{
																																						pos: position{line: 1161, col: 8, offset: 46843},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1157, col: 12, offset: 46803},
																																								val:        "\r\n",
																																								ignoreCase: false,
																																							},
																																							&charClassMatcher{
																																								pos:        position{line: 1157, col: 21, offset: 46812},
																																								val:        "[\\r\\n]",
																																								chars:      []rune{'\r', '\n'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																							&notExpr{
																																								pos: position{line: 1159, col: 8, offset: 46832},
																																								expr: &anyMatcher{
																																									line: 1159, col: 9, offset: 46833,
																																								},
																																							},
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 263, col: 22, offset: 9268},
																																					expr: &litMatcher{
																																						pos:        position{line: 263, col: 23, offset: 9269},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 263, col: 27, offset: 9273},
																																					expr: &litMatcher{
																																						pos:        position{line: 263, col: 28, offset: 9274},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 263, col: 32, offset: 9278,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 244, col: 59, offset: 8827},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 248, col: 9, offset: 8974},
																													run: (*parser).callonDocumentElement1094,
																													expr: &seqExpr{
																														pos: position{line: 248, col: 9, offset: 8974},
																														exprs: []interface{}{
																															&litMatcher{
																																pos:        position{line: 248, col: 9, offset: 8974},
																																val:        "[",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 248, col: 13, offset: 8978},
																																label: "kind",
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9203},
																																	run: (*parser).callonDocumentElement1098,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9203},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&zeroOrMoreExpr{
																																pos: position{line: 248, col: 30, offset: 8995},
																																expr: &choiceExpr{
																																	pos: position{line: 1153, col: 7, offset: 46741},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1153, col: 7, offset: 46741},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1153, col: 13, offset: 46747},
																																			run: (*parser).callonDocumentElement1103,
																																			expr: &litMatcher{
																																				pos:        position{line: 1153, col: 13, offset: 46747},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 248, col: 34, offset: 8999},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&stateCodeExpr{
																										pos: position{line: 252, col: 5, offset: 9091},
																										run: (*parser).callonDocumentElement1106,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 188, col: 30, offset: 6780},
																							run: (*parser).callonDocumentElement1107,
																							expr: &seqExpr{
																								pos: position{line: 188, col: 30, offset: 6780},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 188, col: 30, offset: 6780},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 188, col: 34, offset: 6784},
																										label: "k",
																										expr: &choiceExpr{
																											pos: position{line: 537, col: 19, offset: 20206},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 537, col: 19, offset: 20206},
																													run: (*parser).callonDocumentElement1112,
																													expr: &litMatcher{
																														pos:        position{line: 537, col: 19, offset: 20206},
																														val:        "TIP",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 539, col: 5, offset: 20244},
																													run: (*parser).callonDocumentElement1114,
																													expr: &litMatcher{
																														pos:        position{line: 539, col: 5, offset: 20244},
																														val:        "NOTE",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 541, col: 5, offset: 20284},
																													run: (*parser).callonDocumentElement1116,
																													expr: &litMatcher{
																														pos:        position{line: 541, col: 5, offset: 20284},
																														val:        "IMPORTANT",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 543, col: 5, offset: 20334},
																													run: (*parser).callonDocumentElement1118,
																													expr: &litMatcher{
																														pos:        position{line: 543, col: 5, offset: 20334},
																														val:        "WARNING",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 545, col: 5, offset: 20380},
																													run: (*parser).callonDocumentElement1120,
																													expr: &litMatcher{
																														pos:        position{line: 545, col: 5, offset: 20380},
																														val:        "CAUTION",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 188, col: 53, offset: 6803},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 220, col: 21, offset: 7858},
																							run: (*parser).callonDocumentElement1123,
																							expr: &litMatcher{
																								pos:        position{line: 220, col: 21, offset: 7858},
																								val:        "[horizontal]",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 202, col: 19, offset: 7270},
																							run: (*parser).callonDocumentElement1125,
																							expr: &seqExpr{
																								pos: position{line: 202, col: 19, offset: 7270},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 202, col: 19, offset: 7270},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 202, col: 23, offset: 7274},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonDocumentElement1131,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 202, col: 27, offset: 7278},
																										label: "attributes",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 202, col: 38, offset: 7289},
																											expr: &choiceExpr{
																												pos: position{line: 206, col: 21, offset: 7402},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 206, col: 21, offset: 7402},
																														run: (*parser).callonDocumentElement1136,
																														expr: &seqExpr{
																															pos: position{line: 206, col: 21, offset: 7402},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 206, col: 21, offset: 7402},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		run: (*parser).callonDocumentElement1139,
																																		expr: &seqExpr{
																																			pos: position{line: 212, col: 17, offset: 7662},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 212, col: 17, offset: 7662},
																																					expr: &actionExpr{
																																						pos: position{line: 236, col: 14, offset: 8471},
																																						run: (*parser).callonDocumentElement1142,
																																						expr: &litMatcher{
																																							pos:        position{line: 236, col: 14, offset: 8471},
																																							val:        "quote",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 212, col: 28, offset: 7673},
																																					expr: &actionExpr{
																																						pos: position{line: 259, col: 14, offset: 9203},
																																						run: (*parser).callonDocumentElement1145,
																																						expr: &litMatcher{
																																							pos:        position{line: 259, col: 14, offset: 9203},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 212, col: 39, offset: 7684},
																																					expr: &actionExpr{
																																						pos: position{line: 1099, col: 16, offset: 45385},
																																						run: (*parser).callonDocumentElement1148,
																																						expr: &litMatcher{
																																							pos:        position{line: 1099, col: 16, offset: 45385},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 212, col: 52, offset: 7697},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 212, col: 56, offset: 7701},
																																						expr: &seqExpr{
																																							pos: position{line: 212, col: 57, offset: 7702},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 212, col: 57, offset: 7702},
																																									expr: &litMatcher{
																																										pos:        position{line: 212, col: 58, offset: 7703},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 212, col: 62, offset: 7707},
																																									expr: &litMatcher{
																																										pos:        position{line: 212, col: 63, offset: 7708},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 212, col: 67, offset: 7712},
																																									expr: &litMatcher{
																																										pos:        position{line: 212, col: 68, offset: 7713},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 212, col: 72, offset: 7717,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&litMatcher{
																																	pos:        position{line: 206, col: 40, offset: 7421},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																																&labeledExpr{
																																	pos:   position{line: 206, col: 44, offset: 7425},
																																	label: "value",
																																	expr: &actionExpr{
																																		pos: position{line: 216, col: 19, offset: 7776},
																																		run: (*parser).callonDocumentElement1162,
																																		expr: &labeledExpr{
																																			pos:   position{line: 216, col: 19, offset: 7776},
																																			label: "value",
																																			expr: &zeroOrMoreExpr{
																																				pos: position{line: 216, col: 25, offset: 7782},
																																				expr: &seqExpr{
																																					pos: position{line: 216, col: 26, offset: 7783},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 216, col: 26, offset: 7783},
																																							expr: &litMatcher{
																																								pos:        position{line: 216, col: 27, offset: 7784},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 216, col: 31, offset: 7788},
																																							expr: &litMatcher{
																																								pos:        position{line: 216, col: 32, offset: 7789},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 216, col: 36, offset: 7793},
																																							expr: &litMatcher{
																																								pos:        position{line: 216, col: 37, offset: 7794},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 216, col: 41, offset: 7798,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 206, col: 67, offset: 7448},
																																	expr: &litMatcher{
																																		pos:        position{line: 206, col: 67, offset: 7448},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 206, col: 72, offset: 7453},
																																	expr: &choiceExpr{
																																		pos: position{line: 1153, col: 7, offset: 46741},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1153, col: 7, offset: 46741},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1153, col: 13, offset: 46747},
																																				run: (*parser).callonDocumentElement1178,
																																				expr: &litMatcher{
																																					pos:        position{line: 1153, col: 13, offset: 46747},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 208, col: 5, offset: 7537},
																														run: (*parser).callonDocumentElement1180,
																														expr: &seqExpr{
																															pos: position{line: 208, col: 5, offset: 7537},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 208, col: 5, offset: 7537},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		run: (*parser).callonDocumentElement1183,
																																		expr: &seqExpr{
																																			pos: position{line: 212, col: 17, offset: 7662},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 212, col: 17, offset: 7662},
																																					expr: &actionExpr{
																																						pos: position{line: 236, col: 14, offset: 8471},
																																						run: (*parser).callonDocumentElement1186,
																																						expr: &litMatcher{
																																							pos:        position{line: 236, col: 14, offset: 8471},
																																							val:        "quote",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 212, col: 28, offset: 7673},
																																					expr: &actionExpr{
																																						pos: position{line: 259, col: 14, offset: 9203},
																																						run: (*parser).callonDocumentElement1189,
																																						expr: &litMatcher{
																																							pos:        position{line: 259, col: 14, offset: 9203},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 212, col: 39, offset: 7684},
																																					expr: &actionExpr{
																																						pos: position{line: 1099, col: 16, offset: 45385},
																																						run: (*parser).callonDocumentElement1192,
																																						expr: &litMatcher{
																																							pos:        position{line: 1099, col: 16, offset: 45385},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 212, col: 52, offset: 7697},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 212, col: 56, offset: 7701},
																																						expr: &seqExpr{
																																							pos: position{line: 212, col: 57, offset: 7702},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 212, col: 57, offset: 7702},
																																									expr: &litMatcher{
																																										pos:        position{line: 212, col: 58, offset: 7703},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 212, col: 62, offset: 7707},
																																									expr: &litMatcher{
																																										pos:        position{line: 212, col: 63, offset: 7708},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 212, col: 67, offset: 7712},
																																									expr: &litMatcher{
																																										pos:        position{line: 212, col: 68, offset: 7713},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 212, col: 72, offset: 7717,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 208, col: 24, offset: 7556},
																																	expr: &litMatcher{
																																		pos:        position{line: 208, col: 24, offset: 7556},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 208, col: 29, offset: 7561},
																																	expr: &choiceExpr{
																																		pos: position{line: 1153, col: 7, offset: 46741},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1153, col: 7, offset: 46741},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1153, col: 13, offset: 46747},
																																				run: (*parser).callonDocumentElement1209,
																																				expr: &litMatcher{
																																					pos:        position{line: 1153, col: 13, offset: 46747},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 202, col: 59, offset: 7310},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 152, col: 170, offset: 5611},
																				expr: &choiceExpr{
																					pos: position{line: 1153, col: 7, offset: 46741},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1153, col: 7, offset: 46741},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1153, col: 13, offset: 46747},
																							run: (*parser).callonDocumentElement1215,
																							expr: &litMatcher{
																								pos:        position{line: 1153, col: 13, offset: 46747},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1161, col: 8, offset: 46843},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1157, col: 12, offset: 46803},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1157, col: 21, offset: 46812},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1159, col: 8, offset: 46832},
																						expr: &anyMatcher{
																							line: 1159, col: 9, offset: 46833,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1095, col: 82, offset: 45205},
													label: "lines",
													expr: &actionExpr{
														pos: position{line: 1108, col: 39, offset: 45594},
														run: (*parser).callonDocumentElement1223,
														expr: &labeledExpr{
															pos:   position{line: 1108, col: 39, offset: 45594},
															label: "lines",
															expr: &oneOrMoreExpr{
																pos: position{line: 1108, col: 45, offset: 45600},
																expr: &actionExpr{
																	pos: position{line: 1109, col: 5, offset: 45606},
																	run: (*parser).callonDocumentElement1226,
																	expr: &seqExpr{
																		pos: position{line: 1109, col: 5, offset: 45606},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 1109, col: 5, offset: 45606},
																				label: "line",
																				expr: &actionExpr{
																					pos: position{line: 1109, col: 11, offset: 45612},
																					run: (*parser).callonDocumentElement1229,
																					expr: &seqExpr{
																						pos: position{line: 1109, col: 11, offset: 45612},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1109, col: 11, offset: 45612},
																								expr: &actionExpr{
																									pos: position{line: 1120, col: 14, offset: 45925},
																									run: (*parser).callonDocumentElement1232,
																									expr: &seqExpr{
																										pos: position{line: 1120, col: 14, offset: 45925},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1120, col: 14, offset: 45925},
																												expr: &notExpr{
																													pos: position{line: 1159, col: 8, offset: 46832},
																													expr: &anyMatcher{
																														line: 1159, col: 9, offset: 46833,
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 1120, col: 19, offset: 45930},
																												expr: &choiceExpr{
																													pos: position{line: 1153, col: 7, offset: 46741},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1153, col: 7, offset: 46741},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1153, col: 13, offset: 46747},
																															run: (*parser).callonDocumentElement1240,
																															expr: &litMatcher{
																																pos:        position{line: 1153, col: 13, offset: 46747},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&choiceExpr{
																												pos: position{line: 1161, col: 8, offset: 46843},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1157, col: 12, offset: 46803},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1157, col: 21, offset: 46812},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1159, col: 8, offset: 46832},
																														expr: &anyMatcher{
																															line: 1159, col: 9, offset: 46833,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 1109, col: 24, offset: 45625},
																								expr: &seqExpr{
																									pos: position{line: 1109, col: 25, offset: 45626},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1109, col: 25, offset: 45626},
																											expr: &choiceExpr{
																												pos: position{line: 1161, col: 8, offset: 46843},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1157, col: 12, offset: 46803},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1157, col: 21, offset: 46812},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1159, col: 8, offset: 46832},
																														expr: &anyMatcher{
																															line: 1159, col: 9, offset: 46833,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 1109, col: 30, offset: 45631,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1161, col: 8, offset: 46843},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1157, col: 12, offset: 46803},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1157, col: 21, offset: 46812},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1159, col: 8, offset: 46832},
																						expr: &anyMatcher{
																							line: 1159, col: 9, offset: 46833,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 144, col: 15, offset: 5182},
										name: "Paragraph",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteAttributes",
			pos:  position{line: 224, col: 1, offset: 7942},
			expr: &choiceExpr{
				pos: position{line: 224, col: 20, offset: 7961},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 224, col: 20, offset: 7961},
						run: (*parser).callonQuoteAttributes2,
						expr: &seqExpr{
							pos: position{line: 224, col: 20, offset: 7961},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 224, col: 20, offset: 7961},
									val:        "[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 224, col: 24, offset: 7965},
									label: "kind",
									expr: &actionExpr{
										pos: position{line: 236, col: 14, offset: 8471},
										run: (*parser).callonQuoteAttributes6,
										expr: &litMatcher{
											pos:        position{line: 236, col: 14, offset: 8471},
											val:        "quote",
											ignoreCase: false,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 224, col: 41, offset: 7982},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonQuoteAttributes11,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 224, col: 45, offset: 7986},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 224, col: 49, offset: 7990},
									label: "author",
									expr: &actionExpr{
										pos: position{line: 263, col: 16, offset: 9262},
										run: (*parser).callonQuoteAttributes15,
										expr: &zeroOrMoreExpr{
											pos: position{line: 263, col: 16, offset: 9262},
											expr: &seqExpr{
												pos: position{line: 263, col: 17, offset: 9263},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 263, col: 17, offset: 9263},
														expr: &choiceExpr{
															pos: position{line: 1161, col: 8, offset: 46843},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1157, col: 12, offset: 46803},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1157, col: 21, offset: 46812},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1159, col: 8, offset: 46832},
																	expr: &anyMatcher{
																		line: 1159, col: 9, offset: 46833,
																	},
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 263, col: 22, offset: 9268},
														expr: &litMatcher{
															pos:        position{line: 263, col: 23, offset: 9269},
															val:        ",",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 263, col: 27, offset: 9273},
														expr: &litMatcher{
															pos:        position{line: 263, col: 28, offset: 9274},
															val:        "]",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 263, col: 32, offset: 9278,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 224, col: 70, offset: 8011},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 224, col: 74, offset: 8015},
									label: "title",
									expr: &actionExpr{
										pos: position{line: 267, col: 15, offset: 9332},
										run: (*parser).callonQuoteAttributes31,
										expr: &zeroOrMoreExpr{
											pos: position{line: 267, col: 15, offset: 9332},
											expr: &seqExpr{
												pos: position{line: 267, col: 16, offset: 9333},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 267, col: 16, offset: 9333},
														expr: &choiceExpr{
															pos: position{line: 1161, col: 8, offset: 46843},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1157, col: 12, offset: 46803},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1157, col: 21, offset: 46812},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1159, col: 8, offset: 46832},
																	expr: &anyMatcher{
																		line: 1159, col: 9, offset: 46833,
																	},
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 267, col: 21, offset: 9338},
														expr: &litMatcher{
															pos:        position{line: 267, col: 22, offset: 9339},
															val:        ",",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 267, col: 26, offset: 9343},
														expr: &litMatcher{
															pos:        position{line: 267, col: 27, offset: 9344},
															val:        "]",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 267, col: 31, offset: 9348,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 224, col: 93, offset: 8034},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 228, col: 5, offset: 8177},
						run: (*parser).callonQuoteAttributes46,
						expr: &seqExpr{
							pos: position{line: 228, col: 5, offset: 8177},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 228, col: 5, offset: 8177},
									val:        "[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 228, col: 9, offset: 8181},
									label: "kind",
									expr: &actionExpr{
										pos: position{line: 236, col: 14, offset: 8471},
										run: (*parser).callonQuoteAttributes50,
										expr: &litMatcher{
											pos:        position{line: 236, col: 14, offset: 8471},
											val:        "quote",
											ignoreCase: false,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 228, col: 26, offset: 8198},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonQuoteAttributes55,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 228, col: 30, offset: 8202},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 228, col: 34, offset: 8206},
									label: "author",
									expr: &actionExpr{
										pos: position{line: 263, col: 16, offset: 9262},
										run: (*parser).callonQuoteAttributes59,
										expr: &zeroOrMoreExpr{
											pos: position{line: 263, col: 16, offset: 9262},
											expr: &seqExpr{
												pos: position{line: 263, col: 17, offset: 9263},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 263, col: 17, offset: 9263},
														expr: &choiceExpr{
															pos: position{line: 1161, col: 8, offset: 46843},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1157, col: 12, offset: 46803},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1157, col: 21, offset: 46812},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1159, col: 8, offset: 46832},
																	expr: &anyMatcher{
																		line: 1159, col: 9, offset: 46833,
																	},
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 263, col: 22, offset: 9268},
														expr: &litMatcher{
															pos:        position{line: 263, col: 23, offset: 9269},
															val:        ",",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 263, col: 27, offset: 9273},
														expr: &litMatcher{
															pos:        position{line: 263, col: 28, offset: 9274},
															val:        "]",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 263, col: 32, offset: 9278,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 228, col: 55, offset: 8227},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 232, col: 5, offset: 8358},
						run: (*parser).callonQuoteAttributes74,
						expr: &seqExpr{
							pos: position{line: 232, col: 5, offset: 8358},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 232, col: 5, offset: 8358},
									val:        "[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 232, col: 9, offset: 8362},
									label: "kind",
									expr: &actionExpr{
										pos: position{line: 236, col: 14, offset: 8471},
										run: (*parser).callonQuoteAttributes78,
										expr: &litMatcher{
											pos:        position{line: 236, col: 14, offset: 8471},
											val:        "quote",
											ignoreCase: false,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 232, col: 26, offset: 8379},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonQuoteAttributes83,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 232, col: 30, offset: 8383},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseAttributes",
			pos:  position{line: 240, col: 1, offset: 8515},
			expr: &actionExpr{
				pos: position{line: 240, col: 20, offset: 8534},
				run: (*parser).callonVerseAttributes1,
				expr: &seqExpr{
					pos: position{line: 240, col: 20, offset: 8534},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 240, col: 20, offset: 8534},
							label: "attribute",
							expr: &choiceExpr{
								pos: position{line: 240, col: 31, offset: 8545},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 240, col: 31, offset: 8545},
										run: (*parser).callonVerseAttributes5,
										expr: &seqExpr{
											pos: position{line: 240, col: 31, offset: 8545},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 240, col: 31, offset: 8545},
													val:        "[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 240, col: 35, offset: 8549},
													label: "kind",
													expr: &actionExpr{
														pos: position{line: 259, col: 14, offset: 9203},
														run: (*parser).callonVerseAttributes9,
														expr: &litMatcher{
															pos:        position{line: 259, col: 14, offset: 9203},
															val:        "verse",
															ignoreCase: false,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 240, col: 52, offset: 8566},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonVerseAttributes14,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 240, col: 56, offset: 8570},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 240, col: 60, offset: 8574},
													label: "author",
													expr: &actionExpr{
														pos: position{line: 263, col: 16, offset: 9262},
														run: (*parser).callonVerseAttributes18,
														expr: &zeroOrMoreExpr{
															pos: position{line: 263, col: 16, offset: 9262},
															expr: &seqExpr{
																pos: position{line: 263, col: 17, offset: 9263},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 263, col: 17, offset: 9263},
																		expr: &choiceExpr{
																			pos: position{line: 1161, col: 8, offset: 46843},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1159, col: 8, offset: 46832},
																					expr: &anyMatcher{
																						line: 1159, col: 9, offset: 46833,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 263, col: 22, offset: 9268},
																		expr: &litMatcher{
																			pos:        position{line: 263, col: 23, offset: 9269},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 263, col: 27, offset: 9273},
																		expr: &litMatcher{
																			pos:        position{line: 263, col: 28, offset: 9274},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 263, col: 32, offset: 9278,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 240, col: 81, offset: 8595},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 240, col: 85, offset: 8599},
													label: "title",
													expr: &actionExpr{
														pos: position{line: 267, col: 15, offset: 9332},
														run: (*parser).callonVerseAttributes34,
														expr: &zeroOrMoreExpr{
															pos: position{line: 267, col: 15, offset: 9332},
															expr: &seqExpr{
																pos: position{line: 267, col: 16, offset: 9333},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 267, col: 16, offset: 9333},
																		expr: &choiceExpr{
																			pos: position{line: 1161, col: 8, offset: 46843},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1159, col: 8, offset: 46832},
																					expr: &anyMatcher{
																						line: 1159, col: 9, offset: 46833,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 267, col: 21, offset: 9338},
																		expr: &litMatcher{
																			pos:        position{line: 267, col: 22, offset: 9339},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 267, col: 26, offset: 9343},
																		expr: &litMatcher{
																			pos:        position{line: 267, col: 27, offset: 9344},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 267, col: 31, offset: 9348,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 240, col: 104, offset: 8618},
													val:        "]",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 244, col: 9, offset: 8777},
										run: (*parser).callonVerseAttributes49,
										expr: &seqExpr{
											pos: position{line: 244, col: 9, offset: 8777},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 244, col: 9, offset: 8777},
													val:        "[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 244, col: 13, offset: 8781},
													label: "kind",
													expr: &actionExpr{
														pos: position{line: 259, col: 14, offset: 9203},
														run: (*parser).callonVerseAttributes53,
														expr: &litMatcher{
															pos:        position{line: 259, col: 14, offset: 9203},
															val:        "verse",
															ignoreCase: false,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 244, col: 30, offset: 8798},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonVerseAttributes58,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 244, col: 34, offset: 8802},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 244, col: 38, offset: 8806},
													label: "author",
													expr: &actionExpr{
														pos: position{line: 263, col: 16, offset: 9262},
														run: (*parser).callonVerseAttributes62,
														expr: &zeroOrMoreExpr{
															pos: position{line: 263, col: 16, offset: 9262},
															expr: &seqExpr{
																pos: position{line: 263, col: 17, offset: 9263},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 263, col: 17, offset: 9263},
																		expr: &choiceExpr{
																			pos: position{line: 1161, col: 8, offset: 46843},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1159, col: 8, offset: 46832},
																					expr: &anyMatcher{
																						line: 1159, col: 9, offset: 46833,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 263, col: 22, offset: 9268},
																		expr: &litMatcher{
																			pos:        position{line: 263, col: 23, offset: 9269},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 263, col: 27, offset: 9273},
																		expr: &litMatcher{
																			pos:        position{line: 263, col: 28, offset: 9274},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 263, col: 32, offset: 9278,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 244, col: 59, offset: 8827},
													val:        "]",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 248, col: 9, offset: 8974},
										run: (*parser).callonVerseAttributes77,
										expr: &seqExpr{
											pos: position{line: 248, col: 9, offset: 8974},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 248, col: 9, offset: 8974},
													val:        "[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 248, col: 13, offset: 8978},
													label: "kind",
													expr: &actionExpr{
														pos: position{line: 259, col: 14, offset: 9203},
														run: (*parser).callonVerseAttributes81,
														expr: &litMatcher{
															pos:        position{line: 259, col: 14, offset: 9203},
															val:        "verse",
															ignoreCase: false,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 248, col: 30, offset: 8995},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonVerseAttributes86,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 248, col: 34, offset: 8999},
													val:        "]",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
						&stateCodeExpr{
							pos: position{line: 252, col: 5, offset: 9091},
							run: (*parser).callonVerseAttributes89,
						},
					},
				},
			},
		},
		{
			name: "Section",
			pos:  position{line: 274, col: 1, offset: 9492},
			expr: &actionExpr{
				pos: position{line: 274, col: 12, offset: 9503},
				run: (*parser).callonSection1,
				expr: &seqExpr{
					pos: position{line: 274, col: 12, offset: 9503},
					exprs: []interface{}{
						&andExpr{
							pos: position{line: 274, col: 12, offset: 9503},
							expr: &litMatcher{
								pos:        position{line: 274, col: 13, offset: 9504},
								val:        "=",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 275, col: 5, offset: 9577},
							label: "section",
							expr: &choiceExpr{
								pos: position{line: 275, col: 14, offset: 9586},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 275, col: 14, offset: 9586},
										name: "Section0",
									},
									&ruleRefExpr{
										pos:  position{line: 275, col: 25, offset: 9597},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 275, col: 36, offset: 9608},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 275, col: 47, offset: 9619},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 275, col: 58, offset: 9630},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 275, col: 69, offset: 9641},
										name: "Section5",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0",
			pos:  position{line: 281, col: 1, offset: 9722},
			expr: &actionExpr{
				pos: position{line: 281, col: 13, offset: 9734},
				run: (*parser).callonSection01,
				expr: &seqExpr{
					pos: position{line: 281, col: 13, offset: 9734},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 281, col: 13, offset: 9734},
							expr: &notExpr{
								pos: position{line: 1159, col: 8, offset: 46832},
								expr: &anyMatcher{
									line: 1159, col: 9, offset: 46833,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 282, col: 5, offset: 9805},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 282, col: 13, offset: 9813},
								name: "Section0Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 282, col: 28, offset: 9828},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 282, col: 38, offset: 9838},
								expr: &ruleRefExpr{
									pos:  position{line: 282, col: 38, offset: 9838},
									name: "Section0Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Title",
			pos:  position{line: 288, col: 1, offset: 9987},
			expr: &actionExpr{
				pos: position{line: 288, col: 18, offset: 10004},
				run: (*parser).callonSection0Title1,
				expr: &seqExpr{
					pos: position{line: 288, col: 18, offset: 10004},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 286, col: 24, offset: 9978},
							val:        "=",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 286, col: 28, offset: 9982},
							expr: &choiceExpr{
								pos: position{line: 1153, col: 7, offset: 46741},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1153, col: 7, offset: 46741},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1153, col: 13, offset: 46747},
										run: (*parser).callonSection0Title7,
										expr: &litMatcher{
											pos:        position{line: 1153, col: 13, offset: 46747},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 288, col: 38, offset: 10024},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 288, col: 48, offset: 10034},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 288, col: 63, offset: 10049},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 288, col: 67, offset: 10053},
								expr: &actionExpr{
									pos: position{line: 167, col: 20, offset: 6064},
									run: (*parser).callonSection0Title13,
									expr: &seqExpr{
										pos: position{line: 167, col: 20, offset: 6064},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 167, col: 20, offset: 6064},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 167, col: 25, offset: 6069},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1139, col: 7, offset: 46459},
													run: (*parser).callonSection0Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														expr: &seqExpr{
															pos: position{line: 1139, col: 8, offset: 46460},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1139, col: 8, offset: 46460},
																	expr: &choiceExpr{
																		pos: position{line: 1157, col: 12, offset: 46803},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1157, col: 12, offset: 46803},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1157, col: 21, offset: 46812},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 17, offset: 46469},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonSection0Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 21, offset: 46473},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 22, offset: 46474},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 26, offset: 46478},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 27, offset: 46479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 31, offset: 46483},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 32, offset: 46484},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 37, offset: 46489},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 38, offset: 46490},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 43, offset: 46495},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 44, offset: 46496},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1139, col: 48, offset: 46500,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 167, col: 33, offset: 6077},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 167, col: 38, offset: 6082},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonSection0Title44,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0TitleWithAttributes",
			pos:  position{line: 292, col: 1, offset: 10168},
			expr: &actionExpr{
				pos: position{line: 292, col: 32, offset: 10199},
				run: (*parser).callonSection0TitleWithAttributes1,
				expr: &seqExpr{
					pos: position{line: 292, col: 32, offset: 10199},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 292, col: 32, offset: 10199},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 292, col: 43, offset: 10210},
								expr: &actionExpr{
									pos: position{line: 151, col: 21, offset: 5356},
									run: (*parser).callonSection0TitleWithAttributes5,
									expr: &seqExpr{
										pos: position{line: 151, col: 21, offset: 5356},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 151, col: 21, offset: 5356},
												expr: &charClassMatcher{
													pos:        position{line: 151, col: 23, offset: 5358},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 152, col: 5, offset: 5446},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 152, col: 11, offset: 5452},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 161, col: 14, offset: 5913},
															run: (*parser).callonSection0TitleWithAttributes11,
															expr: &seqExpr{
																pos: position{line: 161, col: 14, offset: 5913},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 161, col: 14, offset: 5913},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 161, col: 19, offset: 5918},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection0TitleWithAttributes15,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection0TitleWithAttributes25,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 161, col: 27, offset: 5926},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 163, col: 5, offset: 5980},
															run: (*parser).callonSection0TitleWithAttributes39,
															expr: &seqExpr{
																pos: position{line: 163, col: 5, offset: 5980},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 163, col: 5, offset: 5980},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 163, col: 10, offset: 5985},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection0TitleWithAttributes43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection0TitleWithAttributes53,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 163, col: 18, offset: 5993},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 173, col: 17, offset: 6296},
															run: (*parser).callonSection0TitleWithAttributes67,
															expr: &seqExpr{
																pos: position{line: 173, col: 17, offset: 6296},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 173, col: 17, offset: 6296},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 173, col: 21, offset: 6300},
																		expr: &litMatcher{
																			pos:        position{line: 173, col: 22, offset: 6301},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 173, col: 26, offset: 6305},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection0TitleWithAttributes75,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 173, col: 30, offset: 6309},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 173, col: 37, offset: 6316},
																			run: (*parser).callonSection0TitleWithAttributes78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 173, col: 37, offset: 6316},
																				expr: &seqExpr{
																					pos: position{line: 173, col: 38, offset: 6317},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 173, col: 38, offset: 6317},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 173, col: 47, offset: 6326,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 16, offset: 6537},
															run: (*parser).callonSection0TitleWithAttributes86,
															expr: &seqExpr{
																pos: position{line: 181, col: 16, offset: 6537},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 16, offset: 6537},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 21, offset: 6542},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection0TitleWithAttributes92,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 25, offset: 6546},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 181, col: 31, offset: 6552},
																			run: (*parser).callonSection0TitleWithAttributes95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 181, col: 31, offset: 6552},
																				expr: &seqExpr{
																					pos: position{line: 181, col: 32, offset: 6553},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 181, col: 32, offset: 6553},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 181, col: 41, offset: 6562},
																							expr: &litMatcher{
																								pos:        position{line: 181, col: 42, offset: 6563},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 181, col: 46, offset: 6567,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 183, col: 8, offset: 6615},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 193, col: 21, offset: 6978},
															run: (*parser).callonSection0TitleWithAttributes106,
															expr: &litMatcher{
																pos:        position{line: 193, col: 21, offset: 6978},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 195, col: 5, offset: 7036},
															run: (*parser).callonSection0TitleWithAttributes108,
															expr: &seqExpr{
																pos: position{line: 195, col: 5, offset: 7036},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 195, col: 5, offset: 7036},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 195, col: 16, offset: 7047},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 195, col: 26, offset: 7057},
																			run: (*parser).callonSection0TitleWithAttributes112,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 195, col: 26, offset: 7057},
																				expr: &seqExpr{
																					pos: position{line: 195, col: 27, offset: 7058},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 195, col: 27, offset: 7058},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 195, col: 36, offset: 7067},
																							expr: &litMatcher{
																								pos:        position{line: 195, col: 37, offset: 7068},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 195, col: 41, offset: 7072,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 197, col: 7, offset: 7119},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 224, col: 20, offset: 7961},
															run: (*parser).callonSection0TitleWithAttributes123,
															expr: &seqExpr{
																pos: position{line: 224, col: 20, offset: 7961},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 224, col: 20, offset: 7961},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 24, offset: 7965},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection0TitleWithAttributes127,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 224, col: 41, offset: 7982},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection0TitleWithAttributes132,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 45, offset: 7986},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 49, offset: 7990},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection0TitleWithAttributes136,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 70, offset: 8011},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 74, offset: 8015},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 267, col: 15, offset: 9332},
																			run: (*parser).callonSection0TitleWithAttributes152,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 267, col: 15, offset: 9332},
																				expr: &seqExpr{
																					pos: position{line: 267, col: 16, offset: 9333},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 267, col: 16, offset: 9333},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 21, offset: 9338},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 22, offset: 9339},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 26, offset: 9343},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 27, offset: 9344},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 267, col: 31, offset: 9348,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 93, offset: 8034},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 228, col: 5, offset: 8177},
															run: (*parser).callonSection0TitleWithAttributes167,
															expr: &seqExpr{
																pos: position{line: 228, col: 5, offset: 8177},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 228, col: 5, offset: 8177},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 9, offset: 8181},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection0TitleWithAttributes171,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 228, col: 26, offset: 8198},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection0TitleWithAttributes176,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 30, offset: 8202},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 34, offset: 8206},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection0TitleWithAttributes180,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 55, offset: 8227},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 232, col: 5, offset: 8358},
															run: (*parser).callonSection0TitleWithAttributes195,
															expr: &seqExpr{
																pos: position{line: 232, col: 5, offset: 8358},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 232, col: 5, offset: 8358},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 232, col: 9, offset: 8362},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection0TitleWithAttributes199,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 232, col: 26, offset: 8379},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection0TitleWithAttributes204,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 232, col: 30, offset: 8383},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 240, col: 20, offset: 8534},
															run: (*parser).callonSection0TitleWithAttributes207,
															expr: &seqExpr{
																pos: position{line: 240, col: 20, offset: 8534},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 240, col: 20, offset: 8534},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 240, col: 31, offset: 8545},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 240, col: 31, offset: 8545},
																					run: (*parser).callonSection0TitleWithAttributes211,
																					expr: &seqExpr{
																						pos: position{line: 240, col: 31, offset: 8545},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 240, col: 31, offset: 8545},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 35, offset: 8549},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection0TitleWithAttributes215,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 240, col: 52, offset: 8566},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection0TitleWithAttributes220,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 56, offset: 8570},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 60, offset: 8574},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection0TitleWithAttributes224,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 81, offset: 8595},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 85, offset: 8599},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 267, col: 15, offset: 9332},
																									run: (*parser).callonSection0TitleWithAttributes240,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 267, col: 15, offset: 9332},
																										expr: &seqExpr{
																											pos: position{line: 267, col: 16, offset: 9333},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 267, col: 16, offset: 9333},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 21, offset: 9338},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 22, offset: 9339},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 26, offset: 9343},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 27, offset: 9344},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 267, col: 31, offset: 9348,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 104, offset: 8618},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 244, col: 9, offset: 8777},
																					run: (*parser).callonSection0TitleWithAttributes255,
																					expr: &seqExpr{
																						pos: position{line: 244, col: 9, offset: 8777},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 244, col: 9, offset: 8777},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 13, offset: 8781},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection0TitleWithAttributes259,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 244, col: 30, offset: 8798},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection0TitleWithAttributes264,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 34, offset: 8802},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 38, offset: 8806},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection0TitleWithAttributes268,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 59, offset: 8827},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 248, col: 9, offset: 8974},
																					run: (*parser).callonSection0TitleWithAttributes283,
																					expr: &seqExpr{
																						pos: position{line: 248, col: 9, offset: 8974},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 248, col: 9, offset: 8974},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 248, col: 13, offset: 8978},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection0TitleWithAttributes287,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 248, col: 30, offset: 8995},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection0TitleWithAttributes292,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 248, col: 34, offset: 8999},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 252, col: 5, offset: 9091},
																		run: (*parser).callonSection0TitleWithAttributes295,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 188, col: 30, offset: 6780},
															run: (*parser).callonSection0TitleWithAttributes296,
															expr: &seqExpr{
																pos: position{line: 188, col: 30, offset: 6780},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 188, col: 30, offset: 6780},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 188, col: 34, offset: 6784},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 537, col: 19, offset: 20206},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 537, col: 19, offset: 20206},
																					run: (*parser).callonSection0TitleWithAttributes301,
																					expr: &litMatcher{
																						pos:        position{line: 537, col: 19, offset: 20206},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 539, col: 5, offset: 20244},
																					run: (*parser).callonSection0TitleWithAttributes303,
																					expr: &litMatcher{
																						pos:        position{line: 539, col: 5, offset: 20244},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 541, col: 5, offset: 20284},
																					run: (*parser).callonSection0TitleWithAttributes305,
																					expr: &litMatcher{
																						pos:        position{line: 541, col: 5, offset: 20284},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 543, col: 5, offset: 20334},
																					run: (*parser).callonSection0TitleWithAttributes307,
																					expr: &litMatcher{
																						pos:        position{line: 543, col: 5, offset: 20334},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 545, col: 5, offset: 20380},
																					run: (*parser).callonSection0TitleWithAttributes309,
																					expr: &litMatcher{
																						pos:        position{line: 545, col: 5, offset: 20380},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 188, col: 53, offset: 6803},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 220, col: 21, offset: 7858},
															run: (*parser).callonSection0TitleWithAttributes312,
															expr: &litMatcher{
																pos:        position{line: 220, col: 21, offset: 7858},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 202, col: 19, offset: 7270},
															run: (*parser).callonSection0TitleWithAttributes314,
															expr: &seqExpr{
																pos: position{line: 202, col: 19, offset: 7270},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 202, col: 19, offset: 7270},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 202, col: 23, offset: 7274},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection0TitleWithAttributes320,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 202, col: 27, offset: 7278},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 202, col: 38, offset: 7289},
																			expr: &choiceExpr{
																				pos: position{line: 206, col: 21, offset: 7402},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						run: (*parser).callonSection0TitleWithAttributes325,
																						expr: &seqExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 206, col: 21, offset: 7402},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection0TitleWithAttributes328,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection0TitleWithAttributes331,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection0TitleWithAttributes334,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection0TitleWithAttributes337,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 206, col: 40, offset: 7421},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 206, col: 44, offset: 7425},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 216, col: 19, offset: 7776},
																										run: (*parser).callonSection0TitleWithAttributes351,
																										expr: &labeledExpr{
																											pos:   position{line: 216, col: 19, offset: 7776},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 216, col: 25, offset: 7782},
																												expr: &seqExpr{
																													pos: position{line: 216, col: 26, offset: 7783},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 216, col: 26, offset: 7783},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 27, offset: 7784},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 31, offset: 7788},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 32, offset: 7789},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 36, offset: 7793},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 37, offset: 7794},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 216, col: 41, offset: 7798,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 206, col: 67, offset: 7448},
																									expr: &litMatcher{
																										pos:        position{line: 206, col: 67, offset: 7448},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 206, col: 72, offset: 7453},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection0TitleWithAttributes367,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						run: (*parser).callonSection0TitleWithAttributes369,
																						expr: &seqExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 208, col: 5, offset: 7537},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection0TitleWithAttributes372,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection0TitleWithAttributes375,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection0TitleWithAttributes378,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection0TitleWithAttributes381,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 208, col: 24, offset: 7556},
																									expr: &litMatcher{
																										pos:        position{line: 208, col: 24, offset: 7556},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 208, col: 29, offset: 7561},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection0TitleWithAttributes398,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 202, col: 59, offset: 7310},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 152, col: 170, offset: 5611},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonSection0TitleWithAttributes404,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 293, col: 5, offset: 10235},
							label: "title",
							expr: &ruleRefExpr{
								pos:  position{line: 293, col: 12, offset: 10242},
								name: "Section0Title",
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Element",
			pos:  position{line: 297, col: 1, offset: 10337},
			expr: &actionExpr{
				pos: position{line: 297, col: 20, offset: 10356},
				run: (*parser).callonSection0Element1,
				expr: &seqExpr{
					pos: position{line: 297, col: 20, offset: 10356},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 297, col: 20, offset: 10356},
							expr: &seqExpr{
								pos: position{line: 286, col: 24, offset: 9978},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 286, col: 24, offset: 9978},
										val:        "=",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 286, col: 28, offset: 9982},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonSection0Element9,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 298, col: 5, offset: 10381},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 298, col: 16, offset: 10392},
								expr: &actionExpr{
									pos: position{line: 151, col: 21, offset: 5356},
									run: (*parser).callonSection0Element13,
									expr: &seqExpr{
										pos: position{line: 151, col: 21, offset: 5356},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 151, col: 21, offset: 5356},
												expr: &charClassMatcher{
													pos:        position{line: 151, col: 23, offset: 5358},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 152, col: 5, offset: 5446},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 152, col: 11, offset: 5452},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 161, col: 14, offset: 5913},
															run: (*parser).callonSection0Element19,
															expr: &seqExpr{
																pos: position{line: 161, col: 14, offset: 5913},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 161, col: 14, offset: 5913},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 161, col: 19, offset: 5918},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection0Element23,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection0Element33,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 161, col: 27, offset: 5926},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 163, col: 5, offset: 5980},
															run: (*parser).callonSection0Element47,
															expr: &seqExpr{
																pos: position{line: 163, col: 5, offset: 5980},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 163, col: 5, offset: 5980},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 163, col: 10, offset: 5985},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection0Element51,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection0Element61,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 163, col: 18, offset: 5993},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 173, col: 17, offset: 6296},
															run: (*parser).callonSection0Element75,
															expr: &seqExpr{
																pos: position{line: 173, col: 17, offset: 6296},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 173, col: 17, offset: 6296},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 173, col: 21, offset: 6300},
																		expr: &litMatcher{
																			pos:        position{line: 173, col: 22, offset: 6301},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 173, col: 26, offset: 6305},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection0Element83,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 173, col: 30, offset: 6309},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 173, col: 37, offset: 6316},
																			run: (*parser).callonSection0Element86,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 173, col: 37, offset: 6316},
																				expr: &seqExpr{
																					pos: position{line: 173, col: 38, offset: 6317},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 173, col: 38, offset: 6317},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 173, col: 47, offset: 6326,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 16, offset: 6537},
															run: (*parser).callonSection0Element94,
															expr: &seqExpr{
																pos: position{line: 181, col: 16, offset: 6537},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 16, offset: 6537},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 21, offset: 6542},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection0Element100,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 25, offset: 6546},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 181, col: 31, offset: 6552},
																			run: (*parser).callonSection0Element103,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 181, col: 31, offset: 6552},
																				expr: &seqExpr{
																					pos: position{line: 181, col: 32, offset: 6553},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 181, col: 32, offset: 6553},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 181, col: 41, offset: 6562},
																							expr: &litMatcher{
																								pos:        position{line: 181, col: 42, offset: 6563},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 181, col: 46, offset: 6567,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 183, col: 8, offset: 6615},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 193, col: 21, offset: 6978},
															run: (*parser).callonSection0Element114,
															expr: &litMatcher{
																pos:        position{line: 193, col: 21, offset: 6978},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 195, col: 5, offset: 7036},
															run: (*parser).callonSection0Element116,
															expr: &seqExpr{
																pos: position{line: 195, col: 5, offset: 7036},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 195, col: 5, offset: 7036},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 195, col: 16, offset: 7047},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 195, col: 26, offset: 7057},
																			run: (*parser).callonSection0Element120,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 195, col: 26, offset: 7057},
																				expr: &seqExpr{
																					pos: position{line: 195, col: 27, offset: 7058},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 195, col: 27, offset: 7058},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 195, col: 36, offset: 7067},
																							expr: &litMatcher{
																								pos:        position{line: 195, col: 37, offset: 7068},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 195, col: 41, offset: 7072,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 197, col: 7, offset: 7119},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 224, col: 20, offset: 7961},
															run: (*parser).callonSection0Element131,
															expr: &seqExpr{
																pos: position{line: 224, col: 20, offset: 7961},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 224, col: 20, offset: 7961},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 24, offset: 7965},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection0Element135,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 224, col: 41, offset: 7982},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection0Element140,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 45, offset: 7986},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 49, offset: 7990},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection0Element144,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 70, offset: 8011},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 74, offset: 8015},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 267, col: 15, offset: 9332},
																			run: (*parser).callonSection0Element160,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 267, col: 15, offset: 9332},
																				expr: &seqExpr{
																					pos: position{line: 267, col: 16, offset: 9333},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 267, col: 16, offset: 9333},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 21, offset: 9338},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 22, offset: 9339},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 26, offset: 9343},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 27, offset: 9344},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 267, col: 31, offset: 9348,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 93, offset: 8034},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 228, col: 5, offset: 8177},
															run: (*parser).callonSection0Element175,
															expr: &seqExpr{
																pos: position{line: 228, col: 5, offset: 8177},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 228, col: 5, offset: 8177},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 9, offset: 8181},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection0Element179,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 228, col: 26, offset: 8198},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection0Element184,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 30, offset: 8202},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 34, offset: 8206},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection0Element188,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 55, offset: 8227},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 232, col: 5, offset: 8358},
															run: (*parser).callonSection0Element203,
															expr: &seqExpr{
																pos: position{line: 232, col: 5, offset: 8358},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 232, col: 5, offset: 8358},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 232, col: 9, offset: 8362},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection0Element207,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 232, col: 26, offset: 8379},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection0Element212,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 232, col: 30, offset: 8383},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 240, col: 20, offset: 8534},
															run: (*parser).callonSection0Element215,
															expr: &seqExpr{
																pos: position{line: 240, col: 20, offset: 8534},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 240, col: 20, offset: 8534},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 240, col: 31, offset: 8545},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 240, col: 31, offset: 8545},
																					run: (*parser).callonSection0Element219,
																					expr: &seqExpr{
																						pos: position{line: 240, col: 31, offset: 8545},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 240, col: 31, offset: 8545},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 35, offset: 8549},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection0Element223,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 240, col: 52, offset: 8566},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection0Element228,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 56, offset: 8570},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 60, offset: 8574},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection0Element232,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 81, offset: 8595},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 85, offset: 8599},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 267, col: 15, offset: 9332},
																									run: (*parser).callonSection0Element248,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 267, col: 15, offset: 9332},
																										expr: &seqExpr{
																											pos: position{line: 267, col: 16, offset: 9333},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 267, col: 16, offset: 9333},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 21, offset: 9338},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 22, offset: 9339},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 26, offset: 9343},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 27, offset: 9344},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 267, col: 31, offset: 9348,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 104, offset: 8618},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 244, col: 9, offset: 8777},
																					run: (*parser).callonSection0Element263,
																					expr: &seqExpr{
																						pos: position{line: 244, col: 9, offset: 8777},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 244, col: 9, offset: 8777},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 13, offset: 8781},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection0Element267,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 244, col: 30, offset: 8798},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection0Element272,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 34, offset: 8802},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 38, offset: 8806},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection0Element276,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 59, offset: 8827},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 248, col: 9, offset: 8974},
																					run: (*parser).callonSection0Element291,
																					expr: &seqExpr{
																						pos: position{line: 248, col: 9, offset: 8974},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 248, col: 9, offset: 8974},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 248, col: 13, offset: 8978},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection0Element295,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 248, col: 30, offset: 8995},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection0Element300,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 248, col: 34, offset: 8999},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 252, col: 5, offset: 9091},
																		run: (*parser).callonSection0Element303,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 188, col: 30, offset: 6780},
															run: (*parser).callonSection0Element304,
															expr: &seqExpr{
																pos: position{line: 188, col: 30, offset: 6780},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 188, col: 30, offset: 6780},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 188, col: 34, offset: 6784},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 537, col: 19, offset: 20206},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 537, col: 19, offset: 20206},
																					run: (*parser).callonSection0Element309,
																					expr: &litMatcher{
																						pos:        position{line: 537, col: 19, offset: 20206},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 539, col: 5, offset: 20244},
																					run: (*parser).callonSection0Element311,
																					expr: &litMatcher{
																						pos:        position{line: 539, col: 5, offset: 20244},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 541, col: 5, offset: 20284},
																					run: (*parser).callonSection0Element313,
																					expr: &litMatcher{
																						pos:        position{line: 541, col: 5, offset: 20284},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 543, col: 5, offset: 20334},
																					run: (*parser).callonSection0Element315,
																					expr: &litMatcher{
																						pos:        position{line: 543, col: 5, offset: 20334},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 545, col: 5, offset: 20380},
																					run: (*parser).callonSection0Element317,
																					expr: &litMatcher{
																						pos:        position{line: 545, col: 5, offset: 20380},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 188, col: 53, offset: 6803},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 220, col: 21, offset: 7858},
															run: (*parser).callonSection0Element320,
															expr: &litMatcher{
																pos:        position{line: 220, col: 21, offset: 7858},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 202, col: 19, offset: 7270},
															run: (*parser).callonSection0Element322,
															expr: &seqExpr{
																pos: position{line: 202, col: 19, offset: 7270},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 202, col: 19, offset: 7270},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 202, col: 23, offset: 7274},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection0Element328,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 202, col: 27, offset: 7278},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 202, col: 38, offset: 7289},
																			expr: &choiceExpr{
																				pos: position{line: 206, col: 21, offset: 7402},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						run: (*parser).callonSection0Element333,
																						expr: &seqExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 206, col: 21, offset: 7402},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection0Element336,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection0Element339,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection0Element342,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection0Element345,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 206, col: 40, offset: 7421},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 206, col: 44, offset: 7425},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 216, col: 19, offset: 7776},
																										run: (*parser).callonSection0Element359,
																										expr: &labeledExpr{
																											pos:   position{line: 216, col: 19, offset: 7776},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 216, col: 25, offset: 7782},
																												expr: &seqExpr{
																													pos: position{line: 216, col: 26, offset: 7783},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 216, col: 26, offset: 7783},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 27, offset: 7784},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 31, offset: 7788},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 32, offset: 7789},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 36, offset: 7793},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 37, offset: 7794},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 216, col: 41, offset: 7798,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 206, col: 67, offset: 7448},
																									expr: &litMatcher{
																										pos:        position{line: 206, col: 67, offset: 7448},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 206, col: 72, offset: 7453},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection0Element375,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						run: (*parser).callonSection0Element377,
																						expr: &seqExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 208, col: 5, offset: 7537},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection0Element380,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection0Element383,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection0Element386,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection0Element389,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 208, col: 24, offset: 7556},
																									expr: &litMatcher{
																										pos:        position{line: 208, col: 24, offset: 7556},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 208, col: 29, offset: 7561},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection0Element406,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 202, col: 59, offset: 7310},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 152, col: 170, offset: 5611},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonSection0Element412,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 299, col: 5, offset: 10417},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 299, col: 14, offset: 10426},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 299, col: 14, offset: 10426},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 299, col: 25, offset: 10437},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 299, col: 36, offset: 10448},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 299, col: 47, offset: 10459},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 299, col: 58, offset: 10470},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 299, col: 69, offset: 10481},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1",
			pos:  position{line: 304, col: 1, offset: 10585},
			expr: &actionExpr{
				pos: position{line: 304, col: 13, offset: 10597},
				run: (*parser).callonSection11,
				expr: &seqExpr{
					pos: position{line: 304, col: 13, offset: 10597},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 304, col: 13, offset: 10597},
							expr: &notExpr{
								pos: position{line: 1159, col: 8, offset: 46832},
								expr: &anyMatcher{
									line: 1159, col: 9, offset: 46833,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 305, col: 5, offset: 10668},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 305, col: 13, offset: 10676},
								name: "Section1Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 305, col: 28, offset: 10691},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 305, col: 38, offset: 10701},
								expr: &ruleRefExpr{
									pos:  position{line: 305, col: 38, offset: 10701},
									name: "Section1Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Title",
			pos:  position{line: 311, col: 1, offset: 10851},
			expr: &actionExpr{
				pos: position{line: 311, col: 18, offset: 10868},
				run: (*parser).callonSection1Title1,
				expr: &seqExpr{
					pos: position{line: 311, col: 18, offset: 10868},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 309, col: 24, offset: 10841},
							val:        "==",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 309, col: 29, offset: 10846},
							expr: &choiceExpr{
								pos: position{line: 1153, col: 7, offset: 46741},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1153, col: 7, offset: 46741},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1153, col: 13, offset: 46747},
										run: (*parser).callonSection1Title7,
										expr: &litMatcher{
											pos:        position{line: 1153, col: 13, offset: 46747},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 311, col: 38, offset: 10888},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 311, col: 48, offset: 10898},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 311, col: 63, offset: 10913},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 311, col: 67, offset: 10917},
								expr: &actionExpr{
									pos: position{line: 167, col: 20, offset: 6064},
									run: (*parser).callonSection1Title13,
									expr: &seqExpr{
										pos: position{line: 167, col: 20, offset: 6064},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 167, col: 20, offset: 6064},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 167, col: 25, offset: 6069},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1139, col: 7, offset: 46459},
													run: (*parser).callonSection1Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														expr: &seqExpr{
															pos: position{line: 1139, col: 8, offset: 46460},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1139, col: 8, offset: 46460},
																	expr: &choiceExpr{
																		pos: position{line: 1157, col: 12, offset: 46803},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1157, col: 12, offset: 46803},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1157, col: 21, offset: 46812},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 17, offset: 46469},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonSection1Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 21, offset: 46473},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 22, offset: 46474},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 26, offset: 46478},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 27, offset: 46479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 31, offset: 46483},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 32, offset: 46484},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 37, offset: 46489},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 38, offset: 46490},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 43, offset: 46495},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 44, offset: 46496},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1139, col: 48, offset: 46500,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 167, col: 33, offset: 6077},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 167, col: 38, offset: 6082},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonSection1Title44,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Element",
			pos:  position{line: 315, col: 1, offset: 11033},
			expr: &actionExpr{
				pos: position{line: 315, col: 20, offset: 11052},
				run: (*parser).callonSection1Element1,
				expr: &seqExpr{
					pos: position{line: 315, col: 20, offset: 11052},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 315, col: 20, offset: 11052},
							expr: &seqExpr{
								pos: position{line: 309, col: 24, offset: 10841},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 309, col: 24, offset: 10841},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 309, col: 29, offset: 10846},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonSection1Element9,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 316, col: 5, offset: 11078},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 316, col: 16, offset: 11089},
								expr: &actionExpr{
									pos: position{line: 151, col: 21, offset: 5356},
									run: (*parser).callonSection1Element13,
									expr: &seqExpr{
										pos: position{line: 151, col: 21, offset: 5356},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 151, col: 21, offset: 5356},
												expr: &charClassMatcher{
													pos:        position{line: 151, col: 23, offset: 5358},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 152, col: 5, offset: 5446},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 152, col: 11, offset: 5452},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 161, col: 14, offset: 5913},
															run: (*parser).callonSection1Element19,
															expr: &seqExpr{
																pos: position{line: 161, col: 14, offset: 5913},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 161, col: 14, offset: 5913},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 161, col: 19, offset: 5918},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection1Element23,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection1Element33,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 161, col: 27, offset: 5926},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 163, col: 5, offset: 5980},
															run: (*parser).callonSection1Element47,
															expr: &seqExpr{
																pos: position{line: 163, col: 5, offset: 5980},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 163, col: 5, offset: 5980},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 163, col: 10, offset: 5985},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection1Element51,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection1Element61,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 163, col: 18, offset: 5993},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 173, col: 17, offset: 6296},
															run: (*parser).callonSection1Element75,
															expr: &seqExpr{
																pos: position{line: 173, col: 17, offset: 6296},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 173, col: 17, offset: 6296},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 173, col: 21, offset: 6300},
																		expr: &litMatcher{
																			pos:        position{line: 173, col: 22, offset: 6301},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 173, col: 26, offset: 6305},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection1Element83,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 173, col: 30, offset: 6309},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 173, col: 37, offset: 6316},
																			run: (*parser).callonSection1Element86,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 173, col: 37, offset: 6316},
																				expr: &seqExpr{
																					pos: position{line: 173, col: 38, offset: 6317},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 173, col: 38, offset: 6317},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 173, col: 47, offset: 6326,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 16, offset: 6537},
															run: (*parser).callonSection1Element94,
															expr: &seqExpr{
																pos: position{line: 181, col: 16, offset: 6537},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 16, offset: 6537},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 21, offset: 6542},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection1Element100,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 25, offset: 6546},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 181, col: 31, offset: 6552},
																			run: (*parser).callonSection1Element103,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 181, col: 31, offset: 6552},
																				expr: &seqExpr{
																					pos: position{line: 181, col: 32, offset: 6553},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 181, col: 32, offset: 6553},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 181, col: 41, offset: 6562},
																							expr: &litMatcher{
																								pos:        position{line: 181, col: 42, offset: 6563},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 181, col: 46, offset: 6567,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 183, col: 8, offset: 6615},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 193, col: 21, offset: 6978},
															run: (*parser).callonSection1Element114,
															expr: &litMatcher{
																pos:        position{line: 193, col: 21, offset: 6978},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 195, col: 5, offset: 7036},
															run: (*parser).callonSection1Element116,
															expr: &seqExpr{
																pos: position{line: 195, col: 5, offset: 7036},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 195, col: 5, offset: 7036},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 195, col: 16, offset: 7047},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 195, col: 26, offset: 7057},
																			run: (*parser).callonSection1Element120,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 195, col: 26, offset: 7057},
																				expr: &seqExpr{
																					pos: position{line: 195, col: 27, offset: 7058},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 195, col: 27, offset: 7058},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 195, col: 36, offset: 7067},
																							expr: &litMatcher{
																								pos:        position{line: 195, col: 37, offset: 7068},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 195, col: 41, offset: 7072,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 197, col: 7, offset: 7119},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 224, col: 20, offset: 7961},
															run: (*parser).callonSection1Element131,
															expr: &seqExpr{
																pos: position{line: 224, col: 20, offset: 7961},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 224, col: 20, offset: 7961},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 24, offset: 7965},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection1Element135,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 224, col: 41, offset: 7982},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection1Element140,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 45, offset: 7986},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 49, offset: 7990},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection1Element144,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 70, offset: 8011},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 74, offset: 8015},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 267, col: 15, offset: 9332},
																			run: (*parser).callonSection1Element160,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 267, col: 15, offset: 9332},
																				expr: &seqExpr{
																					pos: position{line: 267, col: 16, offset: 9333},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 267, col: 16, offset: 9333},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 21, offset: 9338},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 22, offset: 9339},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 26, offset: 9343},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 27, offset: 9344},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 267, col: 31, offset: 9348,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 93, offset: 8034},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 228, col: 5, offset: 8177},
															run: (*parser).callonSection1Element175,
															expr: &seqExpr{
																pos: position{line: 228, col: 5, offset: 8177},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 228, col: 5, offset: 8177},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 9, offset: 8181},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection1Element179,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 228, col: 26, offset: 8198},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection1Element184,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 30, offset: 8202},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 34, offset: 8206},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection1Element188,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 55, offset: 8227},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 232, col: 5, offset: 8358},
															run: (*parser).callonSection1Element203,
															expr: &seqExpr{
																pos: position{line: 232, col: 5, offset: 8358},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 232, col: 5, offset: 8358},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 232, col: 9, offset: 8362},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection1Element207,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 232, col: 26, offset: 8379},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection1Element212,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 232, col: 30, offset: 8383},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 240, col: 20, offset: 8534},
															run: (*parser).callonSection1Element215,
															expr: &seqExpr{
																pos: position{line: 240, col: 20, offset: 8534},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 240, col: 20, offset: 8534},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 240, col: 31, offset: 8545},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 240, col: 31, offset: 8545},
																					run: (*parser).callonSection1Element219,
																					expr: &seqExpr{
																						pos: position{line: 240, col: 31, offset: 8545},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 240, col: 31, offset: 8545},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 35, offset: 8549},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection1Element223,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 240, col: 52, offset: 8566},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection1Element228,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 56, offset: 8570},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 60, offset: 8574},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection1Element232,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 81, offset: 8595},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 85, offset: 8599},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 267, col: 15, offset: 9332},
																									run: (*parser).callonSection1Element248,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 267, col: 15, offset: 9332},
																										expr: &seqExpr{
																											pos: position{line: 267, col: 16, offset: 9333},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 267, col: 16, offset: 9333},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 21, offset: 9338},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 22, offset: 9339},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 26, offset: 9343},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 27, offset: 9344},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 267, col: 31, offset: 9348,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 104, offset: 8618},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 244, col: 9, offset: 8777},
																					run: (*parser).callonSection1Element263,
																					expr: &seqExpr{
																						pos: position{line: 244, col: 9, offset: 8777},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 244, col: 9, offset: 8777},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 13, offset: 8781},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection1Element267,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 244, col: 30, offset: 8798},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection1Element272,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 34, offset: 8802},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 38, offset: 8806},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection1Element276,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 59, offset: 8827},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 248, col: 9, offset: 8974},
																					run: (*parser).callonSection1Element291,
																					expr: &seqExpr{
																						pos: position{line: 248, col: 9, offset: 8974},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 248, col: 9, offset: 8974},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 248, col: 13, offset: 8978},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection1Element295,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 248, col: 30, offset: 8995},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection1Element300,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 248, col: 34, offset: 8999},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 252, col: 5, offset: 9091},
																		run: (*parser).callonSection1Element303,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 188, col: 30, offset: 6780},
															run: (*parser).callonSection1Element304,
															expr: &seqExpr{
																pos: position{line: 188, col: 30, offset: 6780},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 188, col: 30, offset: 6780},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 188, col: 34, offset: 6784},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 537, col: 19, offset: 20206},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 537, col: 19, offset: 20206},
																					run: (*parser).callonSection1Element309,
																					expr: &litMatcher{
																						pos:        position{line: 537, col: 19, offset: 20206},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 539, col: 5, offset: 20244},
																					run: (*parser).callonSection1Element311,
																					expr: &litMatcher{
																						pos:        position{line: 539, col: 5, offset: 20244},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 541, col: 5, offset: 20284},
																					run: (*parser).callonSection1Element313,
																					expr: &litMatcher{
																						pos:        position{line: 541, col: 5, offset: 20284},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 543, col: 5, offset: 20334},
																					run: (*parser).callonSection1Element315,
																					expr: &litMatcher{
																						pos:        position{line: 543, col: 5, offset: 20334},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 545, col: 5, offset: 20380},
																					run: (*parser).callonSection1Element317,
																					expr: &litMatcher{
																						pos:        position{line: 545, col: 5, offset: 20380},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 188, col: 53, offset: 6803},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 220, col: 21, offset: 7858},
															run: (*parser).callonSection1Element320,
															expr: &litMatcher{
																pos:        position{line: 220, col: 21, offset: 7858},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 202, col: 19, offset: 7270},
															run: (*parser).callonSection1Element322,
															expr: &seqExpr{
																pos: position{line: 202, col: 19, offset: 7270},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 202, col: 19, offset: 7270},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 202, col: 23, offset: 7274},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection1Element328,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 202, col: 27, offset: 7278},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 202, col: 38, offset: 7289},
																			expr: &choiceExpr{
																				pos: position{line: 206, col: 21, offset: 7402},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						run: (*parser).callonSection1Element333,
																						expr: &seqExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 206, col: 21, offset: 7402},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection1Element336,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection1Element339,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection1Element342,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection1Element345,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 206, col: 40, offset: 7421},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 206, col: 44, offset: 7425},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 216, col: 19, offset: 7776},
																										run: (*parser).callonSection1Element359,
																										expr: &labeledExpr{
																											pos:   position{line: 216, col: 19, offset: 7776},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 216, col: 25, offset: 7782},
																												expr: &seqExpr{
																													pos: position{line: 216, col: 26, offset: 7783},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 216, col: 26, offset: 7783},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 27, offset: 7784},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 31, offset: 7788},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 32, offset: 7789},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 36, offset: 7793},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 37, offset: 7794},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 216, col: 41, offset: 7798,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 206, col: 67, offset: 7448},
																									expr: &litMatcher{
																										pos:        position{line: 206, col: 67, offset: 7448},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 206, col: 72, offset: 7453},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection1Element375,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						run: (*parser).callonSection1Element377,
																						expr: &seqExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 208, col: 5, offset: 7537},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection1Element380,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection1Element383,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection1Element386,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection1Element389,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 208, col: 24, offset: 7556},
																									expr: &litMatcher{
																										pos:        position{line: 208, col: 24, offset: 7556},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 208, col: 29, offset: 7561},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection1Element406,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 202, col: 59, offset: 7310},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 152, col: 170, offset: 5611},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonSection1Element412,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 317, col: 5, offset: 11114},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 317, col: 14, offset: 11123},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 317, col: 14, offset: 11123},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 317, col: 25, offset: 11134},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 317, col: 36, offset: 11145},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 317, col: 47, offset: 11156},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 317, col: 58, offset: 11167},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2",
			pos:  position{line: 321, col: 1, offset: 11266},
			expr: &actionExpr{
				pos: position{line: 321, col: 13, offset: 11278},
				run: (*parser).callonSection21,
				expr: &seqExpr{
					pos: position{line: 321, col: 13, offset: 11278},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 321, col: 13, offset: 11278},
							expr: &notExpr{
								pos: position{line: 1159, col: 8, offset: 46832},
								expr: &anyMatcher{
									line: 1159, col: 9, offset: 46833,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 322, col: 5, offset: 11349},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 322, col: 13, offset: 11357},
								name: "Section2Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 322, col: 28, offset: 11372},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 322, col: 38, offset: 11382},
								expr: &ruleRefExpr{
									pos:  position{line: 322, col: 38, offset: 11382},
									name: "Section2Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Title",
			pos:  position{line: 328, col: 1, offset: 11534},
			expr: &actionExpr{
				pos: position{line: 328, col: 18, offset: 11551},
				run: (*parser).callonSection2Title1,
				expr: &seqExpr{
					pos: position{line: 328, col: 18, offset: 11551},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 326, col: 24, offset: 11522},
							val:        "===",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 326, col: 30, offset: 11528},
							expr: &choiceExpr{
								pos: position{line: 1153, col: 7, offset: 46741},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1153, col: 7, offset: 46741},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1153, col: 13, offset: 46747},
										run: (*parser).callonSection2Title7,
										expr: &litMatcher{
											pos:        position{line: 1153, col: 13, offset: 46747},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 328, col: 38, offset: 11571},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 328, col: 48, offset: 11581},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 328, col: 63, offset: 11596},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 328, col: 67, offset: 11600},
								expr: &actionExpr{
									pos: position{line: 167, col: 20, offset: 6064},
									run: (*parser).callonSection2Title13,
									expr: &seqExpr{
										pos: position{line: 167, col: 20, offset: 6064},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 167, col: 20, offset: 6064},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 167, col: 25, offset: 6069},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1139, col: 7, offset: 46459},
													run: (*parser).callonSection2Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														expr: &seqExpr{
															pos: position{line: 1139, col: 8, offset: 46460},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1139, col: 8, offset: 46460},
																	expr: &choiceExpr{
																		pos: position{line: 1157, col: 12, offset: 46803},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1157, col: 12, offset: 46803},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1157, col: 21, offset: 46812},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 17, offset: 46469},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonSection2Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 21, offset: 46473},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 22, offset: 46474},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 26, offset: 46478},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 27, offset: 46479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 31, offset: 46483},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 32, offset: 46484},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 37, offset: 46489},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 38, offset: 46490},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 43, offset: 46495},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 44, offset: 46496},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1139, col: 48, offset: 46500,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 167, col: 33, offset: 6077},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 167, col: 38, offset: 6082},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonSection2Title44,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Element",
			pos:  position{line: 332, col: 1, offset: 11716},
			expr: &actionExpr{
				pos: position{line: 332, col: 20, offset: 11735},
				run: (*parser).callonSection2Element1,
				expr: &seqExpr{
					pos: position{line: 332, col: 20, offset: 11735},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 332, col: 20, offset: 11735},
							expr: &seqExpr{
								pos: position{line: 309, col: 24, offset: 10841},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 309, col: 24, offset: 10841},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 309, col: 29, offset: 10846},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonSection2Element9,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 332, col: 41, offset: 11756},
							expr: &seqExpr{
								pos: position{line: 326, col: 24, offset: 11522},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 326, col: 24, offset: 11522},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 326, col: 30, offset: 11528},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonSection2Element17,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 333, col: 5, offset: 11782},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 333, col: 16, offset: 11793},
								expr: &actionExpr{
									pos: position{line: 151, col: 21, offset: 5356},
									run: (*parser).callonSection2Element21,
									expr: &seqExpr{
										pos: position{line: 151, col: 21, offset: 5356},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 151, col: 21, offset: 5356},
												expr: &charClassMatcher{
													pos:        position{line: 151, col: 23, offset: 5358},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 152, col: 5, offset: 5446},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 152, col: 11, offset: 5452},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 161, col: 14, offset: 5913},
															run: (*parser).callonSection2Element27,
															expr: &seqExpr{
																pos: position{line: 161, col: 14, offset: 5913},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 161, col: 14, offset: 5913},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 161, col: 19, offset: 5918},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection2Element31,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection2Element41,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 161, col: 27, offset: 5926},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 163, col: 5, offset: 5980},
															run: (*parser).callonSection2Element55,
															expr: &seqExpr{
																pos: position{line: 163, col: 5, offset: 5980},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 163, col: 5, offset: 5980},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 163, col: 10, offset: 5985},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection2Element59,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection2Element69,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 163, col: 18, offset: 5993},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 173, col: 17, offset: 6296},
															run: (*parser).callonSection2Element83,
															expr: &seqExpr{
																pos: position{line: 173, col: 17, offset: 6296},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 173, col: 17, offset: 6296},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 173, col: 21, offset: 6300},
																		expr: &litMatcher{
																			pos:        position{line: 173, col: 22, offset: 6301},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 173, col: 26, offset: 6305},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection2Element91,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 173, col: 30, offset: 6309},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 173, col: 37, offset: 6316},
																			run: (*parser).callonSection2Element94,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 173, col: 37, offset: 6316},
																				expr: &seqExpr{
																					pos: position{line: 173, col: 38, offset: 6317},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 173, col: 38, offset: 6317},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 173, col: 47, offset: 6326,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 16, offset: 6537},
															run: (*parser).callonSection2Element102,
															expr: &seqExpr{
																pos: position{line: 181, col: 16, offset: 6537},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 16, offset: 6537},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 21, offset: 6542},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection2Element108,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 25, offset: 6546},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 181, col: 31, offset: 6552},
																			run: (*parser).callonSection2Element111,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 181, col: 31, offset: 6552},
																				expr: &seqExpr{
																					pos: position{line: 181, col: 32, offset: 6553},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 181, col: 32, offset: 6553},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 181, col: 41, offset: 6562},
																							expr: &litMatcher{
																								pos:        position{line: 181, col: 42, offset: 6563},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 181, col: 46, offset: 6567,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 183, col: 8, offset: 6615},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 193, col: 21, offset: 6978},
															run: (*parser).callonSection2Element122,
															expr: &litMatcher{
																pos:        position{line: 193, col: 21, offset: 6978},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 195, col: 5, offset: 7036},
															run: (*parser).callonSection2Element124,
															expr: &seqExpr{
																pos: position{line: 195, col: 5, offset: 7036},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 195, col: 5, offset: 7036},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 195, col: 16, offset: 7047},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 195, col: 26, offset: 7057},
																			run: (*parser).callonSection2Element128,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 195, col: 26, offset: 7057},
																				expr: &seqExpr{
																					pos: position{line: 195, col: 27, offset: 7058},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 195, col: 27, offset: 7058},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 195, col: 36, offset: 7067},
																							expr: &litMatcher{
																								pos:        position{line: 195, col: 37, offset: 7068},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 195, col: 41, offset: 7072,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 197, col: 7, offset: 7119},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 224, col: 20, offset: 7961},
															run: (*parser).callonSection2Element139,
															expr: &seqExpr{
																pos: position{line: 224, col: 20, offset: 7961},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 224, col: 20, offset: 7961},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 24, offset: 7965},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection2Element143,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 224, col: 41, offset: 7982},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection2Element148,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 45, offset: 7986},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 49, offset: 7990},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection2Element152,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 70, offset: 8011},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 74, offset: 8015},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 267, col: 15, offset: 9332},
																			run: (*parser).callonSection2Element168,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 267, col: 15, offset: 9332},
																				expr: &seqExpr{
																					pos: position{line: 267, col: 16, offset: 9333},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 267, col: 16, offset: 9333},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 21, offset: 9338},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 22, offset: 9339},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 26, offset: 9343},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 27, offset: 9344},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 267, col: 31, offset: 9348,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 93, offset: 8034},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 228, col: 5, offset: 8177},
															run: (*parser).callonSection2Element183,
															expr: &seqExpr{
																pos: position{line: 228, col: 5, offset: 8177},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 228, col: 5, offset: 8177},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 9, offset: 8181},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection2Element187,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 228, col: 26, offset: 8198},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection2Element192,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 30, offset: 8202},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 34, offset: 8206},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection2Element196,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 55, offset: 8227},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 232, col: 5, offset: 8358},
															run: (*parser).callonSection2Element211,
															expr: &seqExpr{
																pos: position{line: 232, col: 5, offset: 8358},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 232, col: 5, offset: 8358},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 232, col: 9, offset: 8362},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection2Element215,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 232, col: 26, offset: 8379},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection2Element220,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 232, col: 30, offset: 8383},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 240, col: 20, offset: 8534},
															run: (*parser).callonSection2Element223,
															expr: &seqExpr{
																pos: position{line: 240, col: 20, offset: 8534},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 240, col: 20, offset: 8534},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 240, col: 31, offset: 8545},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 240, col: 31, offset: 8545},
																					run: (*parser).callonSection2Element227,
																					expr: &seqExpr{
																						pos: position{line: 240, col: 31, offset: 8545},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 240, col: 31, offset: 8545},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 35, offset: 8549},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection2Element231,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 240, col: 52, offset: 8566},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection2Element236,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 56, offset: 8570},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 60, offset: 8574},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection2Element240,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 81, offset: 8595},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 85, offset: 8599},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 267, col: 15, offset: 9332},
																									run: (*parser).callonSection2Element256,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 267, col: 15, offset: 9332},
																										expr: &seqExpr{
																											pos: position{line: 267, col: 16, offset: 9333},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 267, col: 16, offset: 9333},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 21, offset: 9338},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 22, offset: 9339},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 26, offset: 9343},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 27, offset: 9344},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 267, col: 31, offset: 9348,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 104, offset: 8618},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 244, col: 9, offset: 8777},
																					run: (*parser).callonSection2Element271,
																					expr: &seqExpr{
																						pos: position{line: 244, col: 9, offset: 8777},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 244, col: 9, offset: 8777},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 13, offset: 8781},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection2Element275,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 244, col: 30, offset: 8798},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection2Element280,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 34, offset: 8802},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 38, offset: 8806},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection2Element284,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 59, offset: 8827},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 248, col: 9, offset: 8974},
																					run: (*parser).callonSection2Element299,
																					expr: &seqExpr{
																						pos: position{line: 248, col: 9, offset: 8974},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 248, col: 9, offset: 8974},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 248, col: 13, offset: 8978},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection2Element303,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 248, col: 30, offset: 8995},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection2Element308,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 248, col: 34, offset: 8999},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 252, col: 5, offset: 9091},
																		run: (*parser).callonSection2Element311,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 188, col: 30, offset: 6780},
															run: (*parser).callonSection2Element312,
															expr: &seqExpr{
																pos: position{line: 188, col: 30, offset: 6780},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 188, col: 30, offset: 6780},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 188, col: 34, offset: 6784},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 537, col: 19, offset: 20206},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 537, col: 19, offset: 20206},
																					run: (*parser).callonSection2Element317,
																					expr: &litMatcher{
																						pos:        position{line: 537, col: 19, offset: 20206},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 539, col: 5, offset: 20244},
																					run: (*parser).callonSection2Element319,
																					expr: &litMatcher{
																						pos:        position{line: 539, col: 5, offset: 20244},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 541, col: 5, offset: 20284},
																					run: (*parser).callonSection2Element321,
																					expr: &litMatcher{
																						pos:        position{line: 541, col: 5, offset: 20284},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 543, col: 5, offset: 20334},
																					run: (*parser).callonSection2Element323,
																					expr: &litMatcher{
																						pos:        position{line: 543, col: 5, offset: 20334},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 545, col: 5, offset: 20380},
																					run: (*parser).callonSection2Element325,
																					expr: &litMatcher{
																						pos:        position{line: 545, col: 5, offset: 20380},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 188, col: 53, offset: 6803},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 220, col: 21, offset: 7858},
															run: (*parser).callonSection2Element328,
															expr: &litMatcher{
																pos:        position{line: 220, col: 21, offset: 7858},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 202, col: 19, offset: 7270},
															run: (*parser).callonSection2Element330,
															expr: &seqExpr{
																pos: position{line: 202, col: 19, offset: 7270},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 202, col: 19, offset: 7270},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 202, col: 23, offset: 7274},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection2Element336,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 202, col: 27, offset: 7278},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 202, col: 38, offset: 7289},
																			expr: &choiceExpr{
																				pos: position{line: 206, col: 21, offset: 7402},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						run: (*parser).callonSection2Element341,
																						expr: &seqExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 206, col: 21, offset: 7402},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection2Element344,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection2Element347,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection2Element350,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection2Element353,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 206, col: 40, offset: 7421},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 206, col: 44, offset: 7425},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 216, col: 19, offset: 7776},
																										run: (*parser).callonSection2Element367,
																										expr: &labeledExpr{
																											pos:   position{line: 216, col: 19, offset: 7776},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 216, col: 25, offset: 7782},
																												expr: &seqExpr{
																													pos: position{line: 216, col: 26, offset: 7783},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 216, col: 26, offset: 7783},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 27, offset: 7784},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 31, offset: 7788},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 32, offset: 7789},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 36, offset: 7793},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 37, offset: 7794},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 216, col: 41, offset: 7798,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 206, col: 67, offset: 7448},
																									expr: &litMatcher{
																										pos:        position{line: 206, col: 67, offset: 7448},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 206, col: 72, offset: 7453},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection2Element383,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						run: (*parser).callonSection2Element385,
																						expr: &seqExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 208, col: 5, offset: 7537},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection2Element388,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection2Element391,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection2Element394,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection2Element397,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 208, col: 24, offset: 7556},
																									expr: &litMatcher{
																										pos:        position{line: 208, col: 24, offset: 7556},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 208, col: 29, offset: 7561},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection2Element414,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 202, col: 59, offset: 7310},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 152, col: 170, offset: 5611},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonSection2Element420,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 334, col: 5, offset: 11818},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 334, col: 14, offset: 11827},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 334, col: 14, offset: 11827},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 334, col: 25, offset: 11838},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 334, col: 36, offset: 11849},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 334, col: 47, offset: 11860},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3",
			pos:  position{line: 338, col: 1, offset: 11959},
			expr: &actionExpr{
				pos: position{line: 338, col: 13, offset: 11971},
				run: (*parser).callonSection31,
				expr: &seqExpr{
					pos: position{line: 338, col: 13, offset: 11971},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 338, col: 13, offset: 11971},
							expr: &notExpr{
								pos: position{line: 1159, col: 8, offset: 46832},
								expr: &anyMatcher{
									line: 1159, col: 9, offset: 46833,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 339, col: 5, offset: 12042},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 339, col: 13, offset: 12050},
								name: "Section3Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 339, col: 28, offset: 12065},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 339, col: 38, offset: 12075},
								expr: &ruleRefExpr{
									pos:  position{line: 339, col: 38, offset: 12075},
									name: "Section3Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Title",
			pos:  position{line: 345, col: 1, offset: 12228},
			expr: &actionExpr{
				pos: position{line: 345, col: 18, offset: 12245},
				run: (*parser).callonSection3Title1,
				expr: &seqExpr{
					pos: position{line: 345, col: 18, offset: 12245},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 343, col: 24, offset: 12215},
							val:        "====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 343, col: 31, offset: 12222},
							expr: &choiceExpr{
								pos: position{line: 1153, col: 7, offset: 46741},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1153, col: 7, offset: 46741},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1153, col: 13, offset: 46747},
										run: (*parser).callonSection3Title7,
										expr: &litMatcher{
											pos:        position{line: 1153, col: 13, offset: 46747},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 345, col: 38, offset: 12265},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 345, col: 48, offset: 12275},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 345, col: 63, offset: 12290},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 345, col: 67, offset: 12294},
								expr: &actionExpr{
									pos: position{line: 167, col: 20, offset: 6064},
									run: (*parser).callonSection3Title13,
									expr: &seqExpr{
										pos: position{line: 167, col: 20, offset: 6064},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 167, col: 20, offset: 6064},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 167, col: 25, offset: 6069},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1139, col: 7, offset: 46459},
													run: (*parser).callonSection3Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														expr: &seqExpr{
															pos: position{line: 1139, col: 8, offset: 46460},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1139, col: 8, offset: 46460},
																	expr: &choiceExpr{
																		pos: position{line: 1157, col: 12, offset: 46803},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1157, col: 12, offset: 46803},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1157, col: 21, offset: 46812},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 17, offset: 46469},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonSection3Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 21, offset: 46473},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 22, offset: 46474},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 26, offset: 46478},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 27, offset: 46479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 31, offset: 46483},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 32, offset: 46484},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 37, offset: 46489},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 38, offset: 46490},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 43, offset: 46495},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 44, offset: 46496},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1139, col: 48, offset: 46500,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 167, col: 33, offset: 6077},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 167, col: 38, offset: 6082},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonSection3Title44,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Element",
			pos:  position{line: 349, col: 1, offset: 12410},
			expr: &actionExpr{
				pos: position{line: 349, col: 20, offset: 12429},
				run: (*parser).callonSection3Element1,
				expr: &seqExpr{
					pos: position{line: 349, col: 20, offset: 12429},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 349, col: 20, offset: 12429},
							expr: &seqExpr{
								pos: position{line: 309, col: 24, offset: 10841},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 309, col: 24, offset: 10841},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 309, col: 29, offset: 10846},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonSection3Element9,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 349, col: 41, offset: 12450},
							expr: &seqExpr{
								pos: position{line: 326, col: 24, offset: 11522},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 326, col: 24, offset: 11522},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 326, col: 30, offset: 11528},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonSection3Element17,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 349, col: 62, offset: 12471},
							expr: &seqExpr{
								pos: position{line: 343, col: 24, offset: 12215},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 343, col: 24, offset: 12215},
										val:        "====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 343, col: 31, offset: 12222},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonSection3Element25,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 350, col: 5, offset: 12496},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 350, col: 16, offset: 12507},
								expr: &actionExpr{
									pos: position{line: 151, col: 21, offset: 5356},
									run: (*parser).callonSection3Element29,
									expr: &seqExpr{
										pos: position{line: 151, col: 21, offset: 5356},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 151, col: 21, offset: 5356},
												expr: &charClassMatcher{
													pos:        position{line: 151, col: 23, offset: 5358},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 152, col: 5, offset: 5446},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 152, col: 11, offset: 5452},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 161, col: 14, offset: 5913},
															run: (*parser).callonSection3Element35,
															expr: &seqExpr{
																pos: position{line: 161, col: 14, offset: 5913},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 161, col: 14, offset: 5913},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 161, col: 19, offset: 5918},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection3Element39,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection3Element49,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 161, col: 27, offset: 5926},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 163, col: 5, offset: 5980},
															run: (*parser).callonSection3Element63,
															expr: &seqExpr{
																pos: position{line: 163, col: 5, offset: 5980},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 163, col: 5, offset: 5980},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 163, col: 10, offset: 5985},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection3Element67,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection3Element77,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 163, col: 18, offset: 5993},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 173, col: 17, offset: 6296},
															run: (*parser).callonSection3Element91,
															expr: &seqExpr{
																pos: position{line: 173, col: 17, offset: 6296},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 173, col: 17, offset: 6296},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 173, col: 21, offset: 6300},
																		expr: &litMatcher{
																			pos:        position{line: 173, col: 22, offset: 6301},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 173, col: 26, offset: 6305},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection3Element99,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 173, col: 30, offset: 6309},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 173, col: 37, offset: 6316},
																			run: (*parser).callonSection3Element102,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 173, col: 37, offset: 6316},
																				expr: &seqExpr{
																					pos: position{line: 173, col: 38, offset: 6317},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 173, col: 38, offset: 6317},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 173, col: 47, offset: 6326,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 16, offset: 6537},
															run: (*parser).callonSection3Element110,
															expr: &seqExpr{
																pos: position{line: 181, col: 16, offset: 6537},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 16, offset: 6537},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 21, offset: 6542},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection3Element116,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 25, offset: 6546},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 181, col: 31, offset: 6552},
																			run: (*parser).callonSection3Element119,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 181, col: 31, offset: 6552},
																				expr: &seqExpr{
																					pos: position{line: 181, col: 32, offset: 6553},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 181, col: 32, offset: 6553},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 181, col: 41, offset: 6562},
																							expr: &litMatcher{
																								pos:        position{line: 181, col: 42, offset: 6563},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 181, col: 46, offset: 6567,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 183, col: 8, offset: 6615},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 193, col: 21, offset: 6978},
															run: (*parser).callonSection3Element130,
															expr: &litMatcher{
																pos:        position{line: 193, col: 21, offset: 6978},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 195, col: 5, offset: 7036},
															run: (*parser).callonSection3Element132,
															expr: &seqExpr{
																pos: position{line: 195, col: 5, offset: 7036},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 195, col: 5, offset: 7036},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 195, col: 16, offset: 7047},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 195, col: 26, offset: 7057},
																			run: (*parser).callonSection3Element136,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 195, col: 26, offset: 7057},
																				expr: &seqExpr{
																					pos: position{line: 195, col: 27, offset: 7058},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 195, col: 27, offset: 7058},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 195, col: 36, offset: 7067},
																							expr: &litMatcher{
																								pos:        position{line: 195, col: 37, offset: 7068},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 195, col: 41, offset: 7072,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 197, col: 7, offset: 7119},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 224, col: 20, offset: 7961},
															run: (*parser).callonSection3Element147,
															expr: &seqExpr{
																pos: position{line: 224, col: 20, offset: 7961},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 224, col: 20, offset: 7961},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 24, offset: 7965},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection3Element151,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 224, col: 41, offset: 7982},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection3Element156,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 45, offset: 7986},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 49, offset: 7990},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection3Element160,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 70, offset: 8011},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 74, offset: 8015},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 267, col: 15, offset: 9332},
																			run: (*parser).callonSection3Element176,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 267, col: 15, offset: 9332},
																				expr: &seqExpr{
																					pos: position{line: 267, col: 16, offset: 9333},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 267, col: 16, offset: 9333},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 21, offset: 9338},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 22, offset: 9339},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 26, offset: 9343},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 27, offset: 9344},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 267, col: 31, offset: 9348,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 93, offset: 8034},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 228, col: 5, offset: 8177},
															run: (*parser).callonSection3Element191,
															expr: &seqExpr{
																pos: position{line: 228, col: 5, offset: 8177},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 228, col: 5, offset: 8177},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 9, offset: 8181},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection3Element195,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 228, col: 26, offset: 8198},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection3Element200,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 30, offset: 8202},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 34, offset: 8206},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection3Element204,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 55, offset: 8227},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 232, col: 5, offset: 8358},
															run: (*parser).callonSection3Element219,
															expr: &seqExpr{
																pos: position{line: 232, col: 5, offset: 8358},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 232, col: 5, offset: 8358},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 232, col: 9, offset: 8362},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection3Element223,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 232, col: 26, offset: 8379},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection3Element228,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 232, col: 30, offset: 8383},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 240, col: 20, offset: 8534},
															run: (*parser).callonSection3Element231,
															expr: &seqExpr{
																pos: position{line: 240, col: 20, offset: 8534},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 240, col: 20, offset: 8534},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 240, col: 31, offset: 8545},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 240, col: 31, offset: 8545},
																					run: (*parser).callonSection3Element235,
																					expr: &seqExpr{
																						pos: position{line: 240, col: 31, offset: 8545},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 240, col: 31, offset: 8545},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 35, offset: 8549},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection3Element239,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 240, col: 52, offset: 8566},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection3Element244,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 56, offset: 8570},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 60, offset: 8574},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection3Element248,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 81, offset: 8595},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 85, offset: 8599},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 267, col: 15, offset: 9332},
																									run: (*parser).callonSection3Element264,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 267, col: 15, offset: 9332},
																										expr: &seqExpr{
																											pos: position{line: 267, col: 16, offset: 9333},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 267, col: 16, offset: 9333},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 21, offset: 9338},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 22, offset: 9339},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 26, offset: 9343},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 27, offset: 9344},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 267, col: 31, offset: 9348,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 104, offset: 8618},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 244, col: 9, offset: 8777},
																					run: (*parser).callonSection3Element279,
																					expr: &seqExpr{
																						pos: position{line: 244, col: 9, offset: 8777},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 244, col: 9, offset: 8777},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 13, offset: 8781},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection3Element283,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 244, col: 30, offset: 8798},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection3Element288,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 34, offset: 8802},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 38, offset: 8806},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection3Element292,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 59, offset: 8827},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 248, col: 9, offset: 8974},
																					run: (*parser).callonSection3Element307,
																					expr: &seqExpr{
																						pos: position{line: 248, col: 9, offset: 8974},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 248, col: 9, offset: 8974},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 248, col: 13, offset: 8978},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection3Element311,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 248, col: 30, offset: 8995},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection3Element316,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 248, col: 34, offset: 8999},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 252, col: 5, offset: 9091},
																		run: (*parser).callonSection3Element319,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 188, col: 30, offset: 6780},
															run: (*parser).callonSection3Element320,
															expr: &seqExpr{
																pos: position{line: 188, col: 30, offset: 6780},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 188, col: 30, offset: 6780},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 188, col: 34, offset: 6784},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 537, col: 19, offset: 20206},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 537, col: 19, offset: 20206},
																					run: (*parser).callonSection3Element325,
																					expr: &litMatcher{
																						pos:        position{line: 537, col: 19, offset: 20206},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 539, col: 5, offset: 20244},
																					run: (*parser).callonSection3Element327,
																					expr: &litMatcher{
																						pos:        position{line: 539, col: 5, offset: 20244},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 541, col: 5, offset: 20284},
																					run: (*parser).callonSection3Element329,
																					expr: &litMatcher{
																						pos:        position{line: 541, col: 5, offset: 20284},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 543, col: 5, offset: 20334},
																					run: (*parser).callonSection3Element331,
																					expr: &litMatcher{
																						pos:        position{line: 543, col: 5, offset: 20334},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 545, col: 5, offset: 20380},
																					run: (*parser).callonSection3Element333,
																					expr: &litMatcher{
																						pos:        position{line: 545, col: 5, offset: 20380},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 188, col: 53, offset: 6803},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 220, col: 21, offset: 7858},
															run: (*parser).callonSection3Element336,
															expr: &litMatcher{
																pos:        position{line: 220, col: 21, offset: 7858},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 202, col: 19, offset: 7270},
															run: (*parser).callonSection3Element338,
															expr: &seqExpr{
																pos: position{line: 202, col: 19, offset: 7270},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 202, col: 19, offset: 7270},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 202, col: 23, offset: 7274},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection3Element344,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 202, col: 27, offset: 7278},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 202, col: 38, offset: 7289},
																			expr: &choiceExpr{
																				pos: position{line: 206, col: 21, offset: 7402},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						run: (*parser).callonSection3Element349,
																						expr: &seqExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 206, col: 21, offset: 7402},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection3Element352,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection3Element355,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection3Element358,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection3Element361,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 206, col: 40, offset: 7421},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 206, col: 44, offset: 7425},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 216, col: 19, offset: 7776},
																										run: (*parser).callonSection3Element375,
																										expr: &labeledExpr{
																											pos:   position{line: 216, col: 19, offset: 7776},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 216, col: 25, offset: 7782},
																												expr: &seqExpr{
																													pos: position{line: 216, col: 26, offset: 7783},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 216, col: 26, offset: 7783},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 27, offset: 7784},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 31, offset: 7788},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 32, offset: 7789},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 36, offset: 7793},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 37, offset: 7794},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 216, col: 41, offset: 7798,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 206, col: 67, offset: 7448},
																									expr: &litMatcher{
																										pos:        position{line: 206, col: 67, offset: 7448},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 206, col: 72, offset: 7453},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection3Element391,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						run: (*parser).callonSection3Element393,
																						expr: &seqExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 208, col: 5, offset: 7537},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection3Element396,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection3Element399,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection3Element402,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection3Element405,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 208, col: 24, offset: 7556},
																									expr: &litMatcher{
																										pos:        position{line: 208, col: 24, offset: 7556},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 208, col: 29, offset: 7561},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection3Element422,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 202, col: 59, offset: 7310},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 152, col: 170, offset: 5611},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonSection3Element428,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 351, col: 5, offset: 12532},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 351, col: 14, offset: 12541},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 351, col: 14, offset: 12541},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 351, col: 25, offset: 12552},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 351, col: 36, offset: 12563},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4",
			pos:  position{line: 355, col: 1, offset: 12662},
			expr: &actionExpr{
				pos: position{line: 355, col: 13, offset: 12674},
				run: (*parser).callonSection41,
				expr: &seqExpr{
					pos: position{line: 355, col: 13, offset: 12674},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 355, col: 13, offset: 12674},
							expr: &notExpr{
								pos: position{line: 1159, col: 8, offset: 46832},
								expr: &anyMatcher{
									line: 1159, col: 9, offset: 46833,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 356, col: 5, offset: 12745},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 356, col: 13, offset: 12753},
								name: "Section4Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 356, col: 28, offset: 12768},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 356, col: 38, offset: 12778},
								expr: &ruleRefExpr{
									pos:  position{line: 356, col: 38, offset: 12778},
									name: "Section4Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Title",
			pos:  position{line: 362, col: 1, offset: 12932},
			expr: &actionExpr{
				pos: position{line: 362, col: 18, offset: 12949},
				run: (*parser).callonSection4Title1,
				expr: &seqExpr{
					pos: position{line: 362, col: 18, offset: 12949},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 360, col: 24, offset: 12918},
							val:        "=====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 360, col: 32, offset: 12926},
							expr: &choiceExpr{
								pos: position{line: 1153, col: 7, offset: 46741},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1153, col: 7, offset: 46741},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1153, col: 13, offset: 46747},
										run: (*parser).callonSection4Title7,
										expr: &litMatcher{
											pos:        position{line: 1153, col: 13, offset: 46747},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 362, col: 38, offset: 12969},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 362, col: 48, offset: 12979},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 362, col: 63, offset: 12994},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 362, col: 67, offset: 12998},
								expr: &actionExpr{
									pos: position{line: 167, col: 20, offset: 6064},
									run: (*parser).callonSection4Title13,
									expr: &seqExpr{
										pos: position{line: 167, col: 20, offset: 6064},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 167, col: 20, offset: 6064},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 167, col: 25, offset: 6069},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1139, col: 7, offset: 46459},
													run: (*parser).callonSection4Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														expr: &seqExpr{
															pos: position{line: 1139, col: 8, offset: 46460},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1139, col: 8, offset: 46460},
																	expr: &choiceExpr{
																		pos: position{line: 1157, col: 12, offset: 46803},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1157, col: 12, offset: 46803},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1157, col: 21, offset: 46812},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 17, offset: 46469},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonSection4Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 21, offset: 46473},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 22, offset: 46474},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 26, offset: 46478},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 27, offset: 46479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 31, offset: 46483},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 32, offset: 46484},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 37, offset: 46489},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 38, offset: 46490},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 43, offset: 46495},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 44, offset: 46496},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1139, col: 48, offset: 46500,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 167, col: 33, offset: 6077},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 167, col: 38, offset: 6082},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonSection4Title44,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Element",
			pos:  position{line: 366, col: 1, offset: 13113},
			expr: &actionExpr{
				pos: position{line: 366, col: 20, offset: 13132},
				run: (*parser).callonSection4Element1,
				expr: &seqExpr{
					pos: position{line: 366, col: 20, offset: 13132},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 366, col: 20, offset: 13132},
							expr: &seqExpr{
								pos: position{line: 309, col: 24, offset: 10841},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 309, col: 24, offset: 10841},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 309, col: 29, offset: 10846},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonSection4Element9,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 366, col: 41, offset: 13153},
							expr: &seqExpr{
								pos: position{line: 326, col: 24, offset: 11522},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 326, col: 24, offset: 11522},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 326, col: 30, offset: 11528},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonSection4Element17,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 366, col: 62, offset: 13174},
							expr: &seqExpr{
								pos: position{line: 343, col: 24, offset: 12215},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 343, col: 24, offset: 12215},
										val:        "====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 343, col: 31, offset: 12222},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonSection4Element25,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 366, col: 83, offset: 13195},
							expr: &seqExpr{
								pos: position{line: 360, col: 24, offset: 12918},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 360, col: 24, offset: 12918},
										val:        "=====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 360, col: 32, offset: 12926},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonSection4Element33,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 367, col: 5, offset: 13220},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 367, col: 16, offset: 13231},
								expr: &actionExpr{
									pos: position{line: 151, col: 21, offset: 5356},
									run: (*parser).callonSection4Element37,
									expr: &seqExpr{
										pos: position{line: 151, col: 21, offset: 5356},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 151, col: 21, offset: 5356},
												expr: &charClassMatcher{
													pos:        position{line: 151, col: 23, offset: 5358},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 152, col: 5, offset: 5446},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 152, col: 11, offset: 5452},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 161, col: 14, offset: 5913},
															run: (*parser).callonSection4Element43,
															expr: &seqExpr{
																pos: position{line: 161, col: 14, offset: 5913},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 161, col: 14, offset: 5913},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 161, col: 19, offset: 5918},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection4Element47,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection4Element57,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 161, col: 27, offset: 5926},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 163, col: 5, offset: 5980},
															run: (*parser).callonSection4Element71,
															expr: &seqExpr{
																pos: position{line: 163, col: 5, offset: 5980},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 163, col: 5, offset: 5980},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 163, col: 10, offset: 5985},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection4Element75,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection4Element85,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 163, col: 18, offset: 5993},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 173, col: 17, offset: 6296},
															run: (*parser).callonSection4Element99,
															expr: &seqExpr{
																pos: position{line: 173, col: 17, offset: 6296},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 173, col: 17, offset: 6296},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 173, col: 21, offset: 6300},
																		expr: &litMatcher{
																			pos:        position{line: 173, col: 22, offset: 6301},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 173, col: 26, offset: 6305},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection4Element107,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 173, col: 30, offset: 6309},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 173, col: 37, offset: 6316},
																			run: (*parser).callonSection4Element110,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 173, col: 37, offset: 6316},
																				expr: &seqExpr{
																					pos: position{line: 173, col: 38, offset: 6317},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 173, col: 38, offset: 6317},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 173, col: 47, offset: 6326,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 16, offset: 6537},
															run: (*parser).callonSection4Element118,
															expr: &seqExpr{
																pos: position{line: 181, col: 16, offset: 6537},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 16, offset: 6537},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 21, offset: 6542},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection4Element124,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 25, offset: 6546},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 181, col: 31, offset: 6552},
																			run: (*parser).callonSection4Element127,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 181, col: 31, offset: 6552},
																				expr: &seqExpr{
																					pos: position{line: 181, col: 32, offset: 6553},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 181, col: 32, offset: 6553},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 181, col: 41, offset: 6562},
																							expr: &litMatcher{
																								pos:        position{line: 181, col: 42, offset: 6563},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 181, col: 46, offset: 6567,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 183, col: 8, offset: 6615},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 193, col: 21, offset: 6978},
															run: (*parser).callonSection4Element138,
															expr: &litMatcher{
																pos:        position{line: 193, col: 21, offset: 6978},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 195, col: 5, offset: 7036},
															run: (*parser).callonSection4Element140,
															expr: &seqExpr{
																pos: position{line: 195, col: 5, offset: 7036},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 195, col: 5, offset: 7036},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 195, col: 16, offset: 7047},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 195, col: 26, offset: 7057},
																			run: (*parser).callonSection4Element144,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 195, col: 26, offset: 7057},
																				expr: &seqExpr{
																					pos: position{line: 195, col: 27, offset: 7058},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 195, col: 27, offset: 7058},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 195, col: 36, offset: 7067},
																							expr: &litMatcher{
																								pos:        position{line: 195, col: 37, offset: 7068},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 195, col: 41, offset: 7072,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 197, col: 7, offset: 7119},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 224, col: 20, offset: 7961},
															run: (*parser).callonSection4Element155,
															expr: &seqExpr{
																pos: position{line: 224, col: 20, offset: 7961},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 224, col: 20, offset: 7961},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 24, offset: 7965},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection4Element159,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 224, col: 41, offset: 7982},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection4Element164,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 45, offset: 7986},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 49, offset: 7990},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection4Element168,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 70, offset: 8011},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 74, offset: 8015},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 267, col: 15, offset: 9332},
																			run: (*parser).callonSection4Element184,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 267, col: 15, offset: 9332},
																				expr: &seqExpr{
																					pos: position{line: 267, col: 16, offset: 9333},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 267, col: 16, offset: 9333},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 21, offset: 9338},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 22, offset: 9339},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 26, offset: 9343},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 27, offset: 9344},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 267, col: 31, offset: 9348,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 93, offset: 8034},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 228, col: 5, offset: 8177},
															run: (*parser).callonSection4Element199,
															expr: &seqExpr{
																pos: position{line: 228, col: 5, offset: 8177},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 228, col: 5, offset: 8177},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 9, offset: 8181},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection4Element203,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 228, col: 26, offset: 8198},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection4Element208,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 30, offset: 8202},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 34, offset: 8206},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection4Element212,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 55, offset: 8227},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 232, col: 5, offset: 8358},
															run: (*parser).callonSection4Element227,
															expr: &seqExpr{
																pos: position{line: 232, col: 5, offset: 8358},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 232, col: 5, offset: 8358},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 232, col: 9, offset: 8362},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection4Element231,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 232, col: 26, offset: 8379},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection4Element236,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 232, col: 30, offset: 8383},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 240, col: 20, offset: 8534},
															run: (*parser).callonSection4Element239,
															expr: &seqExpr{
																pos: position{line: 240, col: 20, offset: 8534},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 240, col: 20, offset: 8534},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 240, col: 31, offset: 8545},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 240, col: 31, offset: 8545},
																					run: (*parser).callonSection4Element243,
																					expr: &seqExpr{
																						pos: position{line: 240, col: 31, offset: 8545},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 240, col: 31, offset: 8545},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 35, offset: 8549},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection4Element247,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 240, col: 52, offset: 8566},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection4Element252,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 56, offset: 8570},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 60, offset: 8574},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection4Element256,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 81, offset: 8595},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 85, offset: 8599},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 267, col: 15, offset: 9332},
																									run: (*parser).callonSection4Element272,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 267, col: 15, offset: 9332},
																										expr: &seqExpr{
																											pos: position{line: 267, col: 16, offset: 9333},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 267, col: 16, offset: 9333},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 21, offset: 9338},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 22, offset: 9339},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 26, offset: 9343},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 27, offset: 9344},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 267, col: 31, offset: 9348,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 104, offset: 8618},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 244, col: 9, offset: 8777},
																					run: (*parser).callonSection4Element287,
																					expr: &seqExpr{
																						pos: position{line: 244, col: 9, offset: 8777},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 244, col: 9, offset: 8777},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 13, offset: 8781},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection4Element291,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 244, col: 30, offset: 8798},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection4Element296,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 34, offset: 8802},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 38, offset: 8806},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection4Element300,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 59, offset: 8827},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 248, col: 9, offset: 8974},
																					run: (*parser).callonSection4Element315,
																					expr: &seqExpr{
																						pos: position{line: 248, col: 9, offset: 8974},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 248, col: 9, offset: 8974},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 248, col: 13, offset: 8978},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection4Element319,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 248, col: 30, offset: 8995},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection4Element324,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 248, col: 34, offset: 8999},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 252, col: 5, offset: 9091},
																		run: (*parser).callonSection4Element327,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 188, col: 30, offset: 6780},
															run: (*parser).callonSection4Element328,
															expr: &seqExpr{
																pos: position{line: 188, col: 30, offset: 6780},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 188, col: 30, offset: 6780},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 188, col: 34, offset: 6784},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 537, col: 19, offset: 20206},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 537, col: 19, offset: 20206},
																					run: (*parser).callonSection4Element333,
																					expr: &litMatcher{
																						pos:        position{line: 537, col: 19, offset: 20206},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 539, col: 5, offset: 20244},
																					run: (*parser).callonSection4Element335,
																					expr: &litMatcher{
																						pos:        position{line: 539, col: 5, offset: 20244},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 541, col: 5, offset: 20284},
																					run: (*parser).callonSection4Element337,
																					expr: &litMatcher{
																						pos:        position{line: 541, col: 5, offset: 20284},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 543, col: 5, offset: 20334},
																					run: (*parser).callonSection4Element339,
																					expr: &litMatcher{
																						pos:        position{line: 543, col: 5, offset: 20334},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 545, col: 5, offset: 20380},
																					run: (*parser).callonSection4Element341,
																					expr: &litMatcher{
																						pos:        position{line: 545, col: 5, offset: 20380},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 188, col: 53, offset: 6803},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 220, col: 21, offset: 7858},
															run: (*parser).callonSection4Element344,
															expr: &litMatcher{
																pos:        position{line: 220, col: 21, offset: 7858},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 202, col: 19, offset: 7270},
															run: (*parser).callonSection4Element346,
															expr: &seqExpr{
																pos: position{line: 202, col: 19, offset: 7270},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 202, col: 19, offset: 7270},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 202, col: 23, offset: 7274},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection4Element352,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 202, col: 27, offset: 7278},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 202, col: 38, offset: 7289},
																			expr: &choiceExpr{
																				pos: position{line: 206, col: 21, offset: 7402},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						run: (*parser).callonSection4Element357,
																						expr: &seqExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 206, col: 21, offset: 7402},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection4Element360,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection4Element363,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection4Element366,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection4Element369,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 206, col: 40, offset: 7421},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 206, col: 44, offset: 7425},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 216, col: 19, offset: 7776},
																										run: (*parser).callonSection4Element383,
																										expr: &labeledExpr{
																											pos:   position{line: 216, col: 19, offset: 7776},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 216, col: 25, offset: 7782},
																												expr: &seqExpr{
																													pos: position{line: 216, col: 26, offset: 7783},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 216, col: 26, offset: 7783},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 27, offset: 7784},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 31, offset: 7788},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 32, offset: 7789},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 36, offset: 7793},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 37, offset: 7794},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 216, col: 41, offset: 7798,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 206, col: 67, offset: 7448},
																									expr: &litMatcher{
																										pos:        position{line: 206, col: 67, offset: 7448},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 206, col: 72, offset: 7453},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection4Element399,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						run: (*parser).callonSection4Element401,
																						expr: &seqExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 208, col: 5, offset: 7537},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection4Element404,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection4Element407,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection4Element410,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection4Element413,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 208, col: 24, offset: 7556},
																									expr: &litMatcher{
																										pos:        position{line: 208, col: 24, offset: 7556},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 208, col: 29, offset: 7561},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection4Element430,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 202, col: 59, offset: 7310},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 152, col: 170, offset: 5611},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonSection4Element436,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 368, col: 5, offset: 13256},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 368, col: 14, offset: 13265},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 368, col: 14, offset: 13265},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 368, col: 25, offset: 13276},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5",
			pos:  position{line: 372, col: 1, offset: 13375},
			expr: &actionExpr{
				pos: position{line: 372, col: 13, offset: 13387},
				run: (*parser).callonSection51,
				expr: &seqExpr{
					pos: position{line: 372, col: 13, offset: 13387},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 372, col: 13, offset: 13387},
							expr: &notExpr{
								pos: position{line: 1159, col: 8, offset: 46832},
								expr: &anyMatcher{
									line: 1159, col: 9, offset: 46833,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 373, col: 5, offset: 13458},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 373, col: 13, offset: 13466},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 373, col: 28, offset: 13481},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 373, col: 38, offset: 13491},
								expr: &ruleRefExpr{
									pos:  position{line: 373, col: 38, offset: 13491},
									name: "Section5Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Title",
			pos:  position{line: 379, col: 1, offset: 13646},
			expr: &actionExpr{
				pos: position{line: 379, col: 18, offset: 13663},
				run: (*parser).callonSection5Title1,
				expr: &seqExpr{
					pos: position{line: 379, col: 18, offset: 13663},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 377, col: 24, offset: 13631},
							val:        "======",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 377, col: 33, offset: 13640},
							expr: &choiceExpr{
								pos: position{line: 1153, col: 7, offset: 46741},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1153, col: 7, offset: 46741},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1153, col: 13, offset: 46747},
										run: (*parser).callonSection5Title7,
										expr: &litMatcher{
											pos:        position{line: 1153, col: 13, offset: 46747},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 379, col: 38, offset: 13683},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 379, col: 48, offset: 13693},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 379, col: 63, offset: 13708},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 379, col: 67, offset: 13712},
								expr: &actionExpr{
									pos: position{line: 167, col: 20, offset: 6064},
									run: (*parser).callonSection5Title13,
									expr: &seqExpr{
										pos: position{line: 167, col: 20, offset: 6064},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 167, col: 20, offset: 6064},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 167, col: 25, offset: 6069},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1139, col: 7, offset: 46459},
													run: (*parser).callonSection5Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														expr: &seqExpr{
															pos: position{line: 1139, col: 8, offset: 46460},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1139, col: 8, offset: 46460},
																	expr: &choiceExpr{
																		pos: position{line: 1157, col: 12, offset: 46803},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1157, col: 12, offset: 46803},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1157, col: 21, offset: 46812},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 17, offset: 46469},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonSection5Title27,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 21, offset: 46473},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 22, offset: 46474},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 26, offset: 46478},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 27, offset: 46479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 31, offset: 46483},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 32, offset: 46484},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 37, offset: 46489},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 38, offset: 46490},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1139, col: 43, offset: 46495},
																	expr: &litMatcher{
																		pos:        position{line: 1139, col: 44, offset: 46496},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1139, col: 48, offset: 46500,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 167, col: 33, offset: 6077},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 167, col: 38, offset: 6082},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonSection5Title44,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Element",
			pos:  position{line: 383, col: 1, offset: 13828},
			expr: &actionExpr{
				pos: position{line: 384, col: 5, offset: 13852},
				run: (*parser).callonSection5Element1,
				expr: &seqExpr{
					pos: position{line: 384, col: 5, offset: 13852},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 384, col: 5, offset: 13852},
							expr: &ruleRefExpr{
								pos:  position{line: 384, col: 6, offset: 13853},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 384, col: 20, offset: 13867},
							expr: &ruleRefExpr{
								pos:  position{line: 384, col: 21, offset: 13868},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 384, col: 35, offset: 13882},
							expr: &ruleRefExpr{
								pos:  position{line: 384, col: 36, offset: 13883},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 384, col: 50, offset: 13897},
							expr: &ruleRefExpr{
								pos:  position{line: 384, col: 51, offset: 13898},
								name: "Section4Title",
							},
						},
						&notExpr{
							pos: position{line: 384, col: 65, offset: 13912},
							expr: &ruleRefExpr{
								pos:  position{line: 384, col: 66, offset: 13913},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 385, col: 5, offset: 13932},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 385, col: 16, offset: 13943},
								expr: &actionExpr{
									pos: position{line: 151, col: 21, offset: 5356},
									run: (*parser).callonSection5Element15,
									expr: &seqExpr{
										pos: position{line: 151, col: 21, offset: 5356},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 151, col: 21, offset: 5356},
												expr: &charClassMatcher{
													pos:        position{line: 151, col: 23, offset: 5358},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 152, col: 5, offset: 5446},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 152, col: 11, offset: 5452},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 161, col: 14, offset: 5913},
															run: (*parser).callonSection5Element21,
															expr: &seqExpr{
																pos: position{line: 161, col: 14, offset: 5913},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 161, col: 14, offset: 5913},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 161, col: 19, offset: 5918},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection5Element25,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection5Element35,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 161, col: 27, offset: 5926},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 163, col: 5, offset: 5980},
															run: (*parser).callonSection5Element49,
															expr: &seqExpr{
																pos: position{line: 163, col: 5, offset: 5980},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 163, col: 5, offset: 5980},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 163, col: 10, offset: 5985},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonSection5Element53,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonSection5Element63,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 163, col: 18, offset: 5993},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 173, col: 17, offset: 6296},
															run: (*parser).callonSection5Element77,
															expr: &seqExpr{
																pos: position{line: 173, col: 17, offset: 6296},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 173, col: 17, offset: 6296},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 173, col: 21, offset: 6300},
																		expr: &litMatcher{
																			pos:        position{line: 173, col: 22, offset: 6301},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 173, col: 26, offset: 6305},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection5Element85,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 173, col: 30, offset: 6309},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 173, col: 37, offset: 6316},
																			run: (*parser).callonSection5Element88,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 173, col: 37, offset: 6316},
																				expr: &seqExpr{
																					pos: position{line: 173, col: 38, offset: 6317},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 173, col: 38, offset: 6317},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 173, col: 47, offset: 6326,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 16, offset: 6537},
															run: (*parser).callonSection5Element96,
															expr: &seqExpr{
																pos: position{line: 181, col: 16, offset: 6537},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 16, offset: 6537},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 21, offset: 6542},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection5Element102,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 25, offset: 6546},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 181, col: 31, offset: 6552},
																			run: (*parser).callonSection5Element105,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 181, col: 31, offset: 6552},
																				expr: &seqExpr{
																					pos: position{line: 181, col: 32, offset: 6553},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 181, col: 32, offset: 6553},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 181, col: 41, offset: 6562},
																							expr: &litMatcher{
																								pos:        position{line: 181, col: 42, offset: 6563},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 181, col: 46, offset: 6567,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 183, col: 8, offset: 6615},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 193, col: 21, offset: 6978},
															run: (*parser).callonSection5Element116,
															expr: &litMatcher{
																pos:        position{line: 193, col: 21, offset: 6978},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 195, col: 5, offset: 7036},
															run: (*parser).callonSection5Element118,
															expr: &seqExpr{
																pos: position{line: 195, col: 5, offset: 7036},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 195, col: 5, offset: 7036},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 195, col: 16, offset: 7047},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 195, col: 26, offset: 7057},
																			run: (*parser).callonSection5Element122,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 195, col: 26, offset: 7057},
																				expr: &seqExpr{
																					pos: position{line: 195, col: 27, offset: 7058},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 195, col: 27, offset: 7058},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 195, col: 36, offset: 7067},
																							expr: &litMatcher{
																								pos:        position{line: 195, col: 37, offset: 7068},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 195, col: 41, offset: 7072,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 197, col: 7, offset: 7119},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 224, col: 20, offset: 7961},
															run: (*parser).callonSection5Element133,
															expr: &seqExpr{
																pos: position{line: 224, col: 20, offset: 7961},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 224, col: 20, offset: 7961},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 24, offset: 7965},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection5Element137,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 224, col: 41, offset: 7982},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection5Element142,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 45, offset: 7986},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 49, offset: 7990},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection5Element146,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 70, offset: 8011},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 74, offset: 8015},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 267, col: 15, offset: 9332},
																			run: (*parser).callonSection5Element162,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 267, col: 15, offset: 9332},
																				expr: &seqExpr{
																					pos: position{line: 267, col: 16, offset: 9333},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 267, col: 16, offset: 9333},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 21, offset: 9338},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 22, offset: 9339},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 26, offset: 9343},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 27, offset: 9344},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 267, col: 31, offset: 9348,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 93, offset: 8034},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 228, col: 5, offset: 8177},
															run: (*parser).callonSection5Element177,
															expr: &seqExpr{
																pos: position{line: 228, col: 5, offset: 8177},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 228, col: 5, offset: 8177},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 9, offset: 8181},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection5Element181,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 228, col: 26, offset: 8198},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection5Element186,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 30, offset: 8202},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 34, offset: 8206},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonSection5Element190,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 55, offset: 8227},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 232, col: 5, offset: 8358},
															run: (*parser).callonSection5Element205,
															expr: &seqExpr{
																pos: position{line: 232, col: 5, offset: 8358},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 232, col: 5, offset: 8358},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 232, col: 9, offset: 8362},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonSection5Element209,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 232, col: 26, offset: 8379},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection5Element214,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 232, col: 30, offset: 8383},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 240, col: 20, offset: 8534},
															run: (*parser).callonSection5Element217,
															expr: &seqExpr{
																pos: position{line: 240, col: 20, offset: 8534},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 240, col: 20, offset: 8534},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 240, col: 31, offset: 8545},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 240, col: 31, offset: 8545},
																					run: (*parser).callonSection5Element221,
																					expr: &seqExpr{
																						pos: position{line: 240, col: 31, offset: 8545},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 240, col: 31, offset: 8545},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 35, offset: 8549},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection5Element225,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 240, col: 52, offset: 8566},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection5Element230,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 56, offset: 8570},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 60, offset: 8574},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection5Element234,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 81, offset: 8595},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 85, offset: 8599},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 267, col: 15, offset: 9332},
																									run: (*parser).callonSection5Element250,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 267, col: 15, offset: 9332},
																										expr: &seqExpr{
																											pos: position{line: 267, col: 16, offset: 9333},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 267, col: 16, offset: 9333},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 21, offset: 9338},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 22, offset: 9339},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 26, offset: 9343},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 27, offset: 9344},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 267, col: 31, offset: 9348,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 104, offset: 8618},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 244, col: 9, offset: 8777},
																					run: (*parser).callonSection5Element265,
																					expr: &seqExpr{
																						pos: position{line: 244, col: 9, offset: 8777},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 244, col: 9, offset: 8777},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 13, offset: 8781},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection5Element269,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 244, col: 30, offset: 8798},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection5Element274,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 34, offset: 8802},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 38, offset: 8806},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonSection5Element278,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 59, offset: 8827},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 248, col: 9, offset: 8974},
																					run: (*parser).callonSection5Element293,
																					expr: &seqExpr{
																						pos: position{line: 248, col: 9, offset: 8974},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 248, col: 9, offset: 8974},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 248, col: 13, offset: 8978},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonSection5Element297,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 248, col: 30, offset: 8995},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonSection5Element302,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 248, col: 34, offset: 8999},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 252, col: 5, offset: 9091},
																		run: (*parser).callonSection5Element305,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 188, col: 30, offset: 6780},
															run: (*parser).callonSection5Element306,
															expr: &seqExpr{
																pos: position{line: 188, col: 30, offset: 6780},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 188, col: 30, offset: 6780},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 188, col: 34, offset: 6784},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 537, col: 19, offset: 20206},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 537, col: 19, offset: 20206},
																					run: (*parser).callonSection5Element311,
																					expr: &litMatcher{
																						pos:        position{line: 537, col: 19, offset: 20206},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 539, col: 5, offset: 20244},
																					run: (*parser).callonSection5Element313,
																					expr: &litMatcher{
																						pos:        position{line: 539, col: 5, offset: 20244},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 541, col: 5, offset: 20284},
																					run: (*parser).callonSection5Element315,
																					expr: &litMatcher{
																						pos:        position{line: 541, col: 5, offset: 20284},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 543, col: 5, offset: 20334},
																					run: (*parser).callonSection5Element317,
																					expr: &litMatcher{
																						pos:        position{line: 543, col: 5, offset: 20334},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 545, col: 5, offset: 20380},
																					run: (*parser).callonSection5Element319,
																					expr: &litMatcher{
																						pos:        position{line: 545, col: 5, offset: 20380},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 188, col: 53, offset: 6803},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 220, col: 21, offset: 7858},
															run: (*parser).callonSection5Element322,
															expr: &litMatcher{
																pos:        position{line: 220, col: 21, offset: 7858},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 202, col: 19, offset: 7270},
															run: (*parser).callonSection5Element324,
															expr: &seqExpr{
																pos: position{line: 202, col: 19, offset: 7270},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 202, col: 19, offset: 7270},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 202, col: 23, offset: 7274},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonSection5Element330,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 202, col: 27, offset: 7278},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 202, col: 38, offset: 7289},
																			expr: &choiceExpr{
																				pos: position{line: 206, col: 21, offset: 7402},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						run: (*parser).callonSection5Element335,
																						expr: &seqExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 206, col: 21, offset: 7402},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection5Element338,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection5Element341,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection5Element344,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection5Element347,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 206, col: 40, offset: 7421},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 206, col: 44, offset: 7425},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 216, col: 19, offset: 7776},
																										run: (*parser).callonSection5Element361,
																										expr: &labeledExpr{
																											pos:   position{line: 216, col: 19, offset: 7776},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 216, col: 25, offset: 7782},
																												expr: &seqExpr{
																													pos: position{line: 216, col: 26, offset: 7783},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 216, col: 26, offset: 7783},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 27, offset: 7784},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 31, offset: 7788},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 32, offset: 7789},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 36, offset: 7793},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 37, offset: 7794},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 216, col: 41, offset: 7798,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 206, col: 67, offset: 7448},
																									expr: &litMatcher{
																										pos:        position{line: 206, col: 67, offset: 7448},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 206, col: 72, offset: 7453},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection5Element377,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						run: (*parser).callonSection5Element379,
																						expr: &seqExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 208, col: 5, offset: 7537},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonSection5Element382,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonSection5Element385,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonSection5Element388,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonSection5Element391,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 208, col: 24, offset: 7556},
																									expr: &litMatcher{
																										pos:        position{line: 208, col: 24, offset: 7556},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 208, col: 29, offset: 7561},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonSection5Element408,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 202, col: 59, offset: 7310},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 152, col: 170, offset: 5611},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonSection5Element414,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 386, col: 5, offset: 13968},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 386, col: 14, offset: 13977},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElements",
			pos:  position{line: 390, col: 1, offset: 14076},
			expr: &actionExpr{
				pos: position{line: 390, col: 18, offset: 14093},
				run: (*parser).callonTitleElements1,
				expr: &labeledExpr{
					pos:   position{line: 390, col: 18, offset: 14093},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 390, col: 27, offset: 14102},
						expr: &seqExpr{
							pos: position{line: 390, col: 28, offset: 14103},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 390, col: 28, offset: 14103},
									expr: &choiceExpr{
										pos: position{line: 1157, col: 12, offset: 46803},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1157, col: 12, offset: 46803},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1157, col: 21, offset: 46812},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 390, col: 37, offset: 14112},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonTitleElements12,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 390, col: 41, offset: 14116},
									expr: &actionExpr{
										pos: position{line: 167, col: 20, offset: 6064},
										run: (*parser).callonTitleElements15,
										expr: &seqExpr{
											pos: position{line: 167, col: 20, offset: 6064},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 167, col: 20, offset: 6064},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 167, col: 25, offset: 6069},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														run: (*parser).callonTitleElements19,
														expr: &oneOrMoreExpr{
															pos: position{line: 1139, col: 7, offset: 46459},
															expr: &seqExpr{
																pos: position{line: 1139, col: 8, offset: 46460},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1139, col: 8, offset: 46460},
																		expr: &choiceExpr{
																			pos: position{line: 1157, col: 12, offset: 46803},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 17, offset: 46469},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonTitleElements29,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 21, offset: 46473},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 22, offset: 46474},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 26, offset: 46478},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 27, offset: 46479},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 31, offset: 46483},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 32, offset: 46484},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 37, offset: 46489},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 38, offset: 46490},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 43, offset: 46495},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 44, offset: 46496},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1139, col: 48, offset: 46500,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 167, col: 33, offset: 6077},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 167, col: 38, offset: 6082},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonTitleElements46,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 390, col: 58, offset: 14133},
									name: "TitleElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 390, col: 71, offset: 14146},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonTitleElements52,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElement",
			pos:  position{line: 394, col: 1, offset: 14258},
			expr: &actionExpr{
				pos: position{line: 394, col: 17, offset: 14274},
				run: (*parser).callonTitleElement1,
				expr: &labeledExpr{
					pos:   position{line: 394, col: 17, offset: 14274},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 394, col: 26, offset: 14283},
						alternatives: []interface{}{
							&actionExpr{
								pos: position{line: 767, col: 19, offset: 32559},
								run: (*parser).callonTitleElement4,
								expr: &seqExpr{
									pos: position{line: 767, col: 19, offset: 32559},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 767, col: 19, offset: 32559},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 767, col: 24, offset: 32564},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1139, col: 7, offset: 46459},
												run: (*parser).callonTitleElement8,
												expr: &oneOrMoreExpr{
													pos: position{line: 1139, col: 7, offset: 46459},
													expr: &seqExpr{
														pos: position{line: 1139, col: 8, offset: 46460},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1139, col: 8, offset: 46460},
																expr: &choiceExpr{
																	pos: position{line: 1157, col: 12, offset: 46803},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1157, col: 12, offset: 46803},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1157, col: 21, offset: 46812},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1139, col: 17, offset: 46469},
																expr: &choiceExpr{
																	pos: position{line: 1153, col: 7, offset: 46741},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1153, col: 7, offset: 46741},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1153, col: 13, offset: 46747},
																			run: (*parser).callonTitleElement18,
																			expr: &litMatcher{
																				pos:        position{line: 1153, col: 13, offset: 46747},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1139, col: 21, offset: 46473},
																expr: &litMatcher{
																	pos:        position{line: 1139, col: 22, offset: 46474},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1139, col: 26, offset: 46478},
																expr: &litMatcher{
																	pos:        position{line: 1139, col: 27, offset: 46479},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1139, col: 31, offset: 46483},
																expr: &litMatcher{
																	pos:        position{line: 1139, col: 32, offset: 46484},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1139, col: 37, offset: 46489},
																expr: &litMatcher{
																	pos:        position{line: 1139, col: 38, offset: 46490},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1139, col: 43, offset: 46495},
																expr: &litMatcher{
																	pos:        position{line: 1139, col: 44, offset: 46496},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1139, col: 48, offset: 46500,
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 767, col: 32, offset: 32572},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonTitleElement34,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 767, col: 36, offset: 32576},
											val:        ",",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 767, col: 40, offset: 32580},
											label: "label",
											expr: &actionExpr{
												pos: position{line: 773, col: 24, offset: 32782},
												run: (*parser).callonTitleElement38,
												expr: &oneOrMoreExpr{
													pos: position{line: 773, col: 24, offset: 32782},
													expr: &seqExpr{
														pos: position{line: 773, col: 25, offset: 32783},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 773, col: 25, offset: 32783},
																expr: &litMatcher{
																	pos:        position{line: 773, col: 26, offset: 32784},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 773, col: 31, offset: 32789,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 767, col: 68, offset: 32608},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 769, col: 5, offset: 32683},
								run: (*parser).callonTitleElement45,
								expr: &seqExpr{
									pos: position{line: 769, col: 5, offset: 32683},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 769, col: 5, offset: 32683},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 769, col: 10, offset: 32688},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1139, col: 7, offset: 46459},
												run: (*parser).callonTitleElement49,
												expr: &oneOrMoreExpr{
													pos: position{line: 1139, col: 7, offset: 46459},
													expr: &seqExpr{
														pos: position{line: 1139, col: 8, offset: 46460},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1139, col: 8, offset: 46460},
																expr: &choiceExpr{
																	pos: position{line: 1157, col: 12, offset: 46803},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1157, col: 12, offset: 46803},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1157, col: 21, offset: 46812},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1139, col: 17, offset: 46469},
																expr: &choiceExpr{
																	pos: position{line: 1153, col: 7, offset: 46741},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1153, col: 7, offset: 46741},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1153, col: 13, offset: 46747},
																			run: (*parser).callonTitleElement59,
																			expr: &litMatcher{
																				pos:        position{line: 1153, col: 13, offset: 46747},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1139, col: 21, offset: 46473},
																expr: &litMatcher{
																	pos:        position{line: 1139, col: 22, offset: 46474},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1139, col: 26, offset: 46478},
																expr: &litMatcher{
																	pos:        position{line: 1139, col: 27, offset: 46479},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1139, col: 31, offset: 46483},
																expr: &litMatcher{
																	pos:        position{line: 1139, col: 32, offset: 46484},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1139, col: 37, offset: 46489},
																expr: &litMatcher{
																	pos:        position{line: 1139, col: 38, offset: 46490},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1139, col: 43, offset: 46495},
																expr: &litMatcher{
																	pos:        position{line: 1139, col: 44, offset: 46496},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1139, col: 48, offset: 46500,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 769, col: 18, offset: 32696},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 394, col: 43, offset: 14300},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 821, col: 16, offset: 34276},
								run: (*parser).callonTitleElement74,
								expr: &seqExpr{
									pos: position{line: 821, col: 16, offset: 34276},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 821, col: 16, offset: 34276},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 821, col: 25, offset: 34285},
											expr: &litMatcher{
												pos:        position{line: 821, col: 26, offset: 34286},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 821, col: 30, offset: 34290},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 1135, col: 8, offset: 46389},
												run: (*parser).callonTitleElement80,
												expr: &oneOrMoreExpr{
													pos: position{line: 1135, col: 8, offset: 46389},
													expr: &seqExpr{
														pos: position{line: 1135, col: 9, offset: 46390},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1135, col: 9, offset: 46390},
																expr: &choiceExpr{
																	pos: position{line: 1157, col: 12, offset: 46803},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1157, col: 12, offset: 46803},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1157, col: 21, offset: 46812},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1135, col: 18, offset: 46399},
																expr: &choiceExpr{
																	pos: position{line: 1153, col: 7, offset: 46741},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1153, col: 7, offset: 46741},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1153, col: 13, offset: 46747},
																			run: (*parser).callonTitleElement90,
																			expr: &litMatcher{
																				pos:        position{line: 1153, col: 13, offset: 46747},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1135, col: 22, offset: 46403},
																expr: &litMatcher{
																	pos:        position{line: 1135, col: 23, offset: 46404},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1135, col: 27, offset: 46408},
																expr: &litMatcher{
																	pos:        position{line: 1135, col: 28, offset: 46409},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1135, col: 32, offset: 46413,
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 821, col: 41, offset: 34301},
											label: "inlineAttributes",
											expr: &choiceExpr{
												pos: position{line: 826, col: 20, offset: 34558},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 826, col: 20, offset: 34558},
														run: (*parser).callonTitleElement99,
														expr: &seqExpr{
															pos: position{line: 826, col: 20, offset: 34558},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 826, col: 20, offset: 34558},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 826, col: 24, offset: 34562},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 843, col: 19, offset: 35337},
																		run: (*parser).callonTitleElement103,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 843, col: 19, offset: 35337},
																			expr: &seqExpr{
																				pos: position{line: 843, col: 20, offset: 35338},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 21, offset: 35339},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 843, col: 25, offset: 35343},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 26, offset: 35344},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 843, col: 30, offset: 35348},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 31, offset: 35349},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 843, col: 35, offset: 35353,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 826, col: 45, offset: 34583},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 827, col: 9, offset: 34595},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 843, col: 19, offset: 35337},
																		run: (*parser).callonTitleElement115,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 843, col: 19, offset: 35337},
																			expr: &seqExpr{
																				pos: position{line: 843, col: 20, offset: 35338},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 21, offset: 35339},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 843, col: 25, offset: 35343},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 26, offset: 35344},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 843, col: 30, offset: 35348},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 31, offset: 35349},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 843, col: 35, offset: 35353,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 827, col: 33, offset: 34619},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 828, col: 9, offset: 34631},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 843, col: 19, offset: 35337},
																		run: (*parser).callonTitleElement127,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 843, col: 19, offset: 35337},
																			expr: &seqExpr{
																				pos: position{line: 843, col: 20, offset: 35338},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 21, offset: 35339},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 843, col: 25, offset: 35343},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 26, offset: 35344},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 843, col: 30, offset: 35348},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 31, offset: 35349},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 843, col: 35, offset: 35353,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 828, col: 33, offset: 34655},
																	expr: &litMatcher{
																		pos:        position{line: 828, col: 33, offset: 34655},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 829, col: 9, offset: 34668},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 829, col: 20, offset: 34679},
																		expr: &choiceExpr{
																			pos: position{line: 206, col: 21, offset: 7402},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					run: (*parser).callonTitleElement142,
																					expr: &seqExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 206, col: 21, offset: 7402},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 212, col: 17, offset: 7662},
																									run: (*parser).callonTitleElement145,
																									expr: &seqExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												expr: &actionExpr{
																													pos: position{line: 236, col: 14, offset: 8471},
																													run: (*parser).callonTitleElement148,
																													expr: &litMatcher{
																														pos:        position{line: 236, col: 14, offset: 8471},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 28, offset: 7673},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9203},
																													run: (*parser).callonTitleElement151,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9203},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 39, offset: 7684},
																												expr: &actionExpr{
																													pos: position{line: 1099, col: 16, offset: 45385},
																													run: (*parser).callonTitleElement154,
																													expr: &litMatcher{
																														pos:        position{line: 1099, col: 16, offset: 45385},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 212, col: 52, offset: 7697},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 212, col: 56, offset: 7701},
																													expr: &seqExpr{
																														pos: position{line: 212, col: 57, offset: 7702},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 58, offset: 7703},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 62, offset: 7707},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 63, offset: 7708},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 67, offset: 7712},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 68, offset: 7713},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 212, col: 72, offset: 7717,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 206, col: 40, offset: 7421},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 206, col: 44, offset: 7425},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 216, col: 19, offset: 7776},
																									run: (*parser).callonTitleElement168,
																									expr: &labeledExpr{
																										pos:   position{line: 216, col: 19, offset: 7776},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 216, col: 25, offset: 7782},
																											expr: &seqExpr{
																												pos: position{line: 216, col: 26, offset: 7783},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 27, offset: 7784},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 216, col: 31, offset: 7788},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 32, offset: 7789},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 216, col: 36, offset: 7793},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 37, offset: 7794},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 216, col: 41, offset: 7798,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 206, col: 67, offset: 7448},
																								expr: &litMatcher{
																									pos:        position{line: 206, col: 67, offset: 7448},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 206, col: 72, offset: 7453},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonTitleElement184,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 208, col: 5, offset: 7537},
																					run: (*parser).callonTitleElement186,
																					expr: &seqExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 208, col: 5, offset: 7537},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 212, col: 17, offset: 7662},
																									run: (*parser).callonTitleElement189,
																									expr: &seqExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												expr: &actionExpr{
																													pos: position{line: 236, col: 14, offset: 8471},
																													run: (*parser).callonTitleElement192,
																													expr: &litMatcher{
																														pos:        position{line: 236, col: 14, offset: 8471},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 28, offset: 7673},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9203},
																													run: (*parser).callonTitleElement195,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9203},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 39, offset: 7684},
																												expr: &actionExpr{
																													pos: position{line: 1099, col: 16, offset: 45385},
																													run: (*parser).callonTitleElement198,
																													expr: &litMatcher{
																														pos:        position{line: 1099, col: 16, offset: 45385},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 212, col: 52, offset: 7697},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 212, col: 56, offset: 7701},
																													expr: &seqExpr{
																														pos: position{line: 212, col: 57, offset: 7702},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 58, offset: 7703},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 62, offset: 7707},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 63, offset: 7708},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 67, offset: 7712},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 68, offset: 7713},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 212, col: 72, offset: 7717,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 208, col: 24, offset: 7556},
																								expr: &litMatcher{
																									pos:        position{line: 208, col: 24, offset: 7556},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 208, col: 29, offset: 7561},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonTitleElement215,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 829, col: 40, offset: 34699},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 831, col: 9, offset: 34805},
														run: (*parser).callonTitleElement218,
														expr: &seqExpr{
															pos: position{line: 831, col: 9, offset: 34805},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 831, col: 9, offset: 34805},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 831, col: 13, offset: 34809},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 843, col: 19, offset: 35337},
																		run: (*parser).callonTitleElement222,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 843, col: 19, offset: 35337},
																			expr: &seqExpr{
																				pos: position{line: 843, col: 20, offset: 35338},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 21, offset: 35339},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 843, col: 25, offset: 35343},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 26, offset: 35344},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 843, col: 30, offset: 35348},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 31, offset: 35349},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 843, col: 35, offset: 35353,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 831, col: 34, offset: 34830},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 832, col: 9, offset: 34842},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 843, col: 19, offset: 35337},
																		run: (*parser).callonTitleElement234,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 843, col: 19, offset: 35337},
																			expr: &seqExpr{
																				pos: position{line: 843, col: 20, offset: 35338},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 21, offset: 35339},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 843, col: 25, offset: 35343},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 26, offset: 35344},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 843, col: 30, offset: 35348},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 31, offset: 35349},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 843, col: 35, offset: 35353,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 832, col: 32, offset: 34865},
																	expr: &litMatcher{
																		pos:        position{line: 832, col: 32, offset: 34865},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 833, col: 9, offset: 34878},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 833, col: 20, offset: 34889},
																		expr: &choiceExpr{
																			pos: position{line: 206, col: 21, offset: 7402},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					run: (*parser).callonTitleElement249,
																					expr: &seqExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 206, col: 21, offset: 7402},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 212, col: 17, offset: 7662},
																									run: (*parser).callonTitleElement252,
																									expr: &seqExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												expr: &actionExpr{
																													pos: position{line: 236, col: 14, offset: 8471},
																													run: (*parser).callonTitleElement255,
																													expr: &litMatcher{
																														pos:        position{line: 236, col: 14, offset: 8471},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 28, offset: 7673},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9203},
																													run: (*parser).callonTitleElement258,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9203},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 39, offset: 7684},
																												expr: &actionExpr{
																													pos: position{line: 1099, col: 16, offset: 45385},
																													run: (*parser).callonTitleElement261,
																													expr: &litMatcher{
																														pos:        position{line: 1099, col: 16, offset: 45385},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 212, col: 52, offset: 7697},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 212, col: 56, offset: 7701},
																													expr: &seqExpr{
																														pos: position{line: 212, col: 57, offset: 7702},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 58, offset: 7703},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 62, offset: 7707},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 63, offset: 7708},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 67, offset: 7712},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 68, offset: 7713},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 212, col: 72, offset: 7717,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 206, col: 40, offset: 7421},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 206, col: 44, offset: 7425},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 216, col: 19, offset: 7776},
																									run: (*parser).callonTitleElement275,
																									expr: &labeledExpr{
																										pos:   position{line: 216, col: 19, offset: 7776},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 216, col: 25, offset: 7782},
																											expr: &seqExpr{
																												pos: position{line: 216, col: 26, offset: 7783},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 27, offset: 7784},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 216, col: 31, offset: 7788},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 32, offset: 7789},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 216, col: 36, offset: 7793},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 37, offset: 7794},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 216, col: 41, offset: 7798,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 206, col: 67, offset: 7448},
																								expr: &litMatcher{
																									pos:        position{line: 206, col: 67, offset: 7448},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 206, col: 72, offset: 7453},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonTitleElement291,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 208, col: 5, offset: 7537},
																					run: (*parser).callonTitleElement293,
																					expr: &seqExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 208, col: 5, offset: 7537},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 212, col: 17, offset: 7662},
																									run: (*parser).callonTitleElement296,
																									expr: &seqExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												expr: &actionExpr{
																													pos: position{line: 236, col: 14, offset: 8471},
																													run: (*parser).callonTitleElement299,
																													expr: &litMatcher{
																														pos:        position{line: 236, col: 14, offset: 8471},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 28, offset: 7673},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9203},
																													run: (*parser).callonTitleElement302,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9203},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 39, offset: 7684},
																												expr: &actionExpr{
																													pos: position{line: 1099, col: 16, offset: 45385},
																													run: (*parser).callonTitleElement305,
																													expr: &litMatcher{
																														pos:        position{line: 1099, col: 16, offset: 45385},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 212, col: 52, offset: 7697},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 212, col: 56, offset: 7701},
																													expr: &seqExpr{
																														pos: position{line: 212, col: 57, offset: 7702},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 58, offset: 7703},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 62, offset: 7707},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 63, offset: 7708},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 67, offset: 7712},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 68, offset: 7713},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 212, col: 72, offset: 7717,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 208, col: 24, offset: 7556},
																								expr: &litMatcher{
																									pos:        position{line: 208, col: 24, offset: 7556},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 208, col: 29, offset: 7561},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonTitleElement322,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 833, col: 40, offset: 34909},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 835, col: 9, offset: 35012},
														run: (*parser).callonTitleElement325,
														expr: &seqExpr{
															pos: position{line: 835, col: 9, offset: 35012},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 835, col: 9, offset: 35012},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 835, col: 13, offset: 35016},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 843, col: 19, offset: 35337},
																		run: (*parser).callonTitleElement329,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 843, col: 19, offset: 35337},
																			expr: &seqExpr{
																				pos: position{line: 843, col: 20, offset: 35338},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 21, offset: 35339},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 843, col: 25, offset: 35343},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 26, offset: 35344},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 843, col: 30, offset: 35348},
																						expr: &litMatcher{
																							pos:        position{line: 843, col: 31, offset: 35349},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 843, col: 35, offset: 35353,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 835, col: 34, offset: 35037},
																	expr: &litMatcher{
																		pos:        position{line: 835, col: 34, offset: 35037},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 836, col: 9, offset: 35050},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 836, col: 20, offset: 35061},
																		expr: &choiceExpr{
																			pos: position{line: 206, col: 21, offset: 7402},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					run: (*parser).callonTitleElement344,
																					expr: &seqExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 206, col: 21, offset: 7402},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 212, col: 17, offset: 7662},
																									run: (*parser).callonTitleElement347,
																									expr: &seqExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												expr: &actionExpr{
																													pos: position{line: 236, col: 14, offset: 8471},
																													run: (*parser).callonTitleElement350,
																													expr: &litMatcher{
																														pos:        position{line: 236, col: 14, offset: 8471},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 28, offset: 7673},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9203},
																													run: (*parser).callonTitleElement353,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9203},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 39, offset: 7684},
																												expr: &actionExpr{
																													pos: position{line: 1099, col: 16, offset: 45385},
																													run: (*parser).callonTitleElement356,
																													expr: &litMatcher{
																														pos:        position{line: 1099, col: 16, offset: 45385},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 212, col: 52, offset: 7697},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 212, col: 56, offset: 7701},
																													expr: &seqExpr{
																														pos: position{line: 212, col: 57, offset: 7702},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 58, offset: 7703},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 62, offset: 7707},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 63, offset: 7708},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 67, offset: 7712},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 68, offset: 7713},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 212, col: 72, offset: 7717,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 206, col: 40, offset: 7421},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 206, col: 44, offset: 7425},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 216, col: 19, offset: 7776},
																									run: (*parser).callonTitleElement370,
																									expr: &labeledExpr{
																										pos:   position{line: 216, col: 19, offset: 7776},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 216, col: 25, offset: 7782},
																											expr: &seqExpr{
																												pos: position{line: 216, col: 26, offset: 7783},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 27, offset: 7784},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 216, col: 31, offset: 7788},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 32, offset: 7789},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 216, col: 36, offset: 7793},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 37, offset: 7794},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 216, col: 41, offset: 7798,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 206, col: 67, offset: 7448},
																								expr: &litMatcher{
																									pos:        position{line: 206, col: 67, offset: 7448},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 206, col: 72, offset: 7453},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonTitleElement386,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 208, col: 5, offset: 7537},
																					run: (*parser).callonTitleElement388,
																					expr: &seqExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 208, col: 5, offset: 7537},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 212, col: 17, offset: 7662},
																									run: (*parser).callonTitleElement391,
																									expr: &seqExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												expr: &actionExpr{
																													pos: position{line: 236, col: 14, offset: 8471},
																													run: (*parser).callonTitleElement394,
																													expr: &litMatcher{
																														pos:        position{line: 236, col: 14, offset: 8471},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 28, offset: 7673},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9203},
																													run: (*parser).callonTitleElement397,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9203},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 39, offset: 7684},
																												expr: &actionExpr{
																													pos: position{line: 1099, col: 16, offset: 45385},
																													run: (*parser).callonTitleElement400,
																													expr: &litMatcher{
																														pos:        position{line: 1099, col: 16, offset: 45385},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 212, col: 52, offset: 7697},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 212, col: 56, offset: 7701},
																													expr: &seqExpr{
																														pos: position{line: 212, col: 57, offset: 7702},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 58, offset: 7703},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 62, offset: 7707},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 63, offset: 7708},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 67, offset: 7712},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 68, offset: 7713},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 212, col: 72, offset: 7717,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 208, col: 24, offset: 7556},
																								expr: &litMatcher{
																									pos:        position{line: 208, col: 24, offset: 7556},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 208, col: 29, offset: 7561},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonTitleElement417,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 836, col: 40, offset: 35081},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 838, col: 9, offset: 35182},
														run: (*parser).callonTitleElement420,
														expr: &seqExpr{
															pos: position{line: 838, col: 9, offset: 35182},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 838, col: 9, offset: 35182},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 838, col: 13, offset: 35186},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 838, col: 24, offset: 35197},
																		expr: &choiceExpr{
																			pos: position{line: 206, col: 21, offset: 7402},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					run: (*parser).callonTitleElement426,
																					expr: &seqExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 206, col: 21, offset: 7402},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 212, col: 17, offset: 7662},
																									run: (*parser).callonTitleElement429,
																									expr: &seqExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												expr: &actionExpr{
																													pos: position{line: 236, col: 14, offset: 8471},
																													run: (*parser).callonTitleElement432,
																													expr: &litMatcher{
																														pos:        position{line: 236, col: 14, offset: 8471},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 28, offset: 7673},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9203},
																													run: (*parser).callonTitleElement435,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9203},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 39, offset: 7684},
																												expr: &actionExpr{
																													pos: position{line: 1099, col: 16, offset: 45385},
																													run: (*parser).callonTitleElement438,
																													expr: &litMatcher{
																														pos:        position{line: 1099, col: 16, offset: 45385},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 212, col: 52, offset: 7697},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 212, col: 56, offset: 7701},
																													expr: &seqExpr{
																														pos: position{line: 212, col: 57, offset: 7702},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 58, offset: 7703},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 62, offset: 7707},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 63, offset: 7708},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 67, offset: 7712},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 68, offset: 7713},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 212, col: 72, offset: 7717,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 206, col: 40, offset: 7421},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 206, col: 44, offset: 7425},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 216, col: 19, offset: 7776},
																									run: (*parser).callonTitleElement452,
																									expr: &labeledExpr{
																										pos:   position{line: 216, col: 19, offset: 7776},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 216, col: 25, offset: 7782},
																											expr: &seqExpr{
																												pos: position{line: 216, col: 26, offset: 7783},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 27, offset: 7784},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 216, col: 31, offset: 7788},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 32, offset: 7789},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 216, col: 36, offset: 7793},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 37, offset: 7794},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 216, col: 41, offset: 7798,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 206, col: 67, offset: 7448},
																								expr: &litMatcher{
																									pos:        position{line: 206, col: 67, offset: 7448},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 206, col: 72, offset: 7453},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonTitleElement468,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 208, col: 5, offset: 7537},
																					run: (*parser).callonTitleElement470,
																					expr: &seqExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 208, col: 5, offset: 7537},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 212, col: 17, offset: 7662},
																									run: (*parser).callonTitleElement473,
																									expr: &seqExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												expr: &actionExpr{
																													pos: position{line: 236, col: 14, offset: 8471},
																													run: (*parser).callonTitleElement476,
																													expr: &litMatcher{
																														pos:        position{line: 236, col: 14, offset: 8471},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 28, offset: 7673},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9203},
																													run: (*parser).callonTitleElement479,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9203},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 39, offset: 7684},
																												expr: &actionExpr{
																													pos: position{line: 1099, col: 16, offset: 45385},
																													run: (*parser).callonTitleElement482,
																													expr: &litMatcher{
																														pos:        position{line: 1099, col: 16, offset: 45385},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 212, col: 52, offset: 7697},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 212, col: 56, offset: 7701},
																													expr: &seqExpr{
																														pos: position{line: 212, col: 57, offset: 7702},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 58, offset: 7703},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 62, offset: 7707},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 63, offset: 7708},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 67, offset: 7712},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 68, offset: 7713},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 212, col: 72, offset: 7717,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 208, col: 24, offset: 7556},
																								expr: &litMatcher{
																									pos:        position{line: 208, col: 24, offset: 7556},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 208, col: 29, offset: 7561},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonTitleElement499,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 838, col: 44, offset: 35217},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 394, col: 71, offset: 14328},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 780, col: 9, offset: 32938},
								run: (*parser).callonTitleElement503,
								expr: &labeledExpr{
									pos:   position{line: 780, col: 9, offset: 32938},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 780, col: 15, offset: 32944},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 795, col: 17, offset: 33396},
												run: (*parser).callonTitleElement506,
												expr: &seqExpr{
													pos: position{line: 795, col: 17, offset: 33396},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 795, col: 17, offset: 33396},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 795, col: 25, offset: 33404},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 799, col: 20, offset: 33573},
																run: (*parser).callonTitleElement510,
																expr: &seqExpr{
																	pos: position{line: 799, col: 20, offset: 33573},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 799, col: 20, offset: 33573},
																			expr: &choiceExpr{
																				pos: position{line: 1147, col: 15, offset: 46626},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1147, col: 15, offset: 46626},
																						val:        "http://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1147, col: 27, offset: 46638},
																						val:        "https://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1147, col: 40, offset: 46651},
																						val:        "ftp://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1147, col: 51, offset: 46662},
																						val:        "irc://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1147, col: 62, offset: 46673},
																						val:        "mailto:",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1135, col: 8, offset: 46389},
																			run: (*parser).callonTitleElement519,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1135, col: 8, offset: 46389},
																				expr: &seqExpr{
																					pos: position{line: 1135, col: 9, offset: 46390},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1135, col: 9, offset: 46390},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1135, col: 18, offset: 46399},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonTitleElement529,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1135, col: 22, offset: 46403},
																							expr: &litMatcher{
																								pos:        position{line: 1135, col: 23, offset: 46404},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1135, col: 27, offset: 46408},
																							expr: &litMatcher{
																								pos:        position{line: 1135, col: 28, offset: 46409},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1135, col: 32, offset: 46413,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 795, col: 47, offset: 33426},
															label: "inlineAttributes",
															expr: &choiceExpr{
																pos: position{line: 803, col: 19, offset: 33643},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 803, col: 19, offset: 33643},
																		run: (*parser).callonTitleElement538,
																		expr: &seqExpr{
																			pos: position{line: 803, col: 19, offset: 33643},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 803, col: 19, offset: 33643},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 803, col: 23, offset: 33647},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 810, col: 22, offset: 33935},
																						run: (*parser).callonTitleElement542,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 810, col: 22, offset: 33935},
																							expr: &seqExpr{
																								pos: position{line: 810, col: 23, offset: 33936},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 810, col: 23, offset: 33936},
																										expr: &litMatcher{
																											pos:        position{line: 810, col: 24, offset: 33937},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 810, col: 28, offset: 33941},
																										expr: &litMatcher{
																											pos:        position{line: 810, col: 29, offset: 33942},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 810, col: 33, offset: 33946,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 804, col: 9, offset: 33680},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 804, col: 20, offset: 33691},
																						expr: &choiceExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 206, col: 21, offset: 7402},
																									run: (*parser).callonTitleElement553,
																									expr: &seqExpr{
																										pos: position{line: 206, col: 21, offset: 7402},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 206, col: 21, offset: 7402},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													run: (*parser).callonTitleElement556,
																													expr: &seqExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																expr: &actionExpr{
																																	pos: position{line: 236, col: 14, offset: 8471},
																																	run: (*parser).callonTitleElement559,
																																	expr: &litMatcher{
																																		pos:        position{line: 236, col: 14, offset: 8471},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 28, offset: 7673},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9203},
																																	run: (*parser).callonTitleElement562,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9203},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 39, offset: 7684},
																																expr: &actionExpr{
																																	pos: position{line: 1099, col: 16, offset: 45385},
																																	run: (*parser).callonTitleElement565,
																																	expr: &litMatcher{
																																		pos:        position{line: 1099, col: 16, offset: 45385},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 212, col: 52, offset: 7697},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 212, col: 56, offset: 7701},
																																	expr: &seqExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 58, offset: 7703},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 62, offset: 7707},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 63, offset: 7708},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 67, offset: 7712},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 68, offset: 7713},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 212, col: 72, offset: 7717,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 206, col: 40, offset: 7421},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 206, col: 44, offset: 7425},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 216, col: 19, offset: 7776},
																													run: (*parser).callonTitleElement579,
																													expr: &labeledExpr{
																														pos:   position{line: 216, col: 19, offset: 7776},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 216, col: 25, offset: 7782},
																															expr: &seqExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 216, col: 26, offset: 7783},
																																		expr: &litMatcher{
																																			pos:        position{line: 216, col: 27, offset: 7784},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 216, col: 31, offset: 7788},
																																		expr: &litMatcher{
																																			pos:        position{line: 216, col: 32, offset: 7789},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 216, col: 36, offset: 7793},
																																		expr: &litMatcher{
																																			pos:        position{line: 216, col: 37, offset: 7794},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 216, col: 41, offset: 7798,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 206, col: 67, offset: 7448},
																												expr: &litMatcher{
																													pos:        position{line: 206, col: 67, offset: 7448},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 206, col: 72, offset: 7453},
																												expr: &choiceExpr{
																													pos: position{line: 1153, col: 7, offset: 46741},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1153, col: 7, offset: 46741},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1153, col: 13, offset: 46747},
																															run: (*parser).callonTitleElement595,
																															expr: &litMatcher{
																																pos:        position{line: 1153, col: 13, offset: 46747},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 208, col: 5, offset: 7537},
																									run: (*parser).callonTitleElement597,
																									expr: &seqExpr{
																										pos: position{line: 208, col: 5, offset: 7537},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 208, col: 5, offset: 7537},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													run: (*parser).callonTitleElement600,
																													expr: &seqExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																expr: &actionExpr{
																																	pos: position{line: 236, col: 14, offset: 8471},
																																	run: (*parser).callonTitleElement603,
																																	expr: &litMatcher{
																																		pos:        position{line: 236, col: 14, offset: 8471},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 28, offset: 7673},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9203},
																																	run: (*parser).callonTitleElement606,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9203},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 39, offset: 7684},
																																expr: &actionExpr{
																																	pos: position{line: 1099, col: 16, offset: 45385},
																																	run: (*parser).callonTitleElement609,
																																	expr: &litMatcher{
																																		pos:        position{line: 1099, col: 16, offset: 45385},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 212, col: 52, offset: 7697},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 212, col: 56, offset: 7701},
																																	expr: &seqExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 58, offset: 7703},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 62, offset: 7707},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 63, offset: 7708},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 67, offset: 7712},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 68, offset: 7713},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 212, col: 72, offset: 7717,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 208, col: 24, offset: 7556},
																												expr: &litMatcher{
																													pos:        position{line: 208, col: 24, offset: 7556},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 208, col: 29, offset: 7561},
																												expr: &choiceExpr{
																													pos: position{line: 1153, col: 7, offset: 46741},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1153, col: 7, offset: 46741},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1153, col: 13, offset: 46747},
																															run: (*parser).callonTitleElement626,
																															expr: &litMatcher{
																																pos:        position{line: 1153, col: 13, offset: 46747},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 804, col: 40, offset: 33711},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 806, col: 5, offset: 33796},
																		run: (*parser).callonTitleElement629,
																		expr: &seqExpr{
																			pos: position{line: 806, col: 5, offset: 33796},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 806, col: 5, offset: 33796},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 806, col: 9, offset: 33800},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 806, col: 20, offset: 33811},
																						expr: &choiceExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 206, col: 21, offset: 7402},
																									run: (*parser).callonTitleElement635,
																									expr: &seqExpr{
																										pos: position{line: 206, col: 21, offset: 7402},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 206, col: 21, offset: 7402},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													run: (*parser).callonTitleElement638,
																													expr: &seqExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																expr: &actionExpr{
																																	pos: position{line: 236, col: 14, offset: 8471},
																																	run: (*parser).callonTitleElement641,
																																	expr: &litMatcher{
																																		pos:        position{line: 236, col: 14, offset: 8471},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 28, offset: 7673},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9203},
																																	run: (*parser).callonTitleElement644,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9203},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 39, offset: 7684},
																																expr: &actionExpr{
																																	pos: position{line: 1099, col: 16, offset: 45385},
																																	run: (*parser).callonTitleElement647,
																																	expr: &litMatcher{
																																		pos:        position{line: 1099, col: 16, offset: 45385},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 212, col: 52, offset: 7697},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 212, col: 56, offset: 7701},
																																	expr: &seqExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 58, offset: 7703},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 62, offset: 7707},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 63, offset: 7708},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 67, offset: 7712},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 68, offset: 7713},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 212, col: 72, offset: 7717,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 206, col: 40, offset: 7421},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 206, col: 44, offset: 7425},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 216, col: 19, offset: 7776},
																													run: (*parser).callonTitleElement661,
																													expr: &labeledExpr{
																														pos:   position{line: 216, col: 19, offset: 7776},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 216, col: 25, offset: 7782},
																															expr: &seqExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 216, col: 26, offset: 7783},
																																		expr: &litMatcher{
																																			pos:        position{line: 216, col: 27, offset: 7784},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 216, col: 31, offset: 7788},
																																		expr: &litMatcher{
																																			pos:        position{line: 216, col: 32, offset: 7789},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 216, col: 36, offset: 7793},
																																		expr: &litMatcher{
																																			pos:        position{line: 216, col: 37, offset: 7794},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 216, col: 41, offset: 7798,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 206, col: 67, offset: 7448},
																												expr: &litMatcher{
																													pos:        position{line: 206, col: 67, offset: 7448},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 206, col: 72, offset: 7453},
																												expr: &choiceExpr{
																													pos: position{line: 1153, col: 7, offset: 46741},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1153, col: 7, offset: 46741},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1153, col: 13, offset: 46747},
																															run: (*parser).callonTitleElement677,
																															expr: &litMatcher{
																																pos:        position{line: 1153, col: 13, offset: 46747},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 208, col: 5, offset: 7537},
																									run: (*parser).callonTitleElement679,
																									expr: &seqExpr{
																										pos: position{line: 208, col: 5, offset: 7537},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 208, col: 5, offset: 7537},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													run: (*parser).callonTitleElement682,
																													expr: &seqExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																expr: &actionExpr{
																																	pos: position{line: 236, col: 14, offset: 8471},
																																	run: (*parser).callonTitleElement685,
																																	expr: &litMatcher{
																																		pos:        position{line: 236, col: 14, offset: 8471},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 28, offset: 7673},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9203},
																																	run: (*parser).callonTitleElement688,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9203},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 39, offset: 7684},
																																expr: &actionExpr{
																																	pos: position{line: 1099, col: 16, offset: 45385},
																																	run: (*parser).callonTitleElement691,
																																	expr: &litMatcher{
																																		pos:        position{line: 1099, col: 16, offset: 45385},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 212, col: 52, offset: 7697},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 212, col: 56, offset: 7701},
																																	expr: &seqExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 58, offset: 7703},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 62, offset: 7707},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 63, offset: 7708},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 67, offset: 7712},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 68, offset: 7713},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 212, col: 72, offset: 7717,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 208, col: 24, offset: 7556},
																												expr: &litMatcher{
																													pos:        position{line: 208, col: 24, offset: 7556},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 208, col: 29, offset: 7561},
																												expr: &choiceExpr{
																													pos: position{line: 1153, col: 7, offset: 46741},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1153, col: 7, offset: 46741},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1153, col: 13, offset: 46747},
																															run: (*parser).callonTitleElement708,
																															expr: &litMatcher{
																																pos:        position{line: 1153, col: 13, offset: 46747},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 806, col: 40, offset: 33831},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 784, col: 17, offset: 33015},
												run: (*parser).callonTitleElement711,
												expr: &seqExpr{
													pos: position{line: 784, col: 17, offset: 33015},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 784, col: 17, offset: 33015},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 790, col: 20, offset: 33262},
																run: (*parser).callonTitleElement714,
																expr: &seqExpr{
																	pos: position{line: 790, col: 20, offset: 33262},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1147, col: 15, offset: 46626},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1147, col: 15, offset: 46626},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1147, col: 27, offset: 46638},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1147, col: 40, offset: 46651},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1147, col: 51, offset: 46662},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1147, col: 62, offset: 46673},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1135, col: 8, offset: 46389},
																			run: (*parser).callonTitleElement722,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1135, col: 8, offset: 46389},
																				expr: &seqExpr{
																					pos: position{line: 1135, col: 9, offset: 46390},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1135, col: 9, offset: 46390},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1135, col: 18, offset: 46399},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonTitleElement732,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1135, col: 22, offset: 46403},
																							expr: &litMatcher{
																								pos:        position{line: 1135, col: 23, offset: 46404},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1135, col: 27, offset: 46408},
																							expr: &litMatcher{
																								pos:        position{line: 1135, col: 28, offset: 46409},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1135, col: 32, offset: 46413,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 784, col: 39, offset: 33037},
															label: "inlineAttributes",
															expr: &choiceExpr{
																pos: position{line: 803, col: 19, offset: 33643},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 803, col: 19, offset: 33643},
																		run: (*parser).callonTitleElement741,
																		expr: &seqExpr{
																			pos: position{line: 803, col: 19, offset: 33643},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 803, col: 19, offset: 33643},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 803, col: 23, offset: 33647},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 810, col: 22, offset: 33935},
																						run: (*parser).callonTitleElement745,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 810, col: 22, offset: 33935},
																							expr: &seqExpr{
																								pos: position{line: 810, col: 23, offset: 33936},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 810, col: 23, offset: 33936},
																										expr: &litMatcher{
																											pos:        position{line: 810, col: 24, offset: 33937},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 810, col: 28, offset: 33941},
																										expr: &litMatcher{
																											pos:        position{line: 810, col: 29, offset: 33942},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 810, col: 33, offset: 33946,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 804, col: 9, offset: 33680},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 804, col: 20, offset: 33691},
																						expr: &choiceExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 206, col: 21, offset: 7402},
																									run: (*parser).callonTitleElement756,
																									expr: &seqExpr{
																										pos: position{line: 206, col: 21, offset: 7402},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 206, col: 21, offset: 7402},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													run: (*parser).callonTitleElement759,
																													expr: &seqExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																expr: &actionExpr{
																																	pos: position{line: 236, col: 14, offset: 8471},
																																	run: (*parser).callonTitleElement762,
																																	expr: &litMatcher{
																																		pos:        position{line: 236, col: 14, offset: 8471},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 28, offset: 7673},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9203},
																																	run: (*parser).callonTitleElement765,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9203},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 39, offset: 7684},
																																expr: &actionExpr{
																																	pos: position{line: 1099, col: 16, offset: 45385},
																																	run: (*parser).callonTitleElement768,
																																	expr: &litMatcher{
																																		pos:        position{line: 1099, col: 16, offset: 45385},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 212, col: 52, offset: 7697},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 212, col: 56, offset: 7701},
																																	expr: &seqExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 58, offset: 7703},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 62, offset: 7707},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 63, offset: 7708},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 67, offset: 7712},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 68, offset: 7713},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 212, col: 72, offset: 7717,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 206, col: 40, offset: 7421},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 206, col: 44, offset: 7425},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 216, col: 19, offset: 7776},
																													run: (*parser).callonTitleElement782,
																													expr: &labeledExpr{
																														pos:   position{line: 216, col: 19, offset: 7776},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 216, col: 25, offset: 7782},
																															expr: &seqExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 216, col: 26, offset: 7783},
																																		expr: &litMatcher{
																																			pos:        position{line: 216, col: 27, offset: 7784},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 216, col: 31, offset: 7788},
																																		expr: &litMatcher{
																																			pos:        position{line: 216, col: 32, offset: 7789},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 216, col: 36, offset: 7793},
																																		expr: &litMatcher{
																																			pos:        position{line: 216, col: 37, offset: 7794},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 216, col: 41, offset: 7798,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 206, col: 67, offset: 7448},
																												expr: &litMatcher{
																													pos:        position{line: 206, col: 67, offset: 7448},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 206, col: 72, offset: 7453},
																												expr: &choiceExpr{
																													pos: position{line: 1153, col: 7, offset: 46741},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1153, col: 7, offset: 46741},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1153, col: 13, offset: 46747},
																															run: (*parser).callonTitleElement798,
																															expr: &litMatcher{
																																pos:        position{line: 1153, col: 13, offset: 46747},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 208, col: 5, offset: 7537},
																									run: (*parser).callonTitleElement800,
																									expr: &seqExpr{
																										pos: position{line: 208, col: 5, offset: 7537},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 208, col: 5, offset: 7537},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													run: (*parser).callonTitleElement803,
																													expr: &seqExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																expr: &actionExpr{
																																	pos: position{line: 236, col: 14, offset: 8471},
																																	run: (*parser).callonTitleElement806,
																																	expr: &litMatcher{
																																		pos:        position{line: 236, col: 14, offset: 8471},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 28, offset: 7673},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9203},
																																	run: (*parser).callonTitleElement809,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9203},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 39, offset: 7684},
																																expr: &actionExpr{
																																	pos: position{line: 1099, col: 16, offset: 45385},
																																	run: (*parser).callonTitleElement812,
																																	expr: &litMatcher{
																																		pos:        position{line: 1099, col: 16, offset: 45385},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 212, col: 52, offset: 7697},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 212, col: 56, offset: 7701},
																																	expr: &seqExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 58, offset: 7703},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 62, offset: 7707},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 63, offset: 7708},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 67, offset: 7712},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 68, offset: 7713},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 212, col: 72, offset: 7717,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 208, col: 24, offset: 7556},
																												expr: &litMatcher{
																													pos:        position{line: 208, col: 24, offset: 7556},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 208, col: 29, offset: 7561},
																												expr: &choiceExpr{
																													pos: position{line: 1153, col: 7, offset: 46741},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1153, col: 7, offset: 46741},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1153, col: 13, offset: 46747},
																															run: (*parser).callonTitleElement829,
																															expr: &litMatcher{
																																pos:        position{line: 1153, col: 13, offset: 46747},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 804, col: 40, offset: 33711},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 806, col: 5, offset: 33796},
																		run: (*parser).callonTitleElement832,
																		expr: &seqExpr{
																			pos: position{line: 806, col: 5, offset: 33796},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 806, col: 5, offset: 33796},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 806, col: 9, offset: 33800},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 806, col: 20, offset: 33811},
																						expr: &choiceExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 206, col: 21, offset: 7402},
																									run: (*parser).callonTitleElement838,
																									expr: &seqExpr{
																										pos: position{line: 206, col: 21, offset: 7402},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 206, col: 21, offset: 7402},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													run: (*parser).callonTitleElement841,
																													expr: &seqExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																expr: &actionExpr{
																																	pos: position{line: 236, col: 14, offset: 8471},
																																	run: (*parser).callonTitleElement844,
																																	expr: &litMatcher{
																																		pos:        position{line: 236, col: 14, offset: 8471},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 28, offset: 7673},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9203},
																																	run: (*parser).callonTitleElement847,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9203},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 39, offset: 7684},
																																expr: &actionExpr{
																																	pos: position{line: 1099, col: 16, offset: 45385},
																																	run: (*parser).callonTitleElement850,
																																	expr: &litMatcher{
																																		pos:        position{line: 1099, col: 16, offset: 45385},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 212, col: 52, offset: 7697},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 212, col: 56, offset: 7701},
																																	expr: &seqExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 58, offset: 7703},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 62, offset: 7707},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 63, offset: 7708},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 67, offset: 7712},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 68, offset: 7713},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 212, col: 72, offset: 7717,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 206, col: 40, offset: 7421},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 206, col: 44, offset: 7425},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 216, col: 19, offset: 7776},
																													run: (*parser).callonTitleElement864,
																													expr: &labeledExpr{
																														pos:   position{line: 216, col: 19, offset: 7776},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 216, col: 25, offset: 7782},
																															expr: &seqExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 216, col: 26, offset: 7783},
																																		expr: &litMatcher{
																																			pos:        position{line: 216, col: 27, offset: 7784},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 216, col: 31, offset: 7788},
																																		expr: &litMatcher{
																																			pos:        position{line: 216, col: 32, offset: 7789},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 216, col: 36, offset: 7793},
																																		expr: &litMatcher{
																																			pos:        position{line: 216, col: 37, offset: 7794},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 216, col: 41, offset: 7798,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 206, col: 67, offset: 7448},
																												expr: &litMatcher{
																													pos:        position{line: 206, col: 67, offset: 7448},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 206, col: 72, offset: 7453},
																												expr: &choiceExpr{
																													pos: position{line: 1153, col: 7, offset: 46741},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1153, col: 7, offset: 46741},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1153, col: 13, offset: 46747},
																															run: (*parser).callonTitleElement880,
																															expr: &litMatcher{
																																pos:        position{line: 1153, col: 13, offset: 46747},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 208, col: 5, offset: 7537},
																									run: (*parser).callonTitleElement882,
																									expr: &seqExpr{
																										pos: position{line: 208, col: 5, offset: 7537},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 208, col: 5, offset: 7537},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													run: (*parser).callonTitleElement885,
																													expr: &seqExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																expr: &actionExpr{
																																	pos: position{line: 236, col: 14, offset: 8471},
																																	run: (*parser).callonTitleElement888,
																																	expr: &litMatcher{
																																		pos:        position{line: 236, col: 14, offset: 8471},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 28, offset: 7673},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9203},
																																	run: (*parser).callonTitleElement891,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9203},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 39, offset: 7684},
																																expr: &actionExpr{
																																	pos: position{line: 1099, col: 16, offset: 45385},
																																	run: (*parser).callonTitleElement894,
																																	expr: &litMatcher{
																																		pos:        position{line: 1099, col: 16, offset: 45385},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 212, col: 52, offset: 7697},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 212, col: 56, offset: 7701},
																																	expr: &seqExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 58, offset: 7703},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 62, offset: 7707},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 63, offset: 7708},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 212, col: 67, offset: 7712},
																																				expr: &litMatcher{
																																					pos:        position{line: 212, col: 68, offset: 7713},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 212, col: 72, offset: 7717,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 208, col: 24, offset: 7556},
																												expr: &litMatcher{
																													pos:        position{line: 208, col: 24, offset: 7556},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 208, col: 29, offset: 7561},
																												expr: &choiceExpr{
																													pos: position{line: 1153, col: 7, offset: 46741},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1153, col: 7, offset: 46741},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1153, col: 13, offset: 46747},
																															run: (*parser).callonTitleElement911,
																															expr: &litMatcher{
																																pos:        position{line: 1153, col: 13, offset: 46747},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 806, col: 40, offset: 33831},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 786, col: 5, offset: 33166},
												run: (*parser).callonTitleElement914,
												expr: &labeledExpr{
													pos:   position{line: 786, col: 5, offset: 33166},
													label: "url",
													expr: &actionExpr{
														pos: position{line: 790, col: 20, offset: 33262},
														run: (*parser).callonTitleElement916,
														expr: &seqExpr{
															pos: position{line: 790, col: 20, offset: 33262},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 1147, col: 15, offset: 46626},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1147, col: 15, offset: 46626},
																			val:        "http://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1147, col: 27, offset: 46638},
																			val:        "https://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1147, col: 40, offset: 46651},
																			val:        "ftp://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1147, col: 51, offset: 46662},
																			val:        "irc://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1147, col: 62, offset: 46673},
																			val:        "mailto:",
																			ignoreCase: false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1135, col: 8, offset: 46389},
																	run: (*parser).callonTitleElement924,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1135, col: 8, offset: 46389},
																		expr: &seqExpr{
																			pos: position{line: 1135, col: 9, offset: 46390},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1135, col: 9, offset: 46390},
																					expr: &choiceExpr{
																						pos: position{line: 1157, col: 12, offset: 46803},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1157, col: 12, offset: 46803},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1157, col: 21, offset: 46812},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1135, col: 18, offset: 46399},
																					expr: &choiceExpr{
																						pos: position{line: 1153, col: 7, offset: 46741},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1153, col: 7, offset: 46741},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1153, col: 13, offset: 46747},
																								run: (*parser).callonTitleElement934,
																								expr: &litMatcher{
																									pos:        position{line: 1153, col: 13, offset: 46747},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1135, col: 22, offset: 46403},
																					expr: &litMatcher{
																						pos:        position{line: 1135, col: 23, offset: 46404},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1135, col: 27, offset: 46408},
																					expr: &litMatcher{
																						pos:        position{line: 1135, col: 28, offset: 46409},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1135, col: 32, offset: 46413,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 109, col: 34, offset: 4042},
								run: (*parser).callonTitleElement941,
								expr: &seqExpr{
									pos: position{line: 109, col: 34, offset: 4042},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 109, col: 34, offset: 4042},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 109, col: 38, offset: 4046},
											label: "name",
											expr: &actionExpr{
												pos: position{line: 116, col: 26, offset: 4341},
												run: (*parser).callonTitleElement945,
												expr: &seqExpr{
													pos: position{line: 116, col: 26, offset: 4341},
													exprs: []interface{}{
														&charClassMatcher{
															pos:        position{line: 116, col: 27, offset: 4342},
															val:        "[_A-Za-z0-9]",
															chars:      []rune{'_'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 116, col: 56, offset: 4371},
															expr: &charClassMatcher{
																pos:        position{line: 116, col: 57, offset: 4372},
																val:        "[-A-Za-z0-9]",
																chars:      []rune{'-'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 109, col: 67, offset: 4075},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 394, col: 123, offset: 14380},
								name: "InlineFootnote",
							},
							&charClassMatcher{
								pos:        position{line: 1129, col: 16, offset: 46121},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
							&actionExpr{
								pos: position{line: 610, col: 14, offset: 23162},
								run: (*parser).callonTitleElement953,
								expr: &seqExpr{
									pos: position{line: 610, col: 14, offset: 23162},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonTitleElement957,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 610, col: 17, offset: 23165},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 610, col: 21, offset: 23169},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonTitleElement963,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 394, col: 166, offset: 14423},
								name: "Word",
							},
						},
					},
				},
			},
		},
		{
			name: "List",
			pos:  position{line: 406, col: 1, offset: 14715},
			expr: &actionExpr{
				pos: position{line: 408, col: 5, offset: 14796},
				run: (*parser).callonList1,
				expr: &labeledExpr{
					pos:   position{line: 408, col: 5, offset: 14796},
					label: "elements",
					expr: &ruleRefExpr{
						pos:  position{line: 408, col: 14, offset: 14805},
						name: "ListItems",
					},
				},
			},
		},
		{
			name: "ListItems",
			pos:  position{line: 412, col: 1, offset: 14871},
			expr: &oneOrMoreExpr{
				pos: position{line: 412, col: 14, offset: 14884},
				expr: &choiceExpr{
					pos: position{line: 412, col: 15, offset: 14885},
					alternatives: []interface{}{
						&ruleRefExpr{
							pos:  position{line: 412, col: 15, offset: 14885},
							name: "OrderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 412, col: 33, offset: 14903},
							name: "UnorderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 412, col: 53, offset: 14923},
							name: "LabeledListItem",
						},
					},
				},
			},
		},
		{
			name: "ListParagraph",
			pos:  position{line: 414, col: 1, offset: 14942},
			expr: &actionExpr{
				pos: position{line: 414, col: 18, offset: 14959},
				run: (*parser).callonListParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 414, col: 18, offset: 14959},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 414, col: 24, offset: 14965},
						expr: &ruleRefExpr{
							pos:  position{line: 414, col: 25, offset: 14966},
							name: "ListParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "ListParagraphLine",
			pos:  position{line: 418, col: 1, offset: 15045},
			expr: &actionExpr{
				pos: position{line: 419, col: 5, offset: 15071},
				run: (*parser).callonListParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 419, col: 5, offset: 15071},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 419, col: 5, offset: 15071},
							expr: &actionExpr{
								pos: position{line: 444, col: 26, offset: 15893},
								run: (*parser).callonListParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 444, col: 26, offset: 15893},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 444, col: 26, offset: 15893},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonListParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 444, col: 30, offset: 15897},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 446, col: 5, offset: 15952},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 446, col: 5, offset: 15952},
														run: (*parser).callonListParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 446, col: 5, offset: 15952},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 448, col: 9, offset: 16065},
														run: (*parser).callonListParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 448, col: 9, offset: 16065},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 450, col: 9, offset: 16176},
														run: (*parser).callonListParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 450, col: 9, offset: 16176},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 452, col: 9, offset: 16285},
														run: (*parser).callonListParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 452, col: 9, offset: 16285},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 454, col: 9, offset: 16392},
														run: (*parser).callonListParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 454, col: 9, offset: 16392},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 9, offset: 16519},
														run: (*parser).callonListParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 457, col: 9, offset: 16519},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 457, col: 9, offset: 16519},
																	expr: &charClassMatcher{
																		pos:        position{line: 457, col: 10, offset: 16520},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 457, col: 18, offset: 16528},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 459, col: 9, offset: 16631},
														run: (*parser).callonListParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 459, col: 9, offset: 16631},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 459, col: 10, offset: 16632},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 459, col: 17, offset: 16639},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 461, col: 9, offset: 16745},
														run: (*parser).callonListParagraphLine32,
														expr: &seqExpr{
															pos: position{line: 461, col: 9, offset: 16745},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 461, col: 10, offset: 16746},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 461, col: 17, offset: 16753},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 463, col: 9, offset: 16859},
														run: (*parser).callonListParagraphLine36,
														expr: &seqExpr{
															pos: position{line: 463, col: 9, offset: 16859},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 463, col: 9, offset: 16859},
																	expr: &charClassMatcher{
																		pos:        position{line: 463, col: 10, offset: 16860},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 463, col: 18, offset: 16868},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 465, col: 9, offset: 16974},
														run: (*parser).callonListParagraphLine41,
														expr: &seqExpr{
															pos: position{line: 465, col: 9, offset: 16974},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 465, col: 9, offset: 16974},
																	expr: &charClassMatcher{
																		pos:        position{line: 465, col: 10, offset: 16975},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 465, col: 18, offset: 16983},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 467, col: 8, offset: 17088},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonListParagraphLine49,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 420, col: 5, offset: 15101},
							expr: &actionExpr{
								pos: position{line: 483, col: 5, offset: 17748},
								run: (*parser).callonListParagraphLine52,
								expr: &seqExpr{
									pos: position{line: 483, col: 5, offset: 17748},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 483, col: 5, offset: 17748},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonListParagraphLine57,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 483, col: 9, offset: 17752},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 484, col: 9, offset: 17769},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 484, col: 9, offset: 17769},
														run: (*parser).callonListParagraphLine61,
														expr: &litMatcher{
															pos:        position{line: 484, col: 9, offset: 17769},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 487, col: 11, offset: 17938},
														run: (*parser).callonListParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 487, col: 11, offset: 17938},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 490, col: 11, offset: 18107},
														run: (*parser).callonListParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 490, col: 11, offset: 18107},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 493, col: 11, offset: 18276},
														run: (*parser).callonListParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 493, col: 11, offset: 18276},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 496, col: 11, offset: 18442},
														run: (*parser).callonListParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 496, col: 11, offset: 18442},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 499, col: 11, offset: 18606},
														run: (*parser).callonListParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 499, col: 11, offset: 18606},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 501, col: 12, offset: 18753},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonListParagraphLine76,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 421, col: 5, offset: 15133},
							expr: &seqExpr{
								pos: position{line: 421, col: 7, offset: 15135},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 516, col: 24, offset: 19443},
										run: (*parser).callonListParagraphLine80,
										expr: &zeroOrMoreExpr{
											pos: position{line: 516, col: 24, offset: 19443},
											expr: &seqExpr{
												pos: position{line: 516, col: 25, offset: 19444},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 516, col: 25, offset: 19444},
														expr: &choiceExpr{
															pos: position{line: 1157, col: 12, offset: 46803},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1157, col: 12, offset: 46803},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1157, col: 21, offset: 46812},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 516, col: 34, offset: 19453},
														expr: &litMatcher{
															pos:        position{line: 516, col: 35, offset: 19454},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 516, col: 40, offset: 19459,
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 521, col: 29, offset: 19605},
										run: (*parser).callonListParagraphLine90,
										expr: &choiceExpr{
											pos: position{line: 521, col: 30, offset: 19606},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 521, col: 30, offset: 19606},
													val:        "::::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 521, col: 39, offset: 19615},
													val:        ":::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 521, col: 47, offset: 19623},
													val:        "::",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 422, col: 5, offset: 15186},
							expr: &actionExpr{
								pos: position{line: 429, col: 25, offset: 15337},
								run: (*parser).callonListParagraphLine96,
								expr: &seqExpr{
									pos: position{line: 429, col: 25, offset: 15337},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 429, col: 25, offset: 15337},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 429, col: 29, offset: 15341},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonListParagraphLine102,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 423, col: 5, offset: 15215},
							expr: &actionExpr{
								pos: position{line: 151, col: 21, offset: 5356},
								run: (*parser).callonListParagraphLine110,
								expr: &seqExpr{
									pos: position{line: 151, col: 21, offset: 5356},
									exprs: []interface{}{
										&andExpr{
											pos: position{line: 151, col: 21, offset: 5356},
											expr: &charClassMatcher{
												pos:        position{line: 151, col: 23, offset: 5358},
												val:        "[[.#]",
												chars:      []rune{'[', '.', '#'},
												ignoreCase: false,
												inverted:   false,
											},
										},
										&labeledExpr{
											pos:   position{line: 152, col: 5, offset: 5446},
											label: "attr",
											expr: &choiceExpr{
												pos: position{line: 152, col: 11, offset: 5452},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 161, col: 14, offset: 5913},
														run: (*parser).callonListParagraphLine116,
														expr: &seqExpr{
															pos: position{line: 161, col: 14, offset: 5913},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 161, col: 14, offset: 5913},
																	val:        "[[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 161, col: 19, offset: 5918},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 1139, col: 7, offset: 46459},
																		run: (*parser).callonListParagraphLine120,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			expr: &seqExpr{
																				pos: position{line: 1139, col: 8, offset: 46460},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 1139, col: 8, offset: 46460},
																						expr: &choiceExpr{
																							pos: position{line: 1157, col: 12, offset: 46803},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1157, col: 12, offset: 46803},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1157, col: 21, offset: 46812},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1139, col: 17, offset: 46469},
																						expr: &choiceExpr{
																							pos: position{line: 1153, col: 7, offset: 46741},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1153, col: 7, offset: 46741},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1153, col: 13, offset: 46747},
																									run: (*parser).callonListParagraphLine130,
																									expr: &litMatcher{
																										pos:        position{line: 1153, col: 13, offset: 46747},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1139, col: 21, offset: 46473},
																						expr: &litMatcher{
																							pos:        position{line: 1139, col: 22, offset: 46474},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1139, col: 26, offset: 46478},
																						expr: &litMatcher{
																							pos:        position{line: 1139, col: 27, offset: 46479},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1139, col: 31, offset: 46483},
																						expr: &litMatcher{
																							pos:        position{line: 1139, col: 32, offset: 46484},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1139, col: 37, offset: 46489},
																						expr: &litMatcher{
																							pos:        position{line: 1139, col: 38, offset: 46490},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1139, col: 43, offset: 46495},
																						expr: &litMatcher{
																							pos:        position{line: 1139, col: 44, offset: 46496},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 1139, col: 48, offset: 46500,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 161, col: 27, offset: 5926},
																	val:        "]]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 163, col: 5, offset: 5980},
														run: (*parser).callonListParagraphLine144,
														expr: &seqExpr{
															pos: position{line: 163, col: 5, offset: 5980},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 163, col: 5, offset: 5980},
																	val:        "[#",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 163, col: 10, offset: 5985},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 1139, col: 7, offset: 46459},
																		run: (*parser).callonListParagraphLine148,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			expr: &seqExpr{
																				pos: position{line: 1139, col: 8, offset: 46460},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 1139, col: 8, offset: 46460},
																						expr: &choiceExpr{
																							pos: position{line: 1157, col: 12, offset: 46803},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1157, col: 12, offset: 46803},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1157, col: 21, offset: 46812},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1139, col: 17, offset: 46469},
																						expr: &choiceExpr{
																							pos: position{line: 1153, col: 7, offset: 46741},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1153, col: 7, offset: 46741},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1153, col: 13, offset: 46747},
																									run: (*parser).callonListParagraphLine158,
																									expr: &litMatcher{
																										pos:        position{line: 1153, col: 13, offset: 46747},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1139, col: 21, offset: 46473},
																						expr: &litMatcher{
																							pos:        position{line: 1139, col: 22, offset: 46474},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1139, col: 26, offset: 46478},
																						expr: &litMatcher{
																							pos:        position{line: 1139, col: 27, offset: 46479},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1139, col: 31, offset: 46483},
																						expr: &litMatcher{
																							pos:        position{line: 1139, col: 32, offset: 46484},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1139, col: 37, offset: 46489},
																						expr: &litMatcher{
																							pos:        position{line: 1139, col: 38, offset: 46490},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1139, col: 43, offset: 46495},
																						expr: &litMatcher{
																							pos:        position{line: 1139, col: 44, offset: 46496},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 1139, col: 48, offset: 46500,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 163, col: 18, offset: 5993},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 173, col: 17, offset: 6296},
														run: (*parser).callonListParagraphLine172,
														expr: &seqExpr{
															pos: position{line: 173, col: 17, offset: 6296},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 173, col: 17, offset: 6296},
																	val:        ".",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 173, col: 21, offset: 6300},
																	expr: &litMatcher{
																		pos:        position{line: 173, col: 22, offset: 6301},
																		val:        ".",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 173, col: 26, offset: 6305},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonListParagraphLine180,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 173, col: 30, offset: 6309},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 173, col: 37, offset: 6316},
																		run: (*parser).callonListParagraphLine183,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 173, col: 37, offset: 6316},
																			expr: &seqExpr{
																				pos: position{line: 173, col: 38, offset: 6317},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 173, col: 38, offset: 6317},
																						expr: &choiceExpr{
																							pos: position{line: 1157, col: 12, offset: 46803},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1157, col: 12, offset: 46803},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1157, col: 21, offset: 46812},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 173, col: 47, offset: 6326,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 181, col: 16, offset: 6537},
														run: (*parser).callonListParagraphLine191,
														expr: &seqExpr{
															pos: position{line: 181, col: 16, offset: 6537},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 181, col: 16, offset: 6537},
																	val:        "[.",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 181, col: 21, offset: 6542},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonListParagraphLine197,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 181, col: 25, offset: 6546},
																	label: "role",
																	expr: &actionExpr{
																		pos: position{line: 181, col: 31, offset: 6552},
																		run: (*parser).callonListParagraphLine200,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 181, col: 31, offset: 6552},
																			expr: &seqExpr{
																				pos: position{line: 181, col: 32, offset: 6553},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 181, col: 32, offset: 6553},
																						expr: &choiceExpr{
																							pos: position{line: 1157, col: 12, offset: 46803},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1157, col: 12, offset: 46803},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1157, col: 21, offset: 46812},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 181, col: 41, offset: 6562},
																						expr: &litMatcher{
																							pos:        position{line: 181, col: 42, offset: 6563},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 181, col: 46, offset: 6567,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 183, col: 8, offset: 6615},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 193, col: 21, offset: 6978},
														run: (*parser).callonListParagraphLine211,
														expr: &litMatcher{
															pos:        position{line: 193, col: 21, offset: 6978},
															val:        "[source]",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 195, col: 5, offset: 7036},
														run: (*parser).callonListParagraphLine213,
														expr: &seqExpr{
															pos: position{line: 195, col: 5, offset: 7036},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 195, col: 5, offset: 7036},
																	val:        "[source,",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 195, col: 16, offset: 7047},
																	label: "language",
																	expr: &actionExpr{
																		pos: position{line: 195, col: 26, offset: 7057},
																		run: (*parser).callonListParagraphLine217,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 195, col: 26, offset: 7057},
																			expr: &seqExpr{
																				pos: position{line: 195, col: 27, offset: 7058},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 195, col: 27, offset: 7058},
																						expr: &choiceExpr{
																							pos: position{line: 1157, col: 12, offset: 46803},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1157, col: 12, offset: 46803},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1157, col: 21, offset: 46812},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 195, col: 36, offset: 7067},
																						expr: &litMatcher{
																							pos:        position{line: 195, col: 37, offset: 7068},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 195, col: 41, offset: 7072,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 197, col: 7, offset: 7119},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 224, col: 20, offset: 7961},
														run: (*parser).callonListParagraphLine228,
														expr: &seqExpr{
															pos: position{line: 224, col: 20, offset: 7961},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 224, col: 20, offset: 7961},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 224, col: 24, offset: 7965},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 236, col: 14, offset: 8471},
																		run: (*parser).callonListParagraphLine232,
																		expr: &litMatcher{
																			pos:        position{line: 236, col: 14, offset: 8471},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 224, col: 41, offset: 7982},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonListParagraphLine237,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 224, col: 45, offset: 7986},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 224, col: 49, offset: 7990},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 263, col: 16, offset: 9262},
																		run: (*parser).callonListParagraphLine241,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			expr: &seqExpr{
																				pos: position{line: 263, col: 17, offset: 9263},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 263, col: 17, offset: 9263},
																						expr: &choiceExpr{
																							pos: position{line: 1161, col: 8, offset: 46843},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1157, col: 12, offset: 46803},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1157, col: 21, offset: 46812},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1159, col: 8, offset: 46832},
																									expr: &anyMatcher{
																										line: 1159, col: 9, offset: 46833,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 263, col: 22, offset: 9268},
																						expr: &litMatcher{
																							pos:        position{line: 263, col: 23, offset: 9269},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 263, col: 27, offset: 9273},
																						expr: &litMatcher{
																							pos:        position{line: 263, col: 28, offset: 9274},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 263, col: 32, offset: 9278,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 224, col: 70, offset: 8011},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 224, col: 74, offset: 8015},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 267, col: 15, offset: 9332},
																		run: (*parser).callonListParagraphLine257,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 267, col: 15, offset: 9332},
																			expr: &seqExpr{
																				pos: position{line: 267, col: 16, offset: 9333},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 267, col: 16, offset: 9333},
																						expr: &choiceExpr{
																							pos: position{line: 1161, col: 8, offset: 46843},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1157, col: 12, offset: 46803},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1157, col: 21, offset: 46812},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1159, col: 8, offset: 46832},
																									expr: &anyMatcher{
																										line: 1159, col: 9, offset: 46833,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 267, col: 21, offset: 9338},
																						expr: &litMatcher{
																							pos:        position{line: 267, col: 22, offset: 9339},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 267, col: 26, offset: 9343},
																						expr: &litMatcher{
																							pos:        position{line: 267, col: 27, offset: 9344},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 267, col: 31, offset: 9348,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 224, col: 93, offset: 8034},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 228, col: 5, offset: 8177},
														run: (*parser).callonListParagraphLine272,
														expr: &seqExpr{
															pos: position{line: 228, col: 5, offset: 8177},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 228, col: 5, offset: 8177},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 228, col: 9, offset: 8181},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 236, col: 14, offset: 8471},
																		run: (*parser).callonListParagraphLine276,
																		expr: &litMatcher{
																			pos:        position{line: 236, col: 14, offset: 8471},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 228, col: 26, offset: 8198},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonListParagraphLine281,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 228, col: 30, offset: 8202},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 228, col: 34, offset: 8206},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 263, col: 16, offset: 9262},
																		run: (*parser).callonListParagraphLine285,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			expr: &seqExpr{
																				pos: position{line: 263, col: 17, offset: 9263},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 263, col: 17, offset: 9263},
																						expr: &choiceExpr{
																							pos: position{line: 1161, col: 8, offset: 46843},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1157, col: 12, offset: 46803},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1157, col: 21, offset: 46812},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1159, col: 8, offset: 46832},
																									expr: &anyMatcher{
																										line: 1159, col: 9, offset: 46833,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 263, col: 22, offset: 9268},
																						expr: &litMatcher{
																							pos:        position{line: 263, col: 23, offset: 9269},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 263, col: 27, offset: 9273},
																						expr: &litMatcher{
																							pos:        position{line: 263, col: 28, offset: 9274},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 263, col: 32, offset: 9278,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 228, col: 55, offset: 8227},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 232, col: 5, offset: 8358},
														run: (*parser).callonListParagraphLine300,
														expr: &seqExpr{
															pos: position{line: 232, col: 5, offset: 8358},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 232, col: 5, offset: 8358},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 232, col: 9, offset: 8362},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 236, col: 14, offset: 8471},
																		run: (*parser).callonListParagraphLine304,
																		expr: &litMatcher{
																			pos:        position{line: 236, col: 14, offset: 8471},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 232, col: 26, offset: 8379},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonListParagraphLine309,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 232, col: 30, offset: 8383},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 240, col: 20, offset: 8534},
														run: (*parser).callonListParagraphLine312,
														expr: &seqExpr{
															pos: position{line: 240, col: 20, offset: 8534},
															exprs: []interface{}{
																&labeledExpr{
																	pos:   position{line: 240, col: 20, offset: 8534},
																	label: "attribute",
																	expr: &choiceExpr{
																		pos: position{line: 240, col: 31, offset: 8545},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 240, col: 31, offset: 8545},
																				run: (*parser).callonListParagraphLine316,
																				expr: &seqExpr{
																					pos: position{line: 240, col: 31, offset: 8545},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 240, col: 31, offset: 8545},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 240, col: 35, offset: 8549},
																							label: "kind",
																							expr: &actionExpr{
																								pos: position{line: 259, col: 14, offset: 9203},
																								run: (*parser).callonListParagraphLine320,
																								expr: &litMatcher{
																									pos:        position{line: 259, col: 14, offset: 9203},
																									val:        "verse",
																									ignoreCase: false,
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 240, col: 52, offset: 8566},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonListParagraphLine325,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 240, col: 56, offset: 8570},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 240, col: 60, offset: 8574},
																							label: "author",
																							expr: &actionExpr{
																								pos: position{line: 263, col: 16, offset: 9262},
																								run: (*parser).callonListParagraphLine329,
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									expr: &seqExpr{
																										pos: position{line: 263, col: 17, offset: 9263},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 263, col: 17, offset: 9263},
																												expr: &choiceExpr{
																													pos: position{line: 1161, col: 8, offset: 46843},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1157, col: 12, offset: 46803},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1157, col: 21, offset: 46812},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 1159, col: 8, offset: 46832},
																															expr: &anyMatcher{
																																line: 1159, col: 9, offset: 46833,
																															},
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 263, col: 22, offset: 9268},
																												expr: &litMatcher{
																													pos:        position{line: 263, col: 23, offset: 9269},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 263, col: 27, offset: 9273},
																												expr: &litMatcher{
																													pos:        position{line: 263, col: 28, offset: 9274},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 263, col: 32, offset: 9278,
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 240, col: 81, offset: 8595},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 240, col: 85, offset: 8599},
																							label: "title",
																							expr: &actionExpr{
																								pos: position{line: 267, col: 15, offset: 9332},
																								run: (*parser).callonListParagraphLine345,
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 267, col: 15, offset: 9332},
																									expr: &seqExpr{
																										pos: position{line: 267, col: 16, offset: 9333},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 267, col: 16, offset: 9333},
																												expr: &choiceExpr{
																													pos: position{line: 1161, col: 8, offset: 46843},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1157, col: 12, offset: 46803},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1157, col: 21, offset: 46812},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 1159, col: 8, offset: 46832},
																															expr: &anyMatcher{
																																line: 1159, col: 9, offset: 46833,
																															},
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 267, col: 21, offset: 9338},
																												expr: &litMatcher{
																													pos:        position{line: 267, col: 22, offset: 9339},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 267, col: 26, offset: 9343},
																												expr: &litMatcher{
																													pos:        position{line: 267, col: 27, offset: 9344},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 267, col: 31, offset: 9348,
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 240, col: 104, offset: 8618},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 244, col: 9, offset: 8777},
																				run: (*parser).callonListParagraphLine360,
																				expr: &seqExpr{
																					pos: position{line: 244, col: 9, offset: 8777},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 244, col: 9, offset: 8777},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 244, col: 13, offset: 8781},
																							label: "kind",
																							expr: &actionExpr{
																								pos: position{line: 259, col: 14, offset: 9203},
																								run: (*parser).callonListParagraphLine364,
																								expr: &litMatcher{
																									pos:        position{line: 259, col: 14, offset: 9203},
																									val:        "verse",
																									ignoreCase: false,
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 244, col: 30, offset: 8798},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonListParagraphLine369,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 244, col: 34, offset: 8802},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 244, col: 38, offset: 8806},
																							label: "author",
																							expr: &actionExpr{
																								pos: position{line: 263, col: 16, offset: 9262},
																								run: (*parser).callonListParagraphLine373,
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									expr: &seqExpr{
																										pos: position{line: 263, col: 17, offset: 9263},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 263, col: 17, offset: 9263},
																												expr: &choiceExpr{
																													pos: position{line: 1161, col: 8, offset: 46843},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1157, col: 12, offset: 46803},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1157, col: 21, offset: 46812},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 1159, col: 8, offset: 46832},
																															expr: &anyMatcher{
																																line: 1159, col: 9, offset: 46833,
																															},
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 263, col: 22, offset: 9268},
																												expr: &litMatcher{
																													pos:        position{line: 263, col: 23, offset: 9269},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 263, col: 27, offset: 9273},
																												expr: &litMatcher{
																													pos:        position{line: 263, col: 28, offset: 9274},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 263, col: 32, offset: 9278,
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 244, col: 59, offset: 8827},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 248, col: 9, offset: 8974},
																				run: (*parser).callonListParagraphLine388,
																				expr: &seqExpr{
																					pos: position{line: 248, col: 9, offset: 8974},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 248, col: 9, offset: 8974},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 248, col: 13, offset: 8978},
																							label: "kind",
																							expr: &actionExpr{
																								pos: position{line: 259, col: 14, offset: 9203},
																								run: (*parser).callonListParagraphLine392,
																								expr: &litMatcher{
																									pos:        position{line: 259, col: 14, offset: 9203},
																									val:        "verse",
																									ignoreCase: false,
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 248, col: 30, offset: 8995},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonListParagraphLine397,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 248, col: 34, offset: 8999},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&stateCodeExpr{
																	pos: position{line: 252, col: 5, offset: 9091},
																	run: (*parser).callonListParagraphLine400,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 188, col: 30, offset: 6780},
														run: (*parser).callonListParagraphLine401,
														expr: &seqExpr{
															pos: position{line: 188, col: 30, offset: 6780},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 188, col: 30, offset: 6780},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 188, col: 34, offset: 6784},
																	label: "k",
																	expr: &choiceExpr{
																		pos: position{line: 537, col: 19, offset: 20206},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 537, col: 19, offset: 20206},
																				run: (*parser).callonListParagraphLine406,
																				expr: &litMatcher{
																					pos:        position{line: 537, col: 19, offset: 20206},
																					val:        "TIP",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 539, col: 5, offset: 20244},
																				run: (*parser).callonListParagraphLine408,
																				expr: &litMatcher{
																					pos:        position{line: 539, col: 5, offset: 20244},
																					val:        "NOTE",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 541, col: 5, offset: 20284},
																				run: (*parser).callonListParagraphLine410,
																				expr: &litMatcher{
																					pos:        position{line: 541, col: 5, offset: 20284},
																					val:        "IMPORTANT",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 543, col: 5, offset: 20334},
																				run: (*parser).callonListParagraphLine412,
																				expr: &litMatcher{
																					pos:        position{line: 543, col: 5, offset: 20334},
																					val:        "WARNING",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 545, col: 5, offset: 20380},
																				run: (*parser).callonListParagraphLine414,
																				expr: &litMatcher{
																					pos:        position{line: 545, col: 5, offset: 20380},
																					val:        "CAUTION",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 188, col: 53, offset: 6803},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 220, col: 21, offset: 7858},
														run: (*parser).callonListParagraphLine417,
														expr: &litMatcher{
															pos:        position{line: 220, col: 21, offset: 7858},
															val:        "[horizontal]",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 202, col: 19, offset: 7270},
														run: (*parser).callonListParagraphLine419,
														expr: &seqExpr{
															pos: position{line: 202, col: 19, offset: 7270},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 202, col: 19, offset: 7270},
																	val:        "[",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 202, col: 23, offset: 7274},
																	expr: &choiceExpr{
																		pos: position{line: 1153, col: 7, offset: 46741},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1153, col: 7, offset: 46741},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1153, col: 13, offset: 46747},
																				run: (*parser).callonListParagraphLine425,
																				expr: &litMatcher{
																					pos:        position{line: 1153, col: 13, offset: 46747},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 202, col: 27, offset: 7278},
																	label: "attributes",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 202, col: 38, offset: 7289},
																		expr: &choiceExpr{
																			pos: position{line: 206, col: 21, offset: 7402},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					run: (*parser).callonListParagraphLine430,
																					expr: &seqExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 206, col: 21, offset: 7402},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 212, col: 17, offset: 7662},
																									run: (*parser).callonListParagraphLine433,
																									expr: &seqExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												expr: &actionExpr{
																													pos: position{line: 236, col: 14, offset: 8471},
																													run: (*parser).callonListParagraphLine436,
																													expr: &litMatcher{
																														pos:        position{line: 236, col: 14, offset: 8471},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 28, offset: 7673},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9203},
																													run: (*parser).callonListParagraphLine439,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9203},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 39, offset: 7684},
																												expr: &actionExpr{
																													pos: position{line: 1099, col: 16, offset: 45385},
																													run: (*parser).callonListParagraphLine442,
																													expr: &litMatcher{
																														pos:        position{line: 1099, col: 16, offset: 45385},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 212, col: 52, offset: 7697},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 212, col: 56, offset: 7701},
																													expr: &seqExpr{
																														pos: position{line: 212, col: 57, offset: 7702},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 58, offset: 7703},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 62, offset: 7707},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 63, offset: 7708},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 67, offset: 7712},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 68, offset: 7713},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 212, col: 72, offset: 7717,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 206, col: 40, offset: 7421},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 206, col: 44, offset: 7425},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 216, col: 19, offset: 7776},
																									run: (*parser).callonListParagraphLine456,
																									expr: &labeledExpr{
																										pos:   position{line: 216, col: 19, offset: 7776},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 216, col: 25, offset: 7782},
																											expr: &seqExpr{
																												pos: position{line: 216, col: 26, offset: 7783},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 27, offset: 7784},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 216, col: 31, offset: 7788},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 32, offset: 7789},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 216, col: 36, offset: 7793},
																														expr: &litMatcher{
																															pos:        position{line: 216, col: 37, offset: 7794},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 216, col: 41, offset: 7798,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 206, col: 67, offset: 7448},
																								expr: &litMatcher{
																									pos:        position{line: 206, col: 67, offset: 7448},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 206, col: 72, offset: 7453},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonListParagraphLine472,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 208, col: 5, offset: 7537},
																					run: (*parser).callonListParagraphLine474,
																					expr: &seqExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 208, col: 5, offset: 7537},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 212, col: 17, offset: 7662},
																									run: (*parser).callonListParagraphLine477,
																									expr: &seqExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												expr: &actionExpr{
																													pos: position{line: 236, col: 14, offset: 8471},
																													run: (*parser).callonListParagraphLine480,
																													expr: &litMatcher{
																														pos:        position{line: 236, col: 14, offset: 8471},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 28, offset: 7673},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9203},
																													run: (*parser).callonListParagraphLine483,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9203},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 212, col: 39, offset: 7684},
																												expr: &actionExpr{
																													pos: position{line: 1099, col: 16, offset: 45385},
																													run: (*parser).callonListParagraphLine486,
																													expr: &litMatcher{
																														pos:        position{line: 1099, col: 16, offset: 45385},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 212, col: 52, offset: 7697},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 212, col: 56, offset: 7701},
																													expr: &seqExpr{
																														pos: position{line: 212, col: 57, offset: 7702},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 58, offset: 7703},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 62, offset: 7707},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 63, offset: 7708},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 212, col: 67, offset: 7712},
																																expr: &litMatcher{
																																	pos:        position{line: 212, col: 68, offset: 7713},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 212, col: 72, offset: 7717,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 208, col: 24, offset: 7556},
																								expr: &litMatcher{
																									pos:        position{line: 208, col: 24, offset: 7556},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 208, col: 29, offset: 7561},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonListParagraphLine503,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 202, col: 59, offset: 7310},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 152, col: 170, offset: 5611},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonListParagraphLine509,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 424, col: 5, offset: 15239},
							expr: &choiceExpr{
								pos: position{line: 878, col: 19, offset: 36856},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1057, col: 26, offset: 43657},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 890, col: 25, offset: 37341},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 890, col: 25, offset: 37341},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 890, col: 31, offset: 37347},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonListParagraphLine524,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 901, col: 26, offset: 37820},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 901, col: 26, offset: 37820},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 901, col: 33, offset: 37827},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonListParagraphLine536,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 923, col: 26, offset: 38725},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 923, col: 26, offset: 38725},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 923, col: 33, offset: 38732},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonListParagraphLine548,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 1033, col: 26, offset: 42712},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 946, col: 24, offset: 39550},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 946, col: 24, offset: 39550},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 946, col: 31, offset: 39557},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonListParagraphLine561,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 990, col: 26, offset: 41195},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 990, col: 26, offset: 41195},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 990, col: 33, offset: 41202},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonListParagraphLine573,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 425, col: 5, offset: 15261},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 425, col: 11, offset: 15267},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "ContinuedDocumentElement",
			pos:  position{line: 433, col: 1, offset: 15397},
			expr: &actionExpr{
				pos: position{line: 433, col: 28, offset: 15424},
				run: (*parser).callonContinuedDocumentElement1,
				expr: &seqExpr{
					pos: position{line: 433, col: 28, offset: 15424},
					exprs: []interface{}{
						&actionExpr{
							pos: position{line: 429, col: 25, offset: 15337},
							run: (*parser).callonContinuedDocumentElement3,
							expr: &seqExpr{
								pos: position{line: 429, col: 25, offset: 15337},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 429, col: 25, offset: 15337},
										val:        "+",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 429, col: 29, offset: 15341},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonContinuedDocumentElement9,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1161, col: 8, offset: 46843},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1157, col: 12, offset: 46803},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1157, col: 21, offset: 46812},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1159, col: 8, offset: 46832},
												expr: &anyMatcher{
													line: 1159, col: 9, offset: 46833,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 433, col: 49, offset: 15445},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 433, col: 57, offset: 15453},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItem",
			pos:  position{line: 440, col: 1, offset: 15611},
			expr: &actionExpr{
				pos: position{line: 440, col: 20, offset: 15630},
				run: (*parser).callonOrderedListItem1,
				expr: &seqExpr{
					pos: position{line: 440, col: 20, offset: 15630},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 440, col: 20, offset: 15630},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 440, col: 31, offset: 15641},
								expr: &actionExpr{
									pos: position{line: 151, col: 21, offset: 5356},
									run: (*parser).callonOrderedListItem5,
									expr: &seqExpr{
										pos: position{line: 151, col: 21, offset: 5356},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 151, col: 21, offset: 5356},
												expr: &charClassMatcher{
													pos:        position{line: 151, col: 23, offset: 5358},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 152, col: 5, offset: 5446},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 152, col: 11, offset: 5452},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 161, col: 14, offset: 5913},
															run: (*parser).callonOrderedListItem11,
															expr: &seqExpr{
																pos: position{line: 161, col: 14, offset: 5913},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 161, col: 14, offset: 5913},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 161, col: 19, offset: 5918},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonOrderedListItem15,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonOrderedListItem25,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 161, col: 27, offset: 5926},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 163, col: 5, offset: 5980},
															run: (*parser).callonOrderedListItem39,
															expr: &seqExpr{
																pos: position{line: 163, col: 5, offset: 5980},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 163, col: 5, offset: 5980},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 163, col: 10, offset: 5985},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1139, col: 7, offset: 46459},
																			run: (*parser).callonOrderedListItem43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1139, col: 7, offset: 46459},
																				expr: &seqExpr{
																					pos: position{line: 1139, col: 8, offset: 46460},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1139, col: 8, offset: 46460},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 17, offset: 46469},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonOrderedListItem53,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 21, offset: 46473},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 22, offset: 46474},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 26, offset: 46478},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 27, offset: 46479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 31, offset: 46483},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 32, offset: 46484},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 37, offset: 46489},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 38, offset: 46490},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1139, col: 43, offset: 46495},
																							expr: &litMatcher{
																								pos:        position{line: 1139, col: 44, offset: 46496},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1139, col: 48, offset: 46500,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 163, col: 18, offset: 5993},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 173, col: 17, offset: 6296},
															run: (*parser).callonOrderedListItem67,
															expr: &seqExpr{
																pos: position{line: 173, col: 17, offset: 6296},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 173, col: 17, offset: 6296},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 173, col: 21, offset: 6300},
																		expr: &litMatcher{
																			pos:        position{line: 173, col: 22, offset: 6301},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 173, col: 26, offset: 6305},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonOrderedListItem75,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 173, col: 30, offset: 6309},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 173, col: 37, offset: 6316},
																			run: (*parser).callonOrderedListItem78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 173, col: 37, offset: 6316},
																				expr: &seqExpr{
																					pos: position{line: 173, col: 38, offset: 6317},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 173, col: 38, offset: 6317},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 173, col: 47, offset: 6326,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 16, offset: 6537},
															run: (*parser).callonOrderedListItem86,
															expr: &seqExpr{
																pos: position{line: 181, col: 16, offset: 6537},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 16, offset: 6537},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 21, offset: 6542},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonOrderedListItem92,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 25, offset: 6546},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 181, col: 31, offset: 6552},
																			run: (*parser).callonOrderedListItem95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 181, col: 31, offset: 6552},
																				expr: &seqExpr{
																					pos: position{line: 181, col: 32, offset: 6553},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 181, col: 32, offset: 6553},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 181, col: 41, offset: 6562},
																							expr: &litMatcher{
																								pos:        position{line: 181, col: 42, offset: 6563},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 181, col: 46, offset: 6567,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 183, col: 8, offset: 6615},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 193, col: 21, offset: 6978},
															run: (*parser).callonOrderedListItem106,
															expr: &litMatcher{
																pos:        position{line: 193, col: 21, offset: 6978},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 195, col: 5, offset: 7036},
															run: (*parser).callonOrderedListItem108,
															expr: &seqExpr{
																pos: position{line: 195, col: 5, offset: 7036},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 195, col: 5, offset: 7036},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 195, col: 16, offset: 7047},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 195, col: 26, offset: 7057},
																			run: (*parser).callonOrderedListItem112,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 195, col: 26, offset: 7057},
																				expr: &seqExpr{
																					pos: position{line: 195, col: 27, offset: 7058},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 195, col: 27, offset: 7058},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 195, col: 36, offset: 7067},
																							expr: &litMatcher{
																								pos:        position{line: 195, col: 37, offset: 7068},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 195, col: 41, offset: 7072,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 197, col: 7, offset: 7119},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 224, col: 20, offset: 7961},
															run: (*parser).callonOrderedListItem123,
															expr: &seqExpr{
																pos: position{line: 224, col: 20, offset: 7961},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 224, col: 20, offset: 7961},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 24, offset: 7965},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonOrderedListItem127,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 224, col: 41, offset: 7982},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonOrderedListItem132,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 45, offset: 7986},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 49, offset: 7990},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonOrderedListItem136,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 70, offset: 8011},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 224, col: 74, offset: 8015},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 267, col: 15, offset: 9332},
																			run: (*parser).callonOrderedListItem152,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 267, col: 15, offset: 9332},
																				expr: &seqExpr{
																					pos: position{line: 267, col: 16, offset: 9333},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 267, col: 16, offset: 9333},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 21, offset: 9338},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 22, offset: 9339},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 267, col: 26, offset: 9343},
																							expr: &litMatcher{
																								pos:        position{line: 267, col: 27, offset: 9344},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 267, col: 31, offset: 9348,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 224, col: 93, offset: 8034},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 228, col: 5, offset: 8177},
															run: (*parser).callonOrderedListItem167,
															expr: &seqExpr{
																pos: position{line: 228, col: 5, offset: 8177},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 228, col: 5, offset: 8177},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 9, offset: 8181},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonOrderedListItem171,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 228, col: 26, offset: 8198},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonOrderedListItem176,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 30, offset: 8202},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 228, col: 34, offset: 8206},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 263, col: 16, offset: 9262},
																			run: (*parser).callonOrderedListItem180,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 263, col: 16, offset: 9262},
																				expr: &seqExpr{
																					pos: position{line: 263, col: 17, offset: 9263},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 263, col: 17, offset: 9263},
																							expr: &choiceExpr{
																								pos: position{line: 1161, col: 8, offset: 46843},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1159, col: 8, offset: 46832},
																										expr: &anyMatcher{
																											line: 1159, col: 9, offset: 46833,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 22, offset: 9268},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 23, offset: 9269},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 263, col: 27, offset: 9273},
																							expr: &litMatcher{
																								pos:        position{line: 263, col: 28, offset: 9274},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 263, col: 32, offset: 9278,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 228, col: 55, offset: 8227},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 232, col: 5, offset: 8358},
															run: (*parser).callonOrderedListItem195,
															expr: &seqExpr{
																pos: position{line: 232, col: 5, offset: 8358},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 232, col: 5, offset: 8358},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 232, col: 9, offset: 8362},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 236, col: 14, offset: 8471},
																			run: (*parser).callonOrderedListItem199,
																			expr: &litMatcher{
																				pos:        position{line: 236, col: 14, offset: 8471},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 232, col: 26, offset: 8379},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonOrderedListItem204,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 232, col: 30, offset: 8383},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 240, col: 20, offset: 8534},
															run: (*parser).callonOrderedListItem207,
															expr: &seqExpr{
																pos: position{line: 240, col: 20, offset: 8534},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 240, col: 20, offset: 8534},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 240, col: 31, offset: 8545},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 240, col: 31, offset: 8545},
																					run: (*parser).callonOrderedListItem211,
																					expr: &seqExpr{
																						pos: position{line: 240, col: 31, offset: 8545},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 240, col: 31, offset: 8545},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 35, offset: 8549},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonOrderedListItem215,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 240, col: 52, offset: 8566},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonOrderedListItem220,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 56, offset: 8570},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 60, offset: 8574},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonOrderedListItem224,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 81, offset: 8595},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 240, col: 85, offset: 8599},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 267, col: 15, offset: 9332},
																									run: (*parser).callonOrderedListItem240,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 267, col: 15, offset: 9332},
																										expr: &seqExpr{
																											pos: position{line: 267, col: 16, offset: 9333},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 267, col: 16, offset: 9333},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 21, offset: 9338},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 22, offset: 9339},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 267, col: 26, offset: 9343},
																													expr: &litMatcher{
																														pos:        position{line: 267, col: 27, offset: 9344},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 267, col: 31, offset: 9348,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 240, col: 104, offset: 8618},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 244, col: 9, offset: 8777},
																					run: (*parser).callonOrderedListItem255,
																					expr: &seqExpr{
																						pos: position{line: 244, col: 9, offset: 8777},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 244, col: 9, offset: 8777},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 13, offset: 8781},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonOrderedListItem259,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 244, col: 30, offset: 8798},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonOrderedListItem264,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 34, offset: 8802},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 244, col: 38, offset: 8806},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 263, col: 16, offset: 9262},
																									run: (*parser).callonOrderedListItem268,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 263, col: 16, offset: 9262},
																										expr: &seqExpr{
																											pos: position{line: 263, col: 17, offset: 9263},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 263, col: 17, offset: 9263},
																													expr: &choiceExpr{
																														pos: position{line: 1161, col: 8, offset: 46843},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1157, col: 12, offset: 46803},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1157, col: 21, offset: 46812},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1159, col: 8, offset: 46832},
																																expr: &anyMatcher{
																																	line: 1159, col: 9, offset: 46833,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 22, offset: 9268},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 23, offset: 9269},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 263, col: 27, offset: 9273},
																													expr: &litMatcher{
																														pos:        position{line: 263, col: 28, offset: 9274},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 263, col: 32, offset: 9278,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 244, col: 59, offset: 8827},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 248, col: 9, offset: 8974},
																					run: (*parser).callonOrderedListItem283,
																					expr: &seqExpr{
																						pos: position{line: 248, col: 9, offset: 8974},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 248, col: 9, offset: 8974},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 248, col: 13, offset: 8978},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 259, col: 14, offset: 9203},
																									run: (*parser).callonOrderedListItem287,
																									expr: &litMatcher{
																										pos:        position{line: 259, col: 14, offset: 9203},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 248, col: 30, offset: 8995},
																								expr: &choiceExpr{
																									pos: position{line: 1153, col: 7, offset: 46741},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1153, col: 7, offset: 46741},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1153, col: 13, offset: 46747},
																											run: (*parser).callonOrderedListItem292,
																											expr: &litMatcher{
																												pos:        position{line: 1153, col: 13, offset: 46747},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 248, col: 34, offset: 8999},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 252, col: 5, offset: 9091},
																		run: (*parser).callonOrderedListItem295,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 188, col: 30, offset: 6780},
															run: (*parser).callonOrderedListItem296,
															expr: &seqExpr{
																pos: position{line: 188, col: 30, offset: 6780},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 188, col: 30, offset: 6780},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 188, col: 34, offset: 6784},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 537, col: 19, offset: 20206},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 537, col: 19, offset: 20206},
																					run: (*parser).callonOrderedListItem301,
																					expr: &litMatcher{
																						pos:        position{line: 537, col: 19, offset: 20206},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 539, col: 5, offset: 20244},
																					run: (*parser).callonOrderedListItem303,
																					expr: &litMatcher{
																						pos:        position{line: 539, col: 5, offset: 20244},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 541, col: 5, offset: 20284},
																					run: (*parser).callonOrderedListItem305,
																					expr: &litMatcher{
																						pos:        position{line: 541, col: 5, offset: 20284},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 543, col: 5, offset: 20334},
																					run: (*parser).callonOrderedListItem307,
																					expr: &litMatcher{
																						pos:        position{line: 543, col: 5, offset: 20334},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 545, col: 5, offset: 20380},
																					run: (*parser).callonOrderedListItem309,
																					expr: &litMatcher{
																						pos:        position{line: 545, col: 5, offset: 20380},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 188, col: 53, offset: 6803},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 220, col: 21, offset: 7858},
															run: (*parser).callonOrderedListItem312,
															expr: &litMatcher{
																pos:        position{line: 220, col: 21, offset: 7858},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 202, col: 19, offset: 7270},
															run: (*parser).callonOrderedListItem314,
															expr: &seqExpr{
																pos: position{line: 202, col: 19, offset: 7270},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 202, col: 19, offset: 7270},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 202, col: 23, offset: 7274},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonOrderedListItem320,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 202, col: 27, offset: 7278},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 202, col: 38, offset: 7289},
																			expr: &choiceExpr{
																				pos: position{line: 206, col: 21, offset: 7402},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 206, col: 21, offset: 7402},
																						run: (*parser).callonOrderedListItem325,
																						expr: &seqExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 206, col: 21, offset: 7402},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonOrderedListItem328,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonOrderedListItem331,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonOrderedListItem334,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonOrderedListItem337,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 206, col: 40, offset: 7421},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 206, col: 44, offset: 7425},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 216, col: 19, offset: 7776},
																										run: (*parser).callonOrderedListItem351,
																										expr: &labeledExpr{
																											pos:   position{line: 216, col: 19, offset: 7776},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 216, col: 25, offset: 7782},
																												expr: &seqExpr{
																													pos: position{line: 216, col: 26, offset: 7783},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 216, col: 26, offset: 7783},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 27, offset: 7784},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 31, offset: 7788},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 32, offset: 7789},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 216, col: 36, offset: 7793},
																															expr: &litMatcher{
																																pos:        position{line: 216, col: 37, offset: 7794},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 216, col: 41, offset: 7798,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 206, col: 67, offset: 7448},
																									expr: &litMatcher{
																										pos:        position{line: 206, col: 67, offset: 7448},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 206, col: 72, offset: 7453},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonOrderedListItem367,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 208, col: 5, offset: 7537},
																						run: (*parser).callonOrderedListItem369,
																						expr: &seqExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 208, col: 5, offset: 7537},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 212, col: 17, offset: 7662},
																										run: (*parser).callonOrderedListItem372,
																										expr: &seqExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 212, col: 17, offset: 7662},
																													expr: &actionExpr{
																														pos: position{line: 236, col: 14, offset: 8471},
																														run: (*parser).callonOrderedListItem375,
																														expr: &litMatcher{
																															pos:        position{line: 236, col: 14, offset: 8471},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 28, offset: 7673},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9203},
																														run: (*parser).callonOrderedListItem378,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9203},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 212, col: 39, offset: 7684},
																													expr: &actionExpr{
																														pos: position{line: 1099, col: 16, offset: 45385},
																														run: (*parser).callonOrderedListItem381,
																														expr: &litMatcher{
																															pos:        position{line: 1099, col: 16, offset: 45385},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 212, col: 52, offset: 7697},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 212, col: 56, offset: 7701},
																														expr: &seqExpr{
																															pos: position{line: 212, col: 57, offset: 7702},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 212, col: 57, offset: 7702},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 58, offset: 7703},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 62, offset: 7707},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 63, offset: 7708},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 212, col: 67, offset: 7712},
																																	expr: &litMatcher{
																																		pos:        position{line: 212, col: 68, offset: 7713},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 212, col: 72, offset: 7717,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 208, col: 24, offset: 7556},
																									expr: &litMatcher{
																										pos:        position{line: 208, col: 24, offset: 7556},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 208, col: 29, offset: 7561},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonOrderedListItem398,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 202, col: 59, offset: 7310},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 152, col: 170, offset: 5611},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonOrderedListItem404,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 440, col: 51, offset: 15661},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 444, col: 26, offset: 15893},
								run: (*parser).callonOrderedListItem412,
								expr: &seqExpr{
									pos: position{line: 444, col: 26, offset: 15893},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 444, col: 26, offset: 15893},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonOrderedListItem417,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 444, col: 30, offset: 15897},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 446, col: 5, offset: 15952},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 446, col: 5, offset: 15952},
														run: (*parser).callonOrderedListItem421,
														expr: &litMatcher{
															pos:        position{line: 446, col: 5, offset: 15952},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 448, col: 9, offset: 16065},
														run: (*parser).callonOrderedListItem423,
														expr: &litMatcher{
															pos:        position{line: 448, col: 9, offset: 16065},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 450, col: 9, offset: 16176},
														run: (*parser).callonOrderedListItem425,
														expr: &litMatcher{
															pos:        position{line: 450, col: 9, offset: 16176},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 452, col: 9, offset: 16285},
														run: (*parser).callonOrderedListItem427,
														expr: &litMatcher{
															pos:        position{line: 452, col: 9, offset: 16285},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 454, col: 9, offset: 16392},
														run: (*parser).callonOrderedListItem429,
														expr: &litMatcher{
															pos:        position{line: 454, col: 9, offset: 16392},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 9, offset: 16519},
														run: (*parser).callonOrderedListItem431,
														expr: &seqExpr{
															pos: position{line: 457, col: 9, offset: 16519},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 457, col: 9, offset: 16519},
																	expr: &charClassMatcher{
																		pos:        position{line: 457, col: 10, offset: 16520},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 457, col: 18, offset: 16528},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 459, col: 9, offset: 16631},
														run: (*parser).callonOrderedListItem436,
														expr: &seqExpr{
															pos: position{line: 459, col: 9, offset: 16631},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 459, col: 10, offset: 16632},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 459, col: 17, offset: 16639},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 461, col: 9, offset: 16745},
														run: (*parser).callonOrderedListItem440,
														expr: &seqExpr{
															pos: position{line: 461, col: 9, offset: 16745},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 461, col: 10, offset: 16746},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 461, col: 17, offset: 16753},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 463, col: 9, offset: 16859},
														run: (*parser).callonOrderedListItem444,
														expr: &seqExpr{
															pos: position{line: 463, col: 9, offset: 16859},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 463, col: 9, offset: 16859},
																	expr: &charClassMatcher{
																		pos:        position{line: 463, col: 10, offset: 16860},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 463, col: 18, offset: 16868},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 465, col: 9, offset: 16974},
														run: (*parser).callonOrderedListItem449,
														expr: &seqExpr{
															pos: position{line: 465, col: 9, offset: 16974},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 465, col: 9, offset: 16974},
																	expr: &charClassMatcher{
																		pos:        position{line: 465, col: 10, offset: 16975},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 465, col: 18, offset: 16983},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 467, col: 8, offset: 17088},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonOrderedListItem457,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 440, col: 82, offset: 15692},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 440, col: 91, offset: 15701},
								name: "OrderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 440, col: 115, offset: 15725},
							expr: &actionExpr{
								pos: position{line: 1120, col: 14, offset: 45925},
								run: (*parser).callonOrderedListItem462,
								expr: &seqExpr{
									pos: position{line: 1120, col: 14, offset: 45925},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1120, col: 14, offset: 45925},
											expr: &notExpr{
												pos: position{line: 1159, col: 8, offset: 46832},
												expr: &anyMatcher{
													line: 1159, col: 9, offset: 46833,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1120, col: 19, offset: 45930},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonOrderedListItem470,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItemContent",
			pos:  position{line: 471, col: 1, offset: 17128},
			expr: &actionExpr{
				pos: position{line: 471, col: 27, offset: 17154},
				run: (*parser).callonOrderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 471, col: 27, offset: 17154},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 471, col: 37, offset: 17164},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 471, col: 37, offset: 17164},
								expr: &ruleRefExpr{
									pos:  position{line: 471, col: 37, offset: 17164},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 471, col: 52, offset: 17179},
								expr: &ruleRefExpr{
									pos:  position{line: 471, col: 52, offset: 17179},
									name: "ContinuedDocumentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItem",
			pos:  position{line: 478, col: 1, offset: 17508},
			expr: &actionExpr{
				pos: position{line: 478, col: 22, offset: 17529},
				run: (*parser).callonUnorderedListItem1,
				expr: &seqExpr{
					pos: position{line: 478, col: 22, offset: 17529},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 478, col: 22, offset: 17529},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 483, col: 5, offset: 17748},
								run: (*parser).callonUnorderedListItem4,
								expr: &seqExpr{
									pos: position{line: 483, col: 5, offset: 17748},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 483, col: 5, offset: 17748},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonUnorderedListItem9,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 483, col: 9, offset: 17752},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 484, col: 9, offset: 17769},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 484, col: 9, offset: 17769},
														run: (*parser).callonUnorderedListItem13,
														expr: &litMatcher{
															pos:        position{line: 484, col: 9, offset: 17769},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 487, col: 11, offset: 17938},
														run: (*parser).callonUnorderedListItem15,
														expr: &litMatcher{
															pos:        position{line: 487, col: 11, offset: 17938},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 490, col: 11, offset: 18107},
														run: (*parser).callonUnorderedListItem17,
														expr: &litMatcher{
															pos:        position{line: 490, col: 11, offset: 18107},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 493, col: 11, offset: 18276},
														run: (*parser).callonUnorderedListItem19,
														expr: &litMatcher{
															pos:        position{line: 493, col: 11, offset: 18276},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 496, col: 11, offset: 18442},
														run: (*parser).callonUnorderedListItem21,
														expr: &litMatcher{
															pos:        position{line: 496, col: 11, offset: 18442},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 499, col: 11, offset: 18606},
														run: (*parser).callonUnorderedListItem23,
														expr: &litMatcher{
															pos:        position{line: 499, col: 11, offset: 18606},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 501, col: 12, offset: 18753},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonUnorderedListItem28,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 478, col: 55, offset: 17562},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 478, col: 64, offset: 17571},
								name: "UnorderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 478, col: 90, offset: 17597},
							expr: &actionExpr{
								pos: position{line: 1120, col: 14, offset: 45925},
								run: (*parser).callonUnorderedListItem33,
								expr: &seqExpr{
									pos: position{line: 1120, col: 14, offset: 45925},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1120, col: 14, offset: 45925},
											expr: &notExpr{
												pos: position{line: 1159, col: 8, offset: 46832},
												expr: &anyMatcher{
													line: 1159, col: 9, offset: 46833,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1120, col: 19, offset: 45930},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonUnorderedListItem41,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItemContent",
			pos:  position{line: 505, col: 1, offset: 18802},
			expr: &actionExpr{
				pos: position{line: 505, col: 29, offset: 18830},
				run: (*parser).callonUnorderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 505, col: 29, offset: 18830},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 505, col: 39, offset: 18840},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 505, col: 39, offset: 18840},
								expr: &ruleRefExpr{
									pos:  position{line: 505, col: 39, offset: 18840},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 505, col: 54, offset: 18855},
								expr: &ruleRefExpr{
									pos:  position{line: 505, col: 54, offset: 18855},
									name: "ContinuedDocumentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItem",
			pos:  position{line: 512, col: 1, offset: 19182},
			expr: &actionExpr{
				pos: position{line: 512, col: 20, offset: 19201},
				run: (*parser).callonLabeledListItem1,
				expr: &seqExpr{
					pos: position{line: 512, col: 20, offset: 19201},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 512, col: 20, offset: 19201},
							label: "term",
							expr: &actionExpr{
								pos: position{line: 516, col: 24, offset: 19443},
								run: (*parser).callonLabeledListItem4,
								expr: &zeroOrMoreExpr{
									pos: position{line: 516, col: 24, offset: 19443},
									expr: &seqExpr{
										pos: position{line: 516, col: 25, offset: 19444},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 516, col: 25, offset: 19444},
												expr: &choiceExpr{
													pos: position{line: 1157, col: 12, offset: 46803},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 516, col: 34, offset: 19453},
												expr: &litMatcher{
													pos:        position{line: 516, col: 35, offset: 19454},
													val:        "::",
													ignoreCase: false,
												},
											},
											&anyMatcher{
												line: 516, col: 40, offset: 19459,
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 512, col: 47, offset: 19228},
							label: "separator",
							expr: &actionExpr{
								pos: position{line: 521, col: 29, offset: 19605},
								run: (*parser).callonLabeledListItem15,
								expr: &choiceExpr{
									pos: position{line: 521, col: 30, offset: 19606},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 521, col: 30, offset: 19606},
											val:        "::::",
											ignoreCase: false,
										},
										&litMatcher{
											pos:        position{line: 521, col: 39, offset: 19615},
											val:        ":::",
											ignoreCase: false,
										},
										&litMatcher{
											pos:        position{line: 521, col: 47, offset: 19623},
											val:        "::",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 512, col: 84, offset: 19265},
							label: "description",
							expr: &ruleRefExpr{
								pos:  position{line: 512, col: 97, offset: 19278},
								name: "LabeledListItemDescription",
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItemDescription",
			pos:  position{line: 526, col: 1, offset: 19671},
			expr: &choiceExpr{
				pos: position{line: 527, col: 5, offset: 19706},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 527, col: 5, offset: 19706},
						run: (*parser).callonLabeledListItemDescription2,
						expr: &seqExpr{
							pos: position{line: 527, col: 5, offset: 19706},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 527, col: 5, offset: 19706},
									expr: &choiceExpr{
										pos: position{line: 527, col: 6, offset: 19707},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonLabeledListItemDescription7,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
											&litMatcher{
												pos:        position{line: 1157, col: 12, offset: 46803},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1157, col: 21, offset: 46812},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 527, col: 21, offset: 19722},
									label: "elements",
									expr: &zeroOrMoreExpr{
										pos: position{line: 527, col: 30, offset: 19731},
										expr: &choiceExpr{
											pos: position{line: 527, col: 31, offset: 19732},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 527, col: 31, offset: 19732},
													name: "ListParagraph",
												},
												&ruleRefExpr{
													pos:  position{line: 527, col: 47, offset: 19748},
													name: "ContinuedDocumentElement",
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 529, col: 9, offset: 19962},
						run: (*parser).callonLabeledListItemDescription16,
						expr: &seqExpr{
							pos: position{line: 529, col: 9, offset: 19962},
							exprs: []interface{}{
								&zeroOrMoreExpr{
									pos: position{line: 529, col: 9, offset: 19962},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonLabeledListItemDescription21,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1161, col: 8, offset: 46843},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1157, col: 12, offset: 46803},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1157, col: 21, offset: 46812},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1159, col: 8, offset: 46832},
											expr: &anyMatcher{
												line: 1159, col: 9, offset: 46833,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Paragraph",
			pos:  position{line: 554, col: 1, offset: 20683},
			expr: &choiceExpr{
				pos: position{line: 556, col: 5, offset: 20730},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 556, col: 5, offset: 20730},
						run: (*parser).callonParagraph2,
						expr: &seqExpr{
							pos: position{line: 556, col: 5, offset: 20730},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 556, col: 5, offset: 20730},
									expr: &seqExpr{
										pos: position{line: 556, col: 7, offset: 20732},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 556, col: 7, offset: 20732},
												expr: &litMatcher{
													pos:        position{line: 556, col: 7, offset: 20732},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 556, col: 12, offset: 20737},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonParagraph11,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 556, col: 16, offset: 20741},
												expr: &choiceExpr{
													pos: position{line: 1157, col: 12, offset: 46803},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 556, col: 26, offset: 20751},
									label: "t",
									expr: &choiceExpr{
										pos: position{line: 537, col: 19, offset: 20206},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 537, col: 19, offset: 20206},
												run: (*parser).callonParagraph19,
												expr: &litMatcher{
													pos:        position{line: 537, col: 19, offset: 20206},
													val:        "TIP",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 539, col: 5, offset: 20244},
												run: (*parser).callonParagraph21,
												expr: &litMatcher{
													pos:        position{line: 539, col: 5, offset: 20244},
													val:        "NOTE",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 541, col: 5, offset: 20284},
												run: (*parser).callonParagraph23,
												expr: &litMatcher{
													pos:        position{line: 541, col: 5, offset: 20284},
													val:        "IMPORTANT",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 543, col: 5, offset: 20334},
												run: (*parser).callonParagraph25,
												expr: &litMatcher{
													pos:        position{line: 543, col: 5, offset: 20334},
													val:        "WARNING",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 545, col: 5, offset: 20380},
												run: (*parser).callonParagraph27,
												expr: &litMatcher{
													pos:        position{line: 545, col: 5, offset: 20380},
													val:        "CAUTION",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 556, col: 45, offset: 20770},
									val:        ": ",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 556, col: 50, offset: 20775},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 556, col: 56, offset: 20781},
										expr: &ruleRefExpr{
											pos:  position{line: 556, col: 57, offset: 20782},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 560, col: 5, offset: 20962},
						run: (*parser).callonParagraph33,
						expr: &seqExpr{
							pos: position{line: 560, col: 5, offset: 20962},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 560, col: 5, offset: 20962},
									expr: &seqExpr{
										pos: position{line: 560, col: 7, offset: 20964},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 560, col: 7, offset: 20964},
												expr: &litMatcher{
													pos:        position{line: 560, col: 7, offset: 20964},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 560, col: 12, offset: 20969},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonParagraph42,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 560, col: 16, offset: 20973},
												expr: &choiceExpr{
													pos: position{line: 1157, col: 12, offset: 46803},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 560, col: 26, offset: 20983},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 560, col: 32, offset: 20989},
										expr: &ruleRefExpr{
											pos:  position{line: 560, col: 33, offset: 20990},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseParagraph",
			pos:  position{line: 564, col: 1, offset: 21075},
			expr: &actionExpr{
				pos: position{line: 565, col: 5, offset: 21098},
				run: (*parser).callonVerseParagraph1,
				expr: &seqExpr{
					pos: position{line: 565, col: 5, offset: 21098},
					exprs: []interface{}{
						&andCodeExpr{
							pos: position{line: 565, col: 5, offset: 21098},
							run: (*parser).callonVerseParagraph3,
						},
						&labeledExpr{
							pos:   position{line: 569, col: 5, offset: 21190},
							label: "verse",
							expr: &choiceExpr{
								pos: position{line: 571, col: 9, offset: 21239},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 571, col: 9, offset: 21239},
										run: (*parser).callonVerseParagraph6,
										expr: &seqExpr{
											pos: position{line: 571, col: 9, offset: 21239},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 571, col: 9, offset: 21239},
													expr: &seqExpr{
														pos: position{line: 571, col: 11, offset: 21241},
														exprs: []interface{}{
															&oneOrMoreExpr{
																pos: position{line: 571, col: 11, offset: 21241},
																expr: &litMatcher{
																	pos:        position{line: 571, col: 11, offset: 21241},
																	val:        "=",
																	ignoreCase: false,
																},
															},
															&oneOrMoreExpr{
																pos: position{line: 571, col: 16, offset: 21246},
																expr: &choiceExpr{
																	pos: position{line: 1153, col: 7, offset: 46741},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1153, col: 7, offset: 46741},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1153, col: 13, offset: 46747},
																			run: (*parser).callonVerseParagraph15,
																			expr: &litMatcher{
																				pos:        position{line: 1153, col: 13, offset: 46747},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 571, col: 20, offset: 21250},
																expr: &choiceExpr{
																	pos: position{line: 1157, col: 12, offset: 46803},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1157, col: 12, offset: 46803},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1157, col: 21, offset: 46812},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 571, col: 30, offset: 21260},
													label: "t",
													expr: &choiceExpr{
														pos: position{line: 537, col: 19, offset: 20206},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 537, col: 19, offset: 20206},
																run: (*parser).callonVerseParagraph23,
																expr: &litMatcher{
																	pos:        position{line: 537, col: 19, offset: 20206},
																	val:        "TIP",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 539, col: 5, offset: 20244},
																run: (*parser).callonVerseParagraph25,
																expr: &litMatcher{
																	pos:        position{line: 539, col: 5, offset: 20244},
																	val:        "NOTE",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 541, col: 5, offset: 20284},
																run: (*parser).callonVerseParagraph27,
																expr: &litMatcher{
																	pos:        position{line: 541, col: 5, offset: 20284},
																	val:        "IMPORTANT",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 543, col: 5, offset: 20334},
																run: (*parser).callonVerseParagraph29,
																expr: &litMatcher{
																	pos:        position{line: 543, col: 5, offset: 20334},
																	val:        "WARNING",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 545, col: 5, offset: 20380},
																run: (*parser).callonVerseParagraph31,
																expr: &litMatcher{
																	pos:        position{line: 545, col: 5, offset: 20380},
																	val:        "CAUTION",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 571, col: 49, offset: 21279},
													val:        ": ",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 571, col: 54, offset: 21284},
													label: "lines",
													expr: &oneOrMoreExpr{
														pos: position{line: 571, col: 60, offset: 21290},
														expr: &ruleRefExpr{
															pos:  position{line: 571, col: 61, offset: 21291},
															name: "InlineElements",
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 575, col: 9, offset: 21487},
										run: (*parser).callonVerseParagraph37,
										expr: &seqExpr{
											pos: position{line: 575, col: 9, offset: 21487},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 575, col: 9, offset: 21487},
													expr: &seqExpr{
														pos: position{line: 575, col: 11, offset: 21489},
														exprs: []interface{}{
															&oneOrMoreExpr{
																pos: position{line: 575, col: 11, offset: 21489},
																expr: &litMatcher{
																	pos:        position{line: 575, col: 11, offset: 21489},
																	val:        "=",
																	ignoreCase: false,
																},
															},
															&oneOrMoreExpr{
																pos: position{line: 575, col: 16, offset: 21494},
																expr: &choiceExpr{
																	pos: position{line: 1153, col: 7, offset: 46741},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1153, col: 7, offset: 46741},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1153, col: 13, offset: 46747},
																			run: (*parser).callonVerseParagraph46,
																			expr: &litMatcher{
																				pos:        position{line: 1153, col: 13, offset: 46747},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 575, col: 20, offset: 21498},
																expr: &choiceExpr{
																	pos: position{line: 1157, col: 12, offset: 46803},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1157, col: 12, offset: 46803},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1157, col: 21, offset: 46812},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 575, col: 30, offset: 21508},
													label: "lines",
													expr: &oneOrMoreExpr{
														pos: position{line: 575, col: 36, offset: 21514},
														expr: &ruleRefExpr{
															pos:  position{line: 575, col: 37, offset: 21515},
															name: "InlineElements",
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&stateCodeExpr{
							pos: position{line: 578, col: 7, offset: 21613},
							run: (*parser).callonVerseParagraph55,
						},
					},
				},
			},
		},
		{
			name: "InlineElements",
			pos:  position{line: 585, col: 1, offset: 21709},
			expr: &choiceExpr{
				pos: position{line: 586, col: 5, offset: 21732},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 586, col: 5, offset: 21732},
						run: (*parser).callonInlineElements2,
						expr: &labeledExpr{
							pos:   position{line: 586, col: 5, offset: 21732},
							label: "comment",
							expr: &actionExpr{
								pos: position{line: 1043, col: 22, offset: 43049},
								run: (*parser).callonInlineElements4,
								expr: &seqExpr{
									pos: position{line: 1043, col: 22, offset: 43049},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1043, col: 22, offset: 43049},
											expr: &litMatcher{
												pos:        position{line: 1033, col: 26, offset: 42712},
												val:        "////",
												ignoreCase: false,
											},
										},
										&litMatcher{
											pos:        position{line: 1043, col: 45, offset: 43072},
											val:        "//",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 1043, col: 50, offset: 43077},
											label: "content",
											expr: &actionExpr{
												pos: position{line: 1047, col: 29, offset: 43205},
												run: (*parser).callonInlineElements10,
												expr: &zeroOrMoreExpr{
													pos: position{line: 1047, col: 29, offset: 43205},
													expr: &seqExpr{
														pos: position{line: 1047, col: 30, offset: 43206},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1047, col: 30, offset: 43206},
																expr: &choiceExpr{
																	pos: position{line: 1161, col: 8, offset: 46843},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1157, col: 12, offset: 46803},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1157, col: 21, offset: 46812},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1159, col: 8, offset: 46832},
																			expr: &anyMatcher{
																				line: 1159, col: 9, offset: 46833,
																			},
																		},
																	},
																},
															},
															&anyMatcher{
																line: 1047, col: 35, offset: 43211,
															},
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 588, col: 9, offset: 21833},
						run: (*parser).callonInlineElements25,
						expr: &seqExpr{
							pos: position{line: 588, col: 9, offset: 21833},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 588, col: 9, offset: 21833},
									expr: &actionExpr{
										pos: position{line: 1120, col: 14, offset: 45925},
										run: (*parser).callonInlineElements28,
										expr: &seqExpr{
											pos: position{line: 1120, col: 14, offset: 45925},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 1120, col: 14, offset: 45925},
													expr: &notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 1120, col: 19, offset: 45930},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonInlineElements36,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1161, col: 8, offset: 46843},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 588, col: 20, offset: 21844},
									expr: &choiceExpr{
										pos: position{line: 878, col: 19, offset: 36856},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1057, col: 26, offset: 43657},
												val:        "....",
												ignoreCase: false,
											},
											&seqExpr{
												pos: position{line: 890, col: 25, offset: 37341},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 890, col: 25, offset: 37341},
														val:        "```",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 890, col: 31, offset: 37347},
														expr: &choiceExpr{
															pos: position{line: 1153, col: 7, offset: 46741},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1153, col: 7, offset: 46741},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1153, col: 13, offset: 46747},
																	run: (*parser).callonInlineElements51,
																	expr: &litMatcher{
																		pos:        position{line: 1153, col: 13, offset: 46747},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1161, col: 8, offset: 46843},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1157, col: 12, offset: 46803},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1157, col: 21, offset: 46812},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1159, col: 8, offset: 46832},
																expr: &anyMatcher{
																	line: 1159, col: 9, offset: 46833,
																},
															},
														},
													},
												},
											},
											&seqExpr{
												pos: position{line: 901, col: 26, offset: 37820},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 901, col: 26, offset: 37820},
														val:        "----",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 901, col: 33, offset: 37827},
														expr: &choiceExpr{
															pos: position{line: 1153, col: 7, offset: 46741},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1153, col: 7, offset: 46741},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1153, col: 13, offset: 46747},
																	run: (*parser).callonInlineElements63,
																	expr: &litMatcher{
																		pos:        position{line: 1153, col: 13, offset: 46747},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1161, col: 8, offset: 46843},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1157, col: 12, offset: 46803},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1157, col: 21, offset: 46812},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1159, col: 8, offset: 46832},
																expr: &anyMatcher{
																	line: 1159, col: 9, offset: 46833,
																},
															},
														},
													},
												},
											},
											&seqExpr{
												pos: position{line: 923, col: 26, offset: 38725},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 923, col: 26, offset: 38725},
														val:        "====",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 923, col: 33, offset: 38732},
														expr: &choiceExpr{
															pos: position{line: 1153, col: 7, offset: 46741},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1153, col: 7, offset: 46741},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1153, col: 13, offset: 46747},
																	run: (*parser).callonInlineElements75,
																	expr: &litMatcher{
																		pos:        position{line: 1153, col: 13, offset: 46747},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1161, col: 8, offset: 46843},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1157, col: 12, offset: 46803},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1157, col: 21, offset: 46812},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1159, col: 8, offset: 46832},
																expr: &anyMatcher{
																	line: 1159, col: 9, offset: 46833,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 1033, col: 26, offset: 42712},
												val:        "////",
												ignoreCase: false,
											},
											&seqExpr{
												pos: position{line: 946, col: 24, offset: 39550},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 946, col: 24, offset: 39550},
														val:        "____",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 946, col: 31, offset: 39557},
														expr: &choiceExpr{
															pos: position{line: 1153, col: 7, offset: 46741},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1153, col: 7, offset: 46741},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1153, col: 13, offset: 46747},
																	run: (*parser).callonInlineElements88,
																	expr: &litMatcher{
																		pos:        position{line: 1153, col: 13, offset: 46747},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1161, col: 8, offset: 46843},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1157, col: 12, offset: 46803},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1157, col: 21, offset: 46812},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1159, col: 8, offset: 46832},
																expr: &anyMatcher{
																	line: 1159, col: 9, offset: 46833,
																},
															},
														},
													},
												},
											},
											&seqExpr{
												pos: position{line: 990, col: 26, offset: 41195},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 990, col: 26, offset: 41195},
														val:        "****",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 990, col: 33, offset: 41202},
														expr: &choiceExpr{
															pos: position{line: 1153, col: 7, offset: 46741},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1153, col: 7, offset: 46741},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1153, col: 13, offset: 46747},
																	run: (*parser).callonInlineElements100,
																	expr: &litMatcher{
																		pos:        position{line: 1153, col: 13, offset: 46747},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1161, col: 8, offset: 46843},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1157, col: 12, offset: 46803},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1157, col: 21, offset: 46812},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1159, col: 8, offset: 46832},
																expr: &anyMatcher{
																	line: 1159, col: 9, offset: 46833,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 588, col: 36, offset: 21860},
									label: "elements",
									expr: &oneOrMoreExpr{
										pos: position{line: 588, col: 45, offset: 21869},
										expr: &ruleRefExpr{
											pos:  position{line: 588, col: 46, offset: 21870},
											name: "InlineElement",
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 588, col: 62, offset: 21886},
									label: "linebreak",
									expr: &zeroOrOneExpr{
										pos: position{line: 588, col: 72, offset: 21896},
										expr: &actionExpr{
											pos: position{line: 610, col: 14, offset: 23162},
											run: (*parser).callonInlineElements112,
											expr: &seqExpr{
												pos: position{line: 610, col: 14, offset: 23162},
												exprs: []interface{}{
													&choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonInlineElements116,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 610, col: 17, offset: 23165},
														val:        "+",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 610, col: 21, offset: 23169},
														expr: &choiceExpr{
															pos: position{line: 1153, col: 7, offset: 46741},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1153, col: 7, offset: 46741},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1153, col: 13, offset: 46747},
																	run: (*parser).callonInlineElements122,
																	expr: &litMatcher{
																		pos:        position{line: 1153, col: 13, offset: 46747},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1161, col: 8, offset: 46843},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1157, col: 12, offset: 46803},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1157, col: 21, offset: 46812},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1159, col: 8, offset: 46832},
																expr: &anyMatcher{
																	line: 1159, col: 9, offset: 46833,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&zeroOrOneExpr{
									pos: position{line: 588, col: 85, offset: 21909},
									expr: &choiceExpr{
										pos: position{line: 1161, col: 8, offset: 46843},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1157, col: 12, offset: 46803},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1157, col: 21, offset: 46812},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1159, col: 8, offset: 46832},
												expr: &anyMatcher{
													line: 1159, col: 9, offset: 46833,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElement",
			pos:  position{line: 592, col: 1, offset: 22047},
			expr: &actionExpr{
				pos: position{line: 592, col: 18, offset: 22064},
				run: (*parser).callonInlineElement1,
				expr: &seqExpr{
					pos: position{line: 592, col: 18, offset: 22064},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 592, col: 18, offset: 22064},
							expr: &choiceExpr{
								pos: position{line: 1161, col: 8, offset: 46843},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1157, col: 12, offset: 46803},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1157, col: 21, offset: 46812},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1159, col: 8, offset: 46832},
										expr: &anyMatcher{
											line: 1159, col: 9, offset: 46833,
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 592, col: 23, offset: 22069},
							expr: &actionExpr{
								pos: position{line: 610, col: 14, offset: 23162},
								run: (*parser).callonInlineElement10,
								expr: &seqExpr{
									pos: position{line: 610, col: 14, offset: 23162},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonInlineElement14,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 610, col: 17, offset: 23165},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 610, col: 21, offset: 23169},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonInlineElement20,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 592, col: 34, offset: 22080},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 592, col: 43, offset: 22089},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 592, col: 43, offset: 22089},
										name: "QuotedText",
									},
									&actionExpr{
										pos: position{line: 767, col: 19, offset: 32559},
										run: (*parser).callonInlineElement30,
										expr: &seqExpr{
											pos: position{line: 767, col: 19, offset: 32559},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 767, col: 19, offset: 32559},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 767, col: 24, offset: 32564},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														run: (*parser).callonInlineElement34,
														expr: &oneOrMoreExpr{
															pos: position{line: 1139, col: 7, offset: 46459},
															expr: &seqExpr{
																pos: position{line: 1139, col: 8, offset: 46460},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1139, col: 8, offset: 46460},
																		expr: &choiceExpr{
																			pos: position{line: 1157, col: 12, offset: 46803},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 17, offset: 46469},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonInlineElement44,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 21, offset: 46473},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 22, offset: 46474},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 26, offset: 46478},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 27, offset: 46479},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 31, offset: 46483},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 32, offset: 46484},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 37, offset: 46489},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 38, offset: 46490},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 43, offset: 46495},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 44, offset: 46496},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1139, col: 48, offset: 46500,
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 767, col: 32, offset: 32572},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonInlineElement60,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 767, col: 36, offset: 32576},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 767, col: 40, offset: 32580},
													label: "label",
													expr: &actionExpr{
														pos: position{line: 773, col: 24, offset: 32782},
														run: (*parser).callonInlineElement64,
														expr: &oneOrMoreExpr{
															pos: position{line: 773, col: 24, offset: 32782},
															expr: &seqExpr{
																pos: position{line: 773, col: 25, offset: 32783},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 773, col: 25, offset: 32783},
																		expr: &litMatcher{
																			pos:        position{line: 773, col: 26, offset: 32784},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 773, col: 31, offset: 32789,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 767, col: 68, offset: 32608},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 769, col: 5, offset: 32683},
										run: (*parser).callonInlineElement71,
										expr: &seqExpr{
											pos: position{line: 769, col: 5, offset: 32683},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 769, col: 5, offset: 32683},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 769, col: 10, offset: 32688},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														run: (*parser).callonInlineElement75,
														expr: &oneOrMoreExpr{
															pos: position{line: 1139, col: 7, offset: 46459},
															expr: &seqExpr{
																pos: position{line: 1139, col: 8, offset: 46460},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1139, col: 8, offset: 46460},
																		expr: &choiceExpr{
																			pos: position{line: 1157, col: 12, offset: 46803},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 17, offset: 46469},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonInlineElement85,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 21, offset: 46473},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 22, offset: 46474},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 26, offset: 46478},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 27, offset: 46479},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 31, offset: 46483},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 32, offset: 46484},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 37, offset: 46489},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 38, offset: 46490},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 43, offset: 46495},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 44, offset: 46496},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1139, col: 48, offset: 46500,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 769, col: 18, offset: 32696},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 592, col: 73, offset: 22119},
										name: "Passthrough",
									},
									&actionExpr{
										pos: position{line: 821, col: 16, offset: 34276},
										run: (*parser).callonInlineElement100,
										expr: &seqExpr{
											pos: position{line: 821, col: 16, offset: 34276},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 821, col: 16, offset: 34276},
													val:        "image:",
													ignoreCase: false,
												},
												&notExpr{
													pos: position{line: 821, col: 25, offset: 34285},
													expr: &litMatcher{
														pos:        position{line: 821, col: 26, offset: 34286},
														val:        ":",
														ignoreCase: false,
													},
												},
												&labeledExpr{
													pos:   position{line: 821, col: 30, offset: 34290},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1135, col: 8, offset: 46389},
														run: (*parser).callonInlineElement106,
														expr: &oneOrMoreExpr{
															pos: position{line: 1135, col: 8, offset: 46389},
															expr: &seqExpr{
																pos: position{line: 1135, col: 9, offset: 46390},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1135, col: 9, offset: 46390},
																		expr: &choiceExpr{
																			pos: position{line: 1157, col: 12, offset: 46803},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1135, col: 18, offset: 46399},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonInlineElement116,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1135, col: 22, offset: 46403},
																		expr: &litMatcher{
																			pos:        position{line: 1135, col: 23, offset: 46404},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1135, col: 27, offset: 46408},
																		expr: &litMatcher{
																			pos:        position{line: 1135, col: 28, offset: 46409},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1135, col: 32, offset: 46413,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 821, col: 41, offset: 34301},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 826, col: 20, offset: 34558},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 826, col: 20, offset: 34558},
																run: (*parser).callonInlineElement125,
																expr: &seqExpr{
																	pos: position{line: 826, col: 20, offset: 34558},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 826, col: 20, offset: 34558},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 826, col: 24, offset: 34562},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonInlineElement129,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 826, col: 45, offset: 34583},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 827, col: 9, offset: 34595},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonInlineElement141,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 827, col: 33, offset: 34619},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 828, col: 9, offset: 34631},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonInlineElement153,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 828, col: 33, offset: 34655},
																			expr: &litMatcher{
																				pos:        position{line: 828, col: 33, offset: 34655},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 829, col: 9, offset: 34668},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 829, col: 20, offset: 34679},
																				expr: &choiceExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							run: (*parser).callonInlineElement168,
																							expr: &seqExpr{
																								pos: position{line: 206, col: 21, offset: 7402},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 206, col: 21, offset: 7402},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElement171,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElement174,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElement177,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElement180,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 206, col: 40, offset: 7421},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 206, col: 44, offset: 7425},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 216, col: 19, offset: 7776},
																											run: (*parser).callonInlineElement194,
																											expr: &labeledExpr{
																												pos:   position{line: 216, col: 19, offset: 7776},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 216, col: 25, offset: 7782},
																													expr: &seqExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 27, offset: 7784},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 31, offset: 7788},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 32, offset: 7789},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 36, offset: 7793},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 37, offset: 7794},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 216, col: 41, offset: 7798,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 206, col: 67, offset: 7448},
																										expr: &litMatcher{
																											pos:        position{line: 206, col: 67, offset: 7448},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 206, col: 72, offset: 7453},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElement210,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							run: (*parser).callonInlineElement212,
																							expr: &seqExpr{
																								pos: position{line: 208, col: 5, offset: 7537},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 208, col: 5, offset: 7537},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElement215,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElement218,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElement221,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElement224,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 208, col: 24, offset: 7556},
																										expr: &litMatcher{
																											pos:        position{line: 208, col: 24, offset: 7556},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 208, col: 29, offset: 7561},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElement241,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 829, col: 40, offset: 34699},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 831, col: 9, offset: 34805},
																run: (*parser).callonInlineElement244,
																expr: &seqExpr{
																	pos: position{line: 831, col: 9, offset: 34805},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 831, col: 9, offset: 34805},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 831, col: 13, offset: 34809},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonInlineElement248,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 831, col: 34, offset: 34830},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 832, col: 9, offset: 34842},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonInlineElement260,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 832, col: 32, offset: 34865},
																			expr: &litMatcher{
																				pos:        position{line: 832, col: 32, offset: 34865},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 833, col: 9, offset: 34878},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 833, col: 20, offset: 34889},
																				expr: &choiceExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							run: (*parser).callonInlineElement275,
																							expr: &seqExpr{
																								pos: position{line: 206, col: 21, offset: 7402},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 206, col: 21, offset: 7402},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElement278,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElement281,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElement284,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElement287,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 206, col: 40, offset: 7421},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 206, col: 44, offset: 7425},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 216, col: 19, offset: 7776},
																											run: (*parser).callonInlineElement301,
																											expr: &labeledExpr{
																												pos:   position{line: 216, col: 19, offset: 7776},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 216, col: 25, offset: 7782},
																													expr: &seqExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 27, offset: 7784},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 31, offset: 7788},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 32, offset: 7789},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 36, offset: 7793},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 37, offset: 7794},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 216, col: 41, offset: 7798,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 206, col: 67, offset: 7448},
																										expr: &litMatcher{
																											pos:        position{line: 206, col: 67, offset: 7448},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 206, col: 72, offset: 7453},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElement317,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							run: (*parser).callonInlineElement319,
																							expr: &seqExpr{
																								pos: position{line: 208, col: 5, offset: 7537},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 208, col: 5, offset: 7537},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElement322,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElement325,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElement328,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElement331,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 208, col: 24, offset: 7556},
																										expr: &litMatcher{
																											pos:        position{line: 208, col: 24, offset: 7556},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 208, col: 29, offset: 7561},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElement348,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 833, col: 40, offset: 34909},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 835, col: 9, offset: 35012},
																run: (*parser).callonInlineElement351,
																expr: &seqExpr{
																	pos: position{line: 835, col: 9, offset: 35012},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 835, col: 9, offset: 35012},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 835, col: 13, offset: 35016},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonInlineElement355,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 835, col: 34, offset: 35037},
																			expr: &litMatcher{
																				pos:        position{line: 835, col: 34, offset: 35037},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 836, col: 9, offset: 35050},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 836, col: 20, offset: 35061},
																				expr: &choiceExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							run: (*parser).callonInlineElement370,
																							expr: &seqExpr{
																								pos: position{line: 206, col: 21, offset: 7402},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 206, col: 21, offset: 7402},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElement373,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElement376,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElement379,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElement382,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 206, col: 40, offset: 7421},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 206, col: 44, offset: 7425},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 216, col: 19, offset: 7776},
																											run: (*parser).callonInlineElement396,
																											expr: &labeledExpr{
																												pos:   position{line: 216, col: 19, offset: 7776},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 216, col: 25, offset: 7782},
																													expr: &seqExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 27, offset: 7784},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 31, offset: 7788},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 32, offset: 7789},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 36, offset: 7793},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 37, offset: 7794},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 216, col: 41, offset: 7798,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 206, col: 67, offset: 7448},
																										expr: &litMatcher{
																											pos:        position{line: 206, col: 67, offset: 7448},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 206, col: 72, offset: 7453},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElement412,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							run: (*parser).callonInlineElement414,
																							expr: &seqExpr{
																								pos: position{line: 208, col: 5, offset: 7537},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 208, col: 5, offset: 7537},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElement417,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElement420,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElement423,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElement426,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 208, col: 24, offset: 7556},
																										expr: &litMatcher{
																											pos:        position{line: 208, col: 24, offset: 7556},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 208, col: 29, offset: 7561},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElement443,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 836, col: 40, offset: 35081},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 838, col: 9, offset: 35182},
																run: (*parser).callonInlineElement446,
																expr: &seqExpr{
																	pos: position{line: 838, col: 9, offset: 35182},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 838, col: 9, offset: 35182},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 838, col: 13, offset: 35186},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 838, col: 24, offset: 35197},
																				expr: &choiceExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							run: (*parser).callonInlineElement452,
																							expr: &seqExpr{
																								pos: position{line: 206, col: 21, offset: 7402},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 206, col: 21, offset: 7402},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElement455,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElement458,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElement461,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElement464,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 206, col: 40, offset: 7421},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 206, col: 44, offset: 7425},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 216, col: 19, offset: 7776},
																											run: (*parser).callonInlineElement478,
																											expr: &labeledExpr{
																												pos:   position{line: 216, col: 19, offset: 7776},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 216, col: 25, offset: 7782},
																													expr: &seqExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 27, offset: 7784},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 31, offset: 7788},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 32, offset: 7789},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 36, offset: 7793},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 37, offset: 7794},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 216, col: 41, offset: 7798,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 206, col: 67, offset: 7448},
																										expr: &litMatcher{
																											pos:        position{line: 206, col: 67, offset: 7448},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 206, col: 72, offset: 7453},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElement494,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							run: (*parser).callonInlineElement496,
																							expr: &seqExpr{
																								pos: position{line: 208, col: 5, offset: 7537},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 208, col: 5, offset: 7537},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElement499,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElement502,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElement505,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElement508,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 208, col: 24, offset: 7556},
																										expr: &litMatcher{
																											pos:        position{line: 208, col: 24, offset: 7556},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 208, col: 29, offset: 7561},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElement525,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 838, col: 44, offset: 35217},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 780, col: 9, offset: 32938},
										run: (*parser).callonInlineElement528,
										expr: &labeledExpr{
											pos:   position{line: 780, col: 9, offset: 32938},
											label: "link",
											expr: &choiceExpr{
												pos: position{line: 780, col: 15, offset: 32944},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 795, col: 17, offset: 33396},
														run: (*parser).callonInlineElement531,
														expr: &seqExpr{
															pos: position{line: 795, col: 17, offset: 33396},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 795, col: 17, offset: 33396},
																	val:        "link:",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 795, col: 25, offset: 33404},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 799, col: 20, offset: 33573},
																		run: (*parser).callonInlineElement535,
																		expr: &seqExpr{
																			pos: position{line: 799, col: 20, offset: 33573},
																			exprs: []interface{}{
																				&zeroOrOneExpr{
																					pos: position{line: 799, col: 20, offset: 33573},
																					expr: &choiceExpr{
																						pos: position{line: 1147, col: 15, offset: 46626},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1147, col: 15, offset: 46626},
																								val:        "http://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1147, col: 27, offset: 46638},
																								val:        "https://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1147, col: 40, offset: 46651},
																								val:        "ftp://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1147, col: 51, offset: 46662},
																								val:        "irc://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1147, col: 62, offset: 46673},
																								val:        "mailto:",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1135, col: 8, offset: 46389},
																					run: (*parser).callonInlineElement544,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1135, col: 8, offset: 46389},
																						expr: &seqExpr{
																							pos: position{line: 1135, col: 9, offset: 46390},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1135, col: 9, offset: 46390},
																									expr: &choiceExpr{
																										pos: position{line: 1157, col: 12, offset: 46803},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1157, col: 12, offset: 46803},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1157, col: 21, offset: 46812},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1135, col: 18, offset: 46399},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonInlineElement554,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1135, col: 22, offset: 46403},
																									expr: &litMatcher{
																										pos:        position{line: 1135, col: 23, offset: 46404},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1135, col: 27, offset: 46408},
																									expr: &litMatcher{
																										pos:        position{line: 1135, col: 28, offset: 46409},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1135, col: 32, offset: 46413,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 795, col: 47, offset: 33426},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 803, col: 19, offset: 33643},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 803, col: 19, offset: 33643},
																				run: (*parser).callonInlineElement563,
																				expr: &seqExpr{
																					pos: position{line: 803, col: 19, offset: 33643},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 803, col: 19, offset: 33643},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 803, col: 23, offset: 33647},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 810, col: 22, offset: 33935},
																								run: (*parser).callonInlineElement567,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 810, col: 22, offset: 33935},
																									expr: &seqExpr{
																										pos: position{line: 810, col: 23, offset: 33936},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 810, col: 23, offset: 33936},
																												expr: &litMatcher{
																													pos:        position{line: 810, col: 24, offset: 33937},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 810, col: 28, offset: 33941},
																												expr: &litMatcher{
																													pos:        position{line: 810, col: 29, offset: 33942},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 810, col: 33, offset: 33946,
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 804, col: 9, offset: 33680},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 804, col: 20, offset: 33691},
																								expr: &choiceExpr{
																									pos: position{line: 206, col: 21, offset: 7402},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 206, col: 21, offset: 7402},
																											run: (*parser).callonInlineElement578,
																											expr: &seqExpr{
																												pos: position{line: 206, col: 21, offset: 7402},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 206, col: 21, offset: 7402},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElement581,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElement584,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElement587,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElement590,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 206, col: 40, offset: 7421},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 206, col: 44, offset: 7425},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 216, col: 19, offset: 7776},
																															run: (*parser).callonInlineElement604,
																															expr: &labeledExpr{
																																pos:   position{line: 216, col: 19, offset: 7776},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 216, col: 25, offset: 7782},
																																	expr: &seqExpr{
																																		pos: position{line: 216, col: 26, offset: 7783},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 216, col: 26, offset: 7783},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 27, offset: 7784},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 31, offset: 7788},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 32, offset: 7789},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 36, offset: 7793},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 37, offset: 7794},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 216, col: 41, offset: 7798,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 206, col: 67, offset: 7448},
																														expr: &litMatcher{
																															pos:        position{line: 206, col: 67, offset: 7448},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 206, col: 72, offset: 7453},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElement620,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 208, col: 5, offset: 7537},
																											run: (*parser).callonInlineElement622,
																											expr: &seqExpr{
																												pos: position{line: 208, col: 5, offset: 7537},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 208, col: 5, offset: 7537},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElement625,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElement628,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElement631,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElement634,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 208, col: 24, offset: 7556},
																														expr: &litMatcher{
																															pos:        position{line: 208, col: 24, offset: 7556},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 208, col: 29, offset: 7561},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElement651,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 804, col: 40, offset: 33711},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 806, col: 5, offset: 33796},
																				run: (*parser).callonInlineElement654,
																				expr: &seqExpr{
																					pos: position{line: 806, col: 5, offset: 33796},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 806, col: 5, offset: 33796},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 806, col: 9, offset: 33800},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 806, col: 20, offset: 33811},
																								expr: &choiceExpr{
																									pos: position{line: 206, col: 21, offset: 7402},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 206, col: 21, offset: 7402},
																											run: (*parser).callonInlineElement660,
																											expr: &seqExpr{
																												pos: position{line: 206, col: 21, offset: 7402},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 206, col: 21, offset: 7402},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElement663,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElement666,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElement669,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElement672,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 206, col: 40, offset: 7421},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 206, col: 44, offset: 7425},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 216, col: 19, offset: 7776},
																															run: (*parser).callonInlineElement686,
																															expr: &labeledExpr{
																																pos:   position{line: 216, col: 19, offset: 7776},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 216, col: 25, offset: 7782},
																																	expr: &seqExpr{
																																		pos: position{line: 216, col: 26, offset: 7783},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 216, col: 26, offset: 7783},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 27, offset: 7784},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 31, offset: 7788},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 32, offset: 7789},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 36, offset: 7793},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 37, offset: 7794},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 216, col: 41, offset: 7798,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 206, col: 67, offset: 7448},
																														expr: &litMatcher{
																															pos:        position{line: 206, col: 67, offset: 7448},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 206, col: 72, offset: 7453},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElement702,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 208, col: 5, offset: 7537},
																											run: (*parser).callonInlineElement704,
																											expr: &seqExpr{
																												pos: position{line: 208, col: 5, offset: 7537},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 208, col: 5, offset: 7537},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElement707,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElement710,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElement713,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElement716,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 208, col: 24, offset: 7556},
																														expr: &litMatcher{
																															pos:        position{line: 208, col: 24, offset: 7556},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 208, col: 29, offset: 7561},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElement733,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 806, col: 40, offset: 33831},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 784, col: 17, offset: 33015},
														run: (*parser).callonInlineElement736,
														expr: &seqExpr{
															pos: position{line: 784, col: 17, offset: 33015},
															exprs: []interface{}{
																&labeledExpr{
																	pos:   position{line: 784, col: 17, offset: 33015},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 790, col: 20, offset: 33262},
																		run: (*parser).callonInlineElement739,
																		expr: &seqExpr{
																			pos: position{line: 790, col: 20, offset: 33262},
																			exprs: []interface{}{
																				&choiceExpr{
																					pos: position{line: 1147, col: 15, offset: 46626},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1147, col: 15, offset: 46626},
																							val:        "http://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1147, col: 27, offset: 46638},
																							val:        "https://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1147, col: 40, offset: 46651},
																							val:        "ftp://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1147, col: 51, offset: 46662},
																							val:        "irc://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1147, col: 62, offset: 46673},
																							val:        "mailto:",
																							ignoreCase: false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1135, col: 8, offset: 46389},
																					run: (*parser).callonInlineElement747,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1135, col: 8, offset: 46389},
																						expr: &seqExpr{
																							pos: position{line: 1135, col: 9, offset: 46390},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1135, col: 9, offset: 46390},
																									expr: &choiceExpr{
																										pos: position{line: 1157, col: 12, offset: 46803},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1157, col: 12, offset: 46803},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1157, col: 21, offset: 46812},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1135, col: 18, offset: 46399},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonInlineElement757,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1135, col: 22, offset: 46403},
																									expr: &litMatcher{
																										pos:        position{line: 1135, col: 23, offset: 46404},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1135, col: 27, offset: 46408},
																									expr: &litMatcher{
																										pos:        position{line: 1135, col: 28, offset: 46409},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1135, col: 32, offset: 46413,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 784, col: 39, offset: 33037},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 803, col: 19, offset: 33643},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 803, col: 19, offset: 33643},
																				run: (*parser).callonInlineElement766,
																				expr: &seqExpr{
																					pos: position{line: 803, col: 19, offset: 33643},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 803, col: 19, offset: 33643},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 803, col: 23, offset: 33647},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 810, col: 22, offset: 33935},
																								run: (*parser).callonInlineElement770,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 810, col: 22, offset: 33935},
																									expr: &seqExpr{
																										pos: position{line: 810, col: 23, offset: 33936},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 810, col: 23, offset: 33936},
																												expr: &litMatcher{
																													pos:        position{line: 810, col: 24, offset: 33937},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 810, col: 28, offset: 33941},
																												expr: &litMatcher{
																													pos:        position{line: 810, col: 29, offset: 33942},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 810, col: 33, offset: 33946,
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 804, col: 9, offset: 33680},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 804, col: 20, offset: 33691},
																								expr: &choiceExpr{
																									pos: position{line: 206, col: 21, offset: 7402},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 206, col: 21, offset: 7402},
																											run: (*parser).callonInlineElement781,
																											expr: &seqExpr{
																												pos: position{line: 206, col: 21, offset: 7402},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 206, col: 21, offset: 7402},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElement784,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElement787,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElement790,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElement793,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 206, col: 40, offset: 7421},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 206, col: 44, offset: 7425},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 216, col: 19, offset: 7776},
																															run: (*parser).callonInlineElement807,
																															expr: &labeledExpr{
																																pos:   position{line: 216, col: 19, offset: 7776},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 216, col: 25, offset: 7782},
																																	expr: &seqExpr{
																																		pos: position{line: 216, col: 26, offset: 7783},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 216, col: 26, offset: 7783},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 27, offset: 7784},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 31, offset: 7788},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 32, offset: 7789},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 36, offset: 7793},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 37, offset: 7794},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 216, col: 41, offset: 7798,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 206, col: 67, offset: 7448},
																														expr: &litMatcher{
																															pos:        position{line: 206, col: 67, offset: 7448},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 206, col: 72, offset: 7453},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElement823,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 208, col: 5, offset: 7537},
																											run: (*parser).callonInlineElement825,
																											expr: &seqExpr{
																												pos: position{line: 208, col: 5, offset: 7537},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 208, col: 5, offset: 7537},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElement828,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElement831,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElement834,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElement837,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 208, col: 24, offset: 7556},
																														expr: &litMatcher{
																															pos:        position{line: 208, col: 24, offset: 7556},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 208, col: 29, offset: 7561},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElement854,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 804, col: 40, offset: 33711},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 806, col: 5, offset: 33796},
																				run: (*parser).callonInlineElement857,
																				expr: &seqExpr{
																					pos: position{line: 806, col: 5, offset: 33796},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 806, col: 5, offset: 33796},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 806, col: 9, offset: 33800},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 806, col: 20, offset: 33811},
																								expr: &choiceExpr{
																									pos: position{line: 206, col: 21, offset: 7402},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 206, col: 21, offset: 7402},
																											run: (*parser).callonInlineElement863,
																											expr: &seqExpr{
																												pos: position{line: 206, col: 21, offset: 7402},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 206, col: 21, offset: 7402},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElement866,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElement869,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElement872,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElement875,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 206, col: 40, offset: 7421},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 206, col: 44, offset: 7425},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 216, col: 19, offset: 7776},
																															run: (*parser).callonInlineElement889,
																															expr: &labeledExpr{
																																pos:   position{line: 216, col: 19, offset: 7776},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 216, col: 25, offset: 7782},
																																	expr: &seqExpr{
																																		pos: position{line: 216, col: 26, offset: 7783},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 216, col: 26, offset: 7783},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 27, offset: 7784},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 31, offset: 7788},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 32, offset: 7789},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 36, offset: 7793},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 37, offset: 7794},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 216, col: 41, offset: 7798,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 206, col: 67, offset: 7448},
																														expr: &litMatcher{
																															pos:        position{line: 206, col: 67, offset: 7448},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 206, col: 72, offset: 7453},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElement905,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 208, col: 5, offset: 7537},
																											run: (*parser).callonInlineElement907,
																											expr: &seqExpr{
																												pos: position{line: 208, col: 5, offset: 7537},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 208, col: 5, offset: 7537},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElement910,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElement913,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElement916,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElement919,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 208, col: 24, offset: 7556},
																														expr: &litMatcher{
																															pos:        position{line: 208, col: 24, offset: 7556},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 208, col: 29, offset: 7561},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElement936,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 806, col: 40, offset: 33831},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 786, col: 5, offset: 33166},
														run: (*parser).callonInlineElement939,
														expr: &labeledExpr{
															pos:   position{line: 786, col: 5, offset: 33166},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 790, col: 20, offset: 33262},
																run: (*parser).callonInlineElement941,
																expr: &seqExpr{
																	pos: position{line: 790, col: 20, offset: 33262},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1147, col: 15, offset: 46626},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1147, col: 15, offset: 46626},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1147, col: 27, offset: 46638},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1147, col: 40, offset: 46651},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1147, col: 51, offset: 46662},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1147, col: 62, offset: 46673},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1135, col: 8, offset: 46389},
																			run: (*parser).callonInlineElement949,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1135, col: 8, offset: 46389},
																				expr: &seqExpr{
																					pos: position{line: 1135, col: 9, offset: 46390},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1135, col: 9, offset: 46390},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1135, col: 18, offset: 46399},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonInlineElement959,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1135, col: 22, offset: 46403},
																							expr: &litMatcher{
																								pos:        position{line: 1135, col: 23, offset: 46404},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1135, col: 27, offset: 46408},
																							expr: &litMatcher{
																								pos:        position{line: 1135, col: 28, offset: 46409},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1135, col: 32, offset: 46413,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 109, col: 34, offset: 4042},
										run: (*parser).callonInlineElement966,
										expr: &seqExpr{
											pos: position{line: 109, col: 34, offset: 4042},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 109, col: 34, offset: 4042},
													val:        "{",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 109, col: 38, offset: 4046},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 116, col: 26, offset: 4341},
														run: (*parser).callonInlineElement970,
														expr: &seqExpr{
															pos: position{line: 116, col: 26, offset: 4341},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 116, col: 27, offset: 4342},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 116, col: 56, offset: 4371},
																	expr: &charClassMatcher{
																		pos:        position{line: 116, col: 57, offset: 4372},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 109, col: 67, offset: 4075},
													val:        "}",
													ignoreCase: false,
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 592, col: 140, offset: 22186},
										name: "InlineFootnote",
									},
									&actionExpr{
										pos: position{line: 167, col: 20, offset: 6064},
										run: (*parser).callonInlineElement977,
										expr: &seqExpr{
											pos: position{line: 167, col: 20, offset: 6064},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 167, col: 20, offset: 6064},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 167, col: 25, offset: 6069},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														run: (*parser).callonInlineElement981,
														expr: &oneOrMoreExpr{
															pos: position{line: 1139, col: 7, offset: 46459},
															expr: &seqExpr{
																pos: position{line: 1139, col: 8, offset: 46460},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1139, col: 8, offset: 46460},
																		expr: &choiceExpr{
																			pos: position{line: 1157, col: 12, offset: 46803},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 17, offset: 46469},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonInlineElement991,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 21, offset: 46473},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 22, offset: 46474},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 26, offset: 46478},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 27, offset: 46479},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 31, offset: 46483},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 32, offset: 46484},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 37, offset: 46489},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 38, offset: 46490},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 43, offset: 46495},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 44, offset: 46496},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1139, col: 48, offset: 46500,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 167, col: 33, offset: 6077},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 167, col: 38, offset: 6082},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonInlineElement1008,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
									&charClassMatcher{
										pos:        position{line: 1129, col: 16, offset: 46121},
										val:        "[()[]]",
										chars:      []rune{'(', ')', '[', ']'},
										ignoreCase: false,
										inverted:   false,
									},
									&actionExpr{
										pos: position{line: 610, col: 14, offset: 23162},
										run: (*parser).callonInlineElement1011,
										expr: &seqExpr{
											pos: position{line: 610, col: 14, offset: 23162},
											exprs: []interface{}{
												&choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonInlineElement1015,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 610, col: 17, offset: 23165},
													val:        "+",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 610, col: 21, offset: 23169},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonInlineElement1021,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1161, col: 8, offset: 46843},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 592, col: 201, offset: 22247},
										name: "Word",
									},
									&zeroOrMoreExpr{
										pos: position{line: 592, col: 208, offset: 22254},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonInlineElement1032,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementsWithoutSubtitution",
			pos:  position{line: 599, col: 1, offset: 22508},
			expr: &actionExpr{
				pos: position{line: 599, col: 37, offset: 22544},
				run: (*parser).callonInlineElementsWithoutSubtitution1,
				expr: &seqExpr{
					pos: position{line: 599, col: 37, offset: 22544},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 599, col: 37, offset: 22544},
							expr: &actionExpr{
								pos: position{line: 1120, col: 14, offset: 45925},
								run: (*parser).callonInlineElementsWithoutSubtitution4,
								expr: &seqExpr{
									pos: position{line: 1120, col: 14, offset: 45925},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1120, col: 14, offset: 45925},
											expr: &notExpr{
												pos: position{line: 1159, col: 8, offset: 46832},
												expr: &anyMatcher{
													line: 1159, col: 9, offset: 46833,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1120, col: 19, offset: 45930},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonInlineElementsWithoutSubtitution12,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 599, col: 48, offset: 22555},
							expr: &choiceExpr{
								pos: position{line: 878, col: 19, offset: 36856},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1057, col: 26, offset: 43657},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 890, col: 25, offset: 37341},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 890, col: 25, offset: 37341},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 890, col: 31, offset: 37347},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonInlineElementsWithoutSubtitution27,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 901, col: 26, offset: 37820},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 901, col: 26, offset: 37820},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 901, col: 33, offset: 37827},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonInlineElementsWithoutSubtitution39,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 923, col: 26, offset: 38725},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 923, col: 26, offset: 38725},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 923, col: 33, offset: 38732},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonInlineElementsWithoutSubtitution51,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 1033, col: 26, offset: 42712},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 946, col: 24, offset: 39550},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 946, col: 24, offset: 39550},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 946, col: 31, offset: 39557},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonInlineElementsWithoutSubtitution64,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 990, col: 26, offset: 41195},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 990, col: 26, offset: 41195},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 990, col: 33, offset: 41202},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonInlineElementsWithoutSubtitution76,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 599, col: 64, offset: 22571},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 599, col: 73, offset: 22580},
								expr: &ruleRefExpr{
									pos:  position{line: 599, col: 74, offset: 22581},
									name: "InlineElementWithoutSubtitution",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 599, col: 108, offset: 22615},
							label: "linebreak",
							expr: &zeroOrOneExpr{
								pos: position{line: 599, col: 118, offset: 22625},
								expr: &actionExpr{
									pos: position{line: 610, col: 14, offset: 23162},
									run: (*parser).callonInlineElementsWithoutSubtitution88,
									expr: &seqExpr{
										pos: position{line: 610, col: 14, offset: 23162},
										exprs: []interface{}{
											&choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonInlineElementsWithoutSubtitution92,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 610, col: 17, offset: 23165},
												val:        "+",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 610, col: 21, offset: 23169},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonInlineElementsWithoutSubtitution98,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&zeroOrOneExpr{
							pos: position{line: 599, col: 131, offset: 22638},
							expr: &choiceExpr{
								pos: position{line: 1161, col: 8, offset: 46843},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1157, col: 12, offset: 46803},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1157, col: 21, offset: 46812},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1159, col: 8, offset: 46832},
										expr: &anyMatcher{
											line: 1159, col: 9, offset: 46833,
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementWithoutSubtitution",
			pos:  position{line: 603, col: 1, offset: 22768},
			expr: &actionExpr{
				pos: position{line: 603, col: 36, offset: 22803},
				run: (*parser).callonInlineElementWithoutSubtitution1,
				expr: &seqExpr{
					pos: position{line: 603, col: 36, offset: 22803},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 603, col: 36, offset: 22803},
							expr: &choiceExpr{
								pos: position{line: 1161, col: 8, offset: 46843},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1157, col: 12, offset: 46803},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1157, col: 21, offset: 46812},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1159, col: 8, offset: 46832},
										expr: &anyMatcher{
											line: 1159, col: 9, offset: 46833,
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 603, col: 41, offset: 22808},
							expr: &actionExpr{
								pos: position{line: 610, col: 14, offset: 23162},
								run: (*parser).callonInlineElementWithoutSubtitution10,
								expr: &seqExpr{
									pos: position{line: 610, col: 14, offset: 23162},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonInlineElementWithoutSubtitution14,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 610, col: 17, offset: 23165},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 610, col: 21, offset: 23169},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonInlineElementWithoutSubtitution20,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 603, col: 52, offset: 22819},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 603, col: 61, offset: 22828},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 603, col: 61, offset: 22828},
										name: "QuotedText",
									},
									&actionExpr{
										pos: position{line: 767, col: 19, offset: 32559},
										run: (*parser).callonInlineElementWithoutSubtitution30,
										expr: &seqExpr{
											pos: position{line: 767, col: 19, offset: 32559},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 767, col: 19, offset: 32559},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 767, col: 24, offset: 32564},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														run: (*parser).callonInlineElementWithoutSubtitution34,
														expr: &oneOrMoreExpr{
															pos: position{line: 1139, col: 7, offset: 46459},
															expr: &seqExpr{
																pos: position{line: 1139, col: 8, offset: 46460},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1139, col: 8, offset: 46460},
																		expr: &choiceExpr{
																			pos: position{line: 1157, col: 12, offset: 46803},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 17, offset: 46469},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonInlineElementWithoutSubtitution44,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 21, offset: 46473},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 22, offset: 46474},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 26, offset: 46478},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 27, offset: 46479},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 31, offset: 46483},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 32, offset: 46484},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 37, offset: 46489},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 38, offset: 46490},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 43, offset: 46495},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 44, offset: 46496},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1139, col: 48, offset: 46500,
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 767, col: 32, offset: 32572},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonInlineElementWithoutSubtitution60,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 767, col: 36, offset: 32576},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 767, col: 40, offset: 32580},
													label: "label",
													expr: &actionExpr{
														pos: position{line: 773, col: 24, offset: 32782},
														run: (*parser).callonInlineElementWithoutSubtitution64,
														expr: &oneOrMoreExpr{
															pos: position{line: 773, col: 24, offset: 32782},
															expr: &seqExpr{
																pos: position{line: 773, col: 25, offset: 32783},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 773, col: 25, offset: 32783},
																		expr: &litMatcher{
																			pos:        position{line: 773, col: 26, offset: 32784},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 773, col: 31, offset: 32789,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 767, col: 68, offset: 32608},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 769, col: 5, offset: 32683},
										run: (*parser).callonInlineElementWithoutSubtitution71,
										expr: &seqExpr{
											pos: position{line: 769, col: 5, offset: 32683},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 769, col: 5, offset: 32683},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 769, col: 10, offset: 32688},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														run: (*parser).callonInlineElementWithoutSubtitution75,
														expr: &oneOrMoreExpr{
															pos: position{line: 1139, col: 7, offset: 46459},
															expr: &seqExpr{
																pos: position{line: 1139, col: 8, offset: 46460},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1139, col: 8, offset: 46460},
																		expr: &choiceExpr{
																			pos: position{line: 1157, col: 12, offset: 46803},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 17, offset: 46469},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonInlineElementWithoutSubtitution85,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 21, offset: 46473},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 22, offset: 46474},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 26, offset: 46478},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 27, offset: 46479},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 31, offset: 46483},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 32, offset: 46484},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 37, offset: 46489},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 38, offset: 46490},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 43, offset: 46495},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 44, offset: 46496},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1139, col: 48, offset: 46500,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 769, col: 18, offset: 32696},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 603, col: 91, offset: 22858},
										name: "Passthrough",
									},
									&actionExpr{
										pos: position{line: 821, col: 16, offset: 34276},
										run: (*parser).callonInlineElementWithoutSubtitution100,
										expr: &seqExpr{
											pos: position{line: 821, col: 16, offset: 34276},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 821, col: 16, offset: 34276},
													val:        "image:",
													ignoreCase: false,
												},
												&notExpr{
													pos: position{line: 821, col: 25, offset: 34285},
													expr: &litMatcher{
														pos:        position{line: 821, col: 26, offset: 34286},
														val:        ":",
														ignoreCase: false,
													},
												},
												&labeledExpr{
													pos:   position{line: 821, col: 30, offset: 34290},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1135, col: 8, offset: 46389},
														run: (*parser).callonInlineElementWithoutSubtitution106,
														expr: &oneOrMoreExpr{
															pos: position{line: 1135, col: 8, offset: 46389},
															expr: &seqExpr{
																pos: position{line: 1135, col: 9, offset: 46390},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1135, col: 9, offset: 46390},
																		expr: &choiceExpr{
																			pos: position{line: 1157, col: 12, offset: 46803},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1135, col: 18, offset: 46399},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonInlineElementWithoutSubtitution116,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1135, col: 22, offset: 46403},
																		expr: &litMatcher{
																			pos:        position{line: 1135, col: 23, offset: 46404},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1135, col: 27, offset: 46408},
																		expr: &litMatcher{
																			pos:        position{line: 1135, col: 28, offset: 46409},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1135, col: 32, offset: 46413,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 821, col: 41, offset: 34301},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 826, col: 20, offset: 34558},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 826, col: 20, offset: 34558},
																run: (*parser).callonInlineElementWithoutSubtitution125,
																expr: &seqExpr{
																	pos: position{line: 826, col: 20, offset: 34558},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 826, col: 20, offset: 34558},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 826, col: 24, offset: 34562},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonInlineElementWithoutSubtitution129,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 826, col: 45, offset: 34583},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 827, col: 9, offset: 34595},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonInlineElementWithoutSubtitution141,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 827, col: 33, offset: 34619},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 828, col: 9, offset: 34631},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonInlineElementWithoutSubtitution153,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 828, col: 33, offset: 34655},
																			expr: &litMatcher{
																				pos:        position{line: 828, col: 33, offset: 34655},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 829, col: 9, offset: 34668},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 829, col: 20, offset: 34679},
																				expr: &choiceExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							run: (*parser).callonInlineElementWithoutSubtitution168,
																							expr: &seqExpr{
																								pos: position{line: 206, col: 21, offset: 7402},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 206, col: 21, offset: 7402},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElementWithoutSubtitution171,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElementWithoutSubtitution174,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElementWithoutSubtitution177,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElementWithoutSubtitution180,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 206, col: 40, offset: 7421},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 206, col: 44, offset: 7425},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 216, col: 19, offset: 7776},
																											run: (*parser).callonInlineElementWithoutSubtitution194,
																											expr: &labeledExpr{
																												pos:   position{line: 216, col: 19, offset: 7776},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 216, col: 25, offset: 7782},
																													expr: &seqExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 27, offset: 7784},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 31, offset: 7788},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 32, offset: 7789},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 36, offset: 7793},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 37, offset: 7794},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 216, col: 41, offset: 7798,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 206, col: 67, offset: 7448},
																										expr: &litMatcher{
																											pos:        position{line: 206, col: 67, offset: 7448},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 206, col: 72, offset: 7453},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElementWithoutSubtitution210,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							run: (*parser).callonInlineElementWithoutSubtitution212,
																							expr: &seqExpr{
																								pos: position{line: 208, col: 5, offset: 7537},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 208, col: 5, offset: 7537},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElementWithoutSubtitution215,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElementWithoutSubtitution218,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElementWithoutSubtitution221,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElementWithoutSubtitution224,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 208, col: 24, offset: 7556},
																										expr: &litMatcher{
																											pos:        position{line: 208, col: 24, offset: 7556},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 208, col: 29, offset: 7561},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElementWithoutSubtitution241,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 829, col: 40, offset: 34699},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 831, col: 9, offset: 34805},
																run: (*parser).callonInlineElementWithoutSubtitution244,
																expr: &seqExpr{
																	pos: position{line: 831, col: 9, offset: 34805},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 831, col: 9, offset: 34805},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 831, col: 13, offset: 34809},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonInlineElementWithoutSubtitution248,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 831, col: 34, offset: 34830},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 832, col: 9, offset: 34842},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonInlineElementWithoutSubtitution260,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 832, col: 32, offset: 34865},
																			expr: &litMatcher{
																				pos:        position{line: 832, col: 32, offset: 34865},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 833, col: 9, offset: 34878},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 833, col: 20, offset: 34889},
																				expr: &choiceExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							run: (*parser).callonInlineElementWithoutSubtitution275,
																							expr: &seqExpr{
																								pos: position{line: 206, col: 21, offset: 7402},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 206, col: 21, offset: 7402},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElementWithoutSubtitution278,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElementWithoutSubtitution281,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElementWithoutSubtitution284,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElementWithoutSubtitution287,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 206, col: 40, offset: 7421},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 206, col: 44, offset: 7425},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 216, col: 19, offset: 7776},
																											run: (*parser).callonInlineElementWithoutSubtitution301,
																											expr: &labeledExpr{
																												pos:   position{line: 216, col: 19, offset: 7776},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 216, col: 25, offset: 7782},
																													expr: &seqExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 27, offset: 7784},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 31, offset: 7788},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 32, offset: 7789},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 36, offset: 7793},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 37, offset: 7794},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 216, col: 41, offset: 7798,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 206, col: 67, offset: 7448},
																										expr: &litMatcher{
																											pos:        position{line: 206, col: 67, offset: 7448},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 206, col: 72, offset: 7453},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElementWithoutSubtitution317,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							run: (*parser).callonInlineElementWithoutSubtitution319,
																							expr: &seqExpr{
																								pos: position{line: 208, col: 5, offset: 7537},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 208, col: 5, offset: 7537},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElementWithoutSubtitution322,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElementWithoutSubtitution325,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElementWithoutSubtitution328,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElementWithoutSubtitution331,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 208, col: 24, offset: 7556},
																										expr: &litMatcher{
																											pos:        position{line: 208, col: 24, offset: 7556},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 208, col: 29, offset: 7561},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElementWithoutSubtitution348,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 833, col: 40, offset: 34909},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 835, col: 9, offset: 35012},
																run: (*parser).callonInlineElementWithoutSubtitution351,
																expr: &seqExpr{
																	pos: position{line: 835, col: 9, offset: 35012},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 835, col: 9, offset: 35012},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 835, col: 13, offset: 35016},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 843, col: 19, offset: 35337},
																				run: (*parser).callonInlineElementWithoutSubtitution355,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 843, col: 19, offset: 35337},
																					expr: &seqExpr{
																						pos: position{line: 843, col: 20, offset: 35338},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 843, col: 20, offset: 35338},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 21, offset: 35339},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 25, offset: 35343},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 26, offset: 35344},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 843, col: 30, offset: 35348},
																								expr: &litMatcher{
																									pos:        position{line: 843, col: 31, offset: 35349},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 843, col: 35, offset: 35353,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 835, col: 34, offset: 35037},
																			expr: &litMatcher{
																				pos:        position{line: 835, col: 34, offset: 35037},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 836, col: 9, offset: 35050},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 836, col: 20, offset: 35061},
																				expr: &choiceExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							run: (*parser).callonInlineElementWithoutSubtitution370,
																							expr: &seqExpr{
																								pos: position{line: 206, col: 21, offset: 7402},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 206, col: 21, offset: 7402},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElementWithoutSubtitution373,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElementWithoutSubtitution376,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElementWithoutSubtitution379,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElementWithoutSubtitution382,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 206, col: 40, offset: 7421},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 206, col: 44, offset: 7425},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 216, col: 19, offset: 7776},
																											run: (*parser).callonInlineElementWithoutSubtitution396,
																											expr: &labeledExpr{
																												pos:   position{line: 216, col: 19, offset: 7776},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 216, col: 25, offset: 7782},
																													expr: &seqExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 27, offset: 7784},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 31, offset: 7788},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 32, offset: 7789},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 36, offset: 7793},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 37, offset: 7794},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 216, col: 41, offset: 7798,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 206, col: 67, offset: 7448},
																										expr: &litMatcher{
																											pos:        position{line: 206, col: 67, offset: 7448},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 206, col: 72, offset: 7453},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElementWithoutSubtitution412,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							run: (*parser).callonInlineElementWithoutSubtitution414,
																							expr: &seqExpr{
																								pos: position{line: 208, col: 5, offset: 7537},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 208, col: 5, offset: 7537},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElementWithoutSubtitution417,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElementWithoutSubtitution420,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElementWithoutSubtitution423,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElementWithoutSubtitution426,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 208, col: 24, offset: 7556},
																										expr: &litMatcher{
																											pos:        position{line: 208, col: 24, offset: 7556},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 208, col: 29, offset: 7561},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElementWithoutSubtitution443,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 836, col: 40, offset: 35081},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 838, col: 9, offset: 35182},
																run: (*parser).callonInlineElementWithoutSubtitution446,
																expr: &seqExpr{
																	pos: position{line: 838, col: 9, offset: 35182},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 838, col: 9, offset: 35182},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 838, col: 13, offset: 35186},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 838, col: 24, offset: 35197},
																				expr: &choiceExpr{
																					pos: position{line: 206, col: 21, offset: 7402},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 206, col: 21, offset: 7402},
																							run: (*parser).callonInlineElementWithoutSubtitution452,
																							expr: &seqExpr{
																								pos: position{line: 206, col: 21, offset: 7402},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 206, col: 21, offset: 7402},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElementWithoutSubtitution455,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElementWithoutSubtitution458,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElementWithoutSubtitution461,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElementWithoutSubtitution464,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 206, col: 40, offset: 7421},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 206, col: 44, offset: 7425},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 216, col: 19, offset: 7776},
																											run: (*parser).callonInlineElementWithoutSubtitution478,
																											expr: &labeledExpr{
																												pos:   position{line: 216, col: 19, offset: 7776},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 216, col: 25, offset: 7782},
																													expr: &seqExpr{
																														pos: position{line: 216, col: 26, offset: 7783},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 216, col: 26, offset: 7783},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 27, offset: 7784},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 31, offset: 7788},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 32, offset: 7789},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 216, col: 36, offset: 7793},
																																expr: &litMatcher{
																																	pos:        position{line: 216, col: 37, offset: 7794},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 216, col: 41, offset: 7798,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 206, col: 67, offset: 7448},
																										expr: &litMatcher{
																											pos:        position{line: 206, col: 67, offset: 7448},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 206, col: 72, offset: 7453},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElementWithoutSubtitution494,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 208, col: 5, offset: 7537},
																							run: (*parser).callonInlineElementWithoutSubtitution496,
																							expr: &seqExpr{
																								pos: position{line: 208, col: 5, offset: 7537},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 208, col: 5, offset: 7537},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 17, offset: 7662},
																											run: (*parser).callonInlineElementWithoutSubtitution499,
																											expr: &seqExpr{
																												pos: position{line: 212, col: 17, offset: 7662},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 212, col: 17, offset: 7662},
																														expr: &actionExpr{
																															pos: position{line: 236, col: 14, offset: 8471},
																															run: (*parser).callonInlineElementWithoutSubtitution502,
																															expr: &litMatcher{
																																pos:        position{line: 236, col: 14, offset: 8471},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 28, offset: 7673},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9203},
																															run: (*parser).callonInlineElementWithoutSubtitution505,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9203},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 212, col: 39, offset: 7684},
																														expr: &actionExpr{
																															pos: position{line: 1099, col: 16, offset: 45385},
																															run: (*parser).callonInlineElementWithoutSubtitution508,
																															expr: &litMatcher{
																																pos:        position{line: 1099, col: 16, offset: 45385},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 212, col: 52, offset: 7697},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 212, col: 56, offset: 7701},
																															expr: &seqExpr{
																																pos: position{line: 212, col: 57, offset: 7702},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 57, offset: 7702},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 58, offset: 7703},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 62, offset: 7707},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 63, offset: 7708},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 67, offset: 7712},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 68, offset: 7713},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 72, offset: 7717,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 208, col: 24, offset: 7556},
																										expr: &litMatcher{
																											pos:        position{line: 208, col: 24, offset: 7556},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 208, col: 29, offset: 7561},
																										expr: &choiceExpr{
																											pos: position{line: 1153, col: 7, offset: 46741},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1153, col: 7, offset: 46741},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1153, col: 13, offset: 46747},
																													run: (*parser).callonInlineElementWithoutSubtitution525,
																													expr: &litMatcher{
																														pos:        position{line: 1153, col: 13, offset: 46747},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 838, col: 44, offset: 35217},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 780, col: 9, offset: 32938},
										run: (*parser).callonInlineElementWithoutSubtitution528,
										expr: &labeledExpr{
											pos:   position{line: 780, col: 9, offset: 32938},
											label: "link",
											expr: &choiceExpr{
												pos: position{line: 780, col: 15, offset: 32944},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 795, col: 17, offset: 33396},
														run: (*parser).callonInlineElementWithoutSubtitution531,
														expr: &seqExpr{
															pos: position{line: 795, col: 17, offset: 33396},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 795, col: 17, offset: 33396},
																	val:        "link:",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 795, col: 25, offset: 33404},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 799, col: 20, offset: 33573},
																		run: (*parser).callonInlineElementWithoutSubtitution535,
																		expr: &seqExpr{
																			pos: position{line: 799, col: 20, offset: 33573},
																			exprs: []interface{}{
																				&zeroOrOneExpr{
																					pos: position{line: 799, col: 20, offset: 33573},
																					expr: &choiceExpr{
																						pos: position{line: 1147, col: 15, offset: 46626},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1147, col: 15, offset: 46626},
																								val:        "http://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1147, col: 27, offset: 46638},
																								val:        "https://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1147, col: 40, offset: 46651},
																								val:        "ftp://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1147, col: 51, offset: 46662},
																								val:        "irc://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1147, col: 62, offset: 46673},
																								val:        "mailto:",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1135, col: 8, offset: 46389},
																					run: (*parser).callonInlineElementWithoutSubtitution544,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1135, col: 8, offset: 46389},
																						expr: &seqExpr{
																							pos: position{line: 1135, col: 9, offset: 46390},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1135, col: 9, offset: 46390},
																									expr: &choiceExpr{
																										pos: position{line: 1157, col: 12, offset: 46803},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1157, col: 12, offset: 46803},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1157, col: 21, offset: 46812},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1135, col: 18, offset: 46399},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonInlineElementWithoutSubtitution554,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1135, col: 22, offset: 46403},
																									expr: &litMatcher{
																										pos:        position{line: 1135, col: 23, offset: 46404},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1135, col: 27, offset: 46408},
																									expr: &litMatcher{
																										pos:        position{line: 1135, col: 28, offset: 46409},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1135, col: 32, offset: 46413,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 795, col: 47, offset: 33426},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 803, col: 19, offset: 33643},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 803, col: 19, offset: 33643},
																				run: (*parser).callonInlineElementWithoutSubtitution563,
																				expr: &seqExpr{
																					pos: position{line: 803, col: 19, offset: 33643},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 803, col: 19, offset: 33643},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 803, col: 23, offset: 33647},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 810, col: 22, offset: 33935},
																								run: (*parser).callonInlineElementWithoutSubtitution567,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 810, col: 22, offset: 33935},
																									expr: &seqExpr{
																										pos: position{line: 810, col: 23, offset: 33936},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 810, col: 23, offset: 33936},
																												expr: &litMatcher{
																													pos:        position{line: 810, col: 24, offset: 33937},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 810, col: 28, offset: 33941},
																												expr: &litMatcher{
																													pos:        position{line: 810, col: 29, offset: 33942},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 810, col: 33, offset: 33946,
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 804, col: 9, offset: 33680},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 804, col: 20, offset: 33691},
																								expr: &choiceExpr{
																									pos: position{line: 206, col: 21, offset: 7402},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 206, col: 21, offset: 7402},
																											run: (*parser).callonInlineElementWithoutSubtitution578,
																											expr: &seqExpr{
																												pos: position{line: 206, col: 21, offset: 7402},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 206, col: 21, offset: 7402},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElementWithoutSubtitution581,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElementWithoutSubtitution584,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElementWithoutSubtitution587,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElementWithoutSubtitution590,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 206, col: 40, offset: 7421},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 206, col: 44, offset: 7425},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 216, col: 19, offset: 7776},
																															run: (*parser).callonInlineElementWithoutSubtitution604,
																															expr: &labeledExpr{
																																pos:   position{line: 216, col: 19, offset: 7776},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 216, col: 25, offset: 7782},
																																	expr: &seqExpr{
																																		pos: position{line: 216, col: 26, offset: 7783},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 216, col: 26, offset: 7783},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 27, offset: 7784},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 31, offset: 7788},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 32, offset: 7789},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 36, offset: 7793},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 37, offset: 7794},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 216, col: 41, offset: 7798,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 206, col: 67, offset: 7448},
																														expr: &litMatcher{
																															pos:        position{line: 206, col: 67, offset: 7448},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 206, col: 72, offset: 7453},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElementWithoutSubtitution620,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 208, col: 5, offset: 7537},
																											run: (*parser).callonInlineElementWithoutSubtitution622,
																											expr: &seqExpr{
																												pos: position{line: 208, col: 5, offset: 7537},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 208, col: 5, offset: 7537},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElementWithoutSubtitution625,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElementWithoutSubtitution628,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElementWithoutSubtitution631,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElementWithoutSubtitution634,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 208, col: 24, offset: 7556},
																														expr: &litMatcher{
																															pos:        position{line: 208, col: 24, offset: 7556},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 208, col: 29, offset: 7561},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElementWithoutSubtitution651,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 804, col: 40, offset: 33711},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 806, col: 5, offset: 33796},
																				run: (*parser).callonInlineElementWithoutSubtitution654,
																				expr: &seqExpr{
																					pos: position{line: 806, col: 5, offset: 33796},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 806, col: 5, offset: 33796},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 806, col: 9, offset: 33800},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 806, col: 20, offset: 33811},
																								expr: &choiceExpr{
																									pos: position{line: 206, col: 21, offset: 7402},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 206, col: 21, offset: 7402},
																											run: (*parser).callonInlineElementWithoutSubtitution660,
																											expr: &seqExpr{
																												pos: position{line: 206, col: 21, offset: 7402},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 206, col: 21, offset: 7402},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElementWithoutSubtitution663,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElementWithoutSubtitution666,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElementWithoutSubtitution669,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElementWithoutSubtitution672,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 206, col: 40, offset: 7421},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 206, col: 44, offset: 7425},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 216, col: 19, offset: 7776},
																															run: (*parser).callonInlineElementWithoutSubtitution686,
																															expr: &labeledExpr{
																																pos:   position{line: 216, col: 19, offset: 7776},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 216, col: 25, offset: 7782},
																																	expr: &seqExpr{
																																		pos: position{line: 216, col: 26, offset: 7783},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 216, col: 26, offset: 7783},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 27, offset: 7784},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 31, offset: 7788},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 32, offset: 7789},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 36, offset: 7793},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 37, offset: 7794},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 216, col: 41, offset: 7798,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 206, col: 67, offset: 7448},
																														expr: &litMatcher{
																															pos:        position{line: 206, col: 67, offset: 7448},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 206, col: 72, offset: 7453},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElementWithoutSubtitution702,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 208, col: 5, offset: 7537},
																											run: (*parser).callonInlineElementWithoutSubtitution704,
																											expr: &seqExpr{
																												pos: position{line: 208, col: 5, offset: 7537},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 208, col: 5, offset: 7537},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElementWithoutSubtitution707,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElementWithoutSubtitution710,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElementWithoutSubtitution713,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElementWithoutSubtitution716,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 208, col: 24, offset: 7556},
																														expr: &litMatcher{
																															pos:        position{line: 208, col: 24, offset: 7556},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 208, col: 29, offset: 7561},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElementWithoutSubtitution733,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 806, col: 40, offset: 33831},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 784, col: 17, offset: 33015},
														run: (*parser).callonInlineElementWithoutSubtitution736,
														expr: &seqExpr{
															pos: position{line: 784, col: 17, offset: 33015},
															exprs: []interface{}{
																&labeledExpr{
																	pos:   position{line: 784, col: 17, offset: 33015},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 790, col: 20, offset: 33262},
																		run: (*parser).callonInlineElementWithoutSubtitution739,
																		expr: &seqExpr{
																			pos: position{line: 790, col: 20, offset: 33262},
																			exprs: []interface{}{
																				&choiceExpr{
																					pos: position{line: 1147, col: 15, offset: 46626},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1147, col: 15, offset: 46626},
																							val:        "http://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1147, col: 27, offset: 46638},
																							val:        "https://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1147, col: 40, offset: 46651},
																							val:        "ftp://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1147, col: 51, offset: 46662},
																							val:        "irc://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1147, col: 62, offset: 46673},
																							val:        "mailto:",
																							ignoreCase: false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1135, col: 8, offset: 46389},
																					run: (*parser).callonInlineElementWithoutSubtitution747,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1135, col: 8, offset: 46389},
																						expr: &seqExpr{
																							pos: position{line: 1135, col: 9, offset: 46390},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1135, col: 9, offset: 46390},
																									expr: &choiceExpr{
																										pos: position{line: 1157, col: 12, offset: 46803},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1157, col: 12, offset: 46803},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1157, col: 21, offset: 46812},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1135, col: 18, offset: 46399},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonInlineElementWithoutSubtitution757,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1135, col: 22, offset: 46403},
																									expr: &litMatcher{
																										pos:        position{line: 1135, col: 23, offset: 46404},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1135, col: 27, offset: 46408},
																									expr: &litMatcher{
																										pos:        position{line: 1135, col: 28, offset: 46409},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1135, col: 32, offset: 46413,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 784, col: 39, offset: 33037},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 803, col: 19, offset: 33643},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 803, col: 19, offset: 33643},
																				run: (*parser).callonInlineElementWithoutSubtitution766,
																				expr: &seqExpr{
																					pos: position{line: 803, col: 19, offset: 33643},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 803, col: 19, offset: 33643},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 803, col: 23, offset: 33647},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 810, col: 22, offset: 33935},
																								run: (*parser).callonInlineElementWithoutSubtitution770,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 810, col: 22, offset: 33935},
																									expr: &seqExpr{
																										pos: position{line: 810, col: 23, offset: 33936},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 810, col: 23, offset: 33936},
																												expr: &litMatcher{
																													pos:        position{line: 810, col: 24, offset: 33937},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 810, col: 28, offset: 33941},
																												expr: &litMatcher{
																													pos:        position{line: 810, col: 29, offset: 33942},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 810, col: 33, offset: 33946,
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 804, col: 9, offset: 33680},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 804, col: 20, offset: 33691},
																								expr: &choiceExpr{
																									pos: position{line: 206, col: 21, offset: 7402},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 206, col: 21, offset: 7402},
																											run: (*parser).callonInlineElementWithoutSubtitution781,
																											expr: &seqExpr{
																												pos: position{line: 206, col: 21, offset: 7402},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 206, col: 21, offset: 7402},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElementWithoutSubtitution784,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElementWithoutSubtitution787,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElementWithoutSubtitution790,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElementWithoutSubtitution793,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 206, col: 40, offset: 7421},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 206, col: 44, offset: 7425},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 216, col: 19, offset: 7776},
																															run: (*parser).callonInlineElementWithoutSubtitution807,
																															expr: &labeledExpr{
																																pos:   position{line: 216, col: 19, offset: 7776},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 216, col: 25, offset: 7782},
																																	expr: &seqExpr{
																																		pos: position{line: 216, col: 26, offset: 7783},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 216, col: 26, offset: 7783},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 27, offset: 7784},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 31, offset: 7788},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 32, offset: 7789},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 36, offset: 7793},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 37, offset: 7794},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 216, col: 41, offset: 7798,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 206, col: 67, offset: 7448},
																														expr: &litMatcher{
																															pos:        position{line: 206, col: 67, offset: 7448},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 206, col: 72, offset: 7453},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElementWithoutSubtitution823,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 208, col: 5, offset: 7537},
																											run: (*parser).callonInlineElementWithoutSubtitution825,
																											expr: &seqExpr{
																												pos: position{line: 208, col: 5, offset: 7537},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 208, col: 5, offset: 7537},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElementWithoutSubtitution828,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElementWithoutSubtitution831,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElementWithoutSubtitution834,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElementWithoutSubtitution837,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 208, col: 24, offset: 7556},
																														expr: &litMatcher{
																															pos:        position{line: 208, col: 24, offset: 7556},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 208, col: 29, offset: 7561},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElementWithoutSubtitution854,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 804, col: 40, offset: 33711},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 806, col: 5, offset: 33796},
																				run: (*parser).callonInlineElementWithoutSubtitution857,
																				expr: &seqExpr{
																					pos: position{line: 806, col: 5, offset: 33796},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 806, col: 5, offset: 33796},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 806, col: 9, offset: 33800},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 806, col: 20, offset: 33811},
																								expr: &choiceExpr{
																									pos: position{line: 206, col: 21, offset: 7402},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 206, col: 21, offset: 7402},
																											run: (*parser).callonInlineElementWithoutSubtitution863,
																											expr: &seqExpr{
																												pos: position{line: 206, col: 21, offset: 7402},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 206, col: 21, offset: 7402},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElementWithoutSubtitution866,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElementWithoutSubtitution869,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElementWithoutSubtitution872,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElementWithoutSubtitution875,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 206, col: 40, offset: 7421},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 206, col: 44, offset: 7425},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 216, col: 19, offset: 7776},
																															run: (*parser).callonInlineElementWithoutSubtitution889,
																															expr: &labeledExpr{
																																pos:   position{line: 216, col: 19, offset: 7776},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 216, col: 25, offset: 7782},
																																	expr: &seqExpr{
																																		pos: position{line: 216, col: 26, offset: 7783},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 216, col: 26, offset: 7783},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 27, offset: 7784},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 31, offset: 7788},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 32, offset: 7789},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 216, col: 36, offset: 7793},
																																				expr: &litMatcher{
																																					pos:        position{line: 216, col: 37, offset: 7794},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 216, col: 41, offset: 7798,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 206, col: 67, offset: 7448},
																														expr: &litMatcher{
																															pos:        position{line: 206, col: 67, offset: 7448},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 206, col: 72, offset: 7453},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElementWithoutSubtitution905,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 208, col: 5, offset: 7537},
																											run: (*parser).callonInlineElementWithoutSubtitution907,
																											expr: &seqExpr{
																												pos: position{line: 208, col: 5, offset: 7537},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 208, col: 5, offset: 7537},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 212, col: 17, offset: 7662},
																															run: (*parser).callonInlineElementWithoutSubtitution910,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 17, offset: 7662},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 17, offset: 7662},
																																		expr: &actionExpr{
																																			pos: position{line: 236, col: 14, offset: 8471},
																																			run: (*parser).callonInlineElementWithoutSubtitution913,
																																			expr: &litMatcher{
																																				pos:        position{line: 236, col: 14, offset: 8471},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 28, offset: 7673},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9203},
																																			run: (*parser).callonInlineElementWithoutSubtitution916,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9203},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 39, offset: 7684},
																																		expr: &actionExpr{
																																			pos: position{line: 1099, col: 16, offset: 45385},
																																			run: (*parser).callonInlineElementWithoutSubtitution919,
																																			expr: &litMatcher{
																																				pos:        position{line: 1099, col: 16, offset: 45385},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 212, col: 52, offset: 7697},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 212, col: 56, offset: 7701},
																																			expr: &seqExpr{
																																				pos: position{line: 212, col: 57, offset: 7702},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 212, col: 57, offset: 7702},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 58, offset: 7703},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 62, offset: 7707},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 63, offset: 7708},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 212, col: 67, offset: 7712},
																																						expr: &litMatcher{
																																							pos:        position{line: 212, col: 68, offset: 7713},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 212, col: 72, offset: 7717,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 208, col: 24, offset: 7556},
																														expr: &litMatcher{
																															pos:        position{line: 208, col: 24, offset: 7556},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 208, col: 29, offset: 7561},
																														expr: &choiceExpr{
																															pos: position{line: 1153, col: 7, offset: 46741},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1153, col: 7, offset: 46741},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1153, col: 13, offset: 46747},
																																	run: (*parser).callonInlineElementWithoutSubtitution936,
																																	expr: &litMatcher{
																																		pos:        position{line: 1153, col: 13, offset: 46747},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 806, col: 40, offset: 33831},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 786, col: 5, offset: 33166},
														run: (*parser).callonInlineElementWithoutSubtitution939,
														expr: &labeledExpr{
															pos:   position{line: 786, col: 5, offset: 33166},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 790, col: 20, offset: 33262},
																run: (*parser).callonInlineElementWithoutSubtitution941,
																expr: &seqExpr{
																	pos: position{line: 790, col: 20, offset: 33262},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1147, col: 15, offset: 46626},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1147, col: 15, offset: 46626},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1147, col: 27, offset: 46638},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1147, col: 40, offset: 46651},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1147, col: 51, offset: 46662},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1147, col: 62, offset: 46673},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1135, col: 8, offset: 46389},
																			run: (*parser).callonInlineElementWithoutSubtitution949,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1135, col: 8, offset: 46389},
																				expr: &seqExpr{
																					pos: position{line: 1135, col: 9, offset: 46390},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1135, col: 9, offset: 46390},
																							expr: &choiceExpr{
																								pos: position{line: 1157, col: 12, offset: 46803},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1157, col: 12, offset: 46803},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1157, col: 21, offset: 46812},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1135, col: 18, offset: 46399},
																							expr: &choiceExpr{
																								pos: position{line: 1153, col: 7, offset: 46741},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1153, col: 7, offset: 46741},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1153, col: 13, offset: 46747},
																										run: (*parser).callonInlineElementWithoutSubtitution959,
																										expr: &litMatcher{
																											pos:        position{line: 1153, col: 13, offset: 46747},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1135, col: 22, offset: 46403},
																							expr: &litMatcher{
																								pos:        position{line: 1135, col: 23, offset: 46404},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1135, col: 27, offset: 46408},
																							expr: &litMatcher{
																								pos:        position{line: 1135, col: 28, offset: 46409},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1135, col: 32, offset: 46413,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 167, col: 20, offset: 6064},
										run: (*parser).callonInlineElementWithoutSubtitution966,
										expr: &seqExpr{
											pos: position{line: 167, col: 20, offset: 6064},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 167, col: 20, offset: 6064},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 167, col: 25, offset: 6069},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														run: (*parser).callonInlineElementWithoutSubtitution970,
														expr: &oneOrMoreExpr{
															pos: position{line: 1139, col: 7, offset: 46459},
															expr: &seqExpr{
																pos: position{line: 1139, col: 8, offset: 46460},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1139, col: 8, offset: 46460},
																		expr: &choiceExpr{
																			pos: position{line: 1157, col: 12, offset: 46803},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 17, offset: 46469},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonInlineElementWithoutSubtitution980,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 21, offset: 46473},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 22, offset: 46474},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 26, offset: 46478},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 27, offset: 46479},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 31, offset: 46483},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 32, offset: 46484},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 37, offset: 46489},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 38, offset: 46490},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 43, offset: 46495},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 44, offset: 46496},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1139, col: 48, offset: 46500,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 167, col: 33, offset: 6077},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 167, col: 38, offset: 6082},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonInlineElementWithoutSubtitution997,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
									&charClassMatcher{
										pos:        position{line: 1129, col: 16, offset: 46121},
										val:        "[()[]]",
										chars:      []rune{'(', ')', '[', ']'},
										ignoreCase: false,
										inverted:   false,
									},
									&ruleRefExpr{
										pos:  position{line: 603, col: 157, offset: 22924},
										name: "Word",
									},
									&zeroOrMoreExpr{
										pos: position{line: 603, col: 164, offset: 22931},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonInlineElementWithoutSubtitution1004,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedText",
			pos:  position{line: 617, col: 1, offset: 23457},
			expr: &choiceExpr{
				pos: position{line: 617, col: 15, offset: 23471},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 617, col: 15, offset: 23471},
						name: "BoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 617, col: 26, offset: 23482},
						name: "ItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 617, col: 39, offset: 23495},
						name: "MonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 617, col: 55, offset: 23511},
						name: "SubscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 617, col: 71, offset: 23527},
						name: "SuperscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 618, col: 13, offset: 23557},
						name: "EscapedBoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 618, col: 31, offset: 23575},
						name: "EscapedItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 618, col: 51, offset: 23595},
						name: "EscapedMonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 618, col: 74, offset: 23618},
						name: "EscapedSubscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 618, col: 97, offset: 23641},
						name: "EscapedSuperscriptText",
					},
				},
			},
		},
		{
			name: "SubScriptOrSuperScriptText",
			pos:  position{line: 620, col: 1, offset: 23665},
			expr: &choiceExpr{
				pos: position{line: 620, col: 31, offset: 23695},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 620, col: 31, offset: 23695},
						name: "SubscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 620, col: 47, offset: 23711},
						name: "SuperscriptText",
					},
				},
			},
		},
		{
			name: "BoldText",
			pos:  position{line: 622, col: 1, offset: 23821},
			expr: &choiceExpr{
				pos: position{line: 623, col: 5, offset: 23838},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 623, col: 5, offset: 23838},
						run: (*parser).callonBoldText2,
						expr: &seqExpr{
							pos: position{line: 623, col: 5, offset: 23838},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 623, col: 5, offset: 23838},
									expr: &litMatcher{
										pos:        position{line: 623, col: 6, offset: 23839},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 623, col: 11, offset: 23844},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 623, col: 16, offset: 23849},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 623, col: 25, offset: 23858},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 623, col: 44, offset: 23877},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 625, col: 9, offset: 24010},
						run: (*parser).callonBoldText10,
						expr: &seqExpr{
							pos: position{line: 625, col: 9, offset: 24010},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 625, col: 9, offset: 24010},
									expr: &litMatcher{
										pos:        position{line: 625, col: 10, offset: 24011},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 625, col: 15, offset: 24016},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 625, col: 20, offset: 24021},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 625, col: 29, offset: 24030},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 625, col: 48, offset: 24049},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 628, col: 9, offset: 24226},
						run: (*parser).callonBoldText18,
						expr: &seqExpr{
							pos: position{line: 628, col: 9, offset: 24226},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 628, col: 9, offset: 24226},
									expr: &litMatcher{
										pos:        position{line: 628, col: 10, offset: 24227},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 628, col: 14, offset: 24231},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 628, col: 18, offset: 24235},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 628, col: 27, offset: 24244},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 628, col: 46, offset: 24263},
									val:        "*",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 628, col: 50, offset: 24267},
									expr: &charClassMatcher{
										pos:        position{line: 1127, col: 13, offset: 46093},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedBoldText",
			pos:  position{line: 632, col: 1, offset: 24461},
			expr: &choiceExpr{
				pos: position{line: 633, col: 5, offset: 24485},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 633, col: 5, offset: 24485},
						run: (*parser).callonEscapedBoldText2,
						expr: &seqExpr{
							pos: position{line: 633, col: 5, offset: 24485},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 633, col: 5, offset: 24485},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 646, col: 25, offset: 25289},
										run: (*parser).callonEscapedBoldText5,
										expr: &seqExpr{
											pos: position{line: 646, col: 25, offset: 25289},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 646, col: 25, offset: 25289},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 646, col: 30, offset: 25294},
													expr: &litMatcher{
														pos:        position{line: 646, col: 30, offset: 25294},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 633, col: 40, offset: 24520},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 633, col: 45, offset: 24525},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 633, col: 54, offset: 24534},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 633, col: 73, offset: 24553},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 635, col: 9, offset: 24709},
						run: (*parser).callonEscapedBoldText14,
						expr: &seqExpr{
							pos: position{line: 635, col: 9, offset: 24709},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 635, col: 9, offset: 24709},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 642, col: 25, offset: 25220},
										run: (*parser).callonEscapedBoldText17,
										expr: &seqExpr{
											pos: position{line: 642, col: 25, offset: 25220},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 642, col: 25, offset: 25220},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 642, col: 29, offset: 25224},
													expr: &litMatcher{
														pos:        position{line: 642, col: 29, offset: 25224},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 635, col: 44, offset: 24744},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 635, col: 49, offset: 24749},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 635, col: 58, offset: 24758},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 635, col: 77, offset: 24777},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 638, col: 9, offset: 24976},
						run: (*parser).callonEscapedBoldText26,
						expr: &seqExpr{
							pos: position{line: 638, col: 9, offset: 24976},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 638, col: 9, offset: 24976},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 642, col: 25, offset: 25220},
										run: (*parser).callonEscapedBoldText29,
										expr: &seqExpr{
											pos: position{line: 642, col: 25, offset: 25220},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 642, col: 25, offset: 25220},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 642, col: 29, offset: 25224},
													expr: &litMatcher{
														pos:        position{line: 642, col: 29, offset: 25224},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 638, col: 44, offset: 25011},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 638, col: 48, offset: 25015},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 638, col: 57, offset: 25024},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 638, col: 76, offset: 25043},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ItalicText",
			pos:  position{line: 650, col: 1, offset: 25335},
			expr: &choiceExpr{
				pos: position{line: 651, col: 5, offset: 25354},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 651, col: 5, offset: 25354},
						run: (*parser).callonItalicText2,
						expr: &seqExpr{
							pos: position{line: 651, col: 5, offset: 25354},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 651, col: 5, offset: 25354},
									expr: &litMatcher{
										pos:        position{line: 651, col: 6, offset: 25355},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 651, col: 11, offset: 25360},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 651, col: 16, offset: 25365},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 651, col: 25, offset: 25374},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 651, col: 44, offset: 25393},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 653, col: 9, offset: 25482},
						run: (*parser).callonItalicText10,
						expr: &seqExpr{
							pos: position{line: 653, col: 9, offset: 25482},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 653, col: 9, offset: 25482},
									expr: &litMatcher{
										pos:        position{line: 653, col: 10, offset: 25483},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 653, col: 15, offset: 25488},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 653, col: 20, offset: 25493},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 653, col: 29, offset: 25502},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 653, col: 48, offset: 25521},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 656, col: 9, offset: 25700},
						run: (*parser).callonItalicText18,
						expr: &seqExpr{
							pos: position{line: 656, col: 9, offset: 25700},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 656, col: 9, offset: 25700},
									expr: &litMatcher{
										pos:        position{line: 656, col: 10, offset: 25701},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 656, col: 14, offset: 25705},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 656, col: 18, offset: 25709},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 656, col: 27, offset: 25718},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 656, col: 46, offset: 25737},
									val:        "_",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 656, col: 50, offset: 25741},
									expr: &charClassMatcher{
										pos:        position{line: 1127, col: 13, offset: 46093},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedItalicText",
			pos:  position{line: 660, col: 1, offset: 25936},
			expr: &choiceExpr{
				pos: position{line: 661, col: 5, offset: 25962},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 661, col: 5, offset: 25962},
						run: (*parser).callonEscapedItalicText2,
						expr: &seqExpr{
							pos: position{line: 661, col: 5, offset: 25962},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 661, col: 5, offset: 25962},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 646, col: 25, offset: 25289},
										run: (*parser).callonEscapedItalicText5,
										expr: &seqExpr{
											pos: position{line: 646, col: 25, offset: 25289},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 646, col: 25, offset: 25289},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 646, col: 30, offset: 25294},
													expr: &litMatcher{
														pos:        position{line: 646, col: 30, offset: 25294},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 661, col: 40, offset: 25997},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 661, col: 45, offset: 26002},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 661, col: 54, offset: 26011},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 661, col: 73, offset: 26030},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 663, col: 9, offset: 26186},
						run: (*parser).callonEscapedItalicText14,
						expr: &seqExpr{
							pos: position{line: 663, col: 9, offset: 26186},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 663, col: 9, offset: 26186},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 642, col: 25, offset: 25220},
										run: (*parser).callonEscapedItalicText17,
										expr: &seqExpr{
											pos: position{line: 642, col: 25, offset: 25220},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 642, col: 25, offset: 25220},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 642, col: 29, offset: 25224},
													expr: &litMatcher{
														pos:        position{line: 642, col: 29, offset: 25224},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 663, col: 44, offset: 26221},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 663, col: 49, offset: 26226},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 663, col: 58, offset: 26235},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 663, col: 77, offset: 26254},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 666, col: 9, offset: 26453},
						run: (*parser).callonEscapedItalicText26,
						expr: &seqExpr{
							pos: position{line: 666, col: 9, offset: 26453},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 666, col: 9, offset: 26453},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 642, col: 25, offset: 25220},
										run: (*parser).callonEscapedItalicText29,
										expr: &seqExpr{
											pos: position{line: 642, col: 25, offset: 25220},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 642, col: 25, offset: 25220},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 642, col: 29, offset: 25224},
													expr: &litMatcher{
														pos:        position{line: 642, col: 29, offset: 25224},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 666, col: 44, offset: 26488},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 666, col: 48, offset: 26492},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 666, col: 57, offset: 26501},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 666, col: 76, offset: 26520},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "MonospaceText",
			pos:  position{line: 670, col: 1, offset: 26673},
			expr: &choiceExpr{
				pos: position{line: 671, col: 5, offset: 26695},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 671, col: 5, offset: 26695},
						run: (*parser).callonMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 671, col: 5, offset: 26695},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 671, col: 5, offset: 26695},
									expr: &litMatcher{
										pos:        position{line: 671, col: 6, offset: 26696},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 671, col: 11, offset: 26701},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 671, col: 16, offset: 26706},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 671, col: 25, offset: 26715},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 671, col: 44, offset: 26734},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 673, col: 9, offset: 26872},
						run: (*parser).callonMonospaceText10,
						expr: &seqExpr{
							pos: position{line: 673, col: 9, offset: 26872},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 673, col: 9, offset: 26872},
									expr: &litMatcher{
										pos:        position{line: 673, col: 10, offset: 26873},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 673, col: 15, offset: 26878},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 673, col: 20, offset: 26883},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 673, col: 29, offset: 26892},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 673, col: 48, offset: 26911},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 676, col: 9, offset: 27093},
						run: (*parser).callonMonospaceText18,
						expr: &seqExpr{
							pos: position{line: 676, col: 9, offset: 27093},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 676, col: 9, offset: 27093},
									expr: &litMatcher{
										pos:        position{line: 676, col: 10, offset: 27094},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 676, col: 14, offset: 27098},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 676, col: 18, offset: 27102},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 676, col: 27, offset: 27111},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 676, col: 46, offset: 27130},
									val:        "`",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 676, col: 50, offset: 27134},
									expr: &charClassMatcher{
										pos:        position{line: 1127, col: 13, offset: 46093},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedMonospaceText",
			pos:  position{line: 680, col: 1, offset: 27332},
			expr: &choiceExpr{
				pos: position{line: 681, col: 5, offset: 27361},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 681, col: 5, offset: 27361},
						run: (*parser).callonEscapedMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 681, col: 5, offset: 27361},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 681, col: 5, offset: 27361},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 646, col: 25, offset: 25289},
										run: (*parser).callonEscapedMonospaceText5,
										expr: &seqExpr{
											pos: position{line: 646, col: 25, offset: 25289},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 646, col: 25, offset: 25289},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 646, col: 30, offset: 25294},
													expr: &litMatcher{
														pos:        position{line: 646, col: 30, offset: 25294},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 681, col: 40, offset: 27396},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 681, col: 45, offset: 27401},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 681, col: 54, offset: 27410},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 681, col: 73, offset: 27429},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 683, col: 9, offset: 27585},
						run: (*parser).callonEscapedMonospaceText14,
						expr: &seqExpr{
							pos: position{line: 683, col: 9, offset: 27585},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 683, col: 9, offset: 27585},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 642, col: 25, offset: 25220},
										run: (*parser).callonEscapedMonospaceText17,
										expr: &seqExpr{
											pos: position{line: 642, col: 25, offset: 25220},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 642, col: 25, offset: 25220},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 642, col: 29, offset: 25224},
													expr: &litMatcher{
														pos:        position{line: 642, col: 29, offset: 25224},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 683, col: 44, offset: 27620},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 683, col: 49, offset: 27625},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 683, col: 58, offset: 27634},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 683, col: 77, offset: 27653},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 686, col: 9, offset: 27852},
						run: (*parser).callonEscapedMonospaceText26,
						expr: &seqExpr{
							pos: position{line: 686, col: 9, offset: 27852},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 686, col: 9, offset: 27852},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 642, col: 25, offset: 25220},
										run: (*parser).callonEscapedMonospaceText29,
										expr: &seqExpr{
											pos: position{line: 642, col: 25, offset: 25220},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 642, col: 25, offset: 25220},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 642, col: 29, offset: 25224},
													expr: &litMatcher{
														pos:        position{line: 642, col: 29, offset: 25224},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 686, col: 44, offset: 27887},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 686, col: 48, offset: 27891},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 686, col: 57, offset: 27900},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 686, col: 76, offset: 27919},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SubscriptText",
			pos:  position{line: 690, col: 1, offset: 28072},
			expr: &choiceExpr{
				pos: position{line: 691, col: 5, offset: 28094},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 691, col: 5, offset: 28094},
						run: (*parser).callonSubscriptText2,
						expr: &seqExpr{
							pos: position{line: 691, col: 5, offset: 28094},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 691, col: 5, offset: 28094},
									expr: &litMatcher{
										pos:        position{line: 691, col: 6, offset: 28095},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 691, col: 11, offset: 28100},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 691, col: 16, offset: 28105},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 691, col: 25, offset: 28114},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 691, col: 44, offset: 28133},
									val:        "~~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 693, col: 9, offset: 28271},
						run: (*parser).callonSubscriptText10,
						expr: &seqExpr{
							pos: position{line: 693, col: 9, offset: 28271},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 693, col: 9, offset: 28271},
									expr: &litMatcher{
										pos:        position{line: 693, col: 10, offset: 28272},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 693, col: 15, offset: 28277},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 693, col: 20, offset: 28282},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 693, col: 29, offset: 28291},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 693, col: 48, offset: 28310},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 696, col: 9, offset: 28492},
						run: (*parser).callonSubscriptText18,
						expr: &seqExpr{
							pos: position{line: 696, col: 9, offset: 28492},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 696, col: 9, offset: 28492},
									expr: &litMatcher{
										pos:        position{line: 696, col: 10, offset: 28493},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 696, col: 14, offset: 28497},
									val:        "~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 696, col: 18, offset: 28501},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 696, col: 27, offset: 28510},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 696, col: 46, offset: 28529},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedSubscriptText",
			pos:  position{line: 700, col: 1, offset: 28721},
			expr: &choiceExpr{
				pos: position{line: 701, col: 5, offset: 28750},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 701, col: 5, offset: 28750},
						run: (*parser).callonEscapedSubscriptText2,
						expr: &seqExpr{
							pos: position{line: 701, col: 5, offset: 28750},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 701, col: 5, offset: 28750},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 646, col: 25, offset: 25289},
										run: (*parser).callonEscapedSubscriptText5,
										expr: &seqExpr{
											pos: position{line: 646, col: 25, offset: 25289},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 646, col: 25, offset: 25289},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 646, col: 30, offset: 25294},
													expr: &litMatcher{
														pos:        position{line: 646, col: 30, offset: 25294},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 701, col: 40, offset: 28785},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 701, col: 45, offset: 28790},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 701, col: 54, offset: 28799},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 701, col: 73, offset: 28818},
									val:        "~~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 703, col: 9, offset: 28974},
						run: (*parser).callonEscapedSubscriptText14,
						expr: &seqExpr{
							pos: position{line: 703, col: 9, offset: 28974},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 703, col: 9, offset: 28974},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 642, col: 25, offset: 25220},
										run: (*parser).callonEscapedSubscriptText17,
										expr: &seqExpr{
											pos: position{line: 642, col: 25, offset: 25220},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 642, col: 25, offset: 25220},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 642, col: 29, offset: 25224},
													expr: &litMatcher{
														pos:        position{line: 642, col: 29, offset: 25224},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 703, col: 44, offset: 29009},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 703, col: 49, offset: 29014},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 703, col: 58, offset: 29023},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 703, col: 77, offset: 29042},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 706, col: 9, offset: 29241},
						run: (*parser).callonEscapedSubscriptText26,
						expr: &seqExpr{
							pos: position{line: 706, col: 9, offset: 29241},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 706, col: 9, offset: 29241},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 642, col: 25, offset: 25220},
										run: (*parser).callonEscapedSubscriptText29,
										expr: &seqExpr{
											pos: position{line: 642, col: 25, offset: 25220},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 642, col: 25, offset: 25220},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 642, col: 29, offset: 25224},
													expr: &litMatcher{
														pos:        position{line: 642, col: 29, offset: 25224},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 706, col: 44, offset: 29276},
									val:        "~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 706, col: 48, offset: 29280},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 706, col: 57, offset: 29289},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 706, col: 76, offset: 29308},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SuperscriptText",
			pos:  position{line: 710, col: 1, offset: 29461},
			expr: &choiceExpr{
				pos: position{line: 711, col: 5, offset: 29485},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 711, col: 5, offset: 29485},
						run: (*parser).callonSuperscriptText2,
						expr: &seqExpr{
							pos: position{line: 711, col: 5, offset: 29485},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 711, col: 5, offset: 29485},
									expr: &litMatcher{
										pos:        position{line: 711, col: 6, offset: 29486},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 711, col: 11, offset: 29491},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 711, col: 16, offset: 29496},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 711, col: 25, offset: 29505},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 711, col: 44, offset: 29524},
									val:        "^^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 713, col: 9, offset: 29664},
						run: (*parser).callonSuperscriptText10,
						expr: &seqExpr{
							pos: position{line: 713, col: 9, offset: 29664},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 713, col: 9, offset: 29664},
									expr: &litMatcher{
										pos:        position{line: 713, col: 10, offset: 29665},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 713, col: 15, offset: 29670},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 713, col: 20, offset: 29675},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 713, col: 29, offset: 29684},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 713, col: 48, offset: 29703},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 716, col: 9, offset: 29887},
						run: (*parser).callonSuperscriptText18,
						expr: &seqExpr{
							pos: position{line: 716, col: 9, offset: 29887},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 716, col: 9, offset: 29887},
									expr: &litMatcher{
										pos:        position{line: 716, col: 10, offset: 29888},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 716, col: 14, offset: 29892},
									val:        "^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 716, col: 18, offset: 29896},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 716, col: 27, offset: 29905},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 716, col: 46, offset: 29924},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedSuperscriptText",
			pos:  position{line: 720, col: 1, offset: 30118},
			expr: &choiceExpr{
				pos: position{line: 721, col: 5, offset: 30149},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 721, col: 5, offset: 30149},
						run: (*parser).callonEscapedSuperscriptText2,
						expr: &seqExpr{
							pos: position{line: 721, col: 5, offset: 30149},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 721, col: 5, offset: 30149},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 646, col: 25, offset: 25289},
										run: (*parser).callonEscapedSuperscriptText5,
										expr: &seqExpr{
											pos: position{line: 646, col: 25, offset: 25289},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 646, col: 25, offset: 25289},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 646, col: 30, offset: 25294},
													expr: &litMatcher{
														pos:        position{line: 646, col: 30, offset: 25294},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 721, col: 40, offset: 30184},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 721, col: 45, offset: 30189},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 721, col: 54, offset: 30198},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 721, col: 73, offset: 30217},
									val:        "^^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 723, col: 9, offset: 30373},
						run: (*parser).callonEscapedSuperscriptText14,
						expr: &seqExpr{
							pos: position{line: 723, col: 9, offset: 30373},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 723, col: 9, offset: 30373},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 642, col: 25, offset: 25220},
										run: (*parser).callonEscapedSuperscriptText17,
										expr: &seqExpr{
											pos: position{line: 642, col: 25, offset: 25220},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 642, col: 25, offset: 25220},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 642, col: 29, offset: 25224},
													expr: &litMatcher{
														pos:        position{line: 642, col: 29, offset: 25224},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 723, col: 44, offset: 30408},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 723, col: 49, offset: 30413},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 723, col: 58, offset: 30422},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 723, col: 77, offset: 30441},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 726, col: 9, offset: 30640},
						run: (*parser).callonEscapedSuperscriptText26,
						expr: &seqExpr{
							pos: position{line: 726, col: 9, offset: 30640},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 726, col: 9, offset: 30640},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 642, col: 25, offset: 25220},
										run: (*parser).callonEscapedSuperscriptText29,
										expr: &seqExpr{
											pos: position{line: 642, col: 25, offset: 25220},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 642, col: 25, offset: 25220},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 642, col: 29, offset: 25224},
													expr: &litMatcher{
														pos:        position{line: 642, col: 29, offset: 25224},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 726, col: 44, offset: 30675},
									val:        "^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 726, col: 48, offset: 30679},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 726, col: 57, offset: 30688},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 726, col: 76, offset: 30707},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContent",
			pos:  position{line: 730, col: 1, offset: 30860},
			expr: &seqExpr{
				pos: position{line: 730, col: 22, offset: 30881},
				exprs: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 730, col: 22, offset: 30881},
						name: "QuotedTextContentElement",
					},
					&zeroOrMoreExpr{
						pos: position{line: 730, col: 47, offset: 30906},
						expr: &seqExpr{
							pos: position{line: 730, col: 48, offset: 30907},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 730, col: 48, offset: 30907},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonQuotedTextContent8,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 730, col: 52, offset: 30911},
									name: "QuotedTextContentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContentElement",
			pos:  position{line: 732, col: 1, offset: 30939},
			expr: &choiceExpr{
				pos: position{line: 732, col: 29, offset: 30967},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 732, col: 29, offset: 30967},
						name: "QuotedText",
					},
					&oneOrMoreExpr{
						pos: position{line: 734, col: 19, offset: 31144},
						expr: &seqExpr{
							pos: position{line: 734, col: 20, offset: 31145},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 734, col: 20, offset: 31145},
									expr: &choiceExpr{
										pos: position{line: 1157, col: 12, offset: 46803},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1157, col: 12, offset: 46803},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1157, col: 21, offset: 46812},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 734, col: 29, offset: 31154},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonQuotedTextContentElement12,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 734, col: 33, offset: 31158},
									expr: &litMatcher{
										pos:        position{line: 734, col: 34, offset: 31159},
										val:        "*",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 734, col: 38, offset: 31163},
									expr: &litMatcher{
										pos:        position{line: 734, col: 39, offset: 31164},
										val:        "_",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 734, col: 43, offset: 31168},
									expr: &litMatcher{
										pos:        position{line: 734, col: 44, offset: 31169},
										val:        "`",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 734, col: 48, offset: 31173},
									expr: &litMatcher{
										pos:        position{line: 734, col: 49, offset: 31174},
										val:        "~",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 734, col: 53, offset: 31178},
									expr: &litMatcher{
										pos:        position{line: 734, col: 54, offset: 31179},
										val:        "^",
										ignoreCase: false,
									},
								},
								&anyMatcher{
									line: 734, col: 57, offset: 31182,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 736, col: 29, offset: 31263},
						run: (*parser).callonQuotedTextContentElement25,
						expr: &oneOrMoreExpr{
							pos: position{line: 736, col: 29, offset: 31263},
							expr: &seqExpr{
								pos: position{line: 736, col: 30, offset: 31264},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 736, col: 30, offset: 31264},
										expr: &choiceExpr{
											pos: position{line: 1157, col: 12, offset: 46803},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 736, col: 39, offset: 31273},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonQuotedTextContentElement35,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&anyMatcher{
										line: 736, col: 44, offset: 31278,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Passthrough",
			pos:  position{line: 746, col: 1, offset: 31703},
			expr: &choiceExpr{
				pos: position{line: 746, col: 16, offset: 31718},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 752, col: 26, offset: 31960},
						run: (*parser).callonPassthrough2,
						expr: &seqExpr{
							pos: position{line: 752, col: 26, offset: 31960},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 752, col: 26, offset: 31960},
									val:        "+++",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 752, col: 32, offset: 31966},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 752, col: 40, offset: 31974},
										expr: &seqExpr{
											pos: position{line: 752, col: 41, offset: 31975},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 752, col: 41, offset: 31975},
													expr: &litMatcher{
														pos:        position{line: 752, col: 42, offset: 31976},
														val:        "+++",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 752, col: 48, offset: 31982,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 752, col: 52, offset: 31986},
									val:        "+++",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 748, col: 26, offset: 31809},
						run: (*parser).callonPassthrough12,
						expr: &seqExpr{
							pos: position{line: 748, col: 26, offset: 31809},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 748, col: 26, offset: 31809},
									val:        "+",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 748, col: 30, offset: 31813},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 748, col: 38, offset: 31821},
										expr: &seqExpr{
											pos: position{line: 748, col: 39, offset: 31822},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 748, col: 39, offset: 31822},
													expr: &choiceExpr{
														pos: position{line: 1157, col: 12, offset: 46803},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1157, col: 12, offset: 46803},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1157, col: 21, offset: 46812},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 748, col: 48, offset: 31831},
													expr: &litMatcher{
														pos:        position{line: 748, col: 49, offset: 31832},
														val:        "+",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 748, col: 53, offset: 31836,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 748, col: 57, offset: 31840},
									val:        "+",
									ignoreCase: false,
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 746, col: 64, offset: 31766},
						name: "PassthroughMacro",
					},
				},
			},
		},
		{
			name: "PassthroughMacro",
			pos:  position{line: 756, col: 1, offset: 32083},
			expr: &choiceExpr{
				pos: position{line: 756, col: 21, offset: 32103},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 756, col: 21, offset: 32103},
						run: (*parser).callonPassthroughMacro2,
						expr: &seqExpr{
							pos: position{line: 756, col: 21, offset: 32103},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 756, col: 21, offset: 32103},
									val:        "pass:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 756, col: 30, offset: 32112},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 756, col: 38, offset: 32120},
										expr: &seqExpr{
											pos: position{line: 762, col: 31, offset: 32420},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 762, col: 31, offset: 32420},
													expr: &litMatcher{
														pos:        position{line: 762, col: 32, offset: 32421},
														val:        "]",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 762, col: 36, offset: 32425,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 756, col: 67, offset: 32149},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 758, col: 5, offset: 32240},
						run: (*parser).callonPassthroughMacro12,
						expr: &seqExpr{
							pos: position{line: 758, col: 5, offset: 32240},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 758, col: 5, offset: 32240},
									val:        "pass:q[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 758, col: 15, offset: 32250},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 758, col: 23, offset: 32258},
										expr: &choiceExpr{
											pos: position{line: 758, col: 24, offset: 32259},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 758, col: 24, offset: 32259},
													name: "QuotedText",
												},
												&seqExpr{
													pos: position{line: 762, col: 31, offset: 32420},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 762, col: 31, offset: 32420},
															expr: &litMatcher{
																pos:        position{line: 762, col: 32, offset: 32421},
																val:        "]",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 762, col: 36, offset: 32425,
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 758, col: 65, offset: 32300},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineFootnote",
			pos:  position{line: 850, col: 1, offset: 35661},
			expr: &choiceExpr{
				pos: position{line: 850, col: 19, offset: 35679},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 850, col: 19, offset: 35679},
						run: (*parser).callonInlineFootnote2,
						expr: &seqExpr{
							pos: position{line: 850, col: 19, offset: 35679},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 850, col: 19, offset: 35679},
									val:        "footnote:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 850, col: 32, offset: 35692},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 850, col: 41, offset: 35701},
										name: "FootnoteContent",
									},
								},
								&litMatcher{
									pos:        position{line: 850, col: 58, offset: 35718},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 852, col: 9, offset: 35801},
						run: (*parser).callonInlineFootnote8,
						expr: &seqExpr{
							pos: position{line: 852, col: 9, offset: 35801},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 852, col: 9, offset: 35801},
									val:        "footnoteref:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 852, col: 25, offset: 35817},
									label: "ref",
									expr: &actionExpr{
										pos: position{line: 858, col: 16, offset: 36130},
										run: (*parser).callonInlineFootnote12,
										expr: &zeroOrMoreExpr{
											pos: position{line: 858, col: 16, offset: 36130},
											expr: &seqExpr{
												pos: position{line: 858, col: 17, offset: 36131},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 858, col: 17, offset: 36131},
														expr: &litMatcher{
															pos:        position{line: 858, col: 18, offset: 36132},
															val:        ",",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 858, col: 22, offset: 36136},
														expr: &litMatcher{
															pos:        position{line: 858, col: 23, offset: 36137},
															val:        "]",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 858, col: 27, offset: 36141},
														expr: &choiceExpr{
															pos: position{line: 1161, col: 8, offset: 46843},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1157, col: 12, offset: 46803},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1157, col: 21, offset: 46812},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1159, col: 8, offset: 46832},
																	expr: &anyMatcher{
																		line: 1159, col: 9, offset: 46833,
																	},
																},
															},
														},
													},
													&anyMatcher{
														line: 858, col: 32, offset: 36146,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 852, col: 43, offset: 35835},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 852, col: 47, offset: 35839},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 852, col: 56, offset: 35848},
										name: "FootnoteContent",
									},
								},
								&litMatcher{
									pos:        position{line: 852, col: 73, offset: 35865},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 854, col: 9, offset: 35958},
						run: (*parser).callonInlineFootnote30,
						expr: &seqExpr{
							pos: position{line: 854, col: 9, offset: 35958},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 854, col: 9, offset: 35958},
									val:        "footnoteref:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 854, col: 25, offset: 35974},
									label: "ref",
									expr: &actionExpr{
										pos: position{line: 858, col: 16, offset: 36130},
										run: (*parser).callonInlineFootnote34,
										expr: &zeroOrMoreExpr{
											pos: position{line: 858, col: 16, offset: 36130},
											expr: &seqExpr{
												pos: position{line: 858, col: 17, offset: 36131},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 858, col: 17, offset: 36131},
														expr: &litMatcher{
															pos:        position{line: 858, col: 18, offset: 36132},
															val:        ",",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 858, col: 22, offset: 36136},
														expr: &litMatcher{
															pos:        position{line: 858, col: 23, offset: 36137},
															val:        "]",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 858, col: 27, offset: 36141},
														expr: &choiceExpr{
															pos: position{line: 1161, col: 8, offset: 46843},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1157, col: 12, offset: 46803},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1157, col: 21, offset: 46812},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1159, col: 8, offset: 46832},
																	expr: &anyMatcher{
																		line: 1159, col: 9, offset: 46833,
																	},
																},
															},
														},
													},
													&anyMatcher{
														line: 858, col: 32, offset: 36146,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 854, col: 43, offset: 35992},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FootnoteContent",
			pos:  position{line: 862, col: 1, offset: 36230},
			expr: &actionExpr{
				pos: position{line: 862, col: 20, offset: 36249},
				run: (*parser).callonFootnoteContent1,
				expr: &labeledExpr{
					pos:   position{line: 862, col: 20, offset: 36249},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 862, col: 29, offset: 36258},
						expr: &seqExpr{
							pos: position{line: 862, col: 30, offset: 36259},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 862, col: 30, offset: 36259},
									expr: &litMatcher{
										pos:        position{line: 862, col: 31, offset: 36260},
										val:        "]",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 862, col: 35, offset: 36264},
									expr: &choiceExpr{
										pos: position{line: 1161, col: 8, offset: 46843},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1157, col: 12, offset: 46803},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1157, col: 21, offset: 46812},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1159, col: 8, offset: 46832},
												expr: &anyMatcher{
													line: 1159, col: 9, offset: 46833,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 862, col: 40, offset: 36269},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonFootnoteContent16,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 862, col: 44, offset: 36273},
									expr: &actionExpr{
										pos: position{line: 167, col: 20, offset: 6064},
										run: (*parser).callonFootnoteContent19,
										expr: &seqExpr{
											pos: position{line: 167, col: 20, offset: 6064},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 167, col: 20, offset: 6064},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 167, col: 25, offset: 6069},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1139, col: 7, offset: 46459},
														run: (*parser).callonFootnoteContent23,
														expr: &oneOrMoreExpr{
															pos: position{line: 1139, col: 7, offset: 46459},
															expr: &seqExpr{
																pos: position{line: 1139, col: 8, offset: 46460},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1139, col: 8, offset: 46460},
																		expr: &choiceExpr{
																			pos: position{line: 1157, col: 12, offset: 46803},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1157, col: 12, offset: 46803},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1157, col: 21, offset: 46812},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 17, offset: 46469},
																		expr: &choiceExpr{
																			pos: position{line: 1153, col: 7, offset: 46741},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1153, col: 7, offset: 46741},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1153, col: 13, offset: 46747},
																					run: (*parser).callonFootnoteContent33,
																					expr: &litMatcher{
																						pos:        position{line: 1153, col: 13, offset: 46747},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 21, offset: 46473},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 22, offset: 46474},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 26, offset: 46478},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 27, offset: 46479},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 31, offset: 46483},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 32, offset: 46484},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 37, offset: 46489},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 38, offset: 46490},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1139, col: 43, offset: 46495},
																		expr: &litMatcher{
																			pos:        position{line: 1139, col: 44, offset: 46496},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1139, col: 48, offset: 46500,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 167, col: 33, offset: 6077},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 167, col: 38, offset: 6082},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonFootnoteContent50,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 862, col: 61, offset: 36290},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 862, col: 75, offset: 36304},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonFootnoteContent56,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DelimitedBlock",
			pos:  position{line: 870, col: 1, offset: 36619},
			expr: &choiceExpr{
				pos: position{line: 870, col: 19, offset: 36637},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 870, col: 19, offset: 36637},
						name: "FencedBlock",
					},
					&actionExpr{
						pos: position{line: 904, col: 17, offset: 37887},
						run: (*parser).callonDelimitedBlock3,
						expr: &seqExpr{
							pos: position{line: 904, col: 17, offset: 37887},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 901, col: 26, offset: 37820},
									val:        "----",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 901, col: 33, offset: 37827},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonDelimitedBlock9,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1161, col: 8, offset: 46843},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1157, col: 12, offset: 46803},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1157, col: 21, offset: 46812},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1159, col: 8, offset: 46832},
											expr: &anyMatcher{
												line: 1159, col: 9, offset: 46833,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 904, col: 39, offset: 37909},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 904, col: 47, offset: 37917},
										expr: &actionExpr{
											pos: position{line: 908, col: 24, offset: 38087},
											run: (*parser).callonDelimitedBlock18,
											expr: &labeledExpr{
												pos:   position{line: 908, col: 24, offset: 38087},
												label: "lines",
												expr: &oneOrMoreExpr{
													pos: position{line: 908, col: 30, offset: 38093},
													expr: &actionExpr{
														pos: position{line: 912, col: 21, offset: 38196},
														run: (*parser).callonDelimitedBlock21,
														expr: &seqExpr{
															pos: position{line: 912, col: 21, offset: 38196},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 912, col: 21, offset: 38196},
																	expr: &seqExpr{
																		pos: position{line: 901, col: 26, offset: 37820},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 901, col: 26, offset: 37820},
																				val:        "----",
																				ignoreCase: false,
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 901, col: 33, offset: 37827},
																				expr: &choiceExpr{
																					pos: position{line: 1153, col: 7, offset: 46741},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1153, col: 7, offset: 46741},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1153, col: 13, offset: 46747},
																							run: (*parser).callonDelimitedBlock29,
																							expr: &litMatcher{
																								pos:        position{line: 1153, col: 13, offset: 46747},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1161, col: 8, offset: 46843},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1157, col: 12, offset: 46803},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1157, col: 21, offset: 46812},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1159, col: 8, offset: 46832},
																						expr: &anyMatcher{
																							line: 1159, col: 9, offset: 46833,
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 912, col: 44, offset: 38219},
																	expr: &notExpr{
																		pos: position{line: 1159, col: 8, offset: 46832},
																		expr: &anyMatcher{
																			line: 1159, col: 9, offset: 46833,
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 912, col: 49, offset: 38224},
																	label: "line",
																	expr: &actionExpr{
																		pos: position{line: 916, col: 28, offset: 38335},
																		run: (*parser).callonDelimitedBlock40,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 916, col: 28, offset: 38335},
																			expr: &seqExpr{
																				pos: position{line: 916, col: 29, offset: 38336},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 916, col: 29, offset: 38336},
																						expr: &seqExpr{
																							pos: position{line: 901, col: 26, offset: 37820},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 901, col: 26, offset: 37820},
																									val:        "----",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 901, col: 33, offset: 37827},
																									expr: &choiceExpr{
																										pos: position{line: 1153, col: 7, offset: 46741},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1153, col: 7, offset: 46741},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1153, col: 13, offset: 46747},
																												run: (*parser).callonDelimitedBlock49,
																												expr: &litMatcher{
																													pos:        position{line: 1153, col: 13, offset: 46747},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&choiceExpr{
																									pos: position{line: 1161, col: 8, offset: 46843},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1157, col: 12, offset: 46803},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 1157, col: 21, offset: 46812},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																										&notExpr{
																											pos: position{line: 1159, col: 8, offset: 46832},
																											expr: &anyMatcher{
																												line: 1159, col: 9, offset: 46833,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 916, col: 52, offset: 38359},
																						expr: &choiceExpr{
																							pos: position{line: 1161, col: 8, offset: 46843},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1157, col: 12, offset: 46803},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1157, col: 21, offset: 46812},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1159, col: 8, offset: 46832},
																									expr: &anyMatcher{
																										line: 1159, col: 9, offset: 46833,
																									},
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 916, col: 57, offset: 38364,
																					},
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1161, col: 8, offset: 46843},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1157, col: 12, offset: 46803},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1157, col: 21, offset: 46812},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1159, col: 8, offset: 46832},
																			expr: &anyMatcher{
																				line: 1159, col: 9, offset: 46833,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 904, col: 71, offset: 37941},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 901, col: 26, offset: 37820},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 901, col: 26, offset: 37820},
													val:        "----",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 901, col: 33, offset: 37827},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonDelimitedBlock74,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1161, col: 8, offset: 46843},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1159, col: 8, offset: 46832},
											expr: &anyMatcher{
												line: 1159, col: 9, offset: 46833,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 872, col: 19, offset: 36700},
						name: "ExampleBlock",
					},
					&actionExpr{
						pos: position{line: 1035, col: 17, offset: 42736},
						run: (*parser).callonDelimitedBlock84,
						expr: &seqExpr{
							pos: position{line: 1035, col: 17, offset: 42736},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 1033, col: 26, offset: 42712},
									val:        "////",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 1035, col: 39, offset: 42758},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonDelimitedBlock90,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1157, col: 12, offset: 46803},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1157, col: 12, offset: 46803},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1157, col: 21, offset: 46812},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 1035, col: 51, offset: 42770},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 1035, col: 59, offset: 42778},
										expr: &actionExpr{
											pos: position{line: 1039, col: 21, offset: 42955},
											run: (*parser).callonDelimitedBlock97,
											expr: &seqExpr{
												pos: position{line: 1039, col: 21, offset: 42955},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 1039, col: 21, offset: 42955},
														expr: &seqExpr{
															pos: position{line: 1039, col: 22, offset: 42956},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1039, col: 22, offset: 42956},
																	expr: &litMatcher{
																		pos:        position{line: 1033, col: 26, offset: 42712},
																		val:        "////",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1039, col: 45, offset: 42979},
																	expr: &choiceExpr{
																		pos: position{line: 1161, col: 8, offset: 46843},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1157, col: 12, offset: 46803},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1157, col: 21, offset: 46812},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1159, col: 8, offset: 46832},
																				expr: &anyMatcher{
																					line: 1159, col: 9, offset: 46833,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 1039, col: 50, offset: 42984,
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1161, col: 8, offset: 46843},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1157, col: 12, offset: 46803},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1157, col: 21, offset: 46812},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1159, col: 8, offset: 46832},
																expr: &anyMatcher{
																	line: 1159, col: 9, offset: 46833,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1035, col: 81, offset: 42800},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 1035, col: 82, offset: 42801},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 1033, col: 26, offset: 42712},
													val:        "////",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 1035, col: 104, offset: 42823},
													expr: &choiceExpr{
														pos: position{line: 1153, col: 7, offset: 46741},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1153, col: 7, offset: 46741},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1153, col: 13, offset: 46747},
																run: (*parser).callonDelimitedBlock121,
																expr: &litMatcher{
																	pos:        position{line: 1153, col: 13, offset: 46747},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1161, col: 8, offset: 46843},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1157, col: 12, offset: 46803},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1157, col: 21, offset: 46812},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1159, col: 8, offset: 46832},
											expr: &anyMatcher{
												line: 1159, col: 9, offset: 46833,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 874, col: 19, offset: 36764},
						name: "VerseBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 875, col: 19, offset: 36794},
						name: "QuoteBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 876, col: 19, offset: 36824},
						name: "SidebarBlock",
					},
				},
			},
		},
		{
			name: "FencedBlock",
			pos:  position{line: 892, col: 1, offset: 37356},
			expr: &actionExpr{
				pos: position{line: 892, col: 16, offset: 37371},
				run: (*parser).callonFencedBlock1,
				expr: &seqExpr{
					pos: position{line: 892, col: 16, offset: 37371},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 890, col: 25, offset: 37341},
							val:        "```",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 890, col: 31, offset: 37347},
							expr: &choiceExpr{
								pos: position{line: 1153, col: 7, offset: 46741},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1153, col: 7, offset: 46741},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1153, col: 13, offset: 46747},
										run: (*parser).callonFencedBlock7,
										expr: &litMatcher{
											pos:        position{line: 1153, col: 13, offset: 46747},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 892, col: 37, offset: 37392},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 892, col: 45, offset: 37400},
								expr: &ruleRefExpr{
									pos:  position{line: 892, col: 46, offset: 37401},
									name: "FencedBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 892, col: 68, offset: 37423},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 890, col: 25, offset: 37341},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 890, col: 25, offset: 37341},
											val:        "```",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 890, col: 31, offset: 37347},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonFencedBlock23,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FencedBlockContent",
			pos:  position{line: 896, col: 1, offset: 37542},
			expr: &choiceExpr{
				pos: position{line: 896, col: 23, offset: 37564},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 896, col: 23, offset: 37564},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 896, col: 30, offset: 37571},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 1120, col: 14, offset: 45925},
						run: (*parser).callonFencedBlockContent4,
						expr: &seqExpr{
							pos: position{line: 1120, col: 14, offset: 45925},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 1120, col: 14, offset: 45925},
									expr: &notExpr{
										pos: position{line: 1159, col: 8, offset: 46832},
										expr: &anyMatcher{
											line: 1159, col: 9, offset: 46833,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 1120, col: 19, offset: 45930},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonFencedBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1161, col: 8, offset: 46843},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1157, col: 12, offset: 46803},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1157, col: 21, offset: 46812},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1159, col: 8, offset: 46832},
											expr: &anyMatcher{
												line: 1159, col: 9, offset: 46833,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ExampleBlock",
			pos:  position{line: 925, col: 1, offset: 38741},
			expr: &actionExpr{
				pos: position{line: 925, col: 17, offset: 38757},
				run: (*parser).callonExampleBlock1,
				expr: &seqExpr{
					pos: position{line: 925, col: 17, offset: 38757},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 923, col: 26, offset: 38725},
							val:        "====",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 923, col: 33, offset: 38732},
							expr: &choiceExpr{
								pos: position{line: 1153, col: 7, offset: 46741},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1153, col: 7, offset: 46741},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1153, col: 13, offset: 46747},
										run: (*parser).callonExampleBlock7,
										expr: &litMatcher{
											pos:        position{line: 1153, col: 13, offset: 46747},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 925, col: 39, offset: 38779},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 925, col: 47, offset: 38787},
								expr: &choiceExpr{
									pos: position{line: 925, col: 48, offset: 38788},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 925, col: 48, offset: 38788},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 925, col: 55, offset: 38795},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 1120, col: 14, offset: 45925},
											run: (*parser).callonExampleBlock19,
											expr: &seqExpr{
												pos: position{line: 1120, col: 14, offset: 45925},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 1120, col: 14, offset: 45925},
														expr: &notExpr{
															pos: position{line: 1159, col: 8, offset: 46832},
															expr: &anyMatcher{
																line: 1159, col: 9, offset: 46833,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 1120, col: 19, offset: 45930},
														expr: &choiceExpr{
															pos: position{line: 1153, col: 7, offset: 46741},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1153, col: 7, offset: 46741},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1153, col: 13, offset: 46747},
																	run: (*parser).callonExampleBlock27,
																	expr: &litMatcher{
																		pos:        position{line: 1153, col: 13, offset: 46747},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1161, col: 8, offset: 46843},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1157, col: 12, offset: 46803},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1157, col: 21, offset: 46812},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1159, col: 8, offset: 46832},
																expr: &anyMatcher{
																	line: 1159, col: 9, offset: 46833,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 925, col: 86, offset: 38826},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 923, col: 26, offset: 38725},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 923, col: 26, offset: 38725},
											val:        "====",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 923, col: 33, offset: 38732},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonExampleBlock40,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "BlockParagraph",
			pos:  position{line: 930, col: 1, offset: 38965},
			expr: &actionExpr{
				pos: position{line: 930, col: 20, offset: 38984},
				run: (*parser).callonBlockParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 930, col: 20, offset: 38984},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 930, col: 26, offset: 38990},
						expr: &ruleRefExpr{
							pos:  position{line: 930, col: 27, offset: 38991},
							name: "BlockParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "BlockParagraphLine",
			pos:  position{line: 934, col: 1, offset: 39076},
			expr: &actionExpr{
				pos: position{line: 934, col: 23, offset: 39098},
				run: (*parser).callonBlockParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 934, col: 23, offset: 39098},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 934, col: 23, offset: 39098},
							expr: &actionExpr{
								pos: position{line: 444, col: 26, offset: 15893},
								run: (*parser).callonBlockParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 444, col: 26, offset: 15893},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 444, col: 26, offset: 15893},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonBlockParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 444, col: 30, offset: 15897},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 446, col: 5, offset: 15952},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 446, col: 5, offset: 15952},
														run: (*parser).callonBlockParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 446, col: 5, offset: 15952},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 448, col: 9, offset: 16065},
														run: (*parser).callonBlockParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 448, col: 9, offset: 16065},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 450, col: 9, offset: 16176},
														run: (*parser).callonBlockParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 450, col: 9, offset: 16176},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 452, col: 9, offset: 16285},
														run: (*parser).callonBlockParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 452, col: 9, offset: 16285},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 454, col: 9, offset: 16392},
														run: (*parser).callonBlockParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 454, col: 9, offset: 16392},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 9, offset: 16519},
														run: (*parser).callonBlockParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 457, col: 9, offset: 16519},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 457, col: 9, offset: 16519},
																	expr: &charClassMatcher{
																		pos:        position{line: 457, col: 10, offset: 16520},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 457, col: 18, offset: 16528},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 459, col: 9, offset: 16631},
														run: (*parser).callonBlockParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 459, col: 9, offset: 16631},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 459, col: 10, offset: 16632},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 459, col: 17, offset: 16639},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 461, col: 9, offset: 16745},
														run: (*parser).callonBlockParagraphLine32,
														expr: &seqExpr{
															pos: position{line: 461, col: 9, offset: 16745},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 461, col: 10, offset: 16746},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 461, col: 17, offset: 16753},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 463, col: 9, offset: 16859},
														run: (*parser).callonBlockParagraphLine36,
														expr: &seqExpr{
															pos: position{line: 463, col: 9, offset: 16859},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 463, col: 9, offset: 16859},
																	expr: &charClassMatcher{
																		pos:        position{line: 463, col: 10, offset: 16860},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 463, col: 18, offset: 16868},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 465, col: 9, offset: 16974},
														run: (*parser).callonBlockParagraphLine41,
														expr: &seqExpr{
															pos: position{line: 465, col: 9, offset: 16974},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 465, col: 9, offset: 16974},
																	expr: &charClassMatcher{
																		pos:        position{line: 465, col: 10, offset: 16975},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 465, col: 18, offset: 16983},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 467, col: 8, offset: 17088},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonBlockParagraphLine49,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 935, col: 9, offset: 39132},
							expr: &actionExpr{
								pos: position{line: 483, col: 5, offset: 17748},
								run: (*parser).callonBlockParagraphLine52,
								expr: &seqExpr{
									pos: position{line: 483, col: 5, offset: 17748},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 483, col: 5, offset: 17748},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonBlockParagraphLine57,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 483, col: 9, offset: 17752},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 484, col: 9, offset: 17769},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 484, col: 9, offset: 17769},
														run: (*parser).callonBlockParagraphLine61,
														expr: &litMatcher{
															pos:        position{line: 484, col: 9, offset: 17769},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 487, col: 11, offset: 17938},
														run: (*parser).callonBlockParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 487, col: 11, offset: 17938},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 490, col: 11, offset: 18107},
														run: (*parser).callonBlockParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 490, col: 11, offset: 18107},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 493, col: 11, offset: 18276},
														run: (*parser).callonBlockParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 493, col: 11, offset: 18276},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 496, col: 11, offset: 18442},
														run: (*parser).callonBlockParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 496, col: 11, offset: 18442},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 499, col: 11, offset: 18606},
														run: (*parser).callonBlockParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 499, col: 11, offset: 18606},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 501, col: 12, offset: 18753},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonBlockParagraphLine76,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 936, col: 9, offset: 39168},
							expr: &seqExpr{
								pos: position{line: 936, col: 11, offset: 39170},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 516, col: 24, offset: 19443},
										run: (*parser).callonBlockParagraphLine80,
										expr: &zeroOrMoreExpr{
											pos: position{line: 516, col: 24, offset: 19443},
											expr: &seqExpr{
												pos: position{line: 516, col: 25, offset: 19444},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 516, col: 25, offset: 19444},
														expr: &choiceExpr{
															pos: position{line: 1157, col: 12, offset: 46803},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1157, col: 12, offset: 46803},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1157, col: 21, offset: 46812},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 516, col: 34, offset: 19453},
														expr: &litMatcher{
															pos:        position{line: 516, col: 35, offset: 19454},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 516, col: 40, offset: 19459,
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 521, col: 29, offset: 19605},
										run: (*parser).callonBlockParagraphLine90,
										expr: &choiceExpr{
											pos: position{line: 521, col: 30, offset: 19606},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 521, col: 30, offset: 19606},
													val:        "::::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 521, col: 39, offset: 19615},
													val:        ":::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 521, col: 47, offset: 19623},
													val:        "::",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 937, col: 9, offset: 39225},
							expr: &actionExpr{
								pos: position{line: 429, col: 25, offset: 15337},
								run: (*parser).callonBlockParagraphLine96,
								expr: &seqExpr{
									pos: position{line: 429, col: 25, offset: 15337},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 429, col: 25, offset: 15337},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 429, col: 29, offset: 15341},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonBlockParagraphLine102,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 938, col: 9, offset: 39258},
							expr: &choiceExpr{
								pos: position{line: 878, col: 19, offset: 36856},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1057, col: 26, offset: 43657},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 890, col: 25, offset: 37341},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 890, col: 25, offset: 37341},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 890, col: 31, offset: 37347},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonBlockParagraphLine117,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 901, col: 26, offset: 37820},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 901, col: 26, offset: 37820},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 901, col: 33, offset: 37827},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonBlockParagraphLine129,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 923, col: 26, offset: 38725},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 923, col: 26, offset: 38725},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 923, col: 33, offset: 38732},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonBlockParagraphLine141,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 1033, col: 26, offset: 42712},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 946, col: 24, offset: 39550},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 946, col: 24, offset: 39550},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 946, col: 31, offset: 39557},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonBlockParagraphLine154,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 990, col: 26, offset: 41195},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 990, col: 26, offset: 41195},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 990, col: 33, offset: 41202},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonBlockParagraphLine166,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 939, col: 9, offset: 39285},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 939, col: 15, offset: 39291},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlock",
			pos:  position{line: 948, col: 1, offset: 39591},
			expr: &actionExpr{
				pos: position{line: 948, col: 15, offset: 39605},
				run: (*parser).callonQuoteBlock1,
				expr: &seqExpr{
					pos: position{line: 948, col: 15, offset: 39605},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 946, col: 24, offset: 39550},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 946, col: 31, offset: 39557},
							expr: &choiceExpr{
								pos: position{line: 1153, col: 7, offset: 46741},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1153, col: 7, offset: 46741},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1153, col: 13, offset: 46747},
										run: (*parser).callonQuoteBlock7,
										expr: &litMatcher{
											pos:        position{line: 1153, col: 13, offset: 46747},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 948, col: 35, offset: 39625},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 948, col: 43, offset: 39633},
								expr: &ruleRefExpr{
									pos:  position{line: 948, col: 44, offset: 39634},
									name: "QuoteBlockElement",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 948, col: 65, offset: 39655},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 946, col: 24, offset: 39550},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 946, col: 24, offset: 39550},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 946, col: 31, offset: 39557},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonQuoteBlock23,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlockElement",
			pos:  position{line: 952, col: 1, offset: 39772},
			expr: &actionExpr{
				pos: position{line: 953, col: 5, offset: 39798},
				run: (*parser).callonQuoteBlockElement1,
				expr: &seqExpr{
					pos: position{line: 953, col: 5, offset: 39798},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 953, col: 5, offset: 39798},
							expr: &seqExpr{
								pos: position{line: 946, col: 24, offset: 39550},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 946, col: 24, offset: 39550},
										val:        "____",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 946, col: 31, offset: 39557},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonQuoteBlockElement9,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1161, col: 8, offset: 46843},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1157, col: 12, offset: 46803},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1157, col: 21, offset: 46812},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1159, col: 8, offset: 46832},
												expr: &anyMatcher{
													line: 1159, col: 9, offset: 46833,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 953, col: 26, offset: 39819},
							expr: &notExpr{
								pos: position{line: 1159, col: 8, offset: 46832},
								expr: &anyMatcher{
									line: 1159, col: 9, offset: 46833,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 953, col: 31, offset: 39824},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 953, col: 40, offset: 39833},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlock",
			pos:  position{line: 962, col: 1, offset: 40131},
			expr: &actionExpr{
				pos: position{line: 962, col: 15, offset: 40145},
				run: (*parser).callonVerseBlock1,
				expr: &seqExpr{
					pos: position{line: 962, col: 15, offset: 40145},
					exprs: []interface{}{
						&andCodeExpr{
							pos: position{line: 962, col: 15, offset: 40145},
							run: (*parser).callonVerseBlock3,
						},
						&labeledExpr{
							pos:   position{line: 966, col: 5, offset: 40237},
							label: "verse",
							expr: &actionExpr{
								pos: position{line: 966, col: 12, offset: 40244},
								run: (*parser).callonVerseBlock5,
								expr: &seqExpr{
									pos: position{line: 966, col: 12, offset: 40244},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 946, col: 24, offset: 39550},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 946, col: 31, offset: 39557},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonVerseBlock11,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 966, col: 32, offset: 40264},
											label: "content",
											expr: &zeroOrMoreExpr{
												pos: position{line: 966, col: 40, offset: 40272},
												expr: &ruleRefExpr{
													pos:  position{line: 966, col: 41, offset: 40273},
													name: "VerseBlockContent",
												},
											},
										},
										&choiceExpr{
											pos: position{line: 966, col: 62, offset: 40294},
											alternatives: []interface{}{
												&seqExpr{
													pos: position{line: 946, col: 24, offset: 39550},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 946, col: 24, offset: 39550},
															val:        "____",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 946, col: 31, offset: 39557},
															expr: &choiceExpr{
																pos: position{line: 1153, col: 7, offset: 46741},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1153, col: 7, offset: 46741},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1153, col: 13, offset: 46747},
																		run: (*parser).callonVerseBlock27,
																		expr: &litMatcher{
																			pos:        position{line: 1153, col: 13, offset: 46747},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1161, col: 8, offset: 46843},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1157, col: 12, offset: 46803},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1157, col: 21, offset: 46812},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1159, col: 8, offset: 46832},
																	expr: &anyMatcher{
																		line: 1159, col: 9, offset: 46833,
																	},
																},
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
							},
						},
						&stateCodeExpr{
							pos: position{line: 968, col: 8, offset: 40419},
							run: (*parser).callonVerseBlock36,
						},
					},
				},
			},
		},
		{
			name: "VerseBlockContent",
			pos:  position{line: 975, col: 1, offset: 40515},
			expr: &actionExpr{
				pos: position{line: 975, col: 22, offset: 40536},
				run: (*parser).callonVerseBlockContent1,
				expr: &labeledExpr{
					pos:   position{line: 975, col: 22, offset: 40536},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 975, col: 28, offset: 40542},
						expr: &ruleRefExpr{
							pos:  position{line: 975, col: 29, offset: 40543},
							name: "VerseBlockLine",
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLine",
			pos:  position{line: 979, col: 1, offset: 40623},
			expr: &actionExpr{
				pos: position{line: 979, col: 19, offset: 40641},
				run: (*parser).callonVerseBlockLine1,
				expr: &seqExpr{
					pos: position{line: 979, col: 19, offset: 40641},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 979, col: 19, offset: 40641},
							expr: &seqExpr{
								pos: position{line: 946, col: 24, offset: 39550},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 946, col: 24, offset: 39550},
										val:        "____",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 946, col: 31, offset: 39557},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonVerseBlockLine9,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1161, col: 8, offset: 46843},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1157, col: 12, offset: 46803},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1157, col: 21, offset: 46812},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1159, col: 8, offset: 46832},
												expr: &anyMatcher{
													line: 1159, col: 9, offset: 46833,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 979, col: 40, offset: 40662},
							expr: &notExpr{
								pos: position{line: 1159, col: 8, offset: 46832},
								expr: &anyMatcher{
									line: 1159, col: 9, offset: 46833,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 979, col: 45, offset: 40667},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 979, col: 51, offset: 40673},
								name: "VerseBlockLineContent",
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLineContent",
			pos:  position{line: 983, col: 1, offset: 40749},
			expr: &actionExpr{
				pos: position{line: 983, col: 26, offset: 40774},
				run: (*parser).callonVerseBlockLineContent1,
				expr: &labeledExpr{
					pos:   position{line: 983, col: 26, offset: 40774},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 983, col: 35, offset: 40783},
						expr: &seqExpr{
							pos: position{line: 983, col: 36, offset: 40784},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 983, col: 36, offset: 40784},
									expr: &seqExpr{
										pos: position{line: 946, col: 24, offset: 39550},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 946, col: 24, offset: 39550},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 946, col: 31, offset: 39557},
												expr: &choiceExpr{
													pos: position{line: 1153, col: 7, offset: 46741},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1153, col: 7, offset: 46741},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1153, col: 13, offset: 46747},
															run: (*parser).callonVerseBlockLineContent11,
															expr: &litMatcher{
																pos:        position{line: 1153, col: 13, offset: 46747},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 983, col: 57, offset: 40805},
									expr: &choiceExpr{
										pos: position{line: 1161, col: 8, offset: 46843},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1157, col: 12, offset: 46803},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1157, col: 21, offset: 46812},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1159, col: 8, offset: 46832},
												expr: &anyMatcher{
													line: 1159, col: 9, offset: 46833,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 983, col: 62, offset: 40810},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonVerseBlockLineContent27,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 983, col: 66, offset: 40814},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 983, col: 80, offset: 40828},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonVerseBlockLineContent33,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlock",
			pos:  position{line: 992, col: 1, offset: 41211},
			expr: &actionExpr{
				pos: position{line: 992, col: 17, offset: 41227},
				run: (*parser).callonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 992, col: 17, offset: 41227},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 990, col: 26, offset: 41195},
							val:        "****",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 990, col: 33, offset: 41202},
							expr: &choiceExpr{
								pos: position{line: 1153, col: 7, offset: 46741},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1153, col: 7, offset: 46741},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1153, col: 13, offset: 46747},
										run: (*parser).callonSidebarBlock7,
										expr: &litMatcher{
											pos:        position{line: 1153, col: 13, offset: 46747},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 992, col: 39, offset: 41249},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 992, col: 47, offset: 41257},
								expr: &ruleRefExpr{
									pos:  position{line: 992, col: 48, offset: 41258},
									name: "SidebarBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 992, col: 72, offset: 41282},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 990, col: 26, offset: 41195},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 990, col: 26, offset: 41195},
											val:        "****",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 990, col: 33, offset: 41202},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonSidebarBlock23,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlockContent",
			pos:  position{line: 996, col: 1, offset: 41403},
			expr: &choiceExpr{
				pos: position{line: 996, col: 24, offset: 41426},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 996, col: 24, offset: 41426},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 996, col: 31, offset: 41433},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 1120, col: 14, offset: 45925},
						run: (*parser).callonSidebarBlockContent4,
						expr: &seqExpr{
							pos: position{line: 1120, col: 14, offset: 45925},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 1120, col: 14, offset: 45925},
									expr: &notExpr{
										pos: position{line: 1159, col: 8, offset: 46832},
										expr: &anyMatcher{
											line: 1159, col: 9, offset: 46833,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 1120, col: 19, offset: 45930},
									expr: &choiceExpr{
										pos: position{line: 1153, col: 7, offset: 46741},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1153, col: 7, offset: 46741},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1153, col: 13, offset: 46747},
												run: (*parser).callonSidebarBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 1153, col: 13, offset: 46747},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1161, col: 8, offset: 46843},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1157, col: 12, offset: 46803},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1157, col: 21, offset: 46812},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1159, col: 8, offset: 46832},
											expr: &anyMatcher{
												line: 1159, col: 9, offset: 46833,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 996, col: 60, offset: 41462},
						name: "NonSidebarBlock",
					},
				},
			},
		},
		{
			name: "NonSidebarBlock",
			pos:  position{line: 998, col: 1, offset: 41479},
			expr: &actionExpr{
				pos: position{line: 998, col: 20, offset: 41498},
				run: (*parser).callonNonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 998, col: 20, offset: 41498},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 998, col: 20, offset: 41498},
							expr: &ruleRefExpr{
								pos:  position{line: 998, col: 21, offset: 41499},
								name: "SidebarBlock",
							},
						},
						&labeledExpr{
							pos:   position{line: 998, col: 34, offset: 41512},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 998, col: 43, offset: 41521},
								name: "DelimitedBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "Table",
			pos:  position{line: 1005, col: 1, offset: 41754},
			expr: &actionExpr{
				pos: position{line: 1005, col: 10, offset: 41763},
				run: (*parser).callonTable1,
				expr: &seqExpr{
					pos: position{line: 1005, col: 10, offset: 41763},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 1014, col: 19, offset: 42029},
							val:        "|===",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 1014, col: 26, offset: 42036},
							expr: &choiceExpr{
								pos: position{line: 1153, col: 7, offset: 46741},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1153, col: 7, offset: 46741},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1153, col: 13, offset: 46747},
										run: (*parser).callonTable7,
										expr: &litMatcher{
											pos:        position{line: 1153, col: 13, offset: 46747},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1006, col: 9, offset: 41786},
							label: "header",
							expr: &zeroOrOneExpr{
								pos: position{line: 1006, col: 16, offset: 41793},
								expr: &ruleRefExpr{
									pos:  position{line: 1006, col: 17, offset: 41794},
									name: "TableLineHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1007, col: 9, offset: 41820},
							label: "lines",
							expr: &zeroOrMoreExpr{
								pos: position{line: 1007, col: 15, offset: 41826},
								expr: &ruleRefExpr{
									pos:  position{line: 1007, col: 16, offset: 41827},
									name: "TableLine",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1008, col: 10, offset: 41848},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 1014, col: 19, offset: 42029},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 1014, col: 19, offset: 42029},
											val:        "|===",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 1014, col: 26, offset: 42036},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonTable26,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLineHeader",
			pos:  position{line: 1017, col: 1, offset: 42108},
			expr: &actionExpr{
				pos: position{line: 1017, col: 20, offset: 42127},
				run: (*parser).callonTableLineHeader1,
				expr: &seqExpr{
					pos: position{line: 1017, col: 20, offset: 42127},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 1017, col: 20, offset: 42127},
							expr: &seqExpr{
								pos: position{line: 1014, col: 19, offset: 42029},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 1014, col: 19, offset: 42029},
										val:        "|===",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 1014, col: 26, offset: 42036},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonTableLineHeader9,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1161, col: 8, offset: 46843},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1157, col: 12, offset: 46803},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1157, col: 21, offset: 46812},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1159, col: 8, offset: 46832},
												expr: &anyMatcher{
													line: 1159, col: 9, offset: 46833,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1017, col: 36, offset: 42143},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 1017, col: 42, offset: 42149},
								expr: &ruleRefExpr{
									pos:  position{line: 1017, col: 43, offset: 42150},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
						&actionExpr{
							pos: position{line: 1120, col: 14, offset: 45925},
							run: (*parser).callonTableLineHeader24,
							expr: &seqExpr{
								pos: position{line: 1120, col: 14, offset: 45925},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 1120, col: 14, offset: 45925},
										expr: &notExpr{
											pos: position{line: 1159, col: 8, offset: 46832},
											expr: &anyMatcher{
												line: 1159, col: 9, offset: 46833,
											},
										},
									},
									&zeroOrMoreExpr{
										pos: position{line: 1120, col: 19, offset: 45930},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonTableLineHeader32,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1161, col: 8, offset: 46843},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1157, col: 12, offset: 46803},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1157, col: 21, offset: 46812},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1159, col: 8, offset: 46832},
												expr: &anyMatcher{
													line: 1159, col: 9, offset: 46833,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLine",
			pos:  position{line: 1021, col: 1, offset: 42234},
			expr: &actionExpr{
				pos: position{line: 1021, col: 14, offset: 42247},
				run: (*parser).callonTableLine1,
				expr: &seqExpr{
					pos: position{line: 1021, col: 14, offset: 42247},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 1021, col: 14, offset: 42247},
							expr: &seqExpr{
								pos: position{line: 1014, col: 19, offset: 42029},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 1014, col: 19, offset: 42029},
										val:        "|===",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 1014, col: 26, offset: 42036},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonTableLine9,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1161, col: 8, offset: 46843},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1157, col: 12, offset: 46803},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1157, col: 21, offset: 46812},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1159, col: 8, offset: 46832},
												expr: &anyMatcher{
													line: 1159, col: 9, offset: 46833,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1021, col: 30, offset: 42263},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 1021, col: 36, offset: 42269},
								expr: &ruleRefExpr{
									pos:  position{line: 1021, col: 37, offset: 42270},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1161, col: 8, offset: 46843},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1157, col: 12, offset: 46803},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1157, col: 21, offset: 46812},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1159, col: 8, offset: 46832},
									expr: &anyMatcher{
										line: 1159, col: 9, offset: 46833,
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 1021, col: 53, offset: 42286},
							expr: &actionExpr{
								pos: position{line: 1120, col: 14, offset: 45925},
								run: (*parser).callonTableLine25,
								expr: &seqExpr{
									pos: position{line: 1120, col: 14, offset: 45925},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1120, col: 14, offset: 45925},
											expr: &notExpr{
												pos: position{line: 1159, col: 8, offset: 46832},
												expr: &anyMatcher{
													line: 1159, col: 9, offset: 46833,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1120, col: 19, offset: 45930},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonTableLine33,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1161, col: 8, offset: 46843},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1159, col: 8, offset: 46832},
													expr: &anyMatcher{
														line: 1159, col: 9, offset: 46833,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableCell",
			pos:  position{line: 1025, col: 1, offset: 42355},
			expr: &actionExpr{
				pos: position{line: 1025, col: 14, offset: 42368},
				run: (*parser).callonTableCell1,
				expr: &seqExpr{
					pos: position{line: 1025, col: 14, offset: 42368},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 1012, col: 23, offset: 42002},
							val:        "|",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 1012, col: 27, offset: 42006},
							expr: &choiceExpr{
								pos: position{line: 1153, col: 7, offset: 46741},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1153, col: 7, offset: 46741},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1153, col: 13, offset: 46747},
										run: (*parser).callonTableCell7,
										expr: &litMatcher{
											pos:        position{line: 1153, col: 13, offset: 46747},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1025, col: 33, offset: 42387},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 1025, col: 42, offset: 42396},
								expr: &seqExpr{
									pos: position{line: 1025, col: 43, offset: 42397},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1025, col: 43, offset: 42397},
											expr: &seqExpr{
												pos: position{line: 1012, col: 23, offset: 42002},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 1012, col: 23, offset: 42002},
														val:        "|",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 1012, col: 27, offset: 42006},
														expr: &choiceExpr{
															pos: position{line: 1153, col: 7, offset: 46741},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1153, col: 7, offset: 46741},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1153, col: 13, offset: 46747},
																	run: (*parser).callonTableCell18,
																	expr: &litMatcher{
																		pos:        position{line: 1153, col: 13, offset: 46747},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1025, col: 63, offset: 42417},
											expr: &choiceExpr{
												pos: position{line: 1161, col: 8, offset: 46843},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1157, col: 12, offset: 46803},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1157, col: 21, offset: 46812},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1159, col: 8, offset: 46832},
														expr: &anyMatcher{
															line: 1159, col: 9, offset: 46833,
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1025, col: 68, offset: 42422},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonTableCell29,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&ruleRefExpr{
											pos:  position{line: 1025, col: 72, offset: 42426},
											name: "InlineElement",
										},
										&zeroOrMoreExpr{
											pos: position{line: 1025, col: 86, offset: 42440},
											expr: &choiceExpr{
												pos: position{line: 1153, col: 7, offset: 46741},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1153, col: 7, offset: 46741},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1153, col: 13, offset: 46747},
														run: (*parser).callonTableCell35,
														expr: &litMatcher{
															pos:        position{line: 1153, col: 13, offset: 46747},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Word",
			pos:  position{line: 1131, col: 1, offset: 46144},
			expr: &actionExpr{
				pos: position{line: 1131, col: 9, offset: 46152},
				run: (*parser).callonWord1,
				expr: &choiceExpr{
					pos: position{line: 1131, col: 10, offset: 46153},
					alternatives: []interface{}{
						&oneOrMoreExpr{
							pos: position{line: 1131, col: 10, offset: 46153},
							expr: &seqExpr{
								pos: position{line: 1131, col: 11, offset: 46154},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 1131, col: 11, offset: 46154},
										expr: &choiceExpr{
											pos: position{line: 1157, col: 12, offset: 46803},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1157, col: 12, offset: 46803},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1157, col: 21, offset: 46812},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 1131, col: 20, offset: 46163},
										expr: &choiceExpr{
											pos: position{line: 1153, col: 7, offset: 46741},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1153, col: 7, offset: 46741},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1153, col: 13, offset: 46747},
													run: (*parser).callonWord12,
													expr: &litMatcher{
														pos:        position{line: 1153, col: 13, offset: 46747},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 1131, col: 24, offset: 46167},
										expr: &charClassMatcher{
											pos:        position{line: 1129, col: 16, offset: 46121},
											val:        "[()[]]",
											chars:      []rune{'(', ')', '[', ']'},
											ignoreCase: false,
											inverted:   false,
										},
									},
									&notExpr{
										pos: position{line: 1131, col: 37, offset: 46180},
										expr: &litMatcher{
											pos:        position{line: 1131, col: 38, offset: 46181},
											val:        ".",
											ignoreCase: false,
										},
									},
									&notExpr{
										pos: position{line: 1131, col: 42, offset: 46185},
										expr: &ruleRefExpr{
											pos:  position{line: 1131, col: 43, offset: 46186},
											name: "SubScriptOrSuperScriptText",
										},
									},
									&anyMatcher{
										line: 1131, col: 70, offset: 46213,
									},
								},
							},
						},
						&oneOrMoreExpr{
							pos: position{line: 1131, col: 77, offset: 46220},
							expr: &litMatcher{
								pos:        position{line: 1131, col: 77, offset: 46220},
								val:        ".",
								ignoreCase: false,
							},
						},
					},
				},
			},
		},
		{
			name: "WS",
			pos:  position{line: 1153, col: 1, offset: 46735},
			expr: &choiceExpr{
				pos: position{line: 1153, col: 7, offset: 46741},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 1153, col: 7, offset: 46741},
						val:        " ",
						ignoreCase: false,
					},
					&actionExpr{
						pos: position{line: 1153, col: 13, offset: 46747},
						run: (*parser).callonWS3,
						expr: &litMatcher{
							pos:        position{line: 1153, col: 13, offset: 46747},
							val:        "\t",
							ignoreCase: false,
						},
					},
				},
			},
		},
		{
			name: "NEWLINE",
			pos:  position{line: 1157, col: 1, offset: 46792},
			expr: &choiceExpr{
				pos: position{line: 1157, col: 12, offset: 46803},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 1157, col: 12, offset: 46803},
						val:        "\r\n",
						ignoreCase: false,
					},
					&charClassMatcher{
						pos:        position{line: 1157, col: 21, offset: 46812},
						val:        "[\\r\\n]",
						chars:      []rune{'\r', '\n'},
						ignoreCase: false,
						inverted:   false,
					},
				},
			},
		},
	},
}

func (c *current) onDocument1(frontMatter, documentHeader, blocks interface{}) (interface{}, error) {
	return types.NewDocument(frontMatter, documentHeader, blocks.([]interface{}))
}

func (p *parser) callonDocument1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocument1(stack["frontMatter"], stack["documentHeader"], stack["blocks"])
}

func (c *current) onDocumentBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock25()
}

func (c *current) onDocumentBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock15()
}

func (c *current) onDocumentBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock11(stack["id"])
}

func (c *current) onDocumentBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock53()
}

func (c *current) onDocumentBlock43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock43()
}

func (c *current) onDocumentBlock39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock39(stack["id"])
}

func (c *current) onDocumentBlock75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock75()
}

func (c *current) onDocumentBlock78() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentBlock78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock78()
}

func (c *current) onDocumentBlock67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentBlock67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock67(stack["title"])
}

func (c *current) onDocumentBlock92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock92()
}

func (c *current) onDocumentBlock95() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentBlock95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock95()
}

func (c *current) onDocumentBlock86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentBlock86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock86(stack["role"])
}

func (c *current) onDocumentBlock106() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonDocumentBlock106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock106()
}

func (c *current) onDocumentBlock112() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentBlock112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock112()
}

func (c *current) onDocumentBlock108(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonDocumentBlock108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock108(stack["language"])
}

func (c *current) onDocumentBlock127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock127()
}

func (c *current) onDocumentBlock132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock132()
}

func (c *current) onDocumentBlock136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock136()
}

func (c *current) onDocumentBlock152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock152()
}

func (c *current) onDocumentBlock123(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonDocumentBlock123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock123(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onDocumentBlock171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock171()
}

func (c *current) onDocumentBlock176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock176()
}

func (c *current) onDocumentBlock180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock180()
}

func (c *current) onDocumentBlock167(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonDocumentBlock167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock167(stack["kind"], stack["author"])
}

func (c *current) onDocumentBlock199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock199()
}

func (c *current) onDocumentBlock204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock204()
}

func (c *current) onDocumentBlock195(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonDocumentBlock195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock195(stack["kind"])
}

func (c *current) onDocumentBlock215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock215()
}

func (c *current) onDocumentBlock220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock220()
}

func (c *current) onDocumentBlock224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock224()
}

func (c *current) onDocumentBlock240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock240()
}

func (c *current) onDocumentBlock211(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonDocumentBlock211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock211(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onDocumentBlock259() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock259()
}

func (c *current) onDocumentBlock264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock264()
}

func (c *current) onDocumentBlock268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock268()
}

func (c *current) onDocumentBlock255(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonDocumentBlock255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock255(stack["kind"], stack["author"])
}

func (c *current) onDocumentBlock287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock287()
}

func (c *current) onDocumentBlock292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock292()
}

func (c *current) onDocumentBlock283(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonDocumentBlock283() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock283(stack["kind"])
}

func (c *current) onDocumentBlock295(attribute interface{}) error {
	c.state["verse"] = true
	return nil

}

func (p *parser) callonDocumentBlock295() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock295(stack["attribute"])
}

func (c *current) onDocumentBlock207(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonDocumentBlock207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock207(stack["attribute"])
}

func (c *current) onDocumentBlock301() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentBlock301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock301()
}

func (c *current) onDocumentBlock303() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentBlock303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock303()
}

func (c *current) onDocumentBlock305() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentBlock305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock305()
}

func (c *current) onDocumentBlock307() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentBlock307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock307()
}

func (c *current) onDocumentBlock309() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock309()
}

func (c *current) onDocumentBlock296(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentBlock296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock296(stack["k"])
}

func (c *current) onDocumentBlock312() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentBlock312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock312()
}

func (c *current) onDocumentBlock320() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock320()
}

func (c *current) onDocumentBlock331() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock331()
}

func (c *current) onDocumentBlock334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock334()
}

func (c *current) onDocumentBlock337() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock337()
}

func (c *current) onDocumentBlock328(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock328(stack["key"])
}

func (c *current) onDocumentBlock351(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock351(stack["value"])
}

func (c *current) onDocumentBlock367() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock367()
}

func (c *current) onDocumentBlock325(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock325(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock375()
}

func (c *current) onDocumentBlock378() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock378()
}

func (c *current) onDocumentBlock381() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock381()
}

func (c *current) onDocumentBlock372(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock372(stack["key"])
}

func (c *current) onDocumentBlock398() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock398()
}

func (c *current) onDocumentBlock369(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock369(stack["key"])
}

func (c *current) onDocumentBlock314(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock314(stack["attributes"])
}

func (c *current) onDocumentBlock404() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock404() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock404()
}

func (c *current) onDocumentBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonDocumentBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock5(stack["attr"])
}

func (c *current) onDocumentBlock1(attributes, block interface{}) (interface{}, error) {
	return types.WithAttributes(block, attributes.([]interface{}))

}

func (p *parser) callonDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1(stack["attributes"], stack["block"])
}

func (c *current) onFrontMatter10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter10()
}

func (c *current) onFrontMatter1(content interface{}) (interface{}, error) {
	return types.NewYamlFrontMatter(content.(string))
}

func (p *parser) callonFrontMatter1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter1(stack["content"])
}

func (c *current) onDocumentHeader13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader13()
}

func (c *current) onDocumentHeader24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader24()
}

func (c *current) onDocumentHeader42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader42()
}

func (c *current) onDocumentHeader48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader48()
}

func (c *current) onDocumentHeader27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader27()
}

func (c *current) onDocumentHeader67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader67()
}

func (c *current) onDocumentHeader73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader73()
}

func (c *current) onDocumentHeader52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader52()
}

func (c *current) onDocumentHeader92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader92()
}

func (c *current) onDocumentHeader98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader98()
}

func (c *current) onDocumentHeader77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader77()
}

func (c *current) onDocumentHeader102(email interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader102(stack["email"])
}

func (c *current) onDocumentHeader121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader121()
}

func (c *current) onDocumentHeader128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader128()
}

func (c *current) onDocumentHeader19(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader19(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader8(authors interface{}) (interface{}, error) {
	return types.NewDocumentAuthors(authors.([]interface{}))
}

func (p *parser) callonDocumentHeader8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader8(stack["authors"])
}

func (c *current) onDocumentHeader140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader140()
}

func (c *current) onDocumentHeader149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader149()
}

func (c *current) onDocumentHeader167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader167()
}

func (c *current) onDocumentHeader173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader173()
}

func (c *current) onDocumentHeader152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader152()
}

func (c *current) onDocumentHeader246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader246()
}

func (c *current) onDocumentHeader253() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader253()
}

func (c *current) onDocumentHeader144(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader144(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader135(author interface{}) (interface{}, error) {
	return []types.DocumentAuthor{author.(types.DocumentAuthor)}, nil
}

func (p *parser) callonDocumentHeader135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader135(stack["author"])
}

func (c *current) onDocumentHeader262() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader262()
}

func (c *current) onDocumentHeader272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader272()
}

func (c *current) onDocumentHeader269() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader269() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader269()
}

func (c *current) onDocumentHeader291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader291()
}

func (c *current) onDocumentHeader309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader309()
}

func (c *current) onDocumentHeader287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader287()
}

func (c *current) onDocumentHeader317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader317()
}

func (c *current) onDocumentHeader333() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader333()
}

func (c *current) onDocumentHeader257(revnumber, revdate, revremark interface{}) (interface{}, error) {
	return types.NewDocumentRevision(revnumber, revdate, revremark)
}

func (p *parser) callonDocumentHeader257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader257(stack["revnumber"], stack["revdate"], stack["revremark"])
}

func (c *current) onDocumentHeader355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader355()
}

func (c *current) onDocumentHeader364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader364()
}

func (c *current) onDocumentHeader351(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentHeader351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader351(stack["name"])
}

func (c *current) onDocumentHeader375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader375()
}

func (c *current) onDocumentHeader384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader384()
}

func (c *current) onDocumentHeader387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader387()
}

func (c *current) onDocumentHeader371(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentHeader371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader371(stack["name"], stack["value"])
}

func (c *current) onDocumentHeader1(header, authors, revision, otherAttributes interface{}) (interface{}, error) {

	return types.NewDocumentHeader(header, authors, revision, otherAttributes.([]interface{}))
}

func (p *parser) callonDocumentHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader1(stack["header"], stack["authors"], stack["revision"], stack["otherAttributes"])
}

func (c *current) onDocumentElement16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement16()
}

func (c *current) onDocumentElement8() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement8()
}

func (c *current) onDocumentElement27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement27()
}

func (c *current) onDocumentElement36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement36()
}

func (c *current) onDocumentElement23(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentElement23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement23(stack["name"])
}

func (c *current) onDocumentElement47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement47()
}

func (c *current) onDocumentElement56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement56()
}

func (c *current) onDocumentElement59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement59()
}

func (c *current) onDocumentElement43(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentElement43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement43(stack["name"], stack["value"])
}

func (c *current) onDocumentElement76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement76()
}

func (c *current) onDocumentElement85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement85()
}

func (c *current) onDocumentElement72(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentElement72() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement72(stack["name"])
}

func (c *current) onDocumentElement96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement96()
}

func (c *current) onDocumentElement105() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement105()
}

func (c *current) onDocumentElement92(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentElement92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement92(stack["name"])
}

func (c *current) onDocumentElement133() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement133()
}

func (c *current) onDocumentElement123() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement123()
}

func (c *current) onDocumentElement146() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement146()
}

func (c *current) onDocumentElement158() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement158()
}

func (c *current) onDocumentElement170() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement170()
}

func (c *current) onDocumentElement191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement191()
}

func (c *current) onDocumentElement194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement194()
}

func (c *current) onDocumentElement197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement197()
}

func (c *current) onDocumentElement188(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement188(stack["key"])
}

func (c *current) onDocumentElement211(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement211(stack["value"])
}

func (c *current) onDocumentElement227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement227()
}

func (c *current) onDocumentElement185(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement185(stack["key"], stack["value"])
}

func (c *current) onDocumentElement235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement235()
}

func (c *current) onDocumentElement238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement238()
}

func (c *current) onDocumentElement241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement241()
}

func (c *current) onDocumentElement232(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement232(stack["key"])
}

func (c *current) onDocumentElement258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement258()
}

func (c *current) onDocumentElement229(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement229(stack["key"])
}

func (c *current) onDocumentElement142(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentElement142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement142(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onDocumentElement265() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement265() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement265()
}

func (c *current) onDocumentElement277() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement277() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement277()
}

func (c *current) onDocumentElement298() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement298()
}

func (c *current) onDocumentElement301() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement301()
}

func (c *current) onDocumentElement304() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement304()
}

func (c *current) onDocumentElement295(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement295(stack["key"])
}

func (c *current) onDocumentElement318(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement318(stack["value"])
}

func (c *current) onDocumentElement334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement334()
}

func (c *current) onDocumentElement292(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement292(stack["key"], stack["value"])
}

func (c *current) onDocumentElement342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement342()
}

func (c *current) onDocumentElement345() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement345() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement345()
}

func (c *current) onDocumentElement348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement348()
}

func (c *current) onDocumentElement339(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement339(stack["key"])
}

func (c *current) onDocumentElement365() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement365() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement365()
}

func (c *current) onDocumentElement336(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement336(stack["key"])
}

func (c *current) onDocumentElement261(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentElement261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement261(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onDocumentElement372() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement372()
}

func (c *current) onDocumentElement393() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement393() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement393()
}

func (c *current) onDocumentElement396() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement396()
}

func (c *current) onDocumentElement399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement399()
}

func (c *current) onDocumentElement390(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement390(stack["key"])
}

func (c *current) onDocumentElement413(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement413(stack["value"])
}

func (c *current) onDocumentElement429() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement429()
}

func (c *current) onDocumentElement387(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement387(stack["key"], stack["value"])
}

func (c *current) onDocumentElement437() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement437() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement437()
}

func (c *current) onDocumentElement440() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement440()
}

func (c *current) onDocumentElement443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement443()
}

func (c *current) onDocumentElement434(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement434() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement434(stack["key"])
}

func (c *current) onDocumentElement460() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement460() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement460()
}

func (c *current) onDocumentElement431(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement431(stack["key"])
}

func (c *current) onDocumentElement368(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentElement368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement368(stack["alt"], stack["otherAttrs"])
}

func (c *current) onDocumentElement475() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement475() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement475()
}

func (c *current) onDocumentElement478() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement478() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement478()
}

func (c *current) onDocumentElement481() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement481()
}

func (c *current) onDocumentElement472(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement472() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement472(stack["key"])
}

func (c *current) onDocumentElement495(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement495() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement495(stack["value"])
}

func (c *current) onDocumentElement511() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement511()
}

func (c *current) onDocumentElement469(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement469(stack["key"], stack["value"])
}

func (c *current) onDocumentElement519() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement519()
}

func (c *current) onDocumentElement522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement522()
}

func (c *current) onDocumentElement525() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement525()
}

func (c *current) onDocumentElement516(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement516() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement516(stack["key"])
}

func (c *current) onDocumentElement542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement542()
}

func (c *current) onDocumentElement513(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement513() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement513(stack["key"])
}

func (c *current) onDocumentElement463(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentElement463() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement463(stack["otherAttrs"])
}

func (c *current) onDocumentElement548() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement548() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement548()
}

func (c *current) onDocumentElement119(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewImageBlock(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonDocumentElement119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement119(stack["path"], stack["inlineAttributes"])
}

func (c *current) onDocumentElement562() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement562() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement562()
}

func (c *current) onDocumentElement582() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement582() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement582()
}

func (c *current) onDocumentElement602() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement602() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement602()
}

func (c *current) onDocumentElement593() (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(string(c.text))
}

func (p *parser) callonDocumentElement593() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement593()
}

func (c *current) onDocumentElement574(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonDocumentElement574() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement574(stack["line"])
}

func (c *current) onDocumentElement571(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonDocumentElement571() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement571(stack["lines"])
}

func (c *current) onDocumentElement627() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement627() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement627()
}

func (c *current) onDocumentElement556(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Listing, content.([]interface{}), types.None)
}

func (p *parser) callonDocumentElement556() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement556(stack["content"])
}

func (c *current) onDocumentElement643() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement643() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement643()
}

func (c *current) onDocumentElement650() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement650() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement650()
}

func (c *current) onDocumentElement674() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement674() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement674()
}

func (c *current) onDocumentElement637(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Comment, content.([]interface{}), types.Verbatim)
}

func (p *parser) callonDocumentElement637() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement637(stack["content"])
}

func (c *current) onDocumentElement696() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement696() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement696()
}

func (c *current) onDocumentElement692() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement692() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement692()
}

func (c *current) onDocumentElement728() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement728() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement728()
}

func (c *current) onDocumentElement720() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement720() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement720()
}

func (c *current) onDocumentElement717() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement717() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement717()
}

func (c *current) onDocumentElement714(otherLine interface{}) (interface{}, error) {
	return otherLine, nil // do not include the trailing 'EOL'

}

func (p *parser) callonDocumentElement714() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement714(stack["otherLine"])
}

func (c *current) onDocumentElement689(firstLine, otherLines interface{}) (interface{}, error) {

	return append([]interface{}{firstLine}, otherLines.([]interface{})...), nil

}

func (p *parser) callonDocumentElement689() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement689(stack["firstLine"], stack["otherLines"])
}

func (c *current) onDocumentElement687(lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithSpacesOnFirstLine, lines.([]interface{}))
}

func (p *parser) callonDocumentElement687() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement687(stack["lines"])
}

func (c *current) onDocumentElement755() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement755() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement755()
}

func (c *current) onDocumentElement767() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement767() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement767()
}

func (c *current) onDocumentElement764(line interface{}) (interface{}, error) {

	return line, nil // do not include the trailing 'EOL'

}

func (p *parser) callonDocumentElement764() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement764(stack["line"])
}

func (c *current) onDocumentElement761(lines interface{}) (interface{}, error) {
	return lines.([]interface{}), nil

}

func (p *parser) callonDocumentElement761() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement761(stack["lines"])
}

func (c *current) onDocumentElement791() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement791() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement791()
}

func (c *current) onDocumentElement749(lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithDelimiter, lines.([]interface{}))
}

func (p *parser) callonDocumentElement749() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement749(stack["lines"])
}

func (c *current) onDocumentElement810() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement810() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement810()
}

func (c *current) onDocumentElement804() (interface{}, error) {
	return types.NewLiteralAttribute()
}

func (p *parser) callonDocumentElement804() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement804()
}

func (c *current) onDocumentElement836() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement836() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement836()
}

func (c *current) onDocumentElement826() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement826() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement826()
}

func (c *current) onDocumentElement822(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentElement822() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement822(stack["id"])
}

func (c *current) onDocumentElement864() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement864() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement864()
}

func (c *current) onDocumentElement854() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement854() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement854()
}

func (c *current) onDocumentElement850(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentElement850() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement850(stack["id"])
}

func (c *current) onDocumentElement886() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement886() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement886()
}

func (c *current) onDocumentElement889() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement889() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement889()
}

func (c *current) onDocumentElement878(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentElement878() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement878(stack["title"])
}

func (c *current) onDocumentElement903() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement903() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement903()
}

func (c *current) onDocumentElement906() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement906() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement906()
}

func (c *current) onDocumentElement897(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentElement897() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement897(stack["role"])
}

func (c *current) onDocumentElement917() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonDocumentElement917() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement917()
}

func (c *current) onDocumentElement923() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement923() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement923()
}

func (c *current) onDocumentElement919(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonDocumentElement919() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement919(stack["language"])
}

func (c *current) onDocumentElement938() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement938() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement938()
}

func (c *current) onDocumentElement943() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement943() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement943()
}

func (c *current) onDocumentElement947() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement947() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement947()
}

func (c *current) onDocumentElement963() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement963() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement963()
}

func (c *current) onDocumentElement934(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonDocumentElement934() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement934(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onDocumentElement982() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement982() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement982()
}

func (c *current) onDocumentElement987() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement987() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement987()
}

func (c *current) onDocumentElement991() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement991() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement991()
}

func (c *current) onDocumentElement978(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonDocumentElement978() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement978(stack["kind"], stack["author"])
}

func (c *current) onDocumentElement1010() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1010() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1010()
}

func (c *current) onDocumentElement1015() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1015() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1015()
}

func (c *current) onDocumentElement1006(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonDocumentElement1006() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1006(stack["kind"])
}

func (c *current) onDocumentElement1026() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1026() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1026()
}

func (c *current) onDocumentElement1031() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1031() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1031()
}

func (c *current) onDocumentElement1035() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1035() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1035()
}

func (c *current) onDocumentElement1051() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1051() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1051()
}

func (c *current) onDocumentElement1022(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonDocumentElement1022() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1022(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onDocumentElement1070() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1070() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1070()
}

func (c *current) onDocumentElement1075() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1075() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1075()
}

func (c *current) onDocumentElement1079() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1079() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1079()
}

func (c *current) onDocumentElement1066(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonDocumentElement1066() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1066(stack["kind"], stack["author"])
}

func (c *current) onDocumentElement1098() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1098() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1098()
}

func (c *current) onDocumentElement1103() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1103()
}

func (c *current) onDocumentElement1094(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonDocumentElement1094() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1094(stack["kind"])
}

func (c *current) onDocumentElement1106(attribute interface{}) error {
	c.state["verse"] = true
	return nil

}

func (p *parser) callonDocumentElement1106() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1106(stack["attribute"])
}

func (c *current) onDocumentElement1018(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonDocumentElement1018() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1018(stack["attribute"])
}

func (c *current) onDocumentElement1112() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentElement1112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1112()
}

func (c *current) onDocumentElement1114() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentElement1114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1114()
}

func (c *current) onDocumentElement1116() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentElement1116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1116()
}

func (c *current) onDocumentElement1118() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentElement1118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1118()
}

func (c *current) onDocumentElement1120() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentElement1120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1120()
}

func (c *current) onDocumentElement1107(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentElement1107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1107(stack["k"])
}

func (c *current) onDocumentElement1123() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentElement1123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1123()
}

func (c *current) onDocumentElement1131() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1131()
}

func (c *current) onDocumentElement1142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1142()
}

func (c *current) onDocumentElement1145() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1145()
}

func (c *current) onDocumentElement1148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1148()
}

func (c *current) onDocumentElement1139(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1139(stack["key"])
}

func (c *current) onDocumentElement1162(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1162(stack["value"])
}

func (c *current) onDocumentElement1178() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1178()
}

func (c *current) onDocumentElement1136(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement1136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1136(stack["key"], stack["value"])
}

func (c *current) onDocumentElement1186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1186()
}

func (c *current) onDocumentElement1189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1189()
}

func (c *current) onDocumentElement1192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1192()
}

func (c *current) onDocumentElement1183(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1183(stack["key"])
}

func (c *current) onDocumentElement1209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1209()
}

func (c *current) onDocumentElement1180(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement1180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1180(stack["key"])
}

func (c *current) onDocumentElement1125(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentElement1125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1125(stack["attributes"])
}

func (c *current) onDocumentElement1215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1215()
}

func (c *current) onDocumentElement816(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonDocumentElement816() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement816(stack["attr"])
}

func (c *current) onDocumentElement1240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1240()
}

func (c *current) onDocumentElement1232() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement1232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1232()
}

func (c *current) onDocumentElement1229() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement1229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1229()
}

func (c *current) onDocumentElement1226(line interface{}) (interface{}, error) {
	return line, nil // do not include the trailing 'EOL'

}

func (p *parser) callonDocumentElement1226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1226(stack["line"])
}

func (c *current) onDocumentElement1223(lines interface{}) (interface{}, error) {

	return lines.([]interface{}), nil

}

func (p *parser) callonDocumentElement1223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1223(stack["lines"])
}

func (c *current) onDocumentElement800(attributes, lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithAttribute, lines.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonDocumentElement800() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement800(stack["attributes"], stack["lines"])
}

func (c *current) onDocumentElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonDocumentElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1(stack["element"])
}

func (c *current) onQuoteAttributes6() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes6()
}

func (c *current) onQuoteAttributes11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes11()
}

func (c *current) onQuoteAttributes15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes15()
}

func (c *current) onQuoteAttributes31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes31()
}

func (c *current) onQuoteAttributes2(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonQuoteAttributes2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes2(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onQuoteAttributes50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes50()
}

func (c *current) onQuoteAttributes55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes55()
}

func (c *current) onQuoteAttributes59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes59()
}

func (c *current) onQuoteAttributes46(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonQuoteAttributes46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes46(stack["kind"], stack["author"])
}

func (c *current) onQuoteAttributes78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes78()
}

func (c *current) onQuoteAttributes83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes83()
}

func (c *current) onQuoteAttributes74(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonQuoteAttributes74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes74(stack["kind"])
}

func (c *current) onVerseAttributes9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes9()
}

func (c *current) onVerseAttributes14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes14()
}

func (c *current) onVerseAttributes18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes18()
}

func (c *current) onVerseAttributes34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes34()
}

func (c *current) onVerseAttributes5(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonVerseAttributes5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes5(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onVerseAttributes53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes53()
}

func (c *current) onVerseAttributes58() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes58() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes58()
}

func (c *current) onVerseAttributes62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes62()
}

func (c *current) onVerseAttributes49(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonVerseAttributes49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes49(stack["kind"], stack["author"])
}

func (c *current) onVerseAttributes81() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes81()
}

func (c *current) onVerseAttributes86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes86()
}

func (c *current) onVerseAttributes77(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonVerseAttributes77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes77(stack["kind"])
}

func (c *current) onVerseAttributes89(attribute interface{}) error {
	c.state["verse"] = true
	return nil

}

func (p *parser) callonVerseAttributes89() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes89(stack["attribute"])
}

func (c *current) onVerseAttributes1(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonVerseAttributes1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes1(stack["attribute"])
}

func (c *current) onSection1(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1(stack["section"])
}

func (c *current) onSection01(header, elements interface{}) (interface{}, error) {
	return types.NewSection(0, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection01() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection01(stack["header"], stack["elements"])
}

func (c *current) onSection0Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title7()
}

func (c *current) onSection0Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title27()
}

func (c *current) onSection0Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title17()
}

func (c *current) onSection0Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title44()
}

func (c *current) onSection0Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection0Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title13(stack["id"])
}

func (c *current) onSection0Title1(elements, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection0Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title1(stack["elements"], stack["id"])
}

func (c *current) onSection0TitleWithAttributes25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes25()
}

func (c *current) onSection0TitleWithAttributes15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes15()
}

func (c *current) onSection0TitleWithAttributes11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0TitleWithAttributes11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes11(stack["id"])
}

func (c *current) onSection0TitleWithAttributes53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes53()
}

func (c *current) onSection0TitleWithAttributes43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes43()
}

func (c *current) onSection0TitleWithAttributes39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0TitleWithAttributes39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes39(stack["id"])
}

func (c *current) onSection0TitleWithAttributes75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes75()
}

func (c *current) onSection0TitleWithAttributes78() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0TitleWithAttributes78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes78()
}

func (c *current) onSection0TitleWithAttributes67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection0TitleWithAttributes67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes67(stack["title"])
}

func (c *current) onSection0TitleWithAttributes92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes92()
}

func (c *current) onSection0TitleWithAttributes95() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0TitleWithAttributes95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes95()
}

func (c *current) onSection0TitleWithAttributes86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection0TitleWithAttributes86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes86(stack["role"])
}

func (c *current) onSection0TitleWithAttributes106() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection0TitleWithAttributes106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes106()
}

func (c *current) onSection0TitleWithAttributes112() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0TitleWithAttributes112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes112()
}

func (c *current) onSection0TitleWithAttributes108(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection0TitleWithAttributes108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes108(stack["language"])
}

func (c *current) onSection0TitleWithAttributes127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes127()
}

func (c *current) onSection0TitleWithAttributes132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes132()
}

func (c *current) onSection0TitleWithAttributes136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes136()
}

func (c *current) onSection0TitleWithAttributes152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes152()
}

func (c *current) onSection0TitleWithAttributes123(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection0TitleWithAttributes123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes123(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection0TitleWithAttributes171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes171()
}

func (c *current) onSection0TitleWithAttributes176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes176()
}

func (c *current) onSection0TitleWithAttributes180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes180()
}

func (c *current) onSection0TitleWithAttributes167(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection0TitleWithAttributes167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes167(stack["kind"], stack["author"])
}

func (c *current) onSection0TitleWithAttributes199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes199()
}

func (c *current) onSection0TitleWithAttributes204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes204()
}

func (c *current) onSection0TitleWithAttributes195(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection0TitleWithAttributes195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes195(stack["kind"])
}

func (c *current) onSection0TitleWithAttributes215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes215()
}

func (c *current) onSection0TitleWithAttributes220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes220()
}

func (c *current) onSection0TitleWithAttributes224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes224()
}

func (c *current) onSection0TitleWithAttributes240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes240()
}

func (c *current) onSection0TitleWithAttributes211(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection0TitleWithAttributes211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes211(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection0TitleWithAttributes259() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes259()
}

func (c *current) onSection0TitleWithAttributes264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes264()
}

func (c *current) onSection0TitleWithAttributes268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes268()
}

func (c *current) onSection0TitleWithAttributes255(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection0TitleWithAttributes255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes255(stack["kind"], stack["author"])
}

func (c *current) onSection0TitleWithAttributes287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes287()
}

func (c *current) onSection0TitleWithAttributes292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes292()
}

func (c *current) onSection0TitleWithAttributes283(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection0TitleWithAttributes283() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes283(stack["kind"])
}

func (c *current) onSection0TitleWithAttributes295(attribute interface{}) error {
	c.state["verse"] = true
	return nil

}

func (p *parser) callonSection0TitleWithAttributes295() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes295(stack["attribute"])
}

func (c *current) onSection0TitleWithAttributes207(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonSection0TitleWithAttributes207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes207(stack["attribute"])
}

func (c *current) onSection0TitleWithAttributes301() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection0TitleWithAttributes301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes301()
}

func (c *current) onSection0TitleWithAttributes303() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection0TitleWithAttributes303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes303()
}

func (c *current) onSection0TitleWithAttributes305() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection0TitleWithAttributes305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes305()
}

func (c *current) onSection0TitleWithAttributes307() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection0TitleWithAttributes307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes307()
}

func (c *current) onSection0TitleWithAttributes309() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0TitleWithAttributes309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes309()
}

func (c *current) onSection0TitleWithAttributes296(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0TitleWithAttributes296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes296(stack["k"])
}

func (c *current) onSection0TitleWithAttributes312() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0TitleWithAttributes312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes312()
}

func (c *current) onSection0TitleWithAttributes320() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes320()
}

func (c *current) onSection0TitleWithAttributes331() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes331()
}

func (c *current) onSection0TitleWithAttributes334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes334()
}

func (c *current) onSection0TitleWithAttributes337() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes337()
}

func (c *current) onSection0TitleWithAttributes328(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes328(stack["key"])
}

func (c *current) onSection0TitleWithAttributes351(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes351(stack["value"])
}

func (c *current) onSection0TitleWithAttributes367() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes367()
}

func (c *current) onSection0TitleWithAttributes325(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection0TitleWithAttributes325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes325(stack["key"], stack["value"])
}

func (c *current) onSection0TitleWithAttributes375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes375()
}

func (c *current) onSection0TitleWithAttributes378() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes378()
}

func (c *current) onSection0TitleWithAttributes381() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes381()
}

func (c *current) onSection0TitleWithAttributes372(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes372(stack["key"])
}

func (c *current) onSection0TitleWithAttributes398() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes398()
}

func (c *current) onSection0TitleWithAttributes369(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection0TitleWithAttributes369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes369(stack["key"])
}

func (c *current) onSection0TitleWithAttributes314(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0TitleWithAttributes314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes314(stack["attributes"])
}

func (c *current) onSection0TitleWithAttributes404() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes404() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes404()
}

func (c *current) onSection0TitleWithAttributes5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection0TitleWithAttributes5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes5(stack["attr"])
}

func (c *current) onSection0TitleWithAttributes1(attributes, title interface{}) (interface{}, error) {
	return types.WithAttributes(title, attributes.([]interface{}))

}

func (p *parser) callonSection0TitleWithAttributes1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes1(stack["attributes"], stack["title"])
}

func (c *current) onSection0Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element9()
}

func (c *current) onSection0Element33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element33()
}

func (c *current) onSection0Element23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element23()
}

func (c *current) onSection0Element19(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Element19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element19(stack["id"])
}

func (c *current) onSection0Element61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element61()
}

func (c *current) onSection0Element51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element51()
}

func (c *current) onSection0Element47(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Element47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element47(stack["id"])
}

func (c *current) onSection0Element83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element83()
}

func (c *current) onSection0Element86() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0Element86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element86()
}

func (c *current) onSection0Element75(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection0Element75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element75(stack["title"])
}

func (c *current) onSection0Element100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element100()
}

func (c *current) onSection0Element103() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0Element103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element103()
}

func (c *current) onSection0Element94(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection0Element94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element94(stack["role"])
}

func (c *current) onSection0Element114() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection0Element114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element114()
}

func (c *current) onSection0Element120() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0Element120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element120()
}

func (c *current) onSection0Element116(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection0Element116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element116(stack["language"])
}

func (c *current) onSection0Element135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element135()
}

func (c *current) onSection0Element140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element140()
}

func (c *current) onSection0Element144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element144()
}

func (c *current) onSection0Element160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element160()
}

func (c *current) onSection0Element131(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection0Element131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element131(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection0Element179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element179()
}

func (c *current) onSection0Element184() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element184()
}

func (c *current) onSection0Element188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element188()
}

func (c *current) onSection0Element175(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection0Element175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element175(stack["kind"], stack["author"])
}

func (c *current) onSection0Element207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element207()
}

func (c *current) onSection0Element212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element212()
}

func (c *current) onSection0Element203(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection0Element203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element203(stack["kind"])
}

func (c *current) onSection0Element223() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element223()
}

func (c *current) onSection0Element228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element228()
}

func (c *current) onSection0Element232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element232()
}

func (c *current) onSection0Element248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element248()
}

func (c *current) onSection0Element219(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection0Element219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element219(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection0Element267() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element267() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element267()
}

func (c *current) onSection0Element272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element272()
}

func (c *current) onSection0Element276() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element276()
}

func (c *current) onSection0Element263(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection0Element263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element263(stack["kind"], stack["author"])
}

func (c *current) onSection0Element295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element295()
}

func (c *current) onSection0Element300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element300()
}

func (c *current) onSection0Element291(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection0Element291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element291(stack["kind"])
}

func (c *current) onSection0Element303(attribute interface{}) error {
	c.state["verse"] = true
	return nil

}

func (p *parser) callonSection0Element303() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element303(stack["attribute"])
}

func (c *current) onSection0Element215(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonSection0Element215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element215(stack["attribute"])
}

func (c *current) onSection0Element309() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection0Element309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element309()
}

func (c *current) onSection0Element311() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection0Element311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element311()
}

func (c *current) onSection0Element313() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection0Element313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element313()
}

func (c *current) onSection0Element315() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection0Element315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element315()
}

func (c *current) onSection0Element317() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0Element317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element317()
}

func (c *current) onSection0Element304(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0Element304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element304(stack["k"])
}

func (c *current) onSection0Element320() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0Element320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element320()
}

func (c *current) onSection0Element328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element328()
}

func (c *current) onSection0Element339() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element339()
}

func (c *current) onSection0Element342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element342()
}

func (c *current) onSection0Element345() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element345() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element345()
}

func (c *current) onSection0Element336(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element336(stack["key"])
}

func (c *current) onSection0Element359(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element359() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element359(stack["value"])
}

func (c *current) onSection0Element375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element375()
}

func (c *current) onSection0Element333(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection0Element333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element333(stack["key"], stack["value"])
}

func (c *current) onSection0Element383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element383()
}

func (c *current) onSection0Element386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element386()
}

func (c *current) onSection0Element389() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element389()
}

func (c *current) onSection0Element380(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element380(stack["key"])
}

func (c *current) onSection0Element406() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element406()
}

func (c *current) onSection0Element377(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection0Element377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element377(stack["key"])
}

func (c *current) onSection0Element322(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0Element322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element322(stack["attributes"])
}

func (c *current) onSection0Element412() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element412()
}

func (c *current) onSection0Element13(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection0Element13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element13(stack["attr"])
}

func (c *current) onSection0Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection0Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection11(header, elements interface{}) (interface{}, error) {
	return types.NewSection(1, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection11(stack["header"], stack["elements"])
}

func (c *current) onSection1Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title7()
}

func (c *current) onSection1Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title27()
}

func (c *current) onSection1Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title17()
}

func (c *current) onSection1Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title44()
}

func (c *current) onSection1Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection1Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title13(stack["id"])
}

func (c *current) onSection1Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection1Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title1(stack["elements"], stack["id"])
}

func (c *current) onSection1Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element9()
}

func (c *current) onSection1Element33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element33()
}

func (c *current) onSection1Element23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element23()
}

func (c *current) onSection1Element19(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Element19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element19(stack["id"])
}

func (c *current) onSection1Element61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element61()
}

func (c *current) onSection1Element51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element51()
}

func (c *current) onSection1Element47(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Element47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element47(stack["id"])
}

func (c *current) onSection1Element83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element83()
}

func (c *current) onSection1Element86() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection1Element86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element86()
}

func (c *current) onSection1Element75(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection1Element75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element75(stack["title"])
}

func (c *current) onSection1Element100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element100()
}

func (c *current) onSection1Element103() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection1Element103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element103()
}

func (c *current) onSection1Element94(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection1Element94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element94(stack["role"])
}

func (c *current) onSection1Element114() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection1Element114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element114()
}

func (c *current) onSection1Element120() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection1Element120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element120()
}

func (c *current) onSection1Element116(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection1Element116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element116(stack["language"])
}

func (c *current) onSection1Element135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element135()
}

func (c *current) onSection1Element140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element140()
}

func (c *current) onSection1Element144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element144()
}

func (c *current) onSection1Element160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element160()
}

func (c *current) onSection1Element131(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection1Element131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element131(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection1Element179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element179()
}

func (c *current) onSection1Element184() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element184()
}

func (c *current) onSection1Element188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element188()
}

func (c *current) onSection1Element175(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection1Element175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element175(stack["kind"], stack["author"])
}

func (c *current) onSection1Element207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element207()
}

func (c *current) onSection1Element212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element212()
}

func (c *current) onSection1Element203(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection1Element203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element203(stack["kind"])
}

func (c *current) onSection1Element223() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element223()
}

func (c *current) onSection1Element228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element228()
}

func (c *current) onSection1Element232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element232()
}

func (c *current) onSection1Element248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element248()
}

func (c *current) onSection1Element219(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection1Element219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element219(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection1Element267() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element267() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element267()
}

func (c *current) onSection1Element272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element272()
}

func (c *current) onSection1Element276() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element276()
}

func (c *current) onSection1Element263(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection1Element263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element263(stack["kind"], stack["author"])
}

func (c *current) onSection1Element295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element295()
}

func (c *current) onSection1Element300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element300()
}

func (c *current) onSection1Element291(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection1Element291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element291(stack["kind"])
}

func (c *current) onSection1Element303(attribute interface{}) error {
	c.state["verse"] = true
	return nil

}

func (p *parser) callonSection1Element303() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element303(stack["attribute"])
}

func (c *current) onSection1Element215(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonSection1Element215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element215(stack["attribute"])
}

func (c *current) onSection1Element309() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection1Element309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element309()
}

func (c *current) onSection1Element311() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection1Element311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element311()
}

func (c *current) onSection1Element313() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection1Element313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element313()
}

func (c *current) onSection1Element315() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection1Element315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element315()
}

func (c *current) onSection1Element317() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection1Element317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element317()
}

func (c *current) onSection1Element304(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection1Element304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element304(stack["k"])
}

func (c *current) onSection1Element320() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection1Element320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element320()
}

func (c *current) onSection1Element328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element328()
}

func (c *current) onSection1Element339() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element339()
}

func (c *current) onSection1Element342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element342()
}

func (c *current) onSection1Element345() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element345() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element345()
}

func (c *current) onSection1Element336(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element336(stack["key"])
}

func (c *current) onSection1Element359(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element359() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element359(stack["value"])
}

func (c *current) onSection1Element375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element375()
}

func (c *current) onSection1Element333(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection1Element333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element333(stack["key"], stack["value"])
}

func (c *current) onSection1Element383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element383()
}

func (c *current) onSection1Element386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element386()
}

func (c *current) onSection1Element389() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element389()
}

func (c *current) onSection1Element380(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element380(stack["key"])
}

func (c *current) onSection1Element406() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element406()
}

func (c *current) onSection1Element377(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection1Element377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element377(stack["key"])
}

func (c *current) onSection1Element322(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection1Element322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element322(stack["attributes"])
}

func (c *current) onSection1Element412() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element412()
}

func (c *current) onSection1Element13(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection1Element13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element13(stack["attr"])
}

func (c *current) onSection1Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection1Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection21(header, elements interface{}) (interface{}, error) {
	return types.NewSection(2, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection21(stack["header"], stack["elements"])
}

func (c *current) onSection2Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title7()
}

func (c *current) onSection2Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title27()
}

func (c *current) onSection2Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title17()
}

func (c *current) onSection2Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title44()
}

func (c *current) onSection2Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection2Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title13(stack["id"])
}

func (c *current) onSection2Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection2Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title1(stack["elements"], stack["id"])
}

func (c *current) onSection2Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element9()
}

func (c *current) onSection2Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element17()
}

func (c *current) onSection2Element41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element41()
}

func (c *current) onSection2Element31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element31()
}

func (c *current) onSection2Element27(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Element27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element27(stack["id"])
}

func (c *current) onSection2Element69() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element69()
}

func (c *current) onSection2Element59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element59()
}

func (c *current) onSection2Element55(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Element55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element55(stack["id"])
}

func (c *current) onSection2Element91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element91()
}

func (c *current) onSection2Element94() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection2Element94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element94()
}

func (c *current) onSection2Element83(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection2Element83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element83(stack["title"])
}

func (c *current) onSection2Element108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element108()
}

func (c *current) onSection2Element111() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection2Element111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element111()
}

func (c *current) onSection2Element102(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection2Element102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element102(stack["role"])
}

func (c *current) onSection2Element122() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection2Element122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element122()
}

func (c *current) onSection2Element128() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection2Element128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element128()
}

func (c *current) onSection2Element124(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection2Element124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element124(stack["language"])
}

func (c *current) onSection2Element143() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element143()
}

func (c *current) onSection2Element148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element148()
}

func (c *current) onSection2Element152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element152()
}

func (c *current) onSection2Element168() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element168()
}

func (c *current) onSection2Element139(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection2Element139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element139(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection2Element187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element187()
}

func (c *current) onSection2Element192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element192()
}

func (c *current) onSection2Element196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element196()
}

func (c *current) onSection2Element183(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection2Element183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element183(stack["kind"], stack["author"])
}

func (c *current) onSection2Element215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element215()
}

func (c *current) onSection2Element220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element220()
}

func (c *current) onSection2Element211(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection2Element211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element211(stack["kind"])
}

func (c *current) onSection2Element231() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element231()
}

func (c *current) onSection2Element236() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element236()
}

func (c *current) onSection2Element240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element240()
}

func (c *current) onSection2Element256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element256()
}

func (c *current) onSection2Element227(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection2Element227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element227(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection2Element275() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element275()
}

func (c *current) onSection2Element280() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element280() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element280()
}

func (c *current) onSection2Element284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element284()
}

func (c *current) onSection2Element271(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection2Element271() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element271(stack["kind"], stack["author"])
}

func (c *current) onSection2Element303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element303()
}

func (c *current) onSection2Element308() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element308() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element308()
}

func (c *current) onSection2Element299(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection2Element299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element299(stack["kind"])
}

func (c *current) onSection2Element311(attribute interface{}) error {
	c.state["verse"] = true
	return nil

}

func (p *parser) callonSection2Element311() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element311(stack["attribute"])
}

func (c *current) onSection2Element223(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonSection2Element223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element223(stack["attribute"])
}

func (c *current) onSection2Element317() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection2Element317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element317()
}

func (c *current) onSection2Element319() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection2Element319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element319()
}

func (c *current) onSection2Element321() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection2Element321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element321()
}

func (c *current) onSection2Element323() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection2Element323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element323()
}

func (c *current) onSection2Element325() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection2Element325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element325()
}

func (c *current) onSection2Element312(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection2Element312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element312(stack["k"])
}

func (c *current) onSection2Element328() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection2Element328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element328()
}

func (c *current) onSection2Element336() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element336()
}

func (c *current) onSection2Element347() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element347()
}

func (c *current) onSection2Element350() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element350() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element350()
}

func (c *current) onSection2Element353() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element353()
}

func (c *current) onSection2Element344(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element344(stack["key"])
}

func (c *current) onSection2Element367(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element367(stack["value"])
}

func (c *current) onSection2Element383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element383()
}

func (c *current) onSection2Element341(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection2Element341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element341(stack["key"], stack["value"])
}

func (c *current) onSection2Element391() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element391() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element391()
}

func (c *current) onSection2Element394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element394()
}

func (c *current) onSection2Element397() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element397() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element397()
}

func (c *current) onSection2Element388(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element388(stack["key"])
}

func (c *current) onSection2Element414() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element414()
}

func (c *current) onSection2Element385(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection2Element385() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element385(stack["key"])
}

func (c *current) onSection2Element330(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection2Element330() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element330(stack["attributes"])
}

func (c *current) onSection2Element420() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element420()
}

func (c *current) onSection2Element21(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection2Element21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element21(stack["attr"])
}

func (c *current) onSection2Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection2Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection31(header, elements interface{}) (interface{}, error) {
	return types.NewSection(3, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection31(stack["header"], stack["elements"])
}

func (c *current) onSection3Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title7()
}

func (c *current) onSection3Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title27()
}

func (c *current) onSection3Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title17()
}

func (c *current) onSection3Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title44()
}

func (c *current) onSection3Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection3Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title13(stack["id"])
}

func (c *current) onSection3Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection3Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title1(stack["elements"], stack["id"])
}

func (c *current) onSection3Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element9()
}

func (c *current) onSection3Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element17()
}

func (c *current) onSection3Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element25()
}

func (c *current) onSection3Element49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element49()
}

func (c *current) onSection3Element39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element39()
}

func (c *current) onSection3Element35(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Element35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element35(stack["id"])
}

func (c *current) onSection3Element77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element77()
}

func (c *current) onSection3Element67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element67()
}

func (c *current) onSection3Element63(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Element63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element63(stack["id"])
}

func (c *current) onSection3Element99() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element99()
}

func (c *current) onSection3Element102() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection3Element102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element102()
}

func (c *current) onSection3Element91(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection3Element91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element91(stack["title"])
}

func (c *current) onSection3Element116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element116()
}

func (c *current) onSection3Element119() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection3Element119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element119()
}

func (c *current) onSection3Element110(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection3Element110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element110(stack["role"])
}

func (c *current) onSection3Element130() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection3Element130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element130()
}

func (c *current) onSection3Element136() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection3Element136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element136()
}

func (c *current) onSection3Element132(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection3Element132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element132(stack["language"])
}

func (c *current) onSection3Element151() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element151()
}

func (c *current) onSection3Element156() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element156()
}

func (c *current) onSection3Element160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element160()
}

func (c *current) onSection3Element176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element176()
}

func (c *current) onSection3Element147(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection3Element147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element147(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection3Element195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element195()
}

func (c *current) onSection3Element200() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element200() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element200()
}

func (c *current) onSection3Element204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element204()
}

func (c *current) onSection3Element191(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection3Element191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element191(stack["kind"], stack["author"])
}

func (c *current) onSection3Element223() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element223()
}

func (c *current) onSection3Element228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element228()
}

func (c *current) onSection3Element219(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection3Element219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element219(stack["kind"])
}

func (c *current) onSection3Element239() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element239()
}

func (c *current) onSection3Element244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element244()
}

func (c *current) onSection3Element248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element248()
}

func (c *current) onSection3Element264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element264()
}

func (c *current) onSection3Element235(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection3Element235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element235(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection3Element283() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element283() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element283()
}

func (c *current) onSection3Element288() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element288() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element288()
}

func (c *current) onSection3Element292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element292()
}

func (c *current) onSection3Element279(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection3Element279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element279(stack["kind"], stack["author"])
}

func (c *current) onSection3Element311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element311()
}

func (c *current) onSection3Element316() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element316() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element316()
}

func (c *current) onSection3Element307(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection3Element307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element307(stack["kind"])
}

func (c *current) onSection3Element319(attribute interface{}) error {
	c.state["verse"] = true
	return nil

}

func (p *parser) callonSection3Element319() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element319(stack["attribute"])
}

func (c *current) onSection3Element231(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonSection3Element231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element231(stack["attribute"])
}

func (c *current) onSection3Element325() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection3Element325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element325()
}

func (c *current) onSection3Element327() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection3Element327() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element327()
}

func (c *current) onSection3Element329() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection3Element329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element329()
}

func (c *current) onSection3Element331() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection3Element331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element331()
}

func (c *current) onSection3Element333() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection3Element333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element333()
}

func (c *current) onSection3Element320(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection3Element320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element320(stack["k"])
}

func (c *current) onSection3Element336() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection3Element336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element336()
}

func (c *current) onSection3Element344() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element344()
}

func (c *current) onSection3Element355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element355()
}

func (c *current) onSection3Element358() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element358() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element358()
}

func (c *current) onSection3Element361() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element361() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element361()
}

func (c *current) onSection3Element352(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element352() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element352(stack["key"])
}

func (c *current) onSection3Element375(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element375(stack["value"])
}

func (c *current) onSection3Element391() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element391() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element391()
}

func (c *current) onSection3Element349(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection3Element349() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element349(stack["key"], stack["value"])
}

func (c *current) onSection3Element399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element399()
}

func (c *current) onSection3Element402() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element402()
}

func (c *current) onSection3Element405() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element405() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element405()
}

func (c *current) onSection3Element396(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element396(stack["key"])
}

func (c *current) onSection3Element422() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element422()
}

func (c *current) onSection3Element393(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection3Element393() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element393(stack["key"])
}

func (c *current) onSection3Element338(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection3Element338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element338(stack["attributes"])
}

func (c *current) onSection3Element428() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element428() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element428()
}

func (c *current) onSection3Element29(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection3Element29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element29(stack["attr"])
}

func (c *current) onSection3Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection3Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection41(header, elements interface{}) (interface{}, error) {
	return types.NewSection(4, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection41(stack["header"], stack["elements"])
}

func (c *current) onSection4Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title7()
}

func (c *current) onSection4Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title27()
}

func (c *current) onSection4Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title17()
}

func (c *current) onSection4Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title44()
}

func (c *current) onSection4Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection4Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title13(stack["id"])
}

func (c *current) onSection4Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection4Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title1(stack["elements"], stack["id"])
}

func (c *current) onSection4Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element9()
}

func (c *current) onSection4Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element17()
}

func (c *current) onSection4Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element25()
}

func (c *current) onSection4Element33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element33()
}

func (c *current) onSection4Element57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element57()
}

func (c *current) onSection4Element47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element47()
}

func (c *current) onSection4Element43(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Element43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element43(stack["id"])
}

func (c *current) onSection4Element85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element85()
}

func (c *current) onSection4Element75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element75()
}

func (c *current) onSection4Element71(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Element71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element71(stack["id"])
}

func (c *current) onSection4Element107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element107()
}

func (c *current) onSection4Element110() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection4Element110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element110()
}

func (c *current) onSection4Element99(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection4Element99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element99(stack["title"])
}

func (c *current) onSection4Element124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element124()
}

func (c *current) onSection4Element127() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection4Element127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element127()
}

func (c *current) onSection4Element118(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection4Element118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element118(stack["role"])
}

func (c *current) onSection4Element138() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection4Element138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element138()
}

func (c *current) onSection4Element144() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection4Element144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element144()
}

func (c *current) onSection4Element140(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection4Element140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element140(stack["language"])
}

func (c *current) onSection4Element159() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element159()
}

func (c *current) onSection4Element164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element164()
}

func (c *current) onSection4Element168() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element168()
}

func (c *current) onSection4Element184() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element184()
}

func (c *current) onSection4Element155(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection4Element155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element155(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection4Element203() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element203()
}

func (c *current) onSection4Element208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element208()
}

func (c *current) onSection4Element212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element212()
}

func (c *current) onSection4Element199(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection4Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element199(stack["kind"], stack["author"])
}

func (c *current) onSection4Element231() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element231()
}

func (c *current) onSection4Element236() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element236()
}

func (c *current) onSection4Element227(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection4Element227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element227(stack["kind"])
}

func (c *current) onSection4Element247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element247()
}

func (c *current) onSection4Element252() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element252()
}

func (c *current) onSection4Element256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element256()
}

func (c *current) onSection4Element272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element272()
}

func (c *current) onSection4Element243(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection4Element243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element243(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection4Element291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element291()
}

func (c *current) onSection4Element296() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element296()
}

func (c *current) onSection4Element300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element300()
}

func (c *current) onSection4Element287(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection4Element287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element287(stack["kind"], stack["author"])
}

func (c *current) onSection4Element319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element319()
}

func (c *current) onSection4Element324() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element324()
}

func (c *current) onSection4Element315(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection4Element315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element315(stack["kind"])
}

func (c *current) onSection4Element327(attribute interface{}) error {
	c.state["verse"] = true
	return nil

}

func (p *parser) callonSection4Element327() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element327(stack["attribute"])
}

func (c *current) onSection4Element239(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonSection4Element239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element239(stack["attribute"])
}

func (c *current) onSection4Element333() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection4Element333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element333()
}

func (c *current) onSection4Element335() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection4Element335() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element335()
}

func (c *current) onSection4Element337() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection4Element337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element337()
}

func (c *current) onSection4Element339() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection4Element339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element339()
}

func (c *current) onSection4Element341() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection4Element341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element341()
}

func (c *current) onSection4Element328(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection4Element328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element328(stack["k"])
}

func (c *current) onSection4Element344() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection4Element344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element344()
}

func (c *current) onSection4Element352() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element352() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element352()
}

func (c *current) onSection4Element363() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element363()
}

func (c *current) onSection4Element366() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element366() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element366()
}

func (c *current) onSection4Element369() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element369()
}

func (c *current) onSection4Element360(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element360(stack["key"])
}

func (c *current) onSection4Element383(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element383(stack["value"])
}

func (c *current) onSection4Element399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element399()
}

func (c *current) onSection4Element357(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection4Element357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element357(stack["key"], stack["value"])
}

func (c *current) onSection4Element407() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element407() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element407()
}

func (c *current) onSection4Element410() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element410()
}

func (c *current) onSection4Element413() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element413()
}

func (c *current) onSection4Element404(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element404() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element404(stack["key"])
}

func (c *current) onSection4Element430() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element430() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element430()
}

func (c *current) onSection4Element401(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection4Element401() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element401(stack["key"])
}

func (c *current) onSection4Element346(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection4Element346() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element346(stack["attributes"])
}

func (c *current) onSection4Element436() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element436()
}

func (c *current) onSection4Element37(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection4Element37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element37(stack["attr"])
}

func (c *current) onSection4Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection4Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection51(header, elements interface{}) (interface{}, error) {
	return types.NewSection(5, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection51(stack["header"], stack["elements"])
}

func (c *current) onSection5Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title7()
}

func (c *current) onSection5Title27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title27()
}

func (c *current) onSection5Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title17()
}

func (c *current) onSection5Title44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title44()
}

func (c *current) onSection5Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection5Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title13(stack["id"])
}

func (c *current) onSection5Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection5Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title1(stack["elements"], stack["id"])
}

func (c *current) onSection5Element35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element35()
}

func (c *current) onSection5Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element25()
}

func (c *current) onSection5Element21(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Element21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element21(stack["id"])
}

func (c *current) onSection5Element63() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element63()
}

func (c *current) onSection5Element53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element53()
}

func (c *current) onSection5Element49(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Element49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element49(stack["id"])
}

func (c *current) onSection5Element85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element85()
}

func (c *current) onSection5Element88() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection5Element88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element88()
}

func (c *current) onSection5Element77(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection5Element77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element77(stack["title"])
}

func (c *current) onSection5Element102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element102()
}

func (c *current) onSection5Element105() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection5Element105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element105()
}

func (c *current) onSection5Element96(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection5Element96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element96(stack["role"])
}

func (c *current) onSection5Element116() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection5Element116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element116()
}

func (c *current) onSection5Element122() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection5Element122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element122()
}

func (c *current) onSection5Element118(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection5Element118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element118(stack["language"])
}

func (c *current) onSection5Element137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element137()
}

func (c *current) onSection5Element142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element142()
}

func (c *current) onSection5Element146() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element146()
}

func (c *current) onSection5Element162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element162()
}

func (c *current) onSection5Element133(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection5Element133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element133(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection5Element181() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element181()
}

func (c *current) onSection5Element186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element186()
}

func (c *current) onSection5Element190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element190()
}

func (c *current) onSection5Element177(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection5Element177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element177(stack["kind"], stack["author"])
}

func (c *current) onSection5Element209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element209()
}

func (c *current) onSection5Element214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element214()
}

func (c *current) onSection5Element205(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection5Element205() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element205(stack["kind"])
}

func (c *current) onSection5Element225() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element225()
}

func (c *current) onSection5Element230() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element230()
}

func (c *current) onSection5Element234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element234()
}

func (c *current) onSection5Element250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element250()
}

func (c *current) onSection5Element221(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection5Element221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element221(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection5Element269() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element269() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element269()
}

func (c *current) onSection5Element274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element274()
}

func (c *current) onSection5Element278() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element278()
}

func (c *current) onSection5Element265(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection5Element265() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element265(stack["kind"], stack["author"])
}

func (c *current) onSection5Element297() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element297() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element297()
}

func (c *current) onSection5Element302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element302()
}

func (c *current) onSection5Element293(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection5Element293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element293(stack["kind"])
}

func (c *current) onSection5Element305(attribute interface{}) error {
	c.state["verse"] = true
	return nil

}

func (p *parser) callonSection5Element305() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element305(stack["attribute"])
}

func (c *current) onSection5Element217(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonSection5Element217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element217(stack["attribute"])
}

func (c *current) onSection5Element311() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection5Element311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element311()
}

func (c *current) onSection5Element313() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection5Element313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element313()
}

func (c *current) onSection5Element315() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection5Element315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element315()
}

func (c *current) onSection5Element317() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection5Element317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element317()
}

func (c *current) onSection5Element319() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection5Element319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element319()
}

func (c *current) onSection5Element306(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection5Element306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element306(stack["k"])
}

func (c *current) onSection5Element322() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection5Element322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element322()
}

func (c *current) onSection5Element330() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element330() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element330()
}

func (c *current) onSection5Element341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element341()
}

func (c *current) onSection5Element344() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element344()
}

func (c *current) onSection5Element347() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element347()
}

func (c *current) onSection5Element338(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element338(stack["key"])
}

func (c *current) onSection5Element361(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element361() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element361(stack["value"])
}

func (c *current) onSection5Element377() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element377()
}

func (c *current) onSection5Element335(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection5Element335() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element335(stack["key"], stack["value"])
}

func (c *current) onSection5Element385() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element385() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element385()
}

func (c *current) onSection5Element388() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element388()
}

func (c *current) onSection5Element391() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element391() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element391()
}

func (c *current) onSection5Element382(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element382(stack["key"])
}

func (c *current) onSection5Element408() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element408()
}

func (c *current) onSection5Element379(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection5Element379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element379(stack["key"])
}

func (c *current) onSection5Element324(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection5Element324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element324(stack["attributes"])
}

func (c *current) onSection5Element414() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element414()
}

func (c *current) onSection5Element15(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonSection5Element15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element15(stack["attr"])
}

func (c *current) onSection5Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))

}

func (p *parser) callonSection5Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element1(stack["attributes"], stack["element"])
}

func (c *current) onTitleElements12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements12()
}

func (c *current) onTitleElements29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements29()
}

func (c *current) onTitleElements19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements19()
}

func (c *current) onTitleElements46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements46()
}

func (c *current) onTitleElements15(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonTitleElements15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements15(stack["id"])
}

func (c *current) onTitleElements52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements52()
}

func (c *current) onTitleElements1(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonTitleElements1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements1(stack["elements"])
}

func (c *current) onTitleElement18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement18()
}

func (c *current) onTitleElement8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement8()
}

func (c *current) onTitleElement34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement34()
}

func (c *current) onTitleElement38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement38()
}

func (c *current) onTitleElement4(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonTitleElement4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement4(stack["id"], stack["label"])
}

func (c *current) onTitleElement59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement59()
}

func (c *current) onTitleElement49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement49()
}

func (c *current) onTitleElement45(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonTitleElement45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement45(stack["id"])
}

func (c *current) onTitleElement90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement90()
}

func (c *current) onTitleElement80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement80()
}

func (c *current) onTitleElement103() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement103()
}

func (c *current) onTitleElement115() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement115()
}

func (c *current) onTitleElement127() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement127()
}

func (c *current) onTitleElement148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement148()
}

func (c *current) onTitleElement151() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement151()
}

func (c *current) onTitleElement154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement154()
}

func (c *current) onTitleElement145(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement145(stack["key"])
}

func (c *current) onTitleElement168(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement168(stack["value"])
}

func (c *current) onTitleElement184() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement184()
}

func (c *current) onTitleElement142(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement142(stack["key"], stack["value"])
}

func (c *current) onTitleElement192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement192()
}

func (c *current) onTitleElement195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement195()
}

func (c *current) onTitleElement198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement198()
}

func (c *current) onTitleElement189(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement189(stack["key"])
}

func (c *current) onTitleElement215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement215()
}

func (c *current) onTitleElement186(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement186(stack["key"])
}

func (c *current) onTitleElement99(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement99(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onTitleElement222() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement222()
}

func (c *current) onTitleElement234() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement234()
}

func (c *current) onTitleElement255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement255()
}

func (c *current) onTitleElement258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement258()
}

func (c *current) onTitleElement261() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement261()
}

func (c *current) onTitleElement252(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement252(stack["key"])
}

func (c *current) onTitleElement275(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement275(stack["value"])
}

func (c *current) onTitleElement291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement291()
}

func (c *current) onTitleElement249(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement249(stack["key"], stack["value"])
}

func (c *current) onTitleElement299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement299()
}

func (c *current) onTitleElement302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement302()
}

func (c *current) onTitleElement305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement305()
}

func (c *current) onTitleElement296(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement296(stack["key"])
}

func (c *current) onTitleElement322() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement322()
}

func (c *current) onTitleElement293(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement293(stack["key"])
}

func (c *current) onTitleElement218(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement218(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onTitleElement329() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement329()
}

func (c *current) onTitleElement350() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement350() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement350()
}

func (c *current) onTitleElement353() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement353()
}

func (c *current) onTitleElement356() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement356()
}

func (c *current) onTitleElement347(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement347(stack["key"])
}

func (c *current) onTitleElement370(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement370(stack["value"])
}

func (c *current) onTitleElement386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement386()
}

func (c *current) onTitleElement344(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement344(stack["key"], stack["value"])
}

func (c *current) onTitleElement394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement394()
}

func (c *current) onTitleElement397() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement397() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement397()
}

func (c *current) onTitleElement400() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement400()
}

func (c *current) onTitleElement391(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement391() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement391(stack["key"])
}

func (c *current) onTitleElement417() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement417()
}

func (c *current) onTitleElement388(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement388(stack["key"])
}

func (c *current) onTitleElement325(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement325(stack["alt"], stack["otherAttrs"])
}

func (c *current) onTitleElement432() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement432()
}

func (c *current) onTitleElement435() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement435()
}

func (c *current) onTitleElement438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement438()
}

func (c *current) onTitleElement429(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement429(stack["key"])
}

func (c *current) onTitleElement452(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement452(stack["value"])
}

func (c *current) onTitleElement468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement468()
}

func (c *current) onTitleElement426(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement426(stack["key"], stack["value"])
}

func (c *current) onTitleElement476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement476()
}

func (c *current) onTitleElement479() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement479() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement479()
}

func (c *current) onTitleElement482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement482()
}

func (c *current) onTitleElement473(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement473(stack["key"])
}

func (c *current) onTitleElement499() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement499() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement499()
}

func (c *current) onTitleElement470(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement470() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement470(stack["key"])
}

func (c *current) onTitleElement420(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement420(stack["otherAttrs"])
}

func (c *current) onTitleElement74(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement74(stack["path"], stack["inlineAttributes"])
}

func (c *current) onTitleElement529() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement529() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement529()
}

func (c *current) onTitleElement519() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement519()
}

func (c *current) onTitleElement510() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement510() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement510()
}

func (c *current) onTitleElement542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement542()
}

func (c *current) onTitleElement559() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement559() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement559()
}

func (c *current) onTitleElement562() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement562() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement562()
}

func (c *current) onTitleElement565() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement565() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement565()
}

func (c *current) onTitleElement556(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement556() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement556(stack["key"])
}

func (c *current) onTitleElement579(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement579() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement579(stack["value"])
}

func (c *current) onTitleElement595() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement595() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement595()
}

func (c *current) onTitleElement553(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement553() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement553(stack["key"], stack["value"])
}

func (c *current) onTitleElement603() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement603() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement603()
}

func (c *current) onTitleElement606() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement606() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement606()
}

func (c *current) onTitleElement609() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement609() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement609()
}

func (c *current) onTitleElement600(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement600() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement600(stack["key"])
}

func (c *current) onTitleElement626() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement626() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement626()
}

func (c *current) onTitleElement597(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement597() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement597(stack["key"])
}

func (c *current) onTitleElement538(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement538(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement641() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement641() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement641()
}

func (c *current) onTitleElement644() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement644() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement644()
}

func (c *current) onTitleElement647() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement647() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement647()
}

func (c *current) onTitleElement638(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement638() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement638(stack["key"])
}

func (c *current) onTitleElement661(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement661() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement661(stack["value"])
}

func (c *current) onTitleElement677() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement677() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement677()
}

func (c *current) onTitleElement635(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement635() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement635(stack["key"], stack["value"])
}

func (c *current) onTitleElement685() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement685() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement685()
}

func (c *current) onTitleElement688() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement688() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement688()
}

func (c *current) onTitleElement691() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement691() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement691()
}

func (c *current) onTitleElement682(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement682() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement682(stack["key"])
}

func (c *current) onTitleElement708() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement708() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement708()
}

func (c *current) onTitleElement679(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement679() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement679(stack["key"])
}

func (c *current) onTitleElement629(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement629() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement629(stack["otherAttrs"])
}

func (c *current) onTitleElement506(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement506(stack["url"], stack["inlineAttributes"])
}

func (c *current) onTitleElement732() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement732() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement732()
}

func (c *current) onTitleElement722() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement722() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement722()
}

func (c *current) onTitleElement714() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement714() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement714()
}

func (c *current) onTitleElement745() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement745() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement745()
}

func (c *current) onTitleElement762() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement762() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement762()
}

func (c *current) onTitleElement765() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement765() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement765()
}

func (c *current) onTitleElement768() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement768() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement768()
}

func (c *current) onTitleElement759(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement759() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement759(stack["key"])
}

func (c *current) onTitleElement782(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement782() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement782(stack["value"])
}

func (c *current) onTitleElement798() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement798() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement798()
}

func (c *current) onTitleElement756(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement756() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement756(stack["key"], stack["value"])
}

func (c *current) onTitleElement806() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement806() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement806()
}

func (c *current) onTitleElement809() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement809() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement809()
}

func (c *current) onTitleElement812() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement812() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement812()
}

func (c *current) onTitleElement803(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement803() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement803(stack["key"])
}

func (c *current) onTitleElement829() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement829() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement829()
}

func (c *current) onTitleElement800(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement800() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement800(stack["key"])
}

func (c *current) onTitleElement741(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement741() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement741(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement844() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement844() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement844()
}

func (c *current) onTitleElement847() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement847() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement847()
}

func (c *current) onTitleElement850() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement850() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement850()
}

func (c *current) onTitleElement841(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement841() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement841(stack["key"])
}

func (c *current) onTitleElement864(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement864() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement864(stack["value"])
}

func (c *current) onTitleElement880() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement880() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement880()
}

func (c *current) onTitleElement838(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement838() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement838(stack["key"], stack["value"])
}

func (c *current) onTitleElement888() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement888() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement888()
}

func (c *current) onTitleElement891() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement891() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement891()
}

func (c *current) onTitleElement894() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement894() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement894()
}

func (c *current) onTitleElement885(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement885() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement885(stack["key"])
}

func (c *current) onTitleElement911() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement911() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement911()
}

func (c *current) onTitleElement882(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement882() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement882(stack["key"])
}

func (c *current) onTitleElement832(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement832() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement832(stack["otherAttrs"])
}

func (c *current) onTitleElement711(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement711() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement711(stack["url"], stack["inlineAttributes"])
}

func (c *current) onTitleElement934() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement934() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement934()
}

func (c *current) onTitleElement924() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement924() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement924()
}

func (c *current) onTitleElement916() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement916() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement916()
}

func (c *current) onTitleElement914(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonTitleElement914() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement914(stack["url"])
}

func (c *current) onTitleElement503(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonTitleElement503() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement503(stack["link"])
}

func (c *current) onTitleElement945() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement945() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement945()
}

func (c *current) onTitleElement941(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonTitleElement941() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement941(stack["name"])
}

func (c *current) onTitleElement957() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement957() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement957()
}

func (c *current) onTitleElement963() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement963() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement963()
}

func (c *current) onTitleElement953() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonTitleElement953() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement953()
}

func (c *current) onTitleElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonTitleElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1(stack["element"])
}

func (c *current) onList1(elements interface{}) (interface{}, error) {
	return types.NewList(elements.([]interface{}))
}

func (p *parser) callonList1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList1(stack["elements"])
}

func (c *current) onListParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}))
}

func (p *parser) callonListParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph1(stack["lines"])
}

func (c *current) onListParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine9()
}

func (c *current) onListParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonListParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine13()
}

func (c *current) onListParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonListParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine15()
}

func (c *current) onListParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonListParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine17()
}

func (c *current) onListParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonListParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine19()
}

func (c *current) onListParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonListParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine21()
}

func (c *current) onListParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonListParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine23()
}

func (c *current) onListParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonListParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine28()
}

func (c *current) onListParagraphLine32() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonListParagraphLine32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine32()
}

func (c *current) onListParagraphLine36() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonListParagraphLine36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine36()
}

func (c *current) onListParagraphLine41() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonListParagraphLine41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine41()
}

func (c *current) onListParagraphLine49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine49()
}

func (c *current) onListParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine4(stack["prefix"])
}

func (c *current) onListParagraphLine57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine57()
}

func (c *current) onListParagraphLine61() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonListParagraphLine61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine61()
}

func (c *current) onListParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonListParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine63()
}

func (c *current) onListParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonListParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine65()
}

func (c *current) onListParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonListParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine67()
}

func (c *current) onListParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonListParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine69()
}

func (c *current) onListParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonListParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine71()
}

func (c *current) onListParagraphLine76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine76()
}

func (c *current) onListParagraphLine52(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine52(stack["prefix"])
}

func (c *current) onListParagraphLine80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine80()
}

func (c *current) onListParagraphLine90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine90()
}

func (c *current) onListParagraphLine102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine102()
}

func (c *current) onListParagraphLine96() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonListParagraphLine96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine96()
}

func (c *current) onListParagraphLine130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine130()
}

func (c *current) onListParagraphLine120() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine120()
}

func (c *current) onListParagraphLine116(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine116(stack["id"])
}

func (c *current) onListParagraphLine158() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine158()
}

func (c *current) onListParagraphLine148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine148()
}

func (c *current) onListParagraphLine144(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine144(stack["id"])
}

func (c *current) onListParagraphLine180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine180()
}

func (c *current) onListParagraphLine183() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonListParagraphLine183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine183()
}

func (c *current) onListParagraphLine172(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonListParagraphLine172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine172(stack["title"])
}

func (c *current) onListParagraphLine197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine197()
}

func (c *current) onListParagraphLine200() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonListParagraphLine200() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine200()
}

func (c *current) onListParagraphLine191(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonListParagraphLine191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine191(stack["role"])
}

func (c *current) onListParagraphLine211() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonListParagraphLine211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine211()
}

func (c *current) onListParagraphLine217() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonListParagraphLine217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine217()
}

func (c *current) onListParagraphLine213(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonListParagraphLine213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine213(stack["language"])
}

func (c *current) onListParagraphLine232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine232()
}

func (c *current) onListParagraphLine237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine237()
}

func (c *current) onListParagraphLine241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine241()
}

func (c *current) onListParagraphLine257() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine257()
}

func (c *current) onListParagraphLine228(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonListParagraphLine228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine228(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onListParagraphLine276() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine276()
}

func (c *current) onListParagraphLine281() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine281()
}

func (c *current) onListParagraphLine285() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine285()
}

func (c *current) onListParagraphLine272(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonListParagraphLine272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine272(stack["kind"], stack["author"])
}

func (c *current) onListParagraphLine304() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine304()
}

func (c *current) onListParagraphLine309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine309()
}

func (c *current) onListParagraphLine300(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonListParagraphLine300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine300(stack["kind"])
}

func (c *current) onListParagraphLine320() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine320()
}

func (c *current) onListParagraphLine325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine325()
}

func (c *current) onListParagraphLine329() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine329()
}

func (c *current) onListParagraphLine345() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine345() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine345()
}

func (c *current) onListParagraphLine316(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonListParagraphLine316() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine316(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onListParagraphLine364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine364()
}

func (c *current) onListParagraphLine369() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine369()
}

func (c *current) onListParagraphLine373() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine373() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine373()
}

func (c *current) onListParagraphLine360(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonListParagraphLine360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine360(stack["kind"], stack["author"])
}

func (c *current) onListParagraphLine392() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine392() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine392()
}

func (c *current) onListParagraphLine397() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine397() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine397()
}

func (c *current) onListParagraphLine388(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonListParagraphLine388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine388(stack["kind"])
}

func (c *current) onListParagraphLine400(attribute interface{}) error {
	c.state["verse"] = true
	return nil

}

func (p *parser) callonListParagraphLine400() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine400(stack["attribute"])
}

func (c *current) onListParagraphLine312(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonListParagraphLine312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine312(stack["attribute"])
}

func (c *current) onListParagraphLine406() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonListParagraphLine406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine406()
}

func (c *current) onListParagraphLine408() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonListParagraphLine408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine408()
}

func (c *current) onListParagraphLine410() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonListParagraphLine410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine410()
}

func (c *current) onListParagraphLine412() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonListParagraphLine412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine412()
}

func (c *current) onListParagraphLine414() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonListParagraphLine414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine414()
}

func (c *current) onListParagraphLine401(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonListParagraphLine401() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine401(stack["k"])
}

func (c *current) onListParagraphLine417() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonListParagraphLine417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine417()
}

func (c *current) onListParagraphLine425() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine425() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine425()
}

func (c *current) onListParagraphLine436() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine436()
}

func (c *current) onListParagraphLine439() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine439() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine439()
}

func (c *current) onListParagraphLine442() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine442()
}

func (c *current) onListParagraphLine433(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine433() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine433(stack["key"])
}

func (c *current) onListParagraphLine456(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine456(stack["value"])
}

func (c *current) onListParagraphLine472() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine472() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine472()
}

func (c *current) onListParagraphLine430(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonListParagraphLine430() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine430(stack["key"], stack["value"])
}

func (c *current) onListParagraphLine480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine480()
}

func (c *current) onListParagraphLine483() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine483() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine483()
}

func (c *current) onListParagraphLine486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine486()
}

func (c *current) onListParagraphLine477(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine477(stack["key"])
}

func (c *current) onListParagraphLine503() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine503() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine503()
}

func (c *current) onListParagraphLine474(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonListParagraphLine474() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine474(stack["key"])
}

func (c *current) onListParagraphLine419(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonListParagraphLine419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine419(stack["attributes"])
}

func (c *current) onListParagraphLine509() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine509() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine509()
}

func (c *current) onListParagraphLine110(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonListParagraphLine110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine110(stack["attr"])
}

func (c *current) onListParagraphLine524() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine524() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine524()
}

func (c *current) onListParagraphLine536() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine536() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine536()
}

func (c *current) onListParagraphLine548() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine548() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine548()
}

func (c *current) onListParagraphLine561() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine561() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine561()
}

func (c *current) onListParagraphLine573() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine573() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine573()
}

func (c *current) onListParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonListParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine1(stack["line"])
}

func (c *current) onContinuedDocumentElement9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonContinuedDocumentElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement9()
}

func (c *current) onContinuedDocumentElement3() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonContinuedDocumentElement3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement3()
}

func (c *current) onContinuedDocumentElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonContinuedDocumentElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement1(stack["element"])
}

func (c *current) onOrderedListItem25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem25()
}

func (c *current) onOrderedListItem15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem15()
}

func (c *current) onOrderedListItem11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem11(stack["id"])
}

func (c *current) onOrderedListItem53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem53()
}

func (c *current) onOrderedListItem43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem43()
}

func (c *current) onOrderedListItem39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem39(stack["id"])
}

func (c *current) onOrderedListItem75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem75()
}

func (c *current) onOrderedListItem78() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonOrderedListItem78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem78()
}

func (c *current) onOrderedListItem67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonOrderedListItem67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem67(stack["title"])
}

func (c *current) onOrderedListItem92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem92()
}

func (c *current) onOrderedListItem95() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonOrderedListItem95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem95()
}

func (c *current) onOrderedListItem86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonOrderedListItem86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem86(stack["role"])
}

func (c *current) onOrderedListItem106() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonOrderedListItem106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem106()
}

func (c *current) onOrderedListItem112() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonOrderedListItem112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem112()
}

func (c *current) onOrderedListItem108(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonOrderedListItem108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem108(stack["language"])
}

func (c *current) onOrderedListItem127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem127()
}

func (c *current) onOrderedListItem132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem132()
}

func (c *current) onOrderedListItem136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem136()
}

func (c *current) onOrderedListItem152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem152()
}

func (c *current) onOrderedListItem123(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonOrderedListItem123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem123(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onOrderedListItem171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem171()
}

func (c *current) onOrderedListItem176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem176()
}

func (c *current) onOrderedListItem180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem180()
}

func (c *current) onOrderedListItem167(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonOrderedListItem167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem167(stack["kind"], stack["author"])
}

func (c *current) onOrderedListItem199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem199()
}

func (c *current) onOrderedListItem204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem204()
}

func (c *current) onOrderedListItem195(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonOrderedListItem195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem195(stack["kind"])
}

func (c *current) onOrderedListItem215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem215()
}

func (c *current) onOrderedListItem220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem220()
}

func (c *current) onOrderedListItem224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem224()
}

func (c *current) onOrderedListItem240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem240()
}

func (c *current) onOrderedListItem211(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonOrderedListItem211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem211(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onOrderedListItem259() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem259()
}

func (c *current) onOrderedListItem264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem264()
}

func (c *current) onOrderedListItem268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem268()
}

func (c *current) onOrderedListItem255(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonOrderedListItem255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem255(stack["kind"], stack["author"])
}

func (c *current) onOrderedListItem287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem287()
}

func (c *current) onOrderedListItem292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem292()
}

func (c *current) onOrderedListItem283(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonOrderedListItem283() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem283(stack["kind"])
}

func (c *current) onOrderedListItem295(attribute interface{}) error {
	c.state["verse"] = true
	return nil

}

func (p *parser) callonOrderedListItem295() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem295(stack["attribute"])
}

func (c *current) onOrderedListItem207(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonOrderedListItem207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem207(stack["attribute"])
}

func (c *current) onOrderedListItem301() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonOrderedListItem301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem301()
}

func (c *current) onOrderedListItem303() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonOrderedListItem303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem303()
}

func (c *current) onOrderedListItem305() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonOrderedListItem305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem305()
}

func (c *current) onOrderedListItem307() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonOrderedListItem307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem307()
}

func (c *current) onOrderedListItem309() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonOrderedListItem309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem309()
}

func (c *current) onOrderedListItem296(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonOrderedListItem296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem296(stack["k"])
}

func (c *current) onOrderedListItem312() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonOrderedListItem312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem312()
}

func (c *current) onOrderedListItem320() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem320()
}

func (c *current) onOrderedListItem331() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem331()
}

func (c *current) onOrderedListItem334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem334()
}

func (c *current) onOrderedListItem337() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem337()
}

func (c *current) onOrderedListItem328(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem328(stack["key"])
}

func (c *current) onOrderedListItem351(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem351(stack["value"])
}

func (c *current) onOrderedListItem367() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem367()
}

func (c *current) onOrderedListItem325(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonOrderedListItem325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem325(stack["key"], stack["value"])
}

func (c *current) onOrderedListItem375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem375()
}

func (c *current) onOrderedListItem378() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem378()
}

func (c *current) onOrderedListItem381() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem381()
}

func (c *current) onOrderedListItem372(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem372(stack["key"])
}

func (c *current) onOrderedListItem398() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem398()
}

func (c *current) onOrderedListItem369(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonOrderedListItem369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem369(stack["key"])
}

func (c *current) onOrderedListItem314(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem314(stack["attributes"])
}

func (c *current) onOrderedListItem404() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem404() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem404()
}

func (c *current) onOrderedListItem5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`

}

func (p *parser) callonOrderedListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem5(stack["attr"])
}

func (c *current) onOrderedListItem417() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem417()
}

func (c *current) onOrderedListItem421() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonOrderedListItem421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem421()
}

func (c *current) onOrderedListItem423() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonOrderedListItem423() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem423()
}

func (c *current) onOrderedListItem425() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonOrderedListItem425() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem425()
}

func (c *current) onOrderedListItem427() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonOrderedListItem427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem427()
}

func (c *current) onOrderedListItem429() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonOrderedListItem429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem429()
}

func (c *current) onOrderedListItem431() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonOrderedListItem431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem431()
}

func (c *current) onOrderedListItem436() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonOrderedListItem436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem436()
}

func (c *current) onOrderedListItem440() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonOrderedListItem440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem440()
}

func (c *current) onOrderedListItem444() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonOrderedListItem444() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem444()
}

func (c *current) onOrderedListItem449() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonOrderedListItem449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem449()
}

func (c *current) onOrderedListItem457() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem457() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem457()
}

func (c *current) onOrderedListItem412(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonOrderedListItem412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem412(stack["prefix"])
}

func (c *current) onOrderedListItem470() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem470() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem470()
}

func (c *current) onOrderedListItem462() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonOrderedListItem462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem462()
}

func (c *current) onOrderedListItem1(attributes, prefix, content interface{}) (interface{}, error) {
	return types.NewOrderedListItem(prefix.(types.OrderedListItemPrefix), content.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem1(stack["attributes"], stack["prefix"], stack["content"])
}

func (c *current) onOrderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonOrderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItemContent1(stack["elements"])
}

func (c *current) onUnorderedListItem9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem9()
}

func (c *current) onUnorderedListItem13() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonUnorderedListItem13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem13()
}

func (c *current) onUnorderedListItem15() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonUnorderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem15()
}

func (c *current) onUnorderedListItem17() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonUnorderedListItem17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem17()
}

func (c *current) onUnorderedListItem19() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonUnorderedListItem19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem19()
}

func (c *current) onUnorderedListItem21() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonUnorderedListItem21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem21()
}

func (c *current) onUnorderedListItem23() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonUnorderedListItem23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem23()
}

func (c *current) onUnorderedListItem28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem28()
}

func (c *current) onUnorderedListItem4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonUnorderedListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem4(stack["prefix"])
}

func (c *current) onUnorderedListItem41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem41()
}

func (c *current) onUnorderedListItem33() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonUnorderedListItem33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem33()
}

func (c *current) onUnorderedListItem1(prefix, content interface{}) (interface{}, error) {
	return types.NewUnorderedListItem(prefix.(types.UnorderedListItemPrefix), content.([]interface{}))
}

func (p *parser) callonUnorderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem1(stack["prefix"], stack["content"])
}

func (c *current) onUnorderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonUnorderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItemContent1(stack["elements"])
}

func (c *current) onLabeledListItem4() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem4()
}

func (c *current) onLabeledListItem15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem15()
}

func (c *current) onLabeledListItem1(term, separator, description interface{}) (interface{}, error) {
	return types.NewLabeledListItem(len(separator.(string))-1, term.(string), description.([]interface{}))
}

func (p *parser) callonLabeledListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem1(stack["term"], stack["separator"], stack["description"])
}

func (c *current) onLabeledListItemDescription7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItemDescription7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription7()
}

func (c *current) onLabeledListItemDescription2(elements interface{}) (interface{}, error) {
	// TODO: replace with (ListParagraph+ ContinuedDocumentElement*) and use a single rule for all item contents ?
	return types.NewListItemContent(elements.([]interface{}))

}

func (p *parser) callonLabeledListItemDescription2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription2(stack["elements"])
}

func (c *current) onLabeledListItemDescription21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItemDescription21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription21()
}

func (c *current) onLabeledListItemDescription16() (interface{}, error) {
	// here, WS is optional since there is no description afterwards
	return []interface{}{}, nil

}

func (p *parser) callonLabeledListItemDescription16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription16()
}

func (c *current) onParagraph11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph11()
}

func (c *current) onParagraph19() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph19()
}

func (c *current) onParagraph21() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph21()
}

func (c *current) onParagraph23() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph23()
}

func (c *current) onParagraph25() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph25()
}

func (c *current) onParagraph27() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph27()
}

func (c *current) onParagraph2(t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind))

}

func (p *parser) callonParagraph2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph2(stack["t"], stack["lines"])
}

func (c *current) onParagraph42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph42()
}

func (c *current) onParagraph33(lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}))

}

func (p *parser) callonParagraph33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph33(stack["lines"])
}

func (c *current) onVerseParagraph3() (bool, error) {
	verse, ok := c.state["verse"].(bool)
	return ok && verse, nil

}

func (p *parser) callonVerseParagraph3() (bool, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph3()
}

func (c *current) onVerseParagraph15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseParagraph15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph15()
}

func (c *current) onVerseParagraph23() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonVerseParagraph23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph23()
}

func (c *current) onVerseParagraph25() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonVerseParagraph25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph25()
}

func (c *current) onVerseParagraph27() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonVerseParagraph27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph27()
}

func (c *current) onVerseParagraph29() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonVerseParagraph29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph29()
}

func (c *current) onVerseParagraph31() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonVerseParagraph31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph31()
}

func (c *current) onVerseParagraph6(t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind))

}

func (p *parser) callonVerseParagraph6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph6(stack["t"], stack["lines"])
}

func (c *current) onVerseParagraph46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseParagraph46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph46()
}

func (c *current) onVerseParagraph37(lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}))

}

func (p *parser) callonVerseParagraph37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph37(stack["lines"])
}

func (c *current) onVerseParagraph55(verse interface{}) error {
	c.state["verse"] = false
	return nil

}

func (p *parser) callonVerseParagraph55() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph55(stack["verse"])
}

func (c *current) onVerseParagraph1(verse interface{}) (interface{}, error) {
	return verse, nil

}

func (p *parser) callonVerseParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph1(stack["verse"])
}

func (c *current) onInlineElements10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements10()
}

func (c *current) onInlineElements4(content interface{}) (interface{}, error) {
	return types.NewSingleLineComment(content.(string))
}

func (p *parser) callonInlineElements4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements4(stack["content"])
}

func (c *current) onInlineElements2(comment interface{}) (interface{}, error) {
	return types.NewInlineElements([]interface{}{comment})

}

func (p *parser) callonInlineElements2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements2(stack["comment"])
}

func (c *current) onInlineElements36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements36()
}

func (c *current) onInlineElements28() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonInlineElements28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements28()
}

func (c *current) onInlineElements51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements51()
}

func (c *current) onInlineElements63() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements63()
}

func (c *current) onInlineElements75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements75()
}

func (c *current) onInlineElements88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements88()
}

func (c *current) onInlineElements100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements100()
}

func (c *current) onInlineElements116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements116()
}

func (c *current) onInlineElements122() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements122()
}

func (c *current) onInlineElements112() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElements112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements112()
}

func (c *current) onInlineElements25(elements, linebreak interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(append(elements.([]interface{}), linebreak))

}

func (p *parser) callonInlineElements25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements25(stack["elements"], stack["linebreak"])
}

func (c *current) onInlineElement14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement14()
}

func (c *current) onInlineElement20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement20()
}

func (c *current) onInlineElement10() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElement10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement10()
}

func (c *current) onInlineElement44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement44()
}

func (c *current) onInlineElement34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement34()
}

func (c *current) onInlineElement60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement60()
}

func (c *current) onInlineElement64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement64()
}

func (c *current) onInlineElement30(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElement30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement30(stack["id"], stack["label"])
}

func (c *current) onInlineElement85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement85()
}

func (c *current) onInlineElement75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement75()
}

func (c *current) onInlineElement71(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElement71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement71(stack["id"])
}

func (c *current) onInlineElement116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement116()
}

func (c *current) onInlineElement106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement106()
}

func (c *current) onInlineElement129() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement129()
}

func (c *current) onInlineElement141() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement141()
}

func (c *current) onInlineElement153() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement153()
}

func (c *current) onInlineElement174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement174()
}

func (c *current) onInlineElement177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement177()
}

func (c *current) onInlineElement180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement180()
}

func (c *current) onInlineElement171(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement171(stack["key"])
}

func (c *current) onInlineElement194(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement194(stack["value"])
}

func (c *current) onInlineElement210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement210()
}

func (c *current) onInlineElement168(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement168(stack["key"], stack["value"])
}

func (c *current) onInlineElement218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement218()
}

func (c *current) onInlineElement221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement221()
}

func (c *current) onInlineElement224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement224()
}

func (c *current) onInlineElement215(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement215(stack["key"])
}

func (c *current) onInlineElement241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement241()
}

func (c *current) onInlineElement212(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement212(stack["key"])
}

func (c *current) onInlineElement125(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement125(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElement248() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement248()
}

func (c *current) onInlineElement260() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement260()
}

func (c *current) onInlineElement281() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement281()
}

func (c *current) onInlineElement284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement284()
}

func (c *current) onInlineElement287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement287()
}

func (c *current) onInlineElement278(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement278(stack["key"])
}

func (c *current) onInlineElement301(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement301(stack["value"])
}

func (c *current) onInlineElement317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement317()
}

func (c *current) onInlineElement275(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement275(stack["key"], stack["value"])
}

func (c *current) onInlineElement325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement325()
}

func (c *current) onInlineElement328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement328()
}

func (c *current) onInlineElement331() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement331()
}

func (c *current) onInlineElement322(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement322(stack["key"])
}

func (c *current) onInlineElement348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement348()
}

func (c *current) onInlineElement319(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement319(stack["key"])
}

func (c *current) onInlineElement244(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement244(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElement355() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement355()
}

func (c *current) onInlineElement376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement376()
}

func (c *current) onInlineElement379() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement379()
}

func (c *current) onInlineElement382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement382()
}

func (c *current) onInlineElement373(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement373() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement373(stack["key"])
}

func (c *current) onInlineElement396(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement396(stack["value"])
}

func (c *current) onInlineElement412() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement412()
}

func (c *current) onInlineElement370(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement370(stack["key"], stack["value"])
}

func (c *current) onInlineElement420() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement420()
}

func (c *current) onInlineElement423() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement423() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement423()
}

func (c *current) onInlineElement426() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement426()
}

func (c *current) onInlineElement417(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement417(stack["key"])
}

func (c *current) onInlineElement443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement443()
}

func (c *current) onInlineElement414(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement414(stack["key"])
}

func (c *current) onInlineElement351(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement351(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElement458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement458()
}

func (c *current) onInlineElement461() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement461() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement461()
}

func (c *current) onInlineElement464() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement464()
}

func (c *current) onInlineElement455(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement455() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement455(stack["key"])
}

func (c *current) onInlineElement478(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement478() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement478(stack["value"])
}

func (c *current) onInlineElement494() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement494()
}

func (c *current) onInlineElement452(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement452(stack["key"], stack["value"])
}

func (c *current) onInlineElement502() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement502() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement502()
}

func (c *current) onInlineElement505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement505()
}

func (c *current) onInlineElement508() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement508()
}

func (c *current) onInlineElement499(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement499() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement499(stack["key"])
}

func (c *current) onInlineElement525() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement525()
}

func (c *current) onInlineElement496(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement496(stack["key"])
}

func (c *current) onInlineElement446(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement446(stack["otherAttrs"])
}

func (c *current) onInlineElement100(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement100(stack["path"], stack["inlineAttributes"])
}

func (c *current) onInlineElement554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement554()
}

func (c *current) onInlineElement544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement544()
}

func (c *current) onInlineElement535() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement535()
}

func (c *current) onInlineElement567() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement567() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement567()
}

func (c *current) onInlineElement584() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement584()
}

func (c *current) onInlineElement587() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement587() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement587()
}

func (c *current) onInlineElement590() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement590() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement590()
}

func (c *current) onInlineElement581(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement581() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement581(stack["key"])
}

func (c *current) onInlineElement604(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement604(stack["value"])
}

func (c *current) onInlineElement620() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement620()
}

func (c *current) onInlineElement578(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement578(stack["key"], stack["value"])
}

func (c *current) onInlineElement628() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement628()
}

func (c *current) onInlineElement631() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement631() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement631()
}

func (c *current) onInlineElement634() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement634()
}

func (c *current) onInlineElement625(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement625() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement625(stack["key"])
}

func (c *current) onInlineElement651() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement651() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement651()
}

func (c *current) onInlineElement622(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement622() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement622(stack["key"])
}

func (c *current) onInlineElement563(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement563() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement563(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement666() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement666() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement666()
}

func (c *current) onInlineElement669() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement669()
}

func (c *current) onInlineElement672() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement672() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement672()
}

func (c *current) onInlineElement663(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement663() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement663(stack["key"])
}

func (c *current) onInlineElement686(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement686() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement686(stack["value"])
}

func (c *current) onInlineElement702() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement702() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement702()
}

func (c *current) onInlineElement660(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement660() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement660(stack["key"], stack["value"])
}

func (c *current) onInlineElement710() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement710() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement710()
}

func (c *current) onInlineElement713() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement713() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement713()
}

func (c *current) onInlineElement716() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement716()
}

func (c *current) onInlineElement707(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement707() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement707(stack["key"])
}

func (c *current) onInlineElement733() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement733() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement733()
}

func (c *current) onInlineElement704(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement704(stack["key"])
}

func (c *current) onInlineElement654(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement654() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement654(stack["otherAttrs"])
}

func (c *current) onInlineElement531(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement531(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElement757() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement757() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement757()
}

func (c *current) onInlineElement747() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement747() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement747()
}

func (c *current) onInlineElement739() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement739() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement739()
}

func (c *current) onInlineElement770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement770()
}

func (c *current) onInlineElement787() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement787() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement787()
}

func (c *current) onInlineElement790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement790()
}

func (c *current) onInlineElement793() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement793() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement793()
}

func (c *current) onInlineElement784(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement784() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement784(stack["key"])
}

func (c *current) onInlineElement807(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement807() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement807(stack["value"])
}

func (c *current) onInlineElement823() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement823() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement823()
}

func (c *current) onInlineElement781(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement781() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement781(stack["key"], stack["value"])
}

func (c *current) onInlineElement831() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement831() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement831()
}

func (c *current) onInlineElement834() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement834() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement834()
}

func (c *current) onInlineElement837() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement837()
}

func (c *current) onInlineElement828(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement828(stack["key"])
}

func (c *current) onInlineElement854() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement854() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement854()
}

func (c *current) onInlineElement825(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement825() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement825(stack["key"])
}

func (c *current) onInlineElement766(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement766() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement766(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement869() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement869() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement869()
}

func (c *current) onInlineElement872() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement872() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement872()
}

func (c *current) onInlineElement875() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement875() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement875()
}

func (c *current) onInlineElement866(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement866() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement866(stack["key"])
}

func (c *current) onInlineElement889(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement889() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement889(stack["value"])
}

func (c *current) onInlineElement905() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement905() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement905()
}

func (c *current) onInlineElement863(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement863() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement863(stack["key"], stack["value"])
}

func (c *current) onInlineElement913() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement913() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement913()
}

func (c *current) onInlineElement916() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement916() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement916()
}

func (c *current) onInlineElement919() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement919() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement919()
}

func (c *current) onInlineElement910(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement910() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement910(stack["key"])
}

func (c *current) onInlineElement936() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement936() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement936()
}

func (c *current) onInlineElement907(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement907(stack["key"])
}

func (c *current) onInlineElement857(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement857() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement857(stack["otherAttrs"])
}

func (c *current) onInlineElement736(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement736() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement736(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElement959() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement959() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement959()
}

func (c *current) onInlineElement949() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement949() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement949()
}

func (c *current) onInlineElement941() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement941() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement941()
}

func (c *current) onInlineElement939(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonInlineElement939() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement939(stack["url"])
}

func (c *current) onInlineElement528(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElement528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement528(stack["link"])
}

func (c *current) onInlineElement970() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement970() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement970()
}

func (c *current) onInlineElement966(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonInlineElement966() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement966(stack["name"])
}

func (c *current) onInlineElement991() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement991() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement991()
}

func (c *current) onInlineElement981() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement981() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement981()
}

func (c *current) onInlineElement1008() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1008() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1008()
}

func (c *current) onInlineElement977(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonInlineElement977() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement977(stack["id"])
}

func (c *current) onInlineElement1015() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1015() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1015()
}

func (c *current) onInlineElement1021() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1021() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1021()
}

func (c *current) onInlineElement1011() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElement1011() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1011()
}

func (c *current) onInlineElement1032() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1032() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1032()
}

func (c *current) onInlineElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1(stack["element"])
}

func (c *current) onInlineElementsWithoutSubtitution12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution12()
}

func (c *current) onInlineElementsWithoutSubtitution4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonInlineElementsWithoutSubtitution4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution4()
}

func (c *current) onInlineElementsWithoutSubtitution27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution27()
}

func (c *current) onInlineElementsWithoutSubtitution39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution39()
}

func (c *current) onInlineElementsWithoutSubtitution51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution51()
}

func (c *current) onInlineElementsWithoutSubtitution64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution64()
}

func (c *current) onInlineElementsWithoutSubtitution76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution76()
}

func (c *current) onInlineElementsWithoutSubtitution92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution92()
}

func (c *current) onInlineElementsWithoutSubtitution98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution98()
}

func (c *current) onInlineElementsWithoutSubtitution88() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElementsWithoutSubtitution88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution88()
}

func (c *current) onInlineElementsWithoutSubtitution1(elements, linebreak interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(append(elements.([]interface{}), linebreak))
}

func (p *parser) callonInlineElementsWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution1(stack["elements"], stack["linebreak"])
}

func (c *current) onInlineElementWithoutSubtitution14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution14()
}

func (c *current) onInlineElementWithoutSubtitution20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution20()
}

func (c *current) onInlineElementWithoutSubtitution10() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElementWithoutSubtitution10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution10()
}

func (c *current) onInlineElementWithoutSubtitution44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution44()
}

func (c *current) onInlineElementWithoutSubtitution34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution34()
}

func (c *current) onInlineElementWithoutSubtitution60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution60()
}

func (c *current) onInlineElementWithoutSubtitution64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution64()
}

func (c *current) onInlineElementWithoutSubtitution30(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElementWithoutSubtitution30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution30(stack["id"], stack["label"])
}

func (c *current) onInlineElementWithoutSubtitution85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution85()
}

func (c *current) onInlineElementWithoutSubtitution75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution75()
}

func (c *current) onInlineElementWithoutSubtitution71(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution71(stack["id"])
}

func (c *current) onInlineElementWithoutSubtitution116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution116()
}

func (c *current) onInlineElementWithoutSubtitution106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution106()
}

func (c *current) onInlineElementWithoutSubtitution129() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution129()
}

func (c *current) onInlineElementWithoutSubtitution141() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution141()
}

func (c *current) onInlineElementWithoutSubtitution153() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution153()
}

func (c *current) onInlineElementWithoutSubtitution174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution174()
}

func (c *current) onInlineElementWithoutSubtitution177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution177()
}

func (c *current) onInlineElementWithoutSubtitution180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution180()
}

func (c *current) onInlineElementWithoutSubtitution171(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution171(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution194(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution194(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution210()
}

func (c *current) onInlineElementWithoutSubtitution168(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution168(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution218()
}

func (c *current) onInlineElementWithoutSubtitution221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution221()
}

func (c *current) onInlineElementWithoutSubtitution224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution224()
}

func (c *current) onInlineElementWithoutSubtitution215(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution215(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution241()
}

func (c *current) onInlineElementWithoutSubtitution212(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution212(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution125(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution125(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution248() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution248()
}

func (c *current) onInlineElementWithoutSubtitution260() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution260()
}

func (c *current) onInlineElementWithoutSubtitution281() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution281()
}

func (c *current) onInlineElementWithoutSubtitution284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution284()
}

func (c *current) onInlineElementWithoutSubtitution287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution287()
}

func (c *current) onInlineElementWithoutSubtitution278(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution278(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution301(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution301(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution317()
}

func (c *current) onInlineElementWithoutSubtitution275(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution275(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution325()
}

func (c *current) onInlineElementWithoutSubtitution328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution328()
}

func (c *current) onInlineElementWithoutSubtitution331() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution331()
}

func (c *current) onInlineElementWithoutSubtitution322(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution322(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution348()
}

func (c *current) onInlineElementWithoutSubtitution319(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution319(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution244(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution244(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution355() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution355()
}

func (c *current) onInlineElementWithoutSubtitution376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution376()
}

func (c *current) onInlineElementWithoutSubtitution379() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution379()
}

func (c *current) onInlineElementWithoutSubtitution382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution382()
}

func (c *current) onInlineElementWithoutSubtitution373(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution373() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution373(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution396(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution396(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution412() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution412()
}

func (c *current) onInlineElementWithoutSubtitution370(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution370(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution420() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution420()
}

func (c *current) onInlineElementWithoutSubtitution423() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution423() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution423()
}

func (c *current) onInlineElementWithoutSubtitution426() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution426()
}

func (c *current) onInlineElementWithoutSubtitution417(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution417(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution443()
}

func (c *current) onInlineElementWithoutSubtitution414(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution414(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution351(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution351(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution458()
}

func (c *current) onInlineElementWithoutSubtitution461() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution461() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution461()
}

func (c *current) onInlineElementWithoutSubtitution464() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution464()
}

func (c *current) onInlineElementWithoutSubtitution455(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution455() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution455(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution478(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution478() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution478(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution494() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution494()
}

func (c *current) onInlineElementWithoutSubtitution452(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution452(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution502() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution502() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution502()
}

func (c *current) onInlineElementWithoutSubtitution505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution505()
}

func (c *current) onInlineElementWithoutSubtitution508() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution508()
}

func (c *current) onInlineElementWithoutSubtitution499(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution499() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution499(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution525() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution525()
}

func (c *current) onInlineElementWithoutSubtitution496(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution496(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution446(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution446(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution100(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution100(stack["path"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution554()
}

func (c *current) onInlineElementWithoutSubtitution544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution544()
}

func (c *current) onInlineElementWithoutSubtitution535() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution535()
}

func (c *current) onInlineElementWithoutSubtitution567() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution567() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution567()
}

func (c *current) onInlineElementWithoutSubtitution584() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution584()
}

func (c *current) onInlineElementWithoutSubtitution587() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution587() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution587()
}

func (c *current) onInlineElementWithoutSubtitution590() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution590() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution590()
}

func (c *current) onInlineElementWithoutSubtitution581(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution581() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution581(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution604(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution604(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution620() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution620()
}

func (c *current) onInlineElementWithoutSubtitution578(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution578(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution628() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution628()
}

func (c *current) onInlineElementWithoutSubtitution631() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution631() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution631()
}

func (c *current) onInlineElementWithoutSubtitution634() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution634()
}

func (c *current) onInlineElementWithoutSubtitution625(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution625() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution625(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution651() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution651() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution651()
}

func (c *current) onInlineElementWithoutSubtitution622(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution622() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution622(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution563(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution563() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution563(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution666() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution666() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution666()
}

func (c *current) onInlineElementWithoutSubtitution669() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution669()
}

func (c *current) onInlineElementWithoutSubtitution672() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution672() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution672()
}

func (c *current) onInlineElementWithoutSubtitution663(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution663() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution663(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution686(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution686() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution686(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution702() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution702() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution702()
}

func (c *current) onInlineElementWithoutSubtitution660(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution660() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution660(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution710() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution710() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution710()
}

func (c *current) onInlineElementWithoutSubtitution713() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution713() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution713()
}

func (c *current) onInlineElementWithoutSubtitution716() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution716()
}

func (c *current) onInlineElementWithoutSubtitution707(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution707() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution707(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution733() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution733() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution733()
}

func (c *current) onInlineElementWithoutSubtitution704(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution704(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution654(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution654() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution654(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution531(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution531(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution757() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution757() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution757()
}

func (c *current) onInlineElementWithoutSubtitution747() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution747() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution747()
}

func (c *current) onInlineElementWithoutSubtitution739() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution739() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution739()
}

func (c *current) onInlineElementWithoutSubtitution770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution770()
}

func (c *current) onInlineElementWithoutSubtitution787() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution787() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution787()
}

func (c *current) onInlineElementWithoutSubtitution790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution790()
}

func (c *current) onInlineElementWithoutSubtitution793() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution793() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution793()
}

func (c *current) onInlineElementWithoutSubtitution784(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution784() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution784(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution807(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution807() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution807(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution823() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution823() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution823()
}

func (c *current) onInlineElementWithoutSubtitution781(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution781() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution781(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution831() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution831() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution831()
}

func (c *current) onInlineElementWithoutSubtitution834() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution834() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution834()
}

func (c *current) onInlineElementWithoutSubtitution837() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution837()
}

func (c *current) onInlineElementWithoutSubtitution828(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution828(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution854() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution854() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution854()
}

func (c *current) onInlineElementWithoutSubtitution825(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution825() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution825(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution766(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution766() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution766(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution869() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution869() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution869()
}

func (c *current) onInlineElementWithoutSubtitution872() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution872() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution872()
}

func (c *current) onInlineElementWithoutSubtitution875() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution875() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution875()
}

func (c *current) onInlineElementWithoutSubtitution866(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution866() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution866(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution889(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution889() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution889(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution905() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution905() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution905()
}

func (c *current) onInlineElementWithoutSubtitution863(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution863() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution863(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution913() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution913() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution913()
}

func (c *current) onInlineElementWithoutSubtitution916() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution916() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution916()
}

func (c *current) onInlineElementWithoutSubtitution919() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution919() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution919()
}

func (c *current) onInlineElementWithoutSubtitution910(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution910() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution910(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution936() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution936() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution936()
}

func (c *current) onInlineElementWithoutSubtitution907(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution907(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution857(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution857() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution857(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution736(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution736() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution736(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution959() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution959() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution959()
}

func (c *current) onInlineElementWithoutSubtitution949() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution949() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution949()
}

func (c *current) onInlineElementWithoutSubtitution941() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution941() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution941()
}

func (c *current) onInlineElementWithoutSubtitution939(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution939() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution939(stack["url"])
}

func (c *current) onInlineElementWithoutSubtitution528(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElementWithoutSubtitution528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution528(stack["link"])
}

func (c *current) onInlineElementWithoutSubtitution980() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution980() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution980()
}

func (c *current) onInlineElementWithoutSubtitution970() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution970() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution970()
}

func (c *current) onInlineElementWithoutSubtitution997() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution997() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution997()
}

func (c *current) onInlineElementWithoutSubtitution966(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonInlineElementWithoutSubtitution966() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution966(stack["id"])
}

func (c *current) onInlineElementWithoutSubtitution1004() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1004() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1004()
}

func (c *current) onInlineElementWithoutSubtitution1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElementWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1(stack["element"])
}

func (c *current) onBoldText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText2(stack["content"])
}

func (c *current) onBoldText10(content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewQuotedText(types.Bold, result)

}

func (p *parser) callonBoldText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText10(stack["content"])
}

func (c *current) onBoldText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText18(stack["content"])
}

func (c *current) onEscapedBoldText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText5()
}

func (c *current) onEscapedBoldText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "**", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText17()
}

func (c *current) onEscapedBoldText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "*", result)

}

func (p *parser) callonEscapedBoldText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText29()
}

func (c *current) onEscapedBoldText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "*", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText26(stack["backslashes"], stack["content"])
}

func (c *current) onItalicText2(content interface{}) (interface{}, error) {
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText2(stack["content"])
}

func (c *current) onItalicText10(content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewQuotedText(types.Italic, result)

}

func (p *parser) callonItalicText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText10(stack["content"])
}

func (c *current) onItalicText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '__' to emphazise a portion of a word)
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText18(stack["content"])
}

func (c *current) onEscapedItalicText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText5()
}

func (c *current) onEscapedItalicText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "__", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText17()
}

func (c *current) onEscapedItalicText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "_", result)

}

func (p *parser) callonEscapedItalicText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText29()
}

func (c *current) onEscapedItalicText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "_", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText26(stack["backslashes"], stack["content"])
}

func (c *current) onMonospaceText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText2(stack["content"])
}

func (c *current) onMonospaceText10(content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewQuotedText(types.Monospace, result)

}

func (p *parser) callonMonospaceText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText10(stack["content"])
}

func (c *current) onMonospaceText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '``' to emphazise a portion of a word)
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText18(stack["content"])
}

func (c *current) onEscapedMonospaceText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText5()
}

func (c *current) onEscapedMonospaceText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "``", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText17()
}

func (c *current) onEscapedMonospaceText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "`", result)

}

func (p *parser) callonEscapedMonospaceText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText29()
}

func (c *current) onEscapedMonospaceText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "`", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText26(stack["backslashes"], stack["content"])
}

func (c *current) onSubscriptText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Subscript, content.([]interface{}))

}

func (p *parser) callonSubscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText2(stack["content"])
}

func (c *current) onSubscriptText10(content interface{}) (interface{}, error) {
	// unbalanced "~~" vs "~" punctuation
	result := append([]interface{}{"~"}, content.([]interface{}))
	return types.NewQuotedText(types.Subscript, result)

}

func (p *parser) callonSubscriptText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText10(stack["content"])
}

func (c *current) onSubscriptText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '~~' to emphazise a portion of a word)
	return types.NewQuotedText(types.Subscript, content.([]interface{}))

}

func (p *parser) callonSubscriptText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText18(stack["content"])
}

func (c *current) onEscapedSubscriptText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText5()
}

func (c *current) onEscapedSubscriptText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "~~", content.([]interface{}))

}

func (p *parser) callonEscapedSubscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSubscriptText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText17()
}

func (c *current) onEscapedSubscriptText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "~~" vs "~" punctuation
	result := append([]interface{}{"~"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "~", result)

}

func (p *parser) callonEscapedSubscriptText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSubscriptText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText29()
}

func (c *current) onEscapedSubscriptText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "~", content.([]interface{}))

}

func (p *parser) callonEscapedSubscriptText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText26(stack["backslashes"], stack["content"])
}

func (c *current) onSuperscriptText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Superscript, content.([]interface{}))

}

func (p *parser) callonSuperscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText2(stack["content"])
}

func (c *current) onSuperscriptText10(content interface{}) (interface{}, error) {
	// unbalanced "^^" vs "^" punctuation
	result := append([]interface{}{"^"}, content.([]interface{}))
	return types.NewQuotedText(types.Superscript, result)

}

func (p *parser) callonSuperscriptText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText10(stack["content"])
}

func (c *current) onSuperscriptText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Superscript, content.([]interface{}))

}

func (p *parser) callonSuperscriptText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText18(stack["content"])
}

func (c *current) onEscapedSuperscriptText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText5()
}

func (c *current) onEscapedSuperscriptText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "^^", content.([]interface{}))

}

func (p *parser) callonEscapedSuperscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSuperscriptText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText17()
}

func (c *current) onEscapedSuperscriptText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "^^" vs "^" punctuation
	result := append([]interface{}{"^"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "^", result)

}

func (p *parser) callonEscapedSuperscriptText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSuperscriptText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText29()
}

func (c *current) onEscapedSuperscriptText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "^", content.([]interface{}))

}

func (p *parser) callonEscapedSuperscriptText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText26(stack["backslashes"], stack["content"])
}

func (c *current) onQuotedTextContent8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContent8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContent8()
}

func (c *current) onQuotedTextContentElement12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement12()
}

func (c *current) onQuotedTextContentElement35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement35()
}

func (c *current) onQuotedTextContentElement25() (interface{}, error) {
	// cannot have "*", "_", "`", "~" or "^" within, maybe because the user inserted another quote, or made an error (extra or missing space, for example)
	return c.text, nil
}

func (p *parser) callonQuotedTextContentElement25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement25()
}

func (c *current) onPassthrough2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.TriplePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough2(stack["content"])
}

func (c *current) onPassthrough12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.SinglePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough12(stack["content"])
}

func (c *current) onPassthroughMacro2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro2(stack["content"])
}

func (c *current) onPassthroughMacro12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro12(stack["content"])
}

func (c *current) onInlineFootnote2(content interface{}) (interface{}, error) {
	return types.NewFootnote("", content.(types.InlineElements))

}

func (p *parser) callonInlineFootnote2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote2(stack["content"])
}

func (c *current) onInlineFootnote12() (interface{}, error) {
	// footnote ID not may span multiple lines
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote12()
}

func (c *current) onInlineFootnote8(ref, content interface{}) (interface{}, error) {
	return types.NewFootnote(ref.(string), content.(types.InlineElements))

}

func (p *parser) callonInlineFootnote8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote8(stack["ref"], stack["content"])
}

func (c *current) onInlineFootnote34() (interface{}, error) {
	// footnote ID not may span multiple lines
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote34()
}

func (c *current) onInlineFootnote30(ref interface{}) (interface{}, error) {
	return types.NewFootnote(ref.(string), types.InlineElements{}) // foot note referring to another note

}

func (p *parser) callonInlineFootnote30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote30(stack["ref"])
}

func (c *current) onFootnoteContent16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent16()
}

func (c *current) onFootnoteContent33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent33()
}

func (c *current) onFootnoteContent23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent23()
}

func (c *current) onFootnoteContent50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent50()
}

func (c *current) onFootnoteContent19(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonFootnoteContent19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent19(stack["id"])
}

func (c *current) onFootnoteContent56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent56()
}

func (c *current) onFootnoteContent1(elements interface{}) (interface{}, error) {
	// footnote content may span multiple lines
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonFootnoteContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent1(stack["elements"])
}

func (c *current) onDelimitedBlock9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock9()
}

func (c *current) onDelimitedBlock29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock29()
}

func (c *current) onDelimitedBlock49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock49()
}

func (c *current) onDelimitedBlock40() (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(string(c.text))
}

func (p *parser) callonDelimitedBlock40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock40()
}

func (c *current) onDelimitedBlock21(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonDelimitedBlock21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock21(stack["line"])
}

func (c *current) onDelimitedBlock18(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonDelimitedBlock18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock18(stack["lines"])
}

func (c *current) onDelimitedBlock74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock74()
}

func (c *current) onDelimitedBlock3(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Listing, content.([]interface{}), types.None)
}

func (p *parser) callonDelimitedBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock3(stack["content"])
}

func (c *current) onDelimitedBlock90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock90()
}

func (c *current) onDelimitedBlock97() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock97()
}

func (c *current) onDelimitedBlock121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock121()
}

func (c *current) onDelimitedBlock84(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Comment, content.([]interface{}), types.Verbatim)
}

func (p *parser) callonDelimitedBlock84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock84(stack["content"])
}

func (c *current) onFencedBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock7()
}

func (c *current) onFencedBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock23()
}

func (c *current) onFencedBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Fenced, content.([]interface{}), types.None)
}

func (p *parser) callonFencedBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock1(stack["content"])
}

func (c *current) onFencedBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent12()
}

func (c *current) onFencedBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonFencedBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent4()
}

func (c *current) onExampleBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock7()
}

func (c *current) onExampleBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock27()
}

func (c *current) onExampleBlock19() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonExampleBlock19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock19()
}

func (c *current) onExampleBlock40() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock40()
}

func (c *current) onExampleBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Example, content.([]interface{}), types.None)
}

func (p *parser) callonExampleBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock1(stack["content"])
}

func (c *current) onBlockParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonBlockParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph1(stack["lines"])
}

func (c *current) onBlockParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine9()
}

func (c *current) onBlockParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonBlockParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine13()
}

func (c *current) onBlockParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonBlockParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine15()
}

func (c *current) onBlockParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonBlockParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine17()
}

func (c *current) onBlockParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonBlockParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine19()
}

func (c *current) onBlockParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonBlockParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine21()
}

func (c *current) onBlockParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonBlockParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine23()
}

func (c *current) onBlockParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonBlockParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine28()
}

func (c *current) onBlockParagraphLine32() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonBlockParagraphLine32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine32()
}

func (c *current) onBlockParagraphLine36() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonBlockParagraphLine36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine36()
}

func (c *current) onBlockParagraphLine41() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonBlockParagraphLine41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine41()
}

func (c *current) onBlockParagraphLine49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine49()
}

func (c *current) onBlockParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine4(stack["prefix"])
}

func (c *current) onBlockParagraphLine57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine57()
}

func (c *current) onBlockParagraphLine61() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonBlockParagraphLine61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine61()
}

func (c *current) onBlockParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonBlockParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine63()
}

func (c *current) onBlockParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonBlockParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine65()
}

func (c *current) onBlockParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonBlockParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine67()
}

func (c *current) onBlockParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonBlockParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine69()
}

func (c *current) onBlockParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonBlockParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine71()
}

func (c *current) onBlockParagraphLine76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine76()
}

func (c *current) onBlockParagraphLine52(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine52(stack["prefix"])
}

func (c *current) onBlockParagraphLine80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine80()
}

func (c *current) onBlockParagraphLine90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine90()
}

func (c *current) onBlockParagraphLine102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine102()
}

func (c *current) onBlockParagraphLine96() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonBlockParagraphLine96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine96()
}

func (c *current) onBlockParagraphLine117() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine117()
}

func (c *current) onBlockParagraphLine129() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine129()
}

func (c *current) onBlockParagraphLine141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine141()
}

func (c *current) onBlockParagraphLine154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine154()
}

func (c *current) onBlockParagraphLine166() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine166()
}

func (c *current) onBlockParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonBlockParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine1(stack["line"])
}

func (c *current) onQuoteBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock7()
}

func (c *current) onQuoteBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock23()
}

func (c *current) onQuoteBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Quote, content.([]interface{}), types.None)
}

func (p *parser) callonQuoteBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock1(stack["content"])
}

func (c *current) onQuoteBlockElement9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlockElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockElement9()
}

func (c *current) onQuoteBlockElement1(element interface{}) (interface{}, error) {
	return element, nil

}

func (p *parser) callonQuoteBlockElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockElement1(stack["element"])
}

func (c *current) onVerseBlock3() (bool, error) {
	verse, ok := c.state["verse"].(bool)
	return ok && verse, nil

}

func (p *parser) callonVerseBlock3() (bool, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock3()
}

func (c *current) onVerseBlock11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock11()
}

func (c *current) onVerseBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock27()
}

func (c *current) onVerseBlock5(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Verse, content.([]interface{}), types.None)

}

func (p *parser) callonVerseBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock5(stack["content"])
}

func (c *current) onVerseBlock36(verse interface{}) error {
	c.state["verse"] = false
	return nil

}

func (p *parser) callonVerseBlock36() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock36(stack["verse"])
}

func (c *current) onVerseBlock1(verse interface{}) (interface{}, error) {
	return verse, nil

}

func (p *parser) callonVerseBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock1(stack["verse"])
}

func (c *current) onVerseBlockContent1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonVerseBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockContent1(stack["lines"])
}

func (c *current) onVerseBlockLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine9()
}

func (c *current) onVerseBlockLine1(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonVerseBlockLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine1(stack["line"])
}

func (c *current) onVerseBlockLineContent11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent11()
}

func (c *current) onVerseBlockLineContent27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent27()
}

func (c *current) onVerseBlockLineContent33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent33()
}

func (c *current) onVerseBlockLineContent1(elements interface{}) (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonVerseBlockLineContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent1(stack["elements"])
}

func (c *current) onSidebarBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock7()
}

func (c *current) onSidebarBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock23()
}

func (c *current) onSidebarBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Sidebar, content.([]interface{}), types.None)
}

func (p *parser) callonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock1(stack["content"])
}

func (c *current) onSidebarBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent12()
}

func (c *current) onSidebarBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonSidebarBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent4()
}

func (c *current) onNonSidebarBlock1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonNonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onNonSidebarBlock1(stack["content"])
}

func (c *current) onTable7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable7()
}

func (c *current) onTable26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable26()
}

func (c *current) onTable1(header, lines interface{}) (interface{}, error) {
	// end delimiter or end of file
	return types.NewTable(header, lines.([]interface{}))

}

func (p *parser) callonTable1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable1(stack["header"], stack["lines"])
}

func (c *current) onTableLineHeader9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader9()
}

func (c *current) onTableLineHeader32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader32()
}

func (c *current) onTableLineHeader24(cells interface{}) (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLineHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader24(stack["cells"])
}

func (c *current) onTableLineHeader1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLineHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader1(stack["cells"])
}

func (c *current) onTableLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine9()
}

func (c *current) onTableLine33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine33()
}

func (c *current) onTableLine25() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLine25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine25()
}

func (c *current) onTableLine1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine1(stack["cells"])
}

func (c *current) onTableCell7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell7()
}

func (c *current) onTableCell18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell18()
}

func (c *current) onTableCell29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell29()
}

func (c *current) onTableCell35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell35()
}

func (c *current) onTableCell1(elements interface{}) (interface{}, error) {
	return types.NewInlineElements(elements)
}

func (p *parser) callonTableCell1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell1(stack["elements"])
}

func (c *current) onWord12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonWord12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWord12()
}

func (c *current) onWord1() (interface{}, error) {
	// word cannot contain parenthesis. Dots and ellipsis are treated as independent words (but will be combined afterwards)
	return string(c.text), nil
}

func (p *parser) callonWord1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWord1()
}

func (c *current) onWS3() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonWS3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWS3()
}

var (
	// errNoRule is returned when the grammar to parse has no rule.
	errNoRule = errors.New("grammar has no rule")

	// errInvalidEntrypoint is returned when the specified entrypoint rule
	// does not exit.
	errInvalidEntrypoint = errors.New("invalid entrypoint")

	// errInvalidEncoding is returned when the source is not properly
	// utf8-encoded.
	errInvalidEncoding = errors.New("invalid encoding")

	// errMaxExprCnt is used to signal that the maximum number of
	// expressions have been parsed.
	errMaxExprCnt = errors.New("max number of expresssions parsed")
)

// Option is a function that can set an option on the parser. It returns
// the previous setting as an Option.
type Option func(*parser) Option

// MaxExpressions creates an Option to stop parsing after the provided
// number of expressions have been parsed, if the value is 0 then the parser will
// parse for as many steps as needed (possibly an infinite number).
//
// The default for maxExprCnt is 0.
func MaxExpressions(maxExprCnt uint64) Option {
	return func(p *parser) Option {
		oldMaxExprCnt := p.maxExprCnt
		p.maxExprCnt = maxExprCnt
		return MaxExpressions(oldMaxExprCnt)
	}
}

// Entrypoint creates an Option to set the rule name to use as entrypoint.
// The rule name must have been specified in the -alternate-entrypoints
// if generating the parser with the -optimize-grammar flag, otherwise
// it may have been optimized out. Passing an empty string sets the
// entrypoint to the first rule in the grammar.
//
// The default is to start parsing at the first rule in the grammar.
func Entrypoint(ruleName string) Option {
	return func(p *parser) Option {
		oldEntrypoint := p.entrypoint
		p.entrypoint = ruleName
		if ruleName == "" {
			p.entrypoint = g.rules[0].name
		}
		return Entrypoint(oldEntrypoint)
	}
}

// Statistics adds a user provided Stats struct to the parser to allow
// the user to process the results after the parsing has finished.
// Also the key for the "no match" counter is set.
//
// Example usage:
//
//     input := "input"
//     stats := Stats{}
//     _, err := Parse("input-file", []byte(input), Statistics(&stats, "no match"))
//     if err != nil {
//         log.Panicln(err)
//     }
//     b, err := json.MarshalIndent(stats.ChoiceAltCnt, "", "  ")
//     if err != nil {
//         log.Panicln(err)
//     }
//     fmt.Println(string(b))
//
func Statistics(stats *Stats, choiceNoMatch string) Option {
	return func(p *parser) Option {
		oldStats := p.Stats
		p.Stats = stats
		oldChoiceNoMatch := p.choiceNoMatch
		p.choiceNoMatch = choiceNoMatch
		if p.Stats.ChoiceAltCnt == nil {
			p.Stats.ChoiceAltCnt = make(map[string]map[string]int)
		}
		return Statistics(oldStats, oldChoiceNoMatch)
	}
}

// Debug creates an Option to set the debug flag to b. When set to true,
// debugging information is printed to stdout while parsing.
//
// The default is false.
func Debug(b bool) Option {
	return func(p *parser) Option {
		old := p.debug
		p.debug = b
		return Debug(old)
	}
}

// Memoize creates an Option to set the memoize flag to b. When set to true,
// the parser will cache all results so each expression is evaluated only
// once. This guarantees linear parsing time even for pathological cases,
// at the expense of more memory and slower times for typical cases.
//
// The default is false.
func Memoize(b bool) Option {
	return func(p *parser) Option {
		old := p.memoize
		p.memoize = b
		return Memoize(old)
	}
}

// AllowInvalidUTF8 creates an Option to allow invalid UTF-8 bytes.
// Every invalid UTF-8 byte is treated as a utf8.RuneError (U+FFFD)
// by character class matchers and is matched by the any matcher.
// The returned matched value, c.text and c.offset are NOT affected.
//
// The default is false.
func AllowInvalidUTF8(b bool) Option {
	return func(p *parser) Option {
		old := p.allowInvalidUTF8
		p.allowInvalidUTF8 = b
		return AllowInvalidUTF8(old)
	}
}

// Recover creates an Option to set the recover flag to b. When set to
// true, this causes the parser to recover from panics and convert it
// to an error. Setting it to false can be useful while debugging to
// access the full stack trace.
//
// The default is true.
func Recover(b bool) Option {
	return func(p *parser) Option {
		old := p.recover
		p.recover = b
		return Recover(old)
	}
}

// GlobalStore creates an Option to set a key to a certain value in
// the globalStore.
func GlobalStore(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.globalStore[key]
		p.cur.globalStore[key] = value
		return GlobalStore(key, old)
	}
}

// InitState creates an Option to set a key to a certain value in
// the global "state" store.
func InitState(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.state[key]
		p.cur.state[key] = value
		return InitState(key, old)
	}
}

// ParseFile parses the file identified by filename.
func ParseFile(filename string, opts ...Option) (i interface{}, err error) {
	f, err := os.Open(filename)
	if err != nil {
		return nil, err
	}
	defer func() {
		if closeErr := f.Close(); closeErr != nil {
			err = closeErr
		}
	}()
	return ParseReader(filename, f, opts...)
}

// ParseReader parses the data from r using filename as information in the
// error messages.
func ParseReader(filename string, r io.Reader, opts ...Option) (interface{}, error) {
	b, err := ioutil.ReadAll(r)
	if err != nil {
		return nil, err
	}

	return Parse(filename, b, opts...)
}

// Parse parses the data from b using filename as information in the
// error messages.
func Parse(filename string, b []byte, opts ...Option) (interface{}, error) {
	return newParser(filename, b, opts...).parse(g)
}

// position records a position in the text.
type position struct {
	line, col, offset int
}

func (p position) String() string {
	return fmt.Sprintf("%d:%d [%d]", p.line, p.col, p.offset)
}

// savepoint stores all state required to go back to this point in the
// parser.
type savepoint struct {
	position
	rn rune
	w  int
}

type current struct {
	pos  position // start position of the match
	text []byte   // raw text of the match

	// state is a store for arbitrary key,value pairs that the user wants to be
	// tied to the backtracking of the parser.
	// This is always rolled back if a parsing rule fails.
	state storeDict

	// globalStore is a general store for the user to store arbitrary key-value
	// pairs that they need to manage and that they do not want tied to the
	// backtracking of the parser. This is only modified by the user and never
	// rolled back by the parser. It is always up to the user to keep this in a
	// consistent state.
	globalStore storeDict
}

type storeDict map[string]interface{}

// the AST types...

type grammar struct {
	pos   position
	rules []*rule
}

type rule struct {
	pos         position
	name        string
	displayName string
	expr        interface{}
}

type choiceExpr struct {
	pos          position
	alternatives []interface{}
}

type actionExpr struct {
	pos  position
	expr interface{}
	run  func(*parser) (interface{}, error)
}

type recoveryExpr struct {
	pos          position
	expr         interface{}
	recoverExpr  interface{}
	failureLabel []string
}

type seqExpr struct {
	pos   position
	exprs []interface{}
}

type throwExpr struct {
	pos   position
	label string
}

type labeledExpr struct {
	pos   position
	label string
	expr  interface{}
}

type expr struct {
	pos  position
	expr interface{}
}

type andExpr expr
type notExpr expr
type zeroOrOneExpr expr
type zeroOrMoreExpr expr
type oneOrMoreExpr expr

type ruleRefExpr struct {
	pos  position
	name string
}

type stateCodeExpr struct {
	pos position
	run func(*parser) error
}

type andCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type notCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type litMatcher struct {
	pos        position
	val        string
	ignoreCase bool
}

type charClassMatcher struct {
	pos             position
	val             string
	basicLatinChars [128]bool
	chars           []rune
	ranges          []rune
	classes         []*unicode.RangeTable
	ignoreCase      bool
	inverted        bool
}

type anyMatcher position

// errList cumulates the errors found by the parser.
type errList []error

func (e *errList) add(err error) {
	*e = append(*e, err)
}

func (e errList) err() error {
	if len(e) == 0 {
		return nil
	}
	e.dedupe()
	return e
}

func (e *errList) dedupe() {
	var cleaned []error
	set := make(map[string]bool)
	for _, err := range *e {
		if msg := err.Error(); !set[msg] {
			set[msg] = true
			cleaned = append(cleaned, err)
		}
	}
	*e = cleaned
}

func (e errList) Error() string {
	switch len(e) {
	case 0:
		return ""
	case 1:
		return e[0].Error()
	default:
		var buf bytes.Buffer

		for i, err := range e {
			if i > 0 {
				buf.WriteRune('\n')
			}
			buf.WriteString(err.Error())
		}
		return buf.String()
	}
}

// parserError wraps an error with a prefix indicating the rule in which
// the error occurred. The original error is stored in the Inner field.
type parserError struct {
	Inner    error
	pos      position
	prefix   string
	expected []string
}

// Error returns the error message.
func (p *parserError) Error() string {
	return p.prefix + ": " + p.Inner.Error()
}

// newParser creates a parser with the specified input source and options.
func newParser(filename string, b []byte, opts ...Option) *parser {
	stats := Stats{
		ChoiceAltCnt: make(map[string]map[string]int),
	}

	p := &parser{
		filename: filename,
		errs:     new(errList),
		data:     b,
		pt:       savepoint{position: position{line: 1}},
		recover:  true,
		cur: current{
			state:       make(storeDict),
			globalStore: make(storeDict),
		},
		maxFailPos:      position{col: 1, line: 1},
		maxFailExpected: make([]string, 0, 20),
		Stats:           &stats,
		// start rule is rule [0] unless an alternate entrypoint is specified
		entrypoint: g.rules[0].name,
	}
	p.setOptions(opts)

	if p.maxExprCnt == 0 {
		p.maxExprCnt = math.MaxUint64
	}

	return p
}

// setOptions applies the options to the parser.
func (p *parser) setOptions(opts []Option) {
	for _, opt := range opts {
		opt(p)
	}
}

type resultTuple struct {
	v   interface{}
	b   bool
	end savepoint
}

const choiceNoMatch = -1

// Stats stores some statistics, gathered during parsing
type Stats struct {
	// ExprCnt counts the number of expressions processed during parsing
	// This value is compared to the maximum number of expressions allowed
	// (set by the MaxExpressions option).
	ExprCnt uint64

	// ChoiceAltCnt is used to count for each ordered choice expression,
	// which alternative is used how may times.
	// These numbers allow to optimize the order of the ordered choice expression
	// to increase the performance of the parser
	//
	// The outer key of ChoiceAltCnt is composed of the name of the rule as well
	// as the line and the column of the ordered choice.
	// The inner key of ChoiceAltCnt is the number (one-based) of the matching alternative.
	// For each alternative the number of matches are counted. If an ordered choice does not
	// match, a special counter is incremented. The name of this counter is set with
	// the parser option Statistics.
	// For an alternative to be included in ChoiceAltCnt, it has to match at least once.
	ChoiceAltCnt map[string]map[string]int
}

type parser struct {
	filename string
	pt       savepoint
	cur      current

	data []byte
	errs *errList

	depth   int
	recover bool
	debug   bool

	memoize bool
	// memoization table for the packrat algorithm:
	// map[offset in source] map[expression or rule] {value, match}
	memo map[int]map[interface{}]resultTuple

	// rules table, maps the rule identifier to the rule node
	rules map[string]*rule
	// variables stack, map of label to value
	vstack []map[string]interface{}
	// rule stack, allows identification of the current rule in errors
	rstack []*rule

	// parse fail
	maxFailPos            position
	maxFailExpected       []string
	maxFailInvertExpected bool

	// max number of expressions to be parsed
	maxExprCnt uint64
	// entrypoint for the parser
	entrypoint string

	allowInvalidUTF8 bool

	*Stats

	choiceNoMatch string
	// recovery expression stack, keeps track of the currently available recovery expression, these are traversed in reverse
	recoveryStack []map[string]interface{}
}

// push a variable set on the vstack.
func (p *parser) pushV() {
	if cap(p.vstack) == len(p.vstack) {
		// create new empty slot in the stack
		p.vstack = append(p.vstack, nil)
	} else {
		// slice to 1 more
		p.vstack = p.vstack[:len(p.vstack)+1]
	}

	// get the last args set
	m := p.vstack[len(p.vstack)-1]
	if m != nil && len(m) == 0 {
		// empty map, all good
		return
	}

	m = make(map[string]interface{})
	p.vstack[len(p.vstack)-1] = m
}

// pop a variable set from the vstack.
func (p *parser) popV() {
	// if the map is not empty, clear it
	m := p.vstack[len(p.vstack)-1]
	if len(m) > 0 {
		// GC that map
		p.vstack[len(p.vstack)-1] = nil
	}
	p.vstack = p.vstack[:len(p.vstack)-1]
}

// push a recovery expression with its labels to the recoveryStack
func (p *parser) pushRecovery(labels []string, expr interface{}) {
	if cap(p.recoveryStack) == len(p.recoveryStack) {
		// create new empty slot in the stack
		p.recoveryStack = append(p.recoveryStack, nil)
	} else {
		// slice to 1 more
		p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)+1]
	}

	m := make(map[string]interface{}, len(labels))
	for _, fl := range labels {
		m[fl] = expr
	}
	p.recoveryStack[len(p.recoveryStack)-1] = m
}

// pop a recovery expression from the recoveryStack
func (p *parser) popRecovery() {
	// GC that map
	p.recoveryStack[len(p.recoveryStack)-1] = nil

	p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)-1]
}

func (p *parser) print(prefix, s string) string {
	if !p.debug {
		return s
	}

	fmt.Printf("%s %d:%d:%d: %s [%#U]\n",
		prefix, p.pt.line, p.pt.col, p.pt.offset, s, p.pt.rn)
	return s
}

func (p *parser) in(s string) string {
	p.depth++
	return p.print(strings.Repeat(" ", p.depth)+">", s)
}

func (p *parser) out(s string) string {
	p.depth--
	return p.print(strings.Repeat(" ", p.depth)+"<", s)
}

func (p *parser) addErr(err error) {
	p.addErrAt(err, p.pt.position, []string{})
}

func (p *parser) addErrAt(err error, pos position, expected []string) {
	var buf bytes.Buffer
	if p.filename != "" {
		buf.WriteString(p.filename)
	}
	if buf.Len() > 0 {
		buf.WriteString(":")
	}
	buf.WriteString(fmt.Sprintf("%d:%d (%d)", pos.line, pos.col, pos.offset))
	if len(p.rstack) > 0 {
		if buf.Len() > 0 {
			buf.WriteString(": ")
		}
		rule := p.rstack[len(p.rstack)-1]
		if rule.displayName != "" {
			buf.WriteString("rule " + rule.displayName)
		} else {
			buf.WriteString("rule " + rule.name)
		}
	}
	pe := &parserError{Inner: err, pos: pos, prefix: buf.String(), expected: expected}
	p.errs.add(pe)
}

func (p *parser) failAt(fail bool, pos position, want string) {
	// process fail if parsing fails and not inverted or parsing succeeds and invert is set
	if fail == p.maxFailInvertExpected {
		if pos.offset < p.maxFailPos.offset {
			return
		}

		if pos.offset > p.maxFailPos.offset {
			p.maxFailPos = pos
			p.maxFailExpected = p.maxFailExpected[:0]
		}

		if p.maxFailInvertExpected {
			want = "!" + want
		}
		p.maxFailExpected = append(p.maxFailExpected, want)
	}
}

// read advances the parser to the next rune.
func (p *parser) read() {
	p.pt.offset += p.pt.w
	rn, n := utf8.DecodeRune(p.data[p.pt.offset:])
	p.pt.rn = rn
	p.pt.w = n
	p.pt.col++
	if rn == '\n' {
		p.pt.line++
		p.pt.col = 0
	}

	if rn == utf8.RuneError && n == 1 { // see utf8.DecodeRune
		if !p.allowInvalidUTF8 {
			p.addErr(errInvalidEncoding)
		}
	}
}

// restore parser position to the savepoint pt.
func (p *parser) restore(pt savepoint) {
	if p.debug {
		defer p.out(p.in("restore"))
	}
	if pt.offset == p.pt.offset {
		return
	}
	p.pt = pt
}

// Cloner is implemented by any value that has a Clone method, which returns a
// copy of the value. This is mainly used for types which are not passed by
// value (e.g map, slice, chan) or structs that contain such types.
//
// This is used in conjunction with the global state feature to create proper
// copies of the state to allow the parser to properly restore the state in
// the case of backtracking.
type Cloner interface {
	Clone() interface{}
}

// clone and return parser current state.
func (p *parser) cloneState() storeDict {
	if p.debug {
		defer p.out(p.in("cloneState"))
	}

	state := make(storeDict, len(p.cur.state))
	for k, v := range p.cur.state {
		if c, ok := v.(Cloner); ok {
			state[k] = c.Clone()
		} else {
			state[k] = v
		}
	}
	return state
}

// restore parser current state to the state storeDict.
// every restoreState should applied only one time for every cloned state
func (p *parser) restoreState(state storeDict) {
	if p.debug {
		defer p.out(p.in("restoreState"))
	}
	p.cur.state = state
}

// get the slice of bytes from the savepoint start to the current position.
func (p *parser) sliceFrom(start savepoint) []byte {
	return p.data[start.position.offset:p.pt.position.offset]
}

func (p *parser) getMemoized(node interface{}) (resultTuple, bool) {
	if len(p.memo) == 0 {
		return resultTuple{}, false
	}
	m := p.memo[p.pt.offset]
	if len(m) == 0 {
		return resultTuple{}, false
	}
	res, ok := m[node]
	return res, ok
}

func (p *parser) setMemoized(pt savepoint, node interface{}, tuple resultTuple) {
	if p.memo == nil {
		p.memo = make(map[int]map[interface{}]resultTuple)
	}
	m := p.memo[pt.offset]
	if m == nil {
		m = make(map[interface{}]resultTuple)
		p.memo[pt.offset] = m
	}
	m[node] = tuple
}

func (p *parser) buildRulesTable(g *grammar) {
	p.rules = make(map[string]*rule, len(g.rules))
	for _, r := range g.rules {
		p.rules[r.name] = r
	}
}

func (p *parser) parse(g *grammar) (val interface{}, err error) {
	if len(g.rules) == 0 {
		p.addErr(errNoRule)
		return nil, p.errs.err()
	}

	// TODO : not super critical but this could be generated
	p.buildRulesTable(g)

	if p.recover {
		// panic can be used in action code to stop parsing immediately
		// and return the panic as an error.
		defer func() {
			if e := recover(); e != nil {
				if p.debug {
					defer p.out(p.in("panic handler"))
				}
				val = nil
				switch e := e.(type) {
				case error:
					p.addErr(e)
				default:
					p.addErr(fmt.Errorf("%v", e))
				}
				err = p.errs.err()
			}
		}()
	}

	startRule, ok := p.rules[p.entrypoint]
	if !ok {
		p.addErr(errInvalidEntrypoint)
		return nil, p.errs.err()
	}

	p.read() // advance to first rune
	val, ok = p.parseRule(startRule)
	if !ok {
		if len(*p.errs) == 0 {
			// If parsing fails, but no errors have been recorded, the expected values
			// for the farthest parser position are returned as error.
			maxFailExpectedMap := make(map[string]struct{}, len(p.maxFailExpected))
			for _, v := range p.maxFailExpected {
				maxFailExpectedMap[v] = struct{}{}
			}
			expected := make([]string, 0, len(maxFailExpectedMap))
			eof := false
			if _, ok := maxFailExpectedMap["!."]; ok {
				delete(maxFailExpectedMap, "!.")
				eof = true
			}
			for k := range maxFailExpectedMap {
				expected = append(expected, k)
			}
			sort.Strings(expected)
			if eof {
				expected = append(expected, "EOF")
			}
			p.addErrAt(errors.New("no match found, expected: "+listJoin(expected, ", ", "or")), p.maxFailPos, expected)
		}

		return nil, p.errs.err()
	}
	return val, p.errs.err()
}

func listJoin(list []string, sep string, lastSep string) string {
	switch len(list) {
	case 0:
		return ""
	case 1:
		return list[0]
	default:
		return fmt.Sprintf("%s %s %s", strings.Join(list[:len(list)-1], sep), lastSep, list[len(list)-1])
	}
}

func (p *parser) parseRule(rule *rule) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRule " + rule.name))
	}

	if p.memoize {
		res, ok := p.getMemoized(rule)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
	}

	start := p.pt
	p.rstack = append(p.rstack, rule)
	p.pushV()
	val, ok := p.parseExpr(rule.expr)
	p.popV()
	p.rstack = p.rstack[:len(p.rstack)-1]
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}

	if p.memoize {
		p.setMemoized(start, rule, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseExpr(expr interface{}) (interface{}, bool) {
	var pt savepoint

	if p.memoize {
		res, ok := p.getMemoized(expr)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
		pt = p.pt
	}

	p.ExprCnt++
	if p.ExprCnt > p.maxExprCnt {
		panic(errMaxExprCnt)
	}

	var val interface{}
	var ok bool
	switch expr := expr.(type) {
	case *actionExpr:
		val, ok = p.parseActionExpr(expr)
	case *andCodeExpr:
		val, ok = p.parseAndCodeExpr(expr)
	case *andExpr:
		val, ok = p.parseAndExpr(expr)
	case *anyMatcher:
		val, ok = p.parseAnyMatcher(expr)
	case *charClassMatcher:
		val, ok = p.parseCharClassMatcher(expr)
	case *choiceExpr:
		val, ok = p.parseChoiceExpr(expr)
	case *labeledExpr:
		val, ok = p.parseLabeledExpr(expr)
	case *litMatcher:
		val, ok = p.parseLitMatcher(expr)
	case *notCodeExpr:
		val, ok = p.parseNotCodeExpr(expr)
	case *notExpr:
		val, ok = p.parseNotExpr(expr)
	case *oneOrMoreExpr:
		val, ok = p.parseOneOrMoreExpr(expr)
	case *recoveryExpr:
		val, ok = p.parseRecoveryExpr(expr)
	case *ruleRefExpr:
		val, ok = p.parseRuleRefExpr(expr)
	case *seqExpr:
		val, ok = p.parseSeqExpr(expr)
	case *stateCodeExpr:
		val, ok = p.parseStateCodeExpr(expr)
	case *throwExpr:
		val, ok = p.parseThrowExpr(expr)
	case *zeroOrMoreExpr:
		val, ok = p.parseZeroOrMoreExpr(expr)
	case *zeroOrOneExpr:
		val, ok = p.parseZeroOrOneExpr(expr)
	default:
		panic(fmt.Sprintf("unknown expression type %T", expr))
	}
	if p.memoize {
		p.setMemoized(pt, expr, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseActionExpr(act *actionExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseActionExpr"))
	}

	start := p.pt
	val, ok := p.parseExpr(act.expr)
	if ok {
		p.cur.pos = start.position
		p.cur.text = p.sliceFrom(start)
		state := p.cloneState()
		actVal, err := act.run(p)
		if err != nil {
			p.addErrAt(err, start.position, []string{})
		}
		p.restoreState(state)

		val = actVal
	}
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}
	return val, ok
}

func (p *parser) parseAndCodeExpr(and *andCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndCodeExpr"))
	}

	state := p.cloneState()

	ok, err := and.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, ok
}

func (p *parser) parseAndExpr(and *andExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	_, ok := p.parseExpr(and.expr)
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, ok
}

func (p *parser) parseAnyMatcher(any *anyMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAnyMatcher"))
	}

	if p.pt.rn == utf8.RuneError && p.pt.w == 0 {
		// EOF - see utf8.DecodeRune
		p.failAt(false, p.pt.position, ".")
		return nil, false
	}
	start := p.pt
	p.read()
	p.failAt(true, start.position, ".")
	return p.sliceFrom(start), true
}

func (p *parser) parseCharClassMatcher(chr *charClassMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseCharClassMatcher"))
	}

	cur := p.pt.rn
	start := p.pt

	// can't match EOF
	if cur == utf8.RuneError && p.pt.w == 0 { // see utf8.DecodeRune
		p.failAt(false, start.position, chr.val)
		return nil, false
	}

	if chr.ignoreCase {
		cur = unicode.ToLower(cur)
	}

	// try to match in the list of available chars
	for _, rn := range chr.chars {
		if rn == cur {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of ranges
	for i := 0; i < len(chr.ranges); i += 2 {
		if cur >= chr.ranges[i] && cur <= chr.ranges[i+1] {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of Unicode classes
	for _, cl := range chr.classes {
		if unicode.Is(cl, cur) {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	if chr.inverted {
		p.read()
		p.failAt(true, start.position, chr.val)
		return p.sliceFrom(start), true
	}
	p.failAt(false, start.position, chr.val)
	return nil, false
}

func (p *parser) incChoiceAltCnt(ch *choiceExpr, altI int) {
	choiceIdent := fmt.Sprintf("%s %d:%d", p.rstack[len(p.rstack)-1].name, ch.pos.line, ch.pos.col)
	m := p.ChoiceAltCnt[choiceIdent]
	if m == nil {
		m = make(map[string]int)
		p.ChoiceAltCnt[choiceIdent] = m
	}
	// We increment altI by 1, so the keys do not start at 0
	alt := strconv.Itoa(altI + 1)
	if altI == choiceNoMatch {
		alt = p.choiceNoMatch
	}
	m[alt]++
}

func (p *parser) parseChoiceExpr(ch *choiceExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseChoiceExpr"))
	}

	for altI, alt := range ch.alternatives {
		// dummy assignment to prevent compile error if optimized
		_ = altI

		state := p.cloneState()

		p.pushV()
		val, ok := p.parseExpr(alt)
		p.popV()
		if ok {
			p.incChoiceAltCnt(ch, altI)
			return val, ok
		}
		p.restoreState(state)
	}
	p.incChoiceAltCnt(ch, choiceNoMatch)
	return nil, false
}

func (p *parser) parseLabeledExpr(lab *labeledExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLabeledExpr"))
	}

	p.pushV()
	val, ok := p.parseExpr(lab.expr)
	p.popV()
	if ok && lab.label != "" {
		m := p.vstack[len(p.vstack)-1]
		m[lab.label] = val
	}
	return val, ok
}

func (p *parser) parseLitMatcher(lit *litMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLitMatcher"))
	}

	ignoreCase := ""
	if lit.ignoreCase {
		ignoreCase = "i"
	}
	val := fmt.Sprintf("%q%s", lit.val, ignoreCase)
	start := p.pt
	for _, want := range lit.val {
		cur := p.pt.rn
		if lit.ignoreCase {
			cur = unicode.ToLower(cur)
		}
		if cur != want {
			p.failAt(false, start.position, val)
			p.restore(start)
			return nil, false
		}
		p.read()
	}
	p.failAt(true, start.position, val)
	return p.sliceFrom(start), true
}

func (p *parser) parseNotCodeExpr(not *notCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotCodeExpr"))
	}

	state := p.cloneState()

	ok, err := not.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, !ok
}

func (p *parser) parseNotExpr(not *notExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	_, ok := p.parseExpr(not.expr)
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, !ok
}

func (p *parser) parseOneOrMoreExpr(expr *oneOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseOneOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			if len(vals) == 0 {
				// did not match once, no match
				return nil, false
			}
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseRecoveryExpr(recover *recoveryExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRecoveryExpr (" + strings.Join(recover.failureLabel, ",") + ")"))
	}

	p.pushRecovery(recover.failureLabel, recover.recoverExpr)
	val, ok := p.parseExpr(recover.expr)
	p.popRecovery()

	return val, ok
}

func (p *parser) parseRuleRefExpr(ref *ruleRefExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRuleRefExpr " + ref.name))
	}

	if ref.name == "" {
		panic(fmt.Sprintf("%s: invalid rule: missing name", ref.pos))
	}

	rule := p.rules[ref.name]
	if rule == nil {
		p.addErr(fmt.Errorf("undefined rule: %s", ref.name))
		return nil, false
	}
	return p.parseRule(rule)
}

func (p *parser) parseSeqExpr(seq *seqExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseSeqExpr"))
	}

	vals := make([]interface{}, 0, len(seq.exprs))

	pt := p.pt
	state := p.cloneState()
	for _, expr := range seq.exprs {
		val, ok := p.parseExpr(expr)
		if !ok {
			p.restoreState(state)
			p.restore(pt)
			return nil, false
		}
		vals = append(vals, val)
	}
	return vals, true
}

func (p *parser) parseStateCodeExpr(state *stateCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseStateCodeExpr"))
	}

	err := state.run(p)
	if err != nil {
		p.addErr(err)
	}
	return nil, true
}

func (p *parser) parseThrowExpr(expr *throwExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseThrowExpr"))
	}

	for i := len(p.recoveryStack) - 1; i >= 0; i-- {
		if recoverExpr, ok := p.recoveryStack[i][expr.label]; ok {
			if val, ok := p.parseExpr(recoverExpr); ok {
				return val, ok
			}
		}
	}

	return nil, false
}

func (p *parser) parseZeroOrMoreExpr(expr *zeroOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseZeroOrOneExpr(expr *zeroOrOneExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrOneExpr"))
	}

	p.pushV()
	val, _ := p.parseExpr(expr.expr)
	p.popV()
	// whether it matched or not, consider it a match
	return val, true
}
