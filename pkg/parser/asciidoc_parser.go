// Code generated by pigeon; DO NOT EDIT.

package parser

import (
	"bytes"
	"errors"
	"fmt"
	"io"
	"io/ioutil"
	"math"
	"os"
	"sort"
	"strconv"
	"strings"
	"unicode"
	"unicode/utf8"

	"github.com/bytesparadise/libasciidoc/pkg/types"
)

// *****************************************************************************************
// This file is generated after its sibling `asciidoc-grammar.peg` file. DO NOT MODIFY !
// *****************************************************************************************

var g = &grammar{
	rules: []*rule{
		{
			name: "Document",
			pos:  position{line: 18, col: 1, offset: 504},
			expr: &actionExpr{
				pos: position{line: 18, col: 13, offset: 516},
				run: (*parser).callonDocument1,
				expr: &seqExpr{
					pos: position{line: 18, col: 13, offset: 516},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 18, col: 13, offset: 516},
							label: "frontMatter",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 26, offset: 529},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 26, offset: 529},
									name: "FrontMatter",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 40, offset: 543},
							label: "documentHeader",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 56, offset: 559},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 56, offset: 559},
									name: "DocumentHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 73, offset: 576},
							label: "blocks",
							expr: &zeroOrMoreExpr{
								pos: position{line: 18, col: 80, offset: 583},
								expr: &choiceExpr{
									pos: position{line: 18, col: 81, offset: 584},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 18, col: 81, offset: 584},
											name: "Section",
										},
										&ruleRefExpr{
											pos:  position{line: 18, col: 91, offset: 594},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 1002, col: 8, offset: 40423},
							expr: &anyMatcher{
								line: 1002, col: 9, offset: 40424,
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentBlock",
			pos:  position{line: 22, col: 1, offset: 698},
			expr: &actionExpr{
				pos: position{line: 22, col: 18, offset: 715},
				run: (*parser).callonDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 22, col: 18, offset: 715},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 22, col: 18, offset: 715},
							expr: &notExpr{
								pos: position{line: 1002, col: 8, offset: 40423},
								expr: &anyMatcher{
									line: 1002, col: 9, offset: 40424,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 23, col: 5, offset: 793},
							label: "block",
							expr: &choiceExpr{
								pos: position{line: 23, col: 12, offset: 800},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 963, col: 14, offset: 39679},
										run: (*parser).callonDocumentBlock8,
										expr: &seqExpr{
											pos: position{line: 963, col: 14, offset: 39679},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 963, col: 14, offset: 39679},
													expr: &notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 963, col: 19, offset: 39684},
													expr: &choiceExpr{
														pos: position{line: 996, col: 7, offset: 40332},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 996, col: 7, offset: 40332},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 996, col: 13, offset: 40338},
																run: (*parser).callonDocumentBlock16,
																expr: &litMatcher{
																	pos:        position{line: 996, col: 13, offset: 40338},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1004, col: 8, offset: 40434},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1002, col: 8, offset: 40423},
															expr: &anyMatcher{
																line: 1002, col: 9, offset: 40424,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 97, col: 33, offset: 3679},
										run: (*parser).callonDocumentBlock23,
										expr: &seqExpr{
											pos: position{line: 97, col: 33, offset: 3679},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 97, col: 33, offset: 3679},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 97, col: 37, offset: 3683},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 121, col: 26, offset: 4726},
														run: (*parser).callonDocumentBlock27,
														expr: &seqExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 121, col: 27, offset: 4727},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 121, col: 56, offset: 4756},
																	expr: &charClassMatcher{
																		pos:        position{line: 121, col: 57, offset: 4757},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 97, col: 66, offset: 3712},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 97, col: 70, offset: 3716},
													expr: &choiceExpr{
														pos: position{line: 996, col: 7, offset: 40332},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 996, col: 7, offset: 40332},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 996, col: 13, offset: 40338},
																run: (*parser).callonDocumentBlock36,
																expr: &litMatcher{
																	pos:        position{line: 996, col: 13, offset: 40338},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1004, col: 8, offset: 40434},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1002, col: 8, offset: 40423},
															expr: &anyMatcher{
																line: 1002, col: 9, offset: 40424,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 99, col: 5, offset: 3799},
										run: (*parser).callonDocumentBlock43,
										expr: &seqExpr{
											pos: position{line: 99, col: 5, offset: 3799},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 99, col: 5, offset: 3799},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 99, col: 9, offset: 3803},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 121, col: 26, offset: 4726},
														run: (*parser).callonDocumentBlock47,
														expr: &seqExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 121, col: 27, offset: 4727},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 121, col: 56, offset: 4756},
																	expr: &charClassMatcher{
																		pos:        position{line: 121, col: 57, offset: 4757},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 99, col: 38, offset: 3832},
													val:        ":",
													ignoreCase: false,
												},
												&oneOrMoreExpr{
													pos: position{line: 99, col: 42, offset: 3836},
													expr: &choiceExpr{
														pos: position{line: 996, col: 7, offset: 40332},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 996, col: 7, offset: 40332},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 996, col: 13, offset: 40338},
																run: (*parser).callonDocumentBlock56,
																expr: &litMatcher{
																	pos:        position{line: 996, col: 13, offset: 40338},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 99, col: 46, offset: 3840},
													label: "value",
													expr: &actionExpr{
														pos: position{line: 125, col: 27, offset: 4849},
														run: (*parser).callonDocumentBlock59,
														expr: &zeroOrMoreExpr{
															pos: position{line: 125, col: 27, offset: 4849},
															expr: &seqExpr{
																pos: position{line: 125, col: 28, offset: 4850},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 125, col: 28, offset: 4850},
																		expr: &choiceExpr{
																			pos: position{line: 1000, col: 12, offset: 40394},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1000, col: 12, offset: 40394},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1000, col: 21, offset: 40403},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 125, col: 37, offset: 4859,
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1004, col: 8, offset: 40434},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1002, col: 8, offset: 40423},
															expr: &anyMatcher{
																line: 1002, col: 9, offset: 40424,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 106, col: 53, offset: 4128},
										run: (*parser).callonDocumentBlock72,
										expr: &seqExpr{
											pos: position{line: 106, col: 53, offset: 4128},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 106, col: 53, offset: 4128},
													val:        ":!",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 106, col: 58, offset: 4133},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 121, col: 26, offset: 4726},
														run: (*parser).callonDocumentBlock76,
														expr: &seqExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 121, col: 27, offset: 4727},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 121, col: 56, offset: 4756},
																	expr: &charClassMatcher{
																		pos:        position{line: 121, col: 57, offset: 4757},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 106, col: 87, offset: 4162},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 106, col: 91, offset: 4166},
													expr: &choiceExpr{
														pos: position{line: 996, col: 7, offset: 40332},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 996, col: 7, offset: 40332},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 996, col: 13, offset: 40338},
																run: (*parser).callonDocumentBlock85,
																expr: &litMatcher{
																	pos:        position{line: 996, col: 13, offset: 40338},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1004, col: 8, offset: 40434},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1002, col: 8, offset: 40423},
															expr: &anyMatcher{
																line: 1002, col: 9, offset: 40424,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 110, col: 49, offset: 4285},
										run: (*parser).callonDocumentBlock92,
										expr: &seqExpr{
											pos: position{line: 110, col: 49, offset: 4285},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 110, col: 49, offset: 4285},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 110, col: 53, offset: 4289},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 121, col: 26, offset: 4726},
														run: (*parser).callonDocumentBlock96,
														expr: &seqExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 121, col: 27, offset: 4727},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 121, col: 56, offset: 4756},
																	expr: &charClassMatcher{
																		pos:        position{line: 121, col: 57, offset: 4757},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 110, col: 82, offset: 4318},
													val:        "!:",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 110, col: 87, offset: 4323},
													expr: &choiceExpr{
														pos: position{line: 996, col: 7, offset: 40332},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 996, col: 7, offset: 40332},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 996, col: 13, offset: 40338},
																run: (*parser).callonDocumentBlock105,
																expr: &litMatcher{
																	pos:        position{line: 996, col: 13, offset: 40338},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1004, col: 8, offset: 40434},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1002, col: 8, offset: 40423},
															expr: &anyMatcher{
																line: 1002, col: 9, offset: 40424,
															},
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 131, col: 25, offset: 5035},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 131, col: 25, offset: 5035},
												val:        "toc::[]",
												ignoreCase: false,
											},
											&choiceExpr{
												pos: position{line: 1000, col: 12, offset: 40394},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 103, offset: 891},
										name: "List",
									},
									&actionExpr{
										pos: position{line: 706, col: 15, offset: 29119},
										run: (*parser).callonDocumentBlock118,
										expr: &seqExpr{
											pos: position{line: 706, col: 15, offset: 29119},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 706, col: 15, offset: 29119},
													label: "attributes",
													expr: &zeroOrMoreExpr{
														pos: position{line: 706, col: 26, offset: 29130},
														expr: &actionExpr{
															pos: position{line: 136, col: 21, offset: 5188},
															run: (*parser).callonDocumentBlock122,
															expr: &seqExpr{
																pos: position{line: 136, col: 21, offset: 5188},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 136, col: 21, offset: 5188},
																		label: "attr",
																		expr: &choiceExpr{
																			pos: position{line: 136, col: 27, offset: 5194},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 145, col: 14, offset: 5645},
																					run: (*parser).callonDocumentBlock126,
																					expr: &labeledExpr{
																						pos:   position{line: 145, col: 14, offset: 5645},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 151, col: 20, offset: 5775},
																							run: (*parser).callonDocumentBlock128,
																							expr: &seqExpr{
																								pos: position{line: 151, col: 20, offset: 5775},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 151, col: 20, offset: 5775},
																										val:        "[[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 151, col: 25, offset: 5780},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 982, col: 7, offset: 40050},
																											run: (*parser).callonDocumentBlock132,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 982, col: 7, offset: 40050},
																												expr: &seqExpr{
																													pos: position{line: 982, col: 8, offset: 40051},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 982, col: 8, offset: 40051},
																															expr: &choiceExpr{
																																pos: position{line: 1000, col: 12, offset: 40394},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1000, col: 12, offset: 40394},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1000, col: 21, offset: 40403},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 982, col: 17, offset: 40060},
																															expr: &choiceExpr{
																																pos: position{line: 996, col: 7, offset: 40332},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 996, col: 7, offset: 40332},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 996, col: 13, offset: 40338},
																																		run: (*parser).callonDocumentBlock142,
																																		expr: &litMatcher{
																																			pos:        position{line: 996, col: 13, offset: 40338},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 982, col: 21, offset: 40064},
																															expr: &litMatcher{
																																pos:        position{line: 982, col: 22, offset: 40065},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 982, col: 26, offset: 40069},
																															expr: &litMatcher{
																																pos:        position{line: 982, col: 27, offset: 40070},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 982, col: 31, offset: 40074},
																															expr: &litMatcher{
																																pos:        position{line: 982, col: 32, offset: 40075},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 982, col: 37, offset: 40080},
																															expr: &litMatcher{
																																pos:        position{line: 982, col: 38, offset: 40081},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 982, col: 43, offset: 40086},
																															expr: &litMatcher{
																																pos:        position{line: 982, col: 44, offset: 40087},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 982, col: 48, offset: 40091,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 151, col: 33, offset: 5788},
																										val:        "]]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 147, col: 5, offset: 5691},
																					run: (*parser).callonDocumentBlock156,
																					expr: &seqExpr{
																						pos: position{line: 147, col: 5, offset: 5691},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 147, col: 5, offset: 5691},
																								val:        "[#",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 147, col: 10, offset: 5696},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 982, col: 7, offset: 40050},
																									run: (*parser).callonDocumentBlock160,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 982, col: 7, offset: 40050},
																										expr: &seqExpr{
																											pos: position{line: 982, col: 8, offset: 40051},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 982, col: 8, offset: 40051},
																													expr: &choiceExpr{
																														pos: position{line: 1000, col: 12, offset: 40394},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1000, col: 12, offset: 40394},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1000, col: 21, offset: 40403},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 17, offset: 40060},
																													expr: &choiceExpr{
																														pos: position{line: 996, col: 7, offset: 40332},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 996, col: 7, offset: 40332},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 996, col: 13, offset: 40338},
																																run: (*parser).callonDocumentBlock170,
																																expr: &litMatcher{
																																	pos:        position{line: 996, col: 13, offset: 40338},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 21, offset: 40064},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 22, offset: 40065},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 26, offset: 40069},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 27, offset: 40070},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 31, offset: 40074},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 32, offset: 40075},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 37, offset: 40080},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 38, offset: 40081},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 43, offset: 40086},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 44, offset: 40087},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 982, col: 48, offset: 40091,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 147, col: 18, offset: 5704},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 157, col: 17, offset: 5997},
																					run: (*parser).callonDocumentBlock184,
																					expr: &seqExpr{
																						pos: position{line: 157, col: 17, offset: 5997},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 157, col: 17, offset: 5997},
																								val:        ".",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 157, col: 21, offset: 6001},
																								expr: &litMatcher{
																									pos:        position{line: 157, col: 22, offset: 6002},
																									val:        ".",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 157, col: 26, offset: 6006},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonDocumentBlock192,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 157, col: 30, offset: 6010},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 161, col: 24, offset: 6115},
																									run: (*parser).callonDocumentBlock195,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 161, col: 24, offset: 6115},
																										expr: &seqExpr{
																											pos: position{line: 161, col: 25, offset: 6116},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 161, col: 25, offset: 6116},
																													expr: &choiceExpr{
																														pos: position{line: 1000, col: 12, offset: 40394},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1000, col: 12, offset: 40394},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1000, col: 21, offset: 40403},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 161, col: 34, offset: 6125,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 167, col: 16, offset: 6274},
																					run: (*parser).callonDocumentBlock203,
																					expr: &seqExpr{
																						pos: position{line: 167, col: 16, offset: 6274},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 167, col: 16, offset: 6274},
																								val:        "[.",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 167, col: 21, offset: 6279},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonDocumentBlock209,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 167, col: 25, offset: 6283},
																								label: "role",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 23, offset: 6387},
																									run: (*parser).callonDocumentBlock212,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 171, col: 23, offset: 6387},
																										expr: &seqExpr{
																											pos: position{line: 171, col: 24, offset: 6388},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 171, col: 24, offset: 6388},
																													expr: &choiceExpr{
																														pos: position{line: 1000, col: 12, offset: 40394},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1000, col: 12, offset: 40394},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1000, col: 21, offset: 40403},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 171, col: 33, offset: 6397},
																													expr: &litMatcher{
																														pos:        position{line: 171, col: 34, offset: 6398},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 171, col: 38, offset: 6402,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 167, col: 51, offset: 6309},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 176, col: 30, offset: 6551},
																					run: (*parser).callonDocumentBlock223,
																					expr: &seqExpr{
																						pos: position{line: 176, col: 30, offset: 6551},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 176, col: 30, offset: 6551},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 176, col: 34, offset: 6555},
																								label: "k",
																								expr: &choiceExpr{
																									pos: position{line: 494, col: 19, offset: 19202},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 494, col: 19, offset: 19202},
																											run: (*parser).callonDocumentBlock228,
																											expr: &litMatcher{
																												pos:        position{line: 494, col: 19, offset: 19202},
																												val:        "TIP",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 496, col: 5, offset: 19240},
																											run: (*parser).callonDocumentBlock230,
																											expr: &litMatcher{
																												pos:        position{line: 496, col: 5, offset: 19240},
																												val:        "NOTE",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 498, col: 5, offset: 19280},
																											run: (*parser).callonDocumentBlock232,
																											expr: &litMatcher{
																												pos:        position{line: 498, col: 5, offset: 19280},
																												val:        "IMPORTANT",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 500, col: 5, offset: 19330},
																											run: (*parser).callonDocumentBlock234,
																											expr: &litMatcher{
																												pos:        position{line: 500, col: 5, offset: 19330},
																												val:        "WARNING",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 502, col: 5, offset: 19376},
																											run: (*parser).callonDocumentBlock236,
																											expr: &litMatcher{
																												pos:        position{line: 502, col: 5, offset: 19376},
																												val:        "CAUTION",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 176, col: 53, offset: 6574},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 199, col: 21, offset: 7299},
																					run: (*parser).callonDocumentBlock239,
																					expr: &litMatcher{
																						pos:        position{line: 199, col: 21, offset: 7299},
																						val:        "[horizontal]",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 181, col: 19, offset: 6735},
																					run: (*parser).callonDocumentBlock241,
																					expr: &seqExpr{
																						pos: position{line: 181, col: 19, offset: 6735},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 181, col: 19, offset: 6735},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 181, col: 23, offset: 6739},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonDocumentBlock247,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 181, col: 27, offset: 6743},
																								label: "attributes",
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 181, col: 38, offset: 6754},
																									expr: &choiceExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 185, col: 21, offset: 6867},
																												run: (*parser).callonDocumentBlock252,
																												expr: &seqExpr{
																													pos: position{line: 185, col: 21, offset: 6867},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 185, col: 21, offset: 6867},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																run: (*parser).callonDocumentBlock255,
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			expr: &actionExpr{
																																				pos: position{line: 231, col: 14, offset: 8648},
																																				run: (*parser).callonDocumentBlock258,
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 14, offset: 8648},
																																					val:        "verse",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&labeledExpr{
																																			pos:   position{line: 191, col: 28, offset: 7138},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 191, col: 32, offset: 7142},
																																				expr: &seqExpr{
																																					pos: position{line: 191, col: 33, offset: 7143},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 191, col: 33, offset: 7143},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 34, offset: 7144},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 38, offset: 7148},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 39, offset: 7149},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 43, offset: 7153},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 44, offset: 7154},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 191, col: 48, offset: 7158,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&litMatcher{
																															pos:        position{line: 185, col: 40, offset: 6886},
																															val:        "=",
																															ignoreCase: false,
																														},
																														&labeledExpr{
																															pos:   position{line: 185, col: 44, offset: 6890},
																															label: "value",
																															expr: &actionExpr{
																																pos: position{line: 195, col: 19, offset: 7217},
																																run: (*parser).callonDocumentBlock272,
																																expr: &labeledExpr{
																																	pos:   position{line: 195, col: 19, offset: 7217},
																																	label: "value",
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 195, col: 25, offset: 7223},
																																		expr: &seqExpr{
																																			pos: position{line: 195, col: 26, offset: 7224},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 195, col: 26, offset: 7224},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 27, offset: 7225},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 195, col: 31, offset: 7229},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 32, offset: 7230},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 195, col: 36, offset: 7234},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 37, offset: 7235},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 195, col: 41, offset: 7239,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrOneExpr{
																															pos: position{line: 185, col: 67, offset: 6913},
																															expr: &litMatcher{
																																pos:        position{line: 185, col: 67, offset: 6913},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 185, col: 72, offset: 6918},
																															expr: &choiceExpr{
																																pos: position{line: 996, col: 7, offset: 40332},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 996, col: 7, offset: 40332},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 996, col: 13, offset: 40338},
																																		run: (*parser).callonDocumentBlock288,
																																		expr: &litMatcher{
																																			pos:        position{line: 996, col: 13, offset: 40338},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 187, col: 5, offset: 7002},
																												run: (*parser).callonDocumentBlock290,
																												expr: &seqExpr{
																													pos: position{line: 187, col: 5, offset: 7002},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 187, col: 5, offset: 7002},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																run: (*parser).callonDocumentBlock293,
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			expr: &actionExpr{
																																				pos: position{line: 231, col: 14, offset: 8648},
																																				run: (*parser).callonDocumentBlock296,
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 14, offset: 8648},
																																					val:        "verse",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&labeledExpr{
																																			pos:   position{line: 191, col: 28, offset: 7138},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 191, col: 32, offset: 7142},
																																				expr: &seqExpr{
																																					pos: position{line: 191, col: 33, offset: 7143},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 191, col: 33, offset: 7143},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 34, offset: 7144},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 38, offset: 7148},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 39, offset: 7149},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 43, offset: 7153},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 44, offset: 7154},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 191, col: 48, offset: 7158,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrOneExpr{
																															pos: position{line: 187, col: 24, offset: 7021},
																															expr: &litMatcher{
																																pos:        position{line: 187, col: 24, offset: 7021},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 187, col: 29, offset: 7026},
																															expr: &choiceExpr{
																																pos: position{line: 996, col: 7, offset: 40332},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 996, col: 7, offset: 40332},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 996, col: 13, offset: 40338},
																																		run: (*parser).callonDocumentBlock313,
																																		expr: &litMatcher{
																																			pos:        position{line: 996, col: 13, offset: 40338},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 181, col: 59, offset: 6775},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 136, col: 131, offset: 5298},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonDocumentBlock319,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 1004, col: 8, offset: 40434},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1000, col: 12, offset: 40394},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1000, col: 21, offset: 40403},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1002, col: 8, offset: 40423},
																				expr: &anyMatcher{
																					line: 1002, col: 9, offset: 40424,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 706, col: 46, offset: 29150},
													val:        "image::",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 706, col: 56, offset: 29160},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 978, col: 8, offset: 39980},
														run: (*parser).callonDocumentBlock328,
														expr: &oneOrMoreExpr{
															pos: position{line: 978, col: 8, offset: 39980},
															expr: &seqExpr{
																pos: position{line: 978, col: 9, offset: 39981},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 978, col: 9, offset: 39981},
																		expr: &choiceExpr{
																			pos: position{line: 1000, col: 12, offset: 40394},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1000, col: 12, offset: 40394},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1000, col: 21, offset: 40403},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 978, col: 18, offset: 39990},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonDocumentBlock338,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 978, col: 22, offset: 39994},
																		expr: &litMatcher{
																			pos:        position{line: 978, col: 23, offset: 39995},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 978, col: 27, offset: 39999},
																		expr: &litMatcher{
																			pos:        position{line: 978, col: 28, offset: 40000},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 978, col: 32, offset: 40004,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 706, col: 67, offset: 29171},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 715, col: 20, offset: 29622},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 715, col: 20, offset: 29622},
																run: (*parser).callonDocumentBlock347,
																expr: &seqExpr{
																	pos: position{line: 715, col: 20, offset: 29622},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 715, col: 20, offset: 29622},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 715, col: 24, offset: 29626},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 732, col: 19, offset: 30401},
																				run: (*parser).callonDocumentBlock351,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 732, col: 19, offset: 30401},
																					expr: &seqExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 732, col: 20, offset: 30402},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 21, offset: 30403},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 25, offset: 30407},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 26, offset: 30408},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 30, offset: 30412},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 31, offset: 30413},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 732, col: 35, offset: 30417,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 715, col: 45, offset: 29647},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 716, col: 9, offset: 29659},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 732, col: 19, offset: 30401},
																				run: (*parser).callonDocumentBlock363,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 732, col: 19, offset: 30401},
																					expr: &seqExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 732, col: 20, offset: 30402},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 21, offset: 30403},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 25, offset: 30407},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 26, offset: 30408},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 30, offset: 30412},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 31, offset: 30413},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 732, col: 35, offset: 30417,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 716, col: 33, offset: 29683},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 717, col: 9, offset: 29695},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 732, col: 19, offset: 30401},
																				run: (*parser).callonDocumentBlock375,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 732, col: 19, offset: 30401},
																					expr: &seqExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 732, col: 20, offset: 30402},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 21, offset: 30403},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 25, offset: 30407},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 26, offset: 30408},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 30, offset: 30412},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 31, offset: 30413},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 732, col: 35, offset: 30417,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 717, col: 33, offset: 29719},
																			expr: &litMatcher{
																				pos:        position{line: 717, col: 33, offset: 29719},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 718, col: 9, offset: 29732},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 718, col: 20, offset: 29743},
																				expr: &choiceExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							run: (*parser).callonDocumentBlock390,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 21, offset: 6867},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock393,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock396,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 185, col: 40, offset: 6886},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 185, col: 44, offset: 6890},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 195, col: 19, offset: 7217},
																											run: (*parser).callonDocumentBlock410,
																											expr: &labeledExpr{
																												pos:   position{line: 195, col: 19, offset: 7217},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 195, col: 25, offset: 7223},
																													expr: &seqExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 27, offset: 7225},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 31, offset: 7229},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 32, offset: 7230},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 36, offset: 7234},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 37, offset: 7235},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 195, col: 41, offset: 7239,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 67, offset: 6913},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 67, offset: 6913},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 72, offset: 6918},
																										expr: &choiceExpr{
																											pos: position{line: 996, col: 7, offset: 40332},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 996, col: 7, offset: 40332},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 996, col: 13, offset: 40338},
																													run: (*parser).callonDocumentBlock426,
																													expr: &litMatcher{
																														pos:        position{line: 996, col: 13, offset: 40338},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							run: (*parser).callonDocumentBlock428,
																							expr: &seqExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 187, col: 5, offset: 7002},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock431,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock434,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 187, col: 24, offset: 7021},
																										expr: &litMatcher{
																											pos:        position{line: 187, col: 24, offset: 7021},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 187, col: 29, offset: 7026},
																										expr: &choiceExpr{
																											pos: position{line: 996, col: 7, offset: 40332},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 996, col: 7, offset: 40332},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 996, col: 13, offset: 40338},
																													run: (*parser).callonDocumentBlock451,
																													expr: &litMatcher{
																														pos:        position{line: 996, col: 13, offset: 40338},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 718, col: 40, offset: 29763},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 720, col: 9, offset: 29869},
																run: (*parser).callonDocumentBlock454,
																expr: &seqExpr{
																	pos: position{line: 720, col: 9, offset: 29869},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 720, col: 9, offset: 29869},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 720, col: 13, offset: 29873},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 732, col: 19, offset: 30401},
																				run: (*parser).callonDocumentBlock458,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 732, col: 19, offset: 30401},
																					expr: &seqExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 732, col: 20, offset: 30402},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 21, offset: 30403},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 25, offset: 30407},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 26, offset: 30408},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 30, offset: 30412},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 31, offset: 30413},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 732, col: 35, offset: 30417,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 720, col: 34, offset: 29894},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 721, col: 9, offset: 29906},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 732, col: 19, offset: 30401},
																				run: (*parser).callonDocumentBlock470,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 732, col: 19, offset: 30401},
																					expr: &seqExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 732, col: 20, offset: 30402},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 21, offset: 30403},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 25, offset: 30407},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 26, offset: 30408},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 30, offset: 30412},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 31, offset: 30413},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 732, col: 35, offset: 30417,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 721, col: 32, offset: 29929},
																			expr: &litMatcher{
																				pos:        position{line: 721, col: 32, offset: 29929},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 722, col: 9, offset: 29942},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 722, col: 20, offset: 29953},
																				expr: &choiceExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							run: (*parser).callonDocumentBlock485,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 21, offset: 6867},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock488,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock491,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 185, col: 40, offset: 6886},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 185, col: 44, offset: 6890},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 195, col: 19, offset: 7217},
																											run: (*parser).callonDocumentBlock505,
																											expr: &labeledExpr{
																												pos:   position{line: 195, col: 19, offset: 7217},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 195, col: 25, offset: 7223},
																													expr: &seqExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 27, offset: 7225},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 31, offset: 7229},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 32, offset: 7230},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 36, offset: 7234},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 37, offset: 7235},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 195, col: 41, offset: 7239,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 67, offset: 6913},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 67, offset: 6913},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 72, offset: 6918},
																										expr: &choiceExpr{
																											pos: position{line: 996, col: 7, offset: 40332},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 996, col: 7, offset: 40332},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 996, col: 13, offset: 40338},
																													run: (*parser).callonDocumentBlock521,
																													expr: &litMatcher{
																														pos:        position{line: 996, col: 13, offset: 40338},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							run: (*parser).callonDocumentBlock523,
																							expr: &seqExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 187, col: 5, offset: 7002},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock526,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock529,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 187, col: 24, offset: 7021},
																										expr: &litMatcher{
																											pos:        position{line: 187, col: 24, offset: 7021},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 187, col: 29, offset: 7026},
																										expr: &choiceExpr{
																											pos: position{line: 996, col: 7, offset: 40332},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 996, col: 7, offset: 40332},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 996, col: 13, offset: 40338},
																													run: (*parser).callonDocumentBlock546,
																													expr: &litMatcher{
																														pos:        position{line: 996, col: 13, offset: 40338},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 722, col: 40, offset: 29973},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 724, col: 9, offset: 30076},
																run: (*parser).callonDocumentBlock549,
																expr: &seqExpr{
																	pos: position{line: 724, col: 9, offset: 30076},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 724, col: 9, offset: 30076},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 724, col: 13, offset: 30080},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 732, col: 19, offset: 30401},
																				run: (*parser).callonDocumentBlock553,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 732, col: 19, offset: 30401},
																					expr: &seqExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 732, col: 20, offset: 30402},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 21, offset: 30403},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 25, offset: 30407},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 26, offset: 30408},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 30, offset: 30412},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 31, offset: 30413},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 732, col: 35, offset: 30417,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 724, col: 34, offset: 30101},
																			expr: &litMatcher{
																				pos:        position{line: 724, col: 34, offset: 30101},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 725, col: 9, offset: 30114},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 725, col: 20, offset: 30125},
																				expr: &choiceExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							run: (*parser).callonDocumentBlock568,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 21, offset: 6867},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock571,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock574,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 185, col: 40, offset: 6886},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 185, col: 44, offset: 6890},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 195, col: 19, offset: 7217},
																											run: (*parser).callonDocumentBlock588,
																											expr: &labeledExpr{
																												pos:   position{line: 195, col: 19, offset: 7217},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 195, col: 25, offset: 7223},
																													expr: &seqExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 27, offset: 7225},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 31, offset: 7229},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 32, offset: 7230},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 36, offset: 7234},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 37, offset: 7235},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 195, col: 41, offset: 7239,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 67, offset: 6913},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 67, offset: 6913},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 72, offset: 6918},
																										expr: &choiceExpr{
																											pos: position{line: 996, col: 7, offset: 40332},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 996, col: 7, offset: 40332},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 996, col: 13, offset: 40338},
																													run: (*parser).callonDocumentBlock604,
																													expr: &litMatcher{
																														pos:        position{line: 996, col: 13, offset: 40338},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							run: (*parser).callonDocumentBlock606,
																							expr: &seqExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 187, col: 5, offset: 7002},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock609,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock612,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 187, col: 24, offset: 7021},
																										expr: &litMatcher{
																											pos:        position{line: 187, col: 24, offset: 7021},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 187, col: 29, offset: 7026},
																										expr: &choiceExpr{
																											pos: position{line: 996, col: 7, offset: 40332},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 996, col: 7, offset: 40332},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 996, col: 13, offset: 40338},
																													run: (*parser).callonDocumentBlock629,
																													expr: &litMatcher{
																														pos:        position{line: 996, col: 13, offset: 40338},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 725, col: 40, offset: 30145},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 727, col: 9, offset: 30246},
																run: (*parser).callonDocumentBlock632,
																expr: &seqExpr{
																	pos: position{line: 727, col: 9, offset: 30246},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 727, col: 9, offset: 30246},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 727, col: 13, offset: 30250},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 727, col: 24, offset: 30261},
																				expr: &choiceExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							run: (*parser).callonDocumentBlock638,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 21, offset: 6867},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock641,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock644,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 185, col: 40, offset: 6886},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 185, col: 44, offset: 6890},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 195, col: 19, offset: 7217},
																											run: (*parser).callonDocumentBlock658,
																											expr: &labeledExpr{
																												pos:   position{line: 195, col: 19, offset: 7217},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 195, col: 25, offset: 7223},
																													expr: &seqExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 27, offset: 7225},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 31, offset: 7229},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 32, offset: 7230},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 36, offset: 7234},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 37, offset: 7235},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 195, col: 41, offset: 7239,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 67, offset: 6913},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 67, offset: 6913},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 72, offset: 6918},
																										expr: &choiceExpr{
																											pos: position{line: 996, col: 7, offset: 40332},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 996, col: 7, offset: 40332},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 996, col: 13, offset: 40338},
																													run: (*parser).callonDocumentBlock674,
																													expr: &litMatcher{
																														pos:        position{line: 996, col: 13, offset: 40338},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							run: (*parser).callonDocumentBlock676,
																							expr: &seqExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 187, col: 5, offset: 7002},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock679,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock682,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 187, col: 24, offset: 7021},
																										expr: &litMatcher{
																											pos:        position{line: 187, col: 24, offset: 7021},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 187, col: 29, offset: 7026},
																										expr: &choiceExpr{
																											pos: position{line: 996, col: 7, offset: 40332},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 996, col: 7, offset: 40332},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 996, col: 13, offset: 40338},
																													run: (*parser).callonDocumentBlock699,
																													expr: &litMatcher{
																														pos:        position{line: 996, col: 13, offset: 40338},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 727, col: 44, offset: 30281},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 706, col: 102, offset: 29206},
													expr: &choiceExpr{
														pos: position{line: 996, col: 7, offset: 40332},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 996, col: 7, offset: 40332},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 996, col: 13, offset: 40338},
																run: (*parser).callonDocumentBlock705,
																expr: &litMatcher{
																	pos:        position{line: 996, col: 13, offset: 40338},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1004, col: 8, offset: 40434},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1002, col: 8, offset: 40423},
															expr: &anyMatcher{
																line: 1002, col: 9, offset: 40424,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 930, col: 24, offset: 38486},
										run: (*parser).callonDocumentBlock712,
										expr: &seqExpr{
											pos: position{line: 930, col: 24, offset: 38486},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 930, col: 24, offset: 38486},
													label: "content",
													expr: &actionExpr{
														pos: position{line: 935, col: 31, offset: 38689},
														run: (*parser).callonDocumentBlock715,
														expr: &seqExpr{
															pos: position{line: 935, col: 31, offset: 38689},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 935, col: 31, offset: 38689},
																	expr: &choiceExpr{
																		pos: position{line: 996, col: 7, offset: 40332},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 996, col: 7, offset: 40332},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 996, col: 13, offset: 40338},
																				run: (*parser).callonDocumentBlock720,
																				expr: &litMatcher{
																					pos:        position{line: 996, col: 13, offset: 40338},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 935, col: 35, offset: 38693},
																	expr: &choiceExpr{
																		pos: position{line: 1000, col: 12, offset: 40394},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1000, col: 12, offset: 40394},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1000, col: 21, offset: 40403},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&oneOrMoreExpr{
																	pos: position{line: 935, col: 44, offset: 38702},
																	expr: &seqExpr{
																		pos: position{line: 935, col: 45, offset: 38703},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 935, col: 45, offset: 38703},
																				expr: &seqExpr{
																					pos: position{line: 935, col: 47, offset: 38705},
																					exprs: []interface{}{
																						&choiceExpr{
																							pos: position{line: 1000, col: 12, offset: 40394},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1000, col: 12, offset: 40394},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1000, col: 21, offset: 40403},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 963, col: 14, offset: 39679},
																							run: (*parser).callonDocumentBlock733,
																							expr: &seqExpr{
																								pos: position{line: 963, col: 14, offset: 39679},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 963, col: 14, offset: 39679},
																										expr: &notExpr{
																											pos: position{line: 1002, col: 8, offset: 40423},
																											expr: &anyMatcher{
																												line: 1002, col: 9, offset: 40424,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 963, col: 19, offset: 39684},
																										expr: &choiceExpr{
																											pos: position{line: 996, col: 7, offset: 40332},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 996, col: 7, offset: 40332},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 996, col: 13, offset: 40338},
																													run: (*parser).callonDocumentBlock741,
																													expr: &litMatcher{
																														pos:        position{line: 996, col: 13, offset: 40338},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&choiceExpr{
																										pos: position{line: 1004, col: 8, offset: 40434},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1002, col: 8, offset: 40423},
																												expr: &anyMatcher{
																													line: 1002, col: 9, offset: 40424,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&anyMatcher{
																				line: 935, col: 66, offset: 38724,
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1004, col: 8, offset: 40434},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1002, col: 8, offset: 40423},
															expr: &anyMatcher{
																line: 1002, col: 9, offset: 40424,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 940, col: 39, offset: 38858},
										run: (*parser).callonDocumentBlock754,
										expr: &seqExpr{
											pos: position{line: 940, col: 39, offset: 38858},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 948, col: 26, offset: 39156},
													val:        "....",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 940, col: 61, offset: 38880},
													expr: &choiceExpr{
														pos: position{line: 996, col: 7, offset: 40332},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 996, col: 7, offset: 40332},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 996, col: 13, offset: 40338},
																run: (*parser).callonDocumentBlock760,
																expr: &litMatcher{
																	pos:        position{line: 996, col: 13, offset: 40338},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1000, col: 12, offset: 40394},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 940, col: 73, offset: 38892},
													label: "content",
													expr: &actionExpr{
														pos: position{line: 944, col: 37, offset: 39067},
														run: (*parser).callonDocumentBlock766,
														expr: &zeroOrMoreExpr{
															pos: position{line: 944, col: 37, offset: 39067},
															expr: &seqExpr{
																pos: position{line: 944, col: 38, offset: 39068},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 944, col: 38, offset: 39068},
																		expr: &litMatcher{
																			pos:        position{line: 948, col: 26, offset: 39156},
																			val:        "....",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 944, col: 61, offset: 39091,
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 940, col: 117, offset: 38936},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 940, col: 118, offset: 38937},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 948, col: 26, offset: 39156},
																	val:        "....",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 940, col: 140, offset: 38959},
																	expr: &choiceExpr{
																		pos: position{line: 996, col: 7, offset: 40332},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 996, col: 7, offset: 40332},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 996, col: 13, offset: 40338},
																				run: (*parser).callonDocumentBlock778,
																				expr: &litMatcher{
																					pos:        position{line: 996, col: 13, offset: 40338},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1004, col: 8, offset: 40434},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1000, col: 12, offset: 40394},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1000, col: 21, offset: 40403},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1002, col: 8, offset: 40423},
																			expr: &anyMatcher{
																				line: 1002, col: 9, offset: 40424,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1002, col: 8, offset: 40423},
															expr: &anyMatcher{
																line: 1002, col: 9, offset: 40424,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 951, col: 34, offset: 39251},
										run: (*parser).callonDocumentBlock787,
										expr: &seqExpr{
											pos: position{line: 951, col: 34, offset: 39251},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 34, offset: 39251},
													val:        "[literal]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 951, col: 46, offset: 39263},
													expr: &choiceExpr{
														pos: position{line: 996, col: 7, offset: 40332},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 996, col: 7, offset: 40332},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 996, col: 13, offset: 40338},
																run: (*parser).callonDocumentBlock793,
																expr: &litMatcher{
																	pos:        position{line: 996, col: 13, offset: 40338},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1000, col: 12, offset: 40394},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 951, col: 58, offset: 39275},
													label: "content",
													expr: &actionExpr{
														pos: position{line: 956, col: 41, offset: 39498},
														run: (*parser).callonDocumentBlock799,
														expr: &oneOrMoreExpr{
															pos: position{line: 956, col: 41, offset: 39498},
															expr: &seqExpr{
																pos: position{line: 956, col: 42, offset: 39499},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 956, col: 42, offset: 39499},
																		expr: &seqExpr{
																			pos: position{line: 956, col: 44, offset: 39501},
																			exprs: []interface{}{
																				&choiceExpr{
																					pos: position{line: 1000, col: 12, offset: 40394},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1000, col: 12, offset: 40394},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1000, col: 21, offset: 40403},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 963, col: 14, offset: 39679},
																					run: (*parser).callonDocumentBlock807,
																					expr: &seqExpr{
																						pos: position{line: 963, col: 14, offset: 39679},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 963, col: 14, offset: 39679},
																								expr: &notExpr{
																									pos: position{line: 1002, col: 8, offset: 40423},
																									expr: &anyMatcher{
																										line: 1002, col: 9, offset: 40424,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 963, col: 19, offset: 39684},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonDocumentBlock815,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&choiceExpr{
																								pos: position{line: 1004, col: 8, offset: 40434},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1002, col: 8, offset: 40423},
																										expr: &anyMatcher{
																											line: 1002, col: 9, offset: 40424,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 956, col: 63, offset: 39520,
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1004, col: 8, offset: 40434},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1002, col: 8, offset: 40423},
															expr: &anyMatcher{
																line: 1002, col: 9, offset: 40424,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 138, offset: 926},
										name: "DelimitedBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 155, offset: 943},
										name: "Table",
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 163, offset: 951},
										name: "Paragraph",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 30, col: 1, offset: 1159},
			expr: &ruleRefExpr{
				pos:  position{line: 30, col: 16, offset: 1174},
				name: "YamlFrontMatter",
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 32, col: 1, offset: 1192},
			expr: &actionExpr{
				pos: position{line: 32, col: 16, offset: 1207},
				run: (*parser).callonFrontMatter1,
				expr: &seqExpr{
					pos: position{line: 32, col: 16, offset: 1207},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1366},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1004, col: 8, offset: 40434},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 32, col: 37, offset: 1228},
							label: "content",
							expr: &actionExpr{
								pos: position{line: 38, col: 27, offset: 1403},
								run: (*parser).callonFrontMatter10,
								expr: &zeroOrMoreExpr{
									pos: position{line: 38, col: 27, offset: 1403},
									expr: &seqExpr{
										pos: position{line: 38, col: 28, offset: 1404},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 38, col: 28, offset: 1404},
												expr: &seqExpr{
													pos: position{line: 36, col: 26, offset: 1366},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 36, col: 26, offset: 1366},
															val:        "---",
															ignoreCase: false,
														},
														&choiceExpr{
															pos: position{line: 1004, col: 8, offset: 40434},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1000, col: 12, offset: 40394},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1000, col: 21, offset: 40403},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1002, col: 8, offset: 40423},
																	expr: &anyMatcher{
																		line: 1002, col: 9, offset: 40424,
																	},
																},
															},
														},
													},
												},
											},
											&anyMatcher{
												line: 38, col: 50, offset: 1426,
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1366},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1004, col: 8, offset: 40434},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentHeader",
			pos:  position{line: 46, col: 1, offset: 1650},
			expr: &actionExpr{
				pos: position{line: 46, col: 19, offset: 1668},
				run: (*parser).callonDocumentHeader1,
				expr: &seqExpr{
					pos: position{line: 46, col: 19, offset: 1668},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 46, col: 19, offset: 1668},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 46, col: 27, offset: 1676},
								name: "Section0Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 42, offset: 1691},
							label: "authors",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 51, offset: 1700},
								expr: &choiceExpr{
									pos: position{line: 50, col: 20, offset: 1914},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 52, col: 30, offset: 2001},
											run: (*parser).callonDocumentHeader8,
											expr: &seqExpr{
												pos: position{line: 52, col: 30, offset: 2001},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 52, col: 30, offset: 2001},
														expr: &choiceExpr{
															pos: position{line: 996, col: 7, offset: 40332},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 996, col: 7, offset: 40332},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 996, col: 13, offset: 40338},
																	run: (*parser).callonDocumentHeader13,
																	expr: &litMatcher{
																		pos:        position{line: 996, col: 13, offset: 40338},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 52, col: 34, offset: 2005},
														expr: &litMatcher{
															pos:        position{line: 52, col: 35, offset: 2006},
															val:        ":",
															ignoreCase: false,
														},
													},
													&labeledExpr{
														pos:   position{line: 52, col: 39, offset: 2010},
														label: "authors",
														expr: &oneOrMoreExpr{
															pos: position{line: 52, col: 48, offset: 2019},
															expr: &actionExpr{
																pos: position{line: 60, col: 19, offset: 2270},
																run: (*parser).callonDocumentHeader19,
																expr: &seqExpr{
																	pos: position{line: 60, col: 19, offset: 2270},
																	exprs: []interface{}{
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 19, offset: 2270},
																			expr: &choiceExpr{
																				pos: position{line: 996, col: 7, offset: 40332},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 996, col: 7, offset: 40332},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 996, col: 13, offset: 40338},
																						run: (*parser).callonDocumentHeader24,
																						expr: &litMatcher{
																							pos:        position{line: 996, col: 13, offset: 40338},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 23, offset: 2274},
																			label: "namePart1",
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				run: (*parser).callonDocumentHeader27,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2610},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2611},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2615},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2616},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2620},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2621},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2621},
																										expr: &choiceExpr{
																											pos: position{line: 1000, col: 12, offset: 40394},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1000, col: 12, offset: 40394},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1000, col: 21, offset: 40403},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2630},
																										expr: &choiceExpr{
																											pos: position{line: 996, col: 7, offset: 40332},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 996, col: 7, offset: 40332},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 996, col: 13, offset: 40338},
																													run: (*parser).callonDocumentHeader42,
																													expr: &litMatcher{
																														pos:        position{line: 996, col: 13, offset: 40338},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2634,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2638},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonDocumentHeader48,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 58, offset: 2309},
																			label: "namePart2",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 68, offset: 2319},
																				expr: &actionExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					run: (*parser).callonDocumentHeader52,
																					expr: &seqExpr{
																						pos: position{line: 65, col: 27, offset: 2610},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 65, col: 27, offset: 2610},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 28, offset: 2611},
																									val:        "<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 65, col: 32, offset: 2615},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 33, offset: 2616},
																									val:        ";",
																									ignoreCase: false,
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 65, col: 37, offset: 2620},
																								expr: &seqExpr{
																									pos: position{line: 65, col: 38, offset: 2621},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 65, col: 38, offset: 2621},
																											expr: &choiceExpr{
																												pos: position{line: 1000, col: 12, offset: 40394},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 65, col: 47, offset: 2630},
																											expr: &choiceExpr{
																												pos: position{line: 996, col: 7, offset: 40332},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 996, col: 7, offset: 40332},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 996, col: 13, offset: 40338},
																														run: (*parser).callonDocumentHeader67,
																														expr: &litMatcher{
																															pos:        position{line: 996, col: 13, offset: 40338},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 65, col: 51, offset: 2634,
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 65, col: 55, offset: 2638},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonDocumentHeader73,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 94, offset: 2345},
																			label: "namePart3",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 104, offset: 2355},
																				expr: &actionExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					run: (*parser).callonDocumentHeader77,
																					expr: &seqExpr{
																						pos: position{line: 65, col: 27, offset: 2610},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 65, col: 27, offset: 2610},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 28, offset: 2611},
																									val:        "<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 65, col: 32, offset: 2615},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 33, offset: 2616},
																									val:        ";",
																									ignoreCase: false,
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 65, col: 37, offset: 2620},
																								expr: &seqExpr{
																									pos: position{line: 65, col: 38, offset: 2621},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 65, col: 38, offset: 2621},
																											expr: &choiceExpr{
																												pos: position{line: 1000, col: 12, offset: 40394},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 65, col: 47, offset: 2630},
																											expr: &choiceExpr{
																												pos: position{line: 996, col: 7, offset: 40332},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 996, col: 7, offset: 40332},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 996, col: 13, offset: 40338},
																														run: (*parser).callonDocumentHeader92,
																														expr: &litMatcher{
																															pos:        position{line: 996, col: 13, offset: 40338},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 65, col: 51, offset: 2634,
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 65, col: 55, offset: 2638},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonDocumentHeader98,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 130, offset: 2381},
																			label: "email",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 136, offset: 2387},
																				expr: &actionExpr{
																					pos: position{line: 69, col: 24, offset: 2701},
																					run: (*parser).callonDocumentHeader102,
																					expr: &seqExpr{
																						pos: position{line: 69, col: 24, offset: 2701},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 69, col: 24, offset: 2701},
																								val:        "<",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 69, col: 28, offset: 2705},
																								label: "email",
																								expr: &oneOrMoreExpr{
																									pos: position{line: 69, col: 34, offset: 2711},
																									expr: &seqExpr{
																										pos: position{line: 69, col: 35, offset: 2712},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 69, col: 35, offset: 2712},
																												expr: &litMatcher{
																													pos:        position{line: 69, col: 36, offset: 2713},
																													val:        ">",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 69, col: 40, offset: 2717},
																												expr: &choiceExpr{
																													pos: position{line: 1004, col: 8, offset: 40434},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1000, col: 12, offset: 40394},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1000, col: 21, offset: 40403},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 1002, col: 8, offset: 40423},
																															expr: &anyMatcher{
																																line: 1002, col: 9, offset: 40424,
																															},
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 69, col: 45, offset: 2722,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 69, col: 49, offset: 2726},
																								val:        ">",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 159, offset: 2410},
																			expr: &choiceExpr{
																				pos: position{line: 996, col: 7, offset: 40332},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 996, col: 7, offset: 40332},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 996, col: 13, offset: 40338},
																						run: (*parser).callonDocumentHeader121,
																						expr: &litMatcher{
																							pos:        position{line: 996, col: 13, offset: 40338},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 60, col: 163, offset: 2414},
																			expr: &litMatcher{
																				pos:        position{line: 60, col: 163, offset: 2414},
																				val:        ";",
																				ignoreCase: false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 168, offset: 2419},
																			expr: &choiceExpr{
																				pos: position{line: 996, col: 7, offset: 40332},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 996, col: 7, offset: 40332},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 996, col: 13, offset: 40338},
																						run: (*parser).callonDocumentHeader128,
																						expr: &litMatcher{
																							pos:        position{line: 996, col: 13, offset: 40338},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1004, col: 8, offset: 40434},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1000, col: 12, offset: 40394},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1000, col: 21, offset: 40403},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1002, col: 8, offset: 40423},
																expr: &anyMatcher{
																	line: 1002, col: 9, offset: 40424,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 56, col: 33, offset: 2138},
											run: (*parser).callonDocumentHeader135,
											expr: &seqExpr{
												pos: position{line: 56, col: 33, offset: 2138},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 56, col: 33, offset: 2138},
														expr: &choiceExpr{
															pos: position{line: 996, col: 7, offset: 40332},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 996, col: 7, offset: 40332},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 996, col: 13, offset: 40338},
																	run: (*parser).callonDocumentHeader140,
																	expr: &litMatcher{
																		pos:        position{line: 996, col: 13, offset: 40338},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 56, col: 37, offset: 2142},
														val:        ":author:",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 56, col: 48, offset: 2153},
														label: "author",
														expr: &actionExpr{
															pos: position{line: 60, col: 19, offset: 2270},
															run: (*parser).callonDocumentHeader144,
															expr: &seqExpr{
																pos: position{line: 60, col: 19, offset: 2270},
																exprs: []interface{}{
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 19, offset: 2270},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonDocumentHeader149,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 23, offset: 2274},
																		label: "namePart1",
																		expr: &actionExpr{
																			pos: position{line: 65, col: 27, offset: 2610},
																			run: (*parser).callonDocumentHeader152,
																			expr: &seqExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 65, col: 27, offset: 2610},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 28, offset: 2611},
																							val:        "<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 65, col: 32, offset: 2615},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 33, offset: 2616},
																							val:        ";",
																							ignoreCase: false,
																						},
																					},
																					&oneOrMoreExpr{
																						pos: position{line: 65, col: 37, offset: 2620},
																						expr: &seqExpr{
																							pos: position{line: 65, col: 38, offset: 2621},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 65, col: 38, offset: 2621},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 65, col: 47, offset: 2630},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonDocumentHeader167,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 65, col: 51, offset: 2634,
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 65, col: 55, offset: 2638},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonDocumentHeader173,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 58, offset: 2309},
																		label: "namePart2",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 68, offset: 2319},
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				run: (*parser).callonDocumentHeader52,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2610},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2611},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2615},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2616},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2620},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2621},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2621},
																										expr: &choiceExpr{
																											pos: position{line: 1000, col: 12, offset: 40394},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1000, col: 12, offset: 40394},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1000, col: 21, offset: 40403},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2630},
																										expr: &choiceExpr{
																											pos: position{line: 996, col: 7, offset: 40332},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 996, col: 7, offset: 40332},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 996, col: 13, offset: 40338},
																													run: (*parser).callonDocumentHeader67,
																													expr: &litMatcher{
																														pos:        position{line: 996, col: 13, offset: 40338},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2634,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2638},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonDocumentHeader73,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 94, offset: 2345},
																		label: "namePart3",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 104, offset: 2355},
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				run: (*parser).callonDocumentHeader77,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2610},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2611},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2615},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2616},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2620},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2621},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2621},
																										expr: &choiceExpr{
																											pos: position{line: 1000, col: 12, offset: 40394},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1000, col: 12, offset: 40394},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1000, col: 21, offset: 40403},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2630},
																										expr: &choiceExpr{
																											pos: position{line: 996, col: 7, offset: 40332},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 996, col: 7, offset: 40332},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 996, col: 13, offset: 40338},
																													run: (*parser).callonDocumentHeader92,
																													expr: &litMatcher{
																														pos:        position{line: 996, col: 13, offset: 40338},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2634,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2638},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonDocumentHeader98,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 130, offset: 2381},
																		label: "email",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 136, offset: 2387},
																			expr: &actionExpr{
																				pos: position{line: 69, col: 24, offset: 2701},
																				run: (*parser).callonDocumentHeader102,
																				expr: &seqExpr{
																					pos: position{line: 69, col: 24, offset: 2701},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 69, col: 24, offset: 2701},
																							val:        "<",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 69, col: 28, offset: 2705},
																							label: "email",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 69, col: 34, offset: 2711},
																								expr: &seqExpr{
																									pos: position{line: 69, col: 35, offset: 2712},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 69, col: 35, offset: 2712},
																											expr: &litMatcher{
																												pos:        position{line: 69, col: 36, offset: 2713},
																												val:        ">",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 69, col: 40, offset: 2717},
																											expr: &choiceExpr{
																												pos: position{line: 1004, col: 8, offset: 40434},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1002, col: 8, offset: 40423},
																														expr: &anyMatcher{
																															line: 1002, col: 9, offset: 40424,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 69, col: 45, offset: 2722,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 69, col: 49, offset: 2726},
																							val:        ">",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 159, offset: 2410},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonDocumentHeader246,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&zeroOrOneExpr{
																		pos: position{line: 60, col: 163, offset: 2414},
																		expr: &litMatcher{
																			pos:        position{line: 60, col: 163, offset: 2414},
																			val:        ";",
																			ignoreCase: false,
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 168, offset: 2419},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonDocumentHeader253,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 69, offset: 1718},
							label: "revision",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 79, offset: 1728},
								expr: &actionExpr{
									pos: position{line: 75, col: 21, offset: 2916},
									run: (*parser).callonDocumentHeader257,
									expr: &seqExpr{
										pos: position{line: 75, col: 21, offset: 2916},
										exprs: []interface{}{
											&zeroOrMoreExpr{
												pos: position{line: 75, col: 21, offset: 2916},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonDocumentHeader262,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 75, col: 25, offset: 2920},
												expr: &litMatcher{
													pos:        position{line: 75, col: 26, offset: 2921},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 30, offset: 2925},
												label: "revnumber",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 40, offset: 2935},
													expr: &choiceExpr{
														pos: position{line: 80, col: 27, offset: 3238},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 80, col: 27, offset: 3238},
																run: (*parser).callonDocumentHeader269,
																expr: &seqExpr{
																	pos: position{line: 80, col: 27, offset: 3238},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 80, col: 27, offset: 3238},
																			val:        "v",
																			ignoreCase: true,
																		},
																		&actionExpr{
																			pos: position{line: 992, col: 10, offset: 40284},
																			run: (*parser).callonDocumentHeader272,
																			expr: &charClassMatcher{
																				pos:        position{line: 992, col: 10, offset: 40284},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 80, col: 39, offset: 3250},
																			expr: &seqExpr{
																				pos: position{line: 80, col: 40, offset: 3251},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 80, col: 40, offset: 3251},
																						expr: &choiceExpr{
																							pos: position{line: 1004, col: 8, offset: 40434},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1000, col: 12, offset: 40394},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1000, col: 21, offset: 40403},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1002, col: 8, offset: 40423},
																									expr: &anyMatcher{
																										line: 1002, col: 9, offset: 40424,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 80, col: 45, offset: 3256},
																						expr: &litMatcher{
																							pos:        position{line: 80, col: 46, offset: 3257},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 80, col: 50, offset: 3261},
																						expr: &litMatcher{
																							pos:        position{line: 80, col: 51, offset: 3262},
																							val:        ":",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 80, col: 55, offset: 3266,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 82, col: 5, offset: 3307},
																run: (*parser).callonDocumentHeader287,
																expr: &seqExpr{
																	pos: position{line: 82, col: 5, offset: 3307},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 82, col: 5, offset: 3307},
																			expr: &litMatcher{
																				pos:        position{line: 82, col: 5, offset: 3307},
																				val:        "v",
																				ignoreCase: true,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 992, col: 10, offset: 40284},
																			run: (*parser).callonDocumentHeader291,
																			expr: &charClassMatcher{
																				pos:        position{line: 992, col: 10, offset: 40284},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 82, col: 18, offset: 3320},
																			expr: &seqExpr{
																				pos: position{line: 82, col: 19, offset: 3321},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 82, col: 19, offset: 3321},
																						expr: &choiceExpr{
																							pos: position{line: 1004, col: 8, offset: 40434},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1000, col: 12, offset: 40394},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1000, col: 21, offset: 40403},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1002, col: 8, offset: 40423},
																									expr: &anyMatcher{
																										line: 1002, col: 9, offset: 40424,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 82, col: 24, offset: 3326},
																						expr: &litMatcher{
																							pos:        position{line: 82, col: 25, offset: 3327},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 82, col: 29, offset: 3331},
																						expr: &litMatcher{
																							pos:        position{line: 82, col: 30, offset: 3332},
																							val:        ":",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 82, col: 34, offset: 3336,
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 82, col: 38, offset: 3340},
																			expr: &choiceExpr{
																				pos: position{line: 996, col: 7, offset: 40332},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 996, col: 7, offset: 40332},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 996, col: 13, offset: 40338},
																						run: (*parser).callonDocumentHeader309,
																						expr: &litMatcher{
																							pos:        position{line: 996, col: 13, offset: 40338},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&andExpr{
																			pos: position{line: 82, col: 42, offset: 3344},
																			expr: &litMatcher{
																				pos:        position{line: 82, col: 43, offset: 3345},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 75, col: 66, offset: 2961},
												expr: &litMatcher{
													pos:        position{line: 75, col: 66, offset: 2961},
													val:        ",",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 71, offset: 2966},
												label: "revdate",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 79, offset: 2974},
													expr: &actionExpr{
														pos: position{line: 86, col: 25, offset: 3409},
														run: (*parser).callonDocumentHeader317,
														expr: &zeroOrMoreExpr{
															pos: position{line: 86, col: 25, offset: 3409},
															expr: &seqExpr{
																pos: position{line: 86, col: 26, offset: 3410},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 86, col: 26, offset: 3410},
																		expr: &choiceExpr{
																			pos: position{line: 1004, col: 8, offset: 40434},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1000, col: 12, offset: 40394},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1000, col: 21, offset: 40403},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1002, col: 8, offset: 40423},
																					expr: &anyMatcher{
																						line: 1002, col: 9, offset: 40424,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 86, col: 31, offset: 3415},
																		expr: &litMatcher{
																			pos:        position{line: 86, col: 32, offset: 3416},
																			val:        ":",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 86, col: 36, offset: 3420,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 75, col: 103, offset: 2998},
												expr: &litMatcher{
													pos:        position{line: 75, col: 103, offset: 2998},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 108, offset: 3003},
												label: "revremark",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 118, offset: 3013},
													expr: &actionExpr{
														pos: position{line: 90, col: 27, offset: 3486},
														run: (*parser).callonDocumentHeader333,
														expr: &zeroOrMoreExpr{
															pos: position{line: 90, col: 27, offset: 3486},
															expr: &seqExpr{
																pos: position{line: 90, col: 28, offset: 3487},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 90, col: 28, offset: 3487},
																		expr: &choiceExpr{
																			pos: position{line: 1004, col: 8, offset: 40434},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1000, col: 12, offset: 40394},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1000, col: 21, offset: 40403},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1002, col: 8, offset: 40423},
																					expr: &anyMatcher{
																						line: 1002, col: 9, offset: 40424,
																					},
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 90, col: 33, offset: 3492,
																	},
																},
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 98, offset: 1747},
							label: "otherAttributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 46, col: 115, offset: 1764},
								expr: &choiceExpr{
									pos: position{line: 97, col: 33, offset: 3679},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 97, col: 33, offset: 3679},
											run: (*parser).callonDocumentHeader351,
											expr: &seqExpr{
												pos: position{line: 97, col: 33, offset: 3679},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 97, col: 33, offset: 3679},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 97, col: 37, offset: 3683},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															run: (*parser).callonDocumentHeader355,
															expr: &seqExpr{
																pos: position{line: 121, col: 26, offset: 4726},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 121, col: 27, offset: 4727},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 121, col: 56, offset: 4756},
																		expr: &charClassMatcher{
																			pos:        position{line: 121, col: 57, offset: 4757},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 97, col: 66, offset: 3712},
														val:        ":",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 97, col: 70, offset: 3716},
														expr: &choiceExpr{
															pos: position{line: 996, col: 7, offset: 40332},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 996, col: 7, offset: 40332},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 996, col: 13, offset: 40338},
																	run: (*parser).callonDocumentHeader364,
																	expr: &litMatcher{
																		pos:        position{line: 996, col: 13, offset: 40338},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1004, col: 8, offset: 40434},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1000, col: 12, offset: 40394},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1000, col: 21, offset: 40403},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1002, col: 8, offset: 40423},
																expr: &anyMatcher{
																	line: 1002, col: 9, offset: 40424,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 99, col: 5, offset: 3799},
											run: (*parser).callonDocumentHeader371,
											expr: &seqExpr{
												pos: position{line: 99, col: 5, offset: 3799},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 99, col: 5, offset: 3799},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 99, col: 9, offset: 3803},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															run: (*parser).callonDocumentHeader375,
															expr: &seqExpr{
																pos: position{line: 121, col: 26, offset: 4726},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 121, col: 27, offset: 4727},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 121, col: 56, offset: 4756},
																		expr: &charClassMatcher{
																			pos:        position{line: 121, col: 57, offset: 4757},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 99, col: 38, offset: 3832},
														val:        ":",
														ignoreCase: false,
													},
													&oneOrMoreExpr{
														pos: position{line: 99, col: 42, offset: 3836},
														expr: &choiceExpr{
															pos: position{line: 996, col: 7, offset: 40332},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 996, col: 7, offset: 40332},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 996, col: 13, offset: 40338},
																	run: (*parser).callonDocumentHeader384,
																	expr: &litMatcher{
																		pos:        position{line: 996, col: 13, offset: 40338},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&labeledExpr{
														pos:   position{line: 99, col: 46, offset: 3840},
														label: "value",
														expr: &actionExpr{
															pos: position{line: 125, col: 27, offset: 4849},
															run: (*parser).callonDocumentHeader387,
															expr: &zeroOrMoreExpr{
																pos: position{line: 125, col: 27, offset: 4849},
																expr: &seqExpr{
																	pos: position{line: 125, col: 28, offset: 4850},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 125, col: 28, offset: 4850},
																			expr: &choiceExpr{
																				pos: position{line: 1000, col: 12, offset: 40394},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1000, col: 12, offset: 40394},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1000, col: 21, offset: 40403},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&anyMatcher{
																			line: 125, col: 37, offset: 4859,
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1004, col: 8, offset: 40434},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1000, col: 12, offset: 40394},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1000, col: 21, offset: 40403},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1002, col: 8, offset: 40423},
																expr: &anyMatcher{
																	line: 1002, col: 9, offset: 40424,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section",
			pos:  position{line: 246, col: 1, offset: 8937},
			expr: &actionExpr{
				pos: position{line: 246, col: 12, offset: 8948},
				run: (*parser).callonSection1,
				expr: &seqExpr{
					pos: position{line: 246, col: 12, offset: 8948},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 246, col: 12, offset: 8948},
							expr: &notExpr{
								pos: position{line: 1002, col: 8, offset: 40423},
								expr: &anyMatcher{
									line: 1002, col: 9, offset: 40424,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 247, col: 5, offset: 9019},
							label: "section",
							expr: &choiceExpr{
								pos: position{line: 247, col: 14, offset: 9028},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 247, col: 14, offset: 9028},
										name: "Section0",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 25, offset: 9039},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 36, offset: 9050},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 47, offset: 9061},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 58, offset: 9072},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 69, offset: 9083},
										name: "Section5",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0",
			pos:  position{line: 253, col: 1, offset: 9164},
			expr: &actionExpr{
				pos: position{line: 253, col: 13, offset: 9176},
				run: (*parser).callonSection01,
				expr: &seqExpr{
					pos: position{line: 253, col: 13, offset: 9176},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 253, col: 13, offset: 9176},
							expr: &notExpr{
								pos: position{line: 1002, col: 8, offset: 40423},
								expr: &anyMatcher{
									line: 1002, col: 9, offset: 40424,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 254, col: 5, offset: 9247},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 254, col: 14, offset: 9256},
								run: (*parser).callonSection07,
								expr: &seqExpr{
									pos: position{line: 254, col: 14, offset: 9256},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 254, col: 14, offset: 9256},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 254, col: 22, offset: 9264},
												name: "Section0Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 254, col: 37, offset: 9279},
											label: "elements",
											expr: &zeroOrMoreExpr{
												pos: position{line: 254, col: 47, offset: 9289},
												expr: &ruleRefExpr{
													pos:  position{line: 254, col: 47, offset: 9289},
													name: "Section0Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Title",
			pos:  position{line: 262, col: 1, offset: 9473},
			expr: &actionExpr{
				pos: position{line: 262, col: 18, offset: 9490},
				run: (*parser).callonSection0Title1,
				expr: &seqExpr{
					pos: position{line: 262, col: 18, offset: 9490},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 262, col: 18, offset: 9490},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 262, col: 29, offset: 9501},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection0Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection0Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection0Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonSection0Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection0Title25,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection0Title39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			run: (*parser).callonSection0Title43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 982, col: 7, offset: 40050},
																				expr: &seqExpr{
																					pos: position{line: 982, col: 8, offset: 40051},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 17, offset: 40060},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonSection0Title53,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 21, offset: 40064},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 22, offset: 40065},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 26, offset: 40069},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 27, offset: 40070},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 31, offset: 40074},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 32, offset: 40075},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 37, offset: 40080},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 38, offset: 40081},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 43, offset: 40086},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 44, offset: 40087},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 982, col: 48, offset: 40091,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection0Title67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection0Title75,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection0Title78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection0Title86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection0Title92,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection0Title95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection0Title106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonSection0Title111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonSection0Title113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonSection0Title115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonSection0Title117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonSection0Title119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonSection0Title122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection0Title124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection0Title130,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection0Title135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection0Title138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection0Title141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonSection0Title155,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection0Title171,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection0Title173,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection0Title176,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection0Title179,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection0Title196,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonSection0Title202,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 260, col: 24, offset: 9464},
							val:        "=",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 260, col: 28, offset: 9468},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection0Title213,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 262, col: 69, offset: 9541},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 262, col: 78, offset: 9550},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 262, col: 93, offset: 9565},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection0Title220,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 262, col: 97, offset: 9569},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 262, col: 100, offset: 9572},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection0Title224,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 982, col: 7, offset: 40050},
													run: (*parser).callonSection0Title228,
													expr: &oneOrMoreExpr{
														pos: position{line: 982, col: 7, offset: 40050},
														expr: &seqExpr{
															pos: position{line: 982, col: 8, offset: 40051},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 982, col: 8, offset: 40051},
																	expr: &choiceExpr{
																		pos: position{line: 1000, col: 12, offset: 40394},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1000, col: 12, offset: 40394},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1000, col: 21, offset: 40403},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 17, offset: 40060},
																	expr: &choiceExpr{
																		pos: position{line: 996, col: 7, offset: 40332},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 996, col: 7, offset: 40332},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 996, col: 13, offset: 40338},
																				run: (*parser).callonSection0Title238,
																				expr: &litMatcher{
																					pos:        position{line: 996, col: 13, offset: 40338},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 21, offset: 40064},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 22, offset: 40065},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 26, offset: 40069},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 27, offset: 40070},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 31, offset: 40074},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 32, offset: 40075},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 37, offset: 40080},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 38, offset: 40081},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 43, offset: 40086},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 44, offset: 40087},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 982, col: 48, offset: 40091,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 262, col: 119, offset: 9591},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection0Title255,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1004, col: 8, offset: 40434},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Block",
			pos:  position{line: 266, col: 1, offset: 9710},
			expr: &actionExpr{
				pos: position{line: 266, col: 18, offset: 9727},
				run: (*parser).callonSection0Block1,
				expr: &seqExpr{
					pos: position{line: 266, col: 18, offset: 9727},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 266, col: 18, offset: 9727},
							expr: &ruleRefExpr{
								pos:  position{line: 266, col: 19, offset: 9728},
								name: "Section0",
							},
						},
						&labeledExpr{
							pos:   position{line: 266, col: 28, offset: 9737},
							label: "content",
							expr: &choiceExpr{
								pos: position{line: 266, col: 37, offset: 9746},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 266, col: 37, offset: 9746},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 48, offset: 9757},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 59, offset: 9768},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 70, offset: 9779},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 81, offset: 9790},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 92, offset: 9801},
										name: "DocumentBlock",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1",
			pos:  position{line: 270, col: 1, offset: 9845},
			expr: &actionExpr{
				pos: position{line: 270, col: 13, offset: 9857},
				run: (*parser).callonSection11,
				expr: &seqExpr{
					pos: position{line: 270, col: 13, offset: 9857},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 270, col: 13, offset: 9857},
							expr: &notExpr{
								pos: position{line: 1002, col: 8, offset: 40423},
								expr: &anyMatcher{
									line: 1002, col: 9, offset: 40424,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 271, col: 5, offset: 9928},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 271, col: 14, offset: 9937},
								run: (*parser).callonSection17,
								expr: &seqExpr{
									pos: position{line: 271, col: 14, offset: 9937},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 271, col: 14, offset: 9937},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 271, col: 22, offset: 9945},
												name: "Section1Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 271, col: 37, offset: 9960},
											label: "elements",
											expr: &zeroOrMoreExpr{
												pos: position{line: 271, col: 47, offset: 9970},
												expr: &ruleRefExpr{
													pos:  position{line: 271, col: 47, offset: 9970},
													name: "Section1Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Title",
			pos:  position{line: 279, col: 1, offset: 10147},
			expr: &actionExpr{
				pos: position{line: 279, col: 18, offset: 10164},
				run: (*parser).callonSection1Title1,
				expr: &seqExpr{
					pos: position{line: 279, col: 18, offset: 10164},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 279, col: 18, offset: 10164},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 279, col: 29, offset: 10175},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection1Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection1Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection1Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonSection1Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection1Title25,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection1Title39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			run: (*parser).callonSection1Title43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 982, col: 7, offset: 40050},
																				expr: &seqExpr{
																					pos: position{line: 982, col: 8, offset: 40051},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 17, offset: 40060},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonSection1Title53,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 21, offset: 40064},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 22, offset: 40065},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 26, offset: 40069},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 27, offset: 40070},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 31, offset: 40074},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 32, offset: 40075},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 37, offset: 40080},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 38, offset: 40081},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 43, offset: 40086},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 44, offset: 40087},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 982, col: 48, offset: 40091,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection1Title67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection1Title75,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection1Title78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection1Title86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection1Title92,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection1Title95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection1Title106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonSection1Title111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonSection1Title113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonSection1Title115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonSection1Title117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonSection1Title119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonSection1Title122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection1Title124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection1Title130,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection1Title135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection1Title138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection1Title141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonSection1Title155,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection1Title171,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection1Title173,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection1Title176,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection1Title179,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection1Title196,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonSection1Title202,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 277, col: 24, offset: 10137},
							val:        "==",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 277, col: 29, offset: 10142},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection1Title213,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 279, col: 69, offset: 10215},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 279, col: 78, offset: 10224},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 279, col: 93, offset: 10239},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection1Title220,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 279, col: 97, offset: 10243},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 279, col: 100, offset: 10246},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection1Title224,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 982, col: 7, offset: 40050},
													run: (*parser).callonSection1Title228,
													expr: &oneOrMoreExpr{
														pos: position{line: 982, col: 7, offset: 40050},
														expr: &seqExpr{
															pos: position{line: 982, col: 8, offset: 40051},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 982, col: 8, offset: 40051},
																	expr: &choiceExpr{
																		pos: position{line: 1000, col: 12, offset: 40394},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1000, col: 12, offset: 40394},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1000, col: 21, offset: 40403},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 17, offset: 40060},
																	expr: &choiceExpr{
																		pos: position{line: 996, col: 7, offset: 40332},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 996, col: 7, offset: 40332},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 996, col: 13, offset: 40338},
																				run: (*parser).callonSection1Title238,
																				expr: &litMatcher{
																					pos:        position{line: 996, col: 13, offset: 40338},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 21, offset: 40064},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 22, offset: 40065},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 26, offset: 40069},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 27, offset: 40070},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 31, offset: 40074},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 32, offset: 40075},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 37, offset: 40080},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 38, offset: 40081},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 43, offset: 40086},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 44, offset: 40087},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 982, col: 48, offset: 40091,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 279, col: 119, offset: 10265},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection1Title255,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1004, col: 8, offset: 40434},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Block",
			pos:  position{line: 283, col: 1, offset: 10384},
			expr: &actionExpr{
				pos: position{line: 283, col: 18, offset: 10401},
				run: (*parser).callonSection1Block1,
				expr: &seqExpr{
					pos: position{line: 283, col: 18, offset: 10401},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 283, col: 18, offset: 10401},
							expr: &ruleRefExpr{
								pos:  position{line: 283, col: 19, offset: 10402},
								name: "Section1Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 283, col: 33, offset: 10416},
							label: "content",
							expr: &choiceExpr{
								pos: position{line: 283, col: 42, offset: 10425},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 283, col: 42, offset: 10425},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 283, col: 53, offset: 10436},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 283, col: 64, offset: 10447},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 283, col: 75, offset: 10458},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 283, col: 86, offset: 10469},
										name: "DocumentBlock",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2",
			pos:  position{line: 287, col: 1, offset: 10513},
			expr: &actionExpr{
				pos: position{line: 287, col: 13, offset: 10525},
				run: (*parser).callonSection21,
				expr: &seqExpr{
					pos: position{line: 287, col: 13, offset: 10525},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 287, col: 13, offset: 10525},
							expr: &notExpr{
								pos: position{line: 1002, col: 8, offset: 40423},
								expr: &anyMatcher{
									line: 1002, col: 9, offset: 40424,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 288, col: 5, offset: 10596},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 288, col: 14, offset: 10605},
								run: (*parser).callonSection27,
								expr: &seqExpr{
									pos: position{line: 288, col: 14, offset: 10605},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 288, col: 14, offset: 10605},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 288, col: 22, offset: 10613},
												name: "Section2Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 288, col: 37, offset: 10628},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 288, col: 47, offset: 10638},
												expr: &ruleRefExpr{
													pos:  position{line: 288, col: 47, offset: 10638},
													name: "Section2Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Title",
			pos:  position{line: 296, col: 1, offset: 10825},
			expr: &actionExpr{
				pos: position{line: 296, col: 18, offset: 10842},
				run: (*parser).callonSection2Title1,
				expr: &seqExpr{
					pos: position{line: 296, col: 18, offset: 10842},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 296, col: 18, offset: 10842},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 296, col: 29, offset: 10853},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection2Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection2Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection2Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonSection2Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection2Title25,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection2Title39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			run: (*parser).callonSection2Title43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 982, col: 7, offset: 40050},
																				expr: &seqExpr{
																					pos: position{line: 982, col: 8, offset: 40051},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 17, offset: 40060},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonSection2Title53,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 21, offset: 40064},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 22, offset: 40065},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 26, offset: 40069},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 27, offset: 40070},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 31, offset: 40074},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 32, offset: 40075},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 37, offset: 40080},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 38, offset: 40081},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 43, offset: 40086},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 44, offset: 40087},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 982, col: 48, offset: 40091,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection2Title67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection2Title75,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection2Title78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection2Title86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection2Title92,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection2Title95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection2Title106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonSection2Title111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonSection2Title113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonSection2Title115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonSection2Title117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonSection2Title119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonSection2Title122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection2Title124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection2Title130,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection2Title135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection2Title138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection2Title141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonSection2Title155,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection2Title171,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection2Title173,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection2Title176,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection2Title179,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection2Title196,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonSection2Title202,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 294, col: 24, offset: 10813},
							val:        "===",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 294, col: 30, offset: 10819},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection2Title213,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 296, col: 69, offset: 10893},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 296, col: 78, offset: 10902},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 296, col: 93, offset: 10917},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection2Title220,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 296, col: 97, offset: 10921},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 296, col: 100, offset: 10924},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection2Title224,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 982, col: 7, offset: 40050},
													run: (*parser).callonSection2Title228,
													expr: &oneOrMoreExpr{
														pos: position{line: 982, col: 7, offset: 40050},
														expr: &seqExpr{
															pos: position{line: 982, col: 8, offset: 40051},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 982, col: 8, offset: 40051},
																	expr: &choiceExpr{
																		pos: position{line: 1000, col: 12, offset: 40394},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1000, col: 12, offset: 40394},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1000, col: 21, offset: 40403},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 17, offset: 40060},
																	expr: &choiceExpr{
																		pos: position{line: 996, col: 7, offset: 40332},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 996, col: 7, offset: 40332},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 996, col: 13, offset: 40338},
																				run: (*parser).callonSection2Title238,
																				expr: &litMatcher{
																					pos:        position{line: 996, col: 13, offset: 40338},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 21, offset: 40064},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 22, offset: 40065},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 26, offset: 40069},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 27, offset: 40070},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 31, offset: 40074},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 32, offset: 40075},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 37, offset: 40080},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 38, offset: 40081},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 43, offset: 40086},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 44, offset: 40087},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 982, col: 48, offset: 40091,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 296, col: 119, offset: 10943},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection2Title255,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1004, col: 8, offset: 40434},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Block",
			pos:  position{line: 300, col: 1, offset: 11061},
			expr: &actionExpr{
				pos: position{line: 300, col: 18, offset: 11078},
				run: (*parser).callonSection2Block1,
				expr: &seqExpr{
					pos: position{line: 300, col: 18, offset: 11078},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 300, col: 18, offset: 11078},
							expr: &ruleRefExpr{
								pos:  position{line: 300, col: 19, offset: 11079},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 300, col: 33, offset: 11093},
							expr: &ruleRefExpr{
								pos:  position{line: 300, col: 34, offset: 11094},
								name: "Section2Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 300, col: 48, offset: 11108},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 300, col: 56, offset: 11116},
								expr: &choiceExpr{
									pos: position{line: 300, col: 57, offset: 11117},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 300, col: 57, offset: 11117},
											name: "Section3",
										},
										&ruleRefExpr{
											pos:  position{line: 300, col: 68, offset: 11128},
											name: "Section4",
										},
										&ruleRefExpr{
											pos:  position{line: 300, col: 79, offset: 11139},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 300, col: 90, offset: 11150},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3",
			pos:  position{line: 304, col: 1, offset: 11195},
			expr: &actionExpr{
				pos: position{line: 304, col: 13, offset: 11207},
				run: (*parser).callonSection31,
				expr: &seqExpr{
					pos: position{line: 304, col: 13, offset: 11207},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 304, col: 13, offset: 11207},
							expr: &notExpr{
								pos: position{line: 1002, col: 8, offset: 40423},
								expr: &anyMatcher{
									line: 1002, col: 9, offset: 40424,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 305, col: 5, offset: 11278},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 305, col: 14, offset: 11287},
								run: (*parser).callonSection37,
								expr: &seqExpr{
									pos: position{line: 305, col: 14, offset: 11287},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 305, col: 14, offset: 11287},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 305, col: 22, offset: 11295},
												name: "Section3Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 305, col: 37, offset: 11310},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 305, col: 47, offset: 11320},
												expr: &ruleRefExpr{
													pos:  position{line: 305, col: 47, offset: 11320},
													name: "Section3Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Title",
			pos:  position{line: 313, col: 1, offset: 11508},
			expr: &actionExpr{
				pos: position{line: 313, col: 18, offset: 11525},
				run: (*parser).callonSection3Title1,
				expr: &seqExpr{
					pos: position{line: 313, col: 18, offset: 11525},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 313, col: 18, offset: 11525},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 313, col: 29, offset: 11536},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection3Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection3Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection3Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonSection3Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection3Title25,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection3Title39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			run: (*parser).callonSection3Title43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 982, col: 7, offset: 40050},
																				expr: &seqExpr{
																					pos: position{line: 982, col: 8, offset: 40051},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 17, offset: 40060},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonSection3Title53,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 21, offset: 40064},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 22, offset: 40065},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 26, offset: 40069},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 27, offset: 40070},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 31, offset: 40074},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 32, offset: 40075},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 37, offset: 40080},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 38, offset: 40081},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 43, offset: 40086},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 44, offset: 40087},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 982, col: 48, offset: 40091,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection3Title67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection3Title75,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection3Title78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection3Title86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection3Title92,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection3Title95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection3Title106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonSection3Title111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonSection3Title113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonSection3Title115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonSection3Title117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonSection3Title119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonSection3Title122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection3Title124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection3Title130,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection3Title135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection3Title138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection3Title141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonSection3Title155,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection3Title171,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection3Title173,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection3Title176,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection3Title179,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection3Title196,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonSection3Title202,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 311, col: 24, offset: 11495},
							val:        "====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 311, col: 31, offset: 11502},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection3Title213,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 313, col: 69, offset: 11576},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 313, col: 78, offset: 11585},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 313, col: 93, offset: 11600},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection3Title220,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 313, col: 97, offset: 11604},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 313, col: 100, offset: 11607},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection3Title224,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 982, col: 7, offset: 40050},
													run: (*parser).callonSection3Title228,
													expr: &oneOrMoreExpr{
														pos: position{line: 982, col: 7, offset: 40050},
														expr: &seqExpr{
															pos: position{line: 982, col: 8, offset: 40051},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 982, col: 8, offset: 40051},
																	expr: &choiceExpr{
																		pos: position{line: 1000, col: 12, offset: 40394},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1000, col: 12, offset: 40394},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1000, col: 21, offset: 40403},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 17, offset: 40060},
																	expr: &choiceExpr{
																		pos: position{line: 996, col: 7, offset: 40332},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 996, col: 7, offset: 40332},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 996, col: 13, offset: 40338},
																				run: (*parser).callonSection3Title238,
																				expr: &litMatcher{
																					pos:        position{line: 996, col: 13, offset: 40338},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 21, offset: 40064},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 22, offset: 40065},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 26, offset: 40069},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 27, offset: 40070},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 31, offset: 40074},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 32, offset: 40075},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 37, offset: 40080},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 38, offset: 40081},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 43, offset: 40086},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 44, offset: 40087},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 982, col: 48, offset: 40091,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1004, col: 8, offset: 40434},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Block",
			pos:  position{line: 317, col: 1, offset: 11740},
			expr: &actionExpr{
				pos: position{line: 317, col: 18, offset: 11757},
				run: (*parser).callonSection3Block1,
				expr: &seqExpr{
					pos: position{line: 317, col: 18, offset: 11757},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 317, col: 18, offset: 11757},
							expr: &ruleRefExpr{
								pos:  position{line: 317, col: 19, offset: 11758},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 317, col: 33, offset: 11772},
							expr: &ruleRefExpr{
								pos:  position{line: 317, col: 34, offset: 11773},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 317, col: 48, offset: 11787},
							expr: &ruleRefExpr{
								pos:  position{line: 317, col: 49, offset: 11788},
								name: "Section3Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 317, col: 64, offset: 11803},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 317, col: 72, offset: 11811},
								expr: &choiceExpr{
									pos: position{line: 317, col: 73, offset: 11812},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 317, col: 73, offset: 11812},
											name: "Section4",
										},
										&ruleRefExpr{
											pos:  position{line: 317, col: 84, offset: 11823},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 317, col: 95, offset: 11834},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4",
			pos:  position{line: 321, col: 1, offset: 11879},
			expr: &actionExpr{
				pos: position{line: 321, col: 13, offset: 11891},
				run: (*parser).callonSection41,
				expr: &seqExpr{
					pos: position{line: 321, col: 13, offset: 11891},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 321, col: 13, offset: 11891},
							expr: &notExpr{
								pos: position{line: 1002, col: 8, offset: 40423},
								expr: &anyMatcher{
									line: 1002, col: 9, offset: 40424,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 322, col: 5, offset: 11962},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 322, col: 14, offset: 11971},
								run: (*parser).callonSection47,
								expr: &seqExpr{
									pos: position{line: 322, col: 14, offset: 11971},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 322, col: 14, offset: 11971},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 322, col: 22, offset: 11979},
												name: "Section4Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 322, col: 37, offset: 11994},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 322, col: 47, offset: 12004},
												expr: &ruleRefExpr{
													pos:  position{line: 322, col: 47, offset: 12004},
													name: "Section4Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Title",
			pos:  position{line: 330, col: 1, offset: 12193},
			expr: &actionExpr{
				pos: position{line: 330, col: 18, offset: 12210},
				run: (*parser).callonSection4Title1,
				expr: &seqExpr{
					pos: position{line: 330, col: 18, offset: 12210},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 330, col: 18, offset: 12210},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 330, col: 29, offset: 12221},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection4Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection4Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection4Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonSection4Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection4Title25,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection4Title39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			run: (*parser).callonSection4Title43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 982, col: 7, offset: 40050},
																				expr: &seqExpr{
																					pos: position{line: 982, col: 8, offset: 40051},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 17, offset: 40060},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonSection4Title53,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 21, offset: 40064},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 22, offset: 40065},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 26, offset: 40069},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 27, offset: 40070},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 31, offset: 40074},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 32, offset: 40075},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 37, offset: 40080},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 38, offset: 40081},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 43, offset: 40086},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 44, offset: 40087},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 982, col: 48, offset: 40091,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection4Title67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection4Title75,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection4Title78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection4Title86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection4Title92,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection4Title95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection4Title106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonSection4Title111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonSection4Title113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonSection4Title115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonSection4Title117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonSection4Title119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonSection4Title122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection4Title124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection4Title130,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection4Title135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection4Title138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection4Title141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonSection4Title155,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection4Title171,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection4Title173,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection4Title176,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection4Title179,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection4Title196,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonSection4Title202,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 328, col: 24, offset: 12179},
							val:        "=====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 328, col: 32, offset: 12187},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection4Title213,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 330, col: 69, offset: 12261},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 330, col: 78, offset: 12270},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 330, col: 93, offset: 12285},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection4Title220,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 330, col: 97, offset: 12289},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 330, col: 100, offset: 12292},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection4Title224,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 982, col: 7, offset: 40050},
													run: (*parser).callonSection4Title228,
													expr: &oneOrMoreExpr{
														pos: position{line: 982, col: 7, offset: 40050},
														expr: &seqExpr{
															pos: position{line: 982, col: 8, offset: 40051},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 982, col: 8, offset: 40051},
																	expr: &choiceExpr{
																		pos: position{line: 1000, col: 12, offset: 40394},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1000, col: 12, offset: 40394},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1000, col: 21, offset: 40403},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 17, offset: 40060},
																	expr: &choiceExpr{
																		pos: position{line: 996, col: 7, offset: 40332},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 996, col: 7, offset: 40332},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 996, col: 13, offset: 40338},
																				run: (*parser).callonSection4Title238,
																				expr: &litMatcher{
																					pos:        position{line: 996, col: 13, offset: 40338},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 21, offset: 40064},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 22, offset: 40065},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 26, offset: 40069},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 27, offset: 40070},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 31, offset: 40074},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 32, offset: 40075},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 37, offset: 40080},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 38, offset: 40081},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 43, offset: 40086},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 44, offset: 40087},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 982, col: 48, offset: 40091,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1004, col: 8, offset: 40434},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Block",
			pos:  position{line: 334, col: 1, offset: 12425},
			expr: &actionExpr{
				pos: position{line: 334, col: 18, offset: 12442},
				run: (*parser).callonSection4Block1,
				expr: &seqExpr{
					pos: position{line: 334, col: 18, offset: 12442},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 334, col: 18, offset: 12442},
							expr: &ruleRefExpr{
								pos:  position{line: 334, col: 19, offset: 12443},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 334, col: 33, offset: 12457},
							expr: &ruleRefExpr{
								pos:  position{line: 334, col: 34, offset: 12458},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 334, col: 48, offset: 12472},
							expr: &ruleRefExpr{
								pos:  position{line: 334, col: 49, offset: 12473},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 334, col: 63, offset: 12487},
							expr: &ruleRefExpr{
								pos:  position{line: 334, col: 64, offset: 12488},
								name: "Section4Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 334, col: 79, offset: 12503},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 334, col: 87, offset: 12511},
								expr: &choiceExpr{
									pos: position{line: 334, col: 88, offset: 12512},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 334, col: 88, offset: 12512},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 334, col: 99, offset: 12523},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5",
			pos:  position{line: 338, col: 1, offset: 12568},
			expr: &actionExpr{
				pos: position{line: 338, col: 13, offset: 12580},
				run: (*parser).callonSection51,
				expr: &seqExpr{
					pos: position{line: 338, col: 13, offset: 12580},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 338, col: 13, offset: 12580},
							expr: &notExpr{
								pos: position{line: 1002, col: 8, offset: 40423},
								expr: &anyMatcher{
									line: 1002, col: 9, offset: 40424,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 339, col: 5, offset: 12651},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 339, col: 14, offset: 12660},
								run: (*parser).callonSection57,
								expr: &seqExpr{
									pos: position{line: 339, col: 14, offset: 12660},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 339, col: 14, offset: 12660},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 339, col: 22, offset: 12668},
												name: "Section5Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 339, col: 37, offset: 12683},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 339, col: 47, offset: 12693},
												expr: &ruleRefExpr{
													pos:  position{line: 339, col: 47, offset: 12693},
													name: "Section5Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Title",
			pos:  position{line: 347, col: 1, offset: 12883},
			expr: &actionExpr{
				pos: position{line: 347, col: 18, offset: 12900},
				run: (*parser).callonSection5Title1,
				expr: &seqExpr{
					pos: position{line: 347, col: 18, offset: 12900},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 347, col: 18, offset: 12900},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 347, col: 29, offset: 12911},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection5Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection5Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection5Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonSection5Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection5Title25,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection5Title39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			run: (*parser).callonSection5Title43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 982, col: 7, offset: 40050},
																				expr: &seqExpr{
																					pos: position{line: 982, col: 8, offset: 40051},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 17, offset: 40060},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonSection5Title53,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 21, offset: 40064},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 22, offset: 40065},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 26, offset: 40069},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 27, offset: 40070},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 31, offset: 40074},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 32, offset: 40075},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 37, offset: 40080},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 38, offset: 40081},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 43, offset: 40086},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 44, offset: 40087},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 982, col: 48, offset: 40091,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection5Title67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection5Title75,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection5Title78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection5Title86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection5Title92,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection5Title95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection5Title106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonSection5Title111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonSection5Title113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonSection5Title115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonSection5Title117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonSection5Title119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonSection5Title122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection5Title124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSection5Title130,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection5Title135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection5Title138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection5Title141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonSection5Title155,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection5Title171,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection5Title173,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection5Title176,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection5Title179,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSection5Title196,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonSection5Title202,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 345, col: 24, offset: 12868},
							val:        "======",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 345, col: 33, offset: 12877},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection5Title213,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 347, col: 69, offset: 12951},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 347, col: 78, offset: 12960},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 347, col: 93, offset: 12975},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSection5Title220,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 347, col: 97, offset: 12979},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 347, col: 100, offset: 12982},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection5Title224,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 982, col: 7, offset: 40050},
													run: (*parser).callonSection5Title228,
													expr: &oneOrMoreExpr{
														pos: position{line: 982, col: 7, offset: 40050},
														expr: &seqExpr{
															pos: position{line: 982, col: 8, offset: 40051},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 982, col: 8, offset: 40051},
																	expr: &choiceExpr{
																		pos: position{line: 1000, col: 12, offset: 40394},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1000, col: 12, offset: 40394},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1000, col: 21, offset: 40403},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 17, offset: 40060},
																	expr: &choiceExpr{
																		pos: position{line: 996, col: 7, offset: 40332},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 996, col: 7, offset: 40332},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 996, col: 13, offset: 40338},
																				run: (*parser).callonSection5Title238,
																				expr: &litMatcher{
																					pos:        position{line: 996, col: 13, offset: 40338},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 21, offset: 40064},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 22, offset: 40065},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 26, offset: 40069},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 27, offset: 40070},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 31, offset: 40074},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 32, offset: 40075},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 37, offset: 40080},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 38, offset: 40081},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 982, col: 43, offset: 40086},
																	expr: &litMatcher{
																		pos:        position{line: 982, col: 44, offset: 40087},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 982, col: 48, offset: 40091,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1004, col: 8, offset: 40434},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Block",
			pos:  position{line: 351, col: 1, offset: 13115},
			expr: &actionExpr{
				pos: position{line: 351, col: 18, offset: 13132},
				run: (*parser).callonSection5Block1,
				expr: &seqExpr{
					pos: position{line: 351, col: 18, offset: 13132},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 351, col: 18, offset: 13132},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 19, offset: 13133},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 351, col: 33, offset: 13147},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 34, offset: 13148},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 351, col: 48, offset: 13162},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 49, offset: 13163},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 351, col: 63, offset: 13177},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 64, offset: 13178},
								name: "Section4Title",
							},
						},
						&notExpr{
							pos: position{line: 351, col: 78, offset: 13192},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 79, offset: 13193},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 351, col: 93, offset: 13207},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 351, col: 101, offset: 13215},
								expr: &ruleRefExpr{
									pos:  position{line: 351, col: 102, offset: 13216},
									name: "DocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElements",
			pos:  position{line: 355, col: 1, offset: 13261},
			expr: &actionExpr{
				pos: position{line: 355, col: 18, offset: 13278},
				run: (*parser).callonTitleElements1,
				expr: &labeledExpr{
					pos:   position{line: 355, col: 18, offset: 13278},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 355, col: 27, offset: 13287},
						expr: &seqExpr{
							pos: position{line: 355, col: 28, offset: 13288},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 355, col: 28, offset: 13288},
									expr: &choiceExpr{
										pos: position{line: 1000, col: 12, offset: 40394},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1000, col: 12, offset: 40394},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1000, col: 21, offset: 40403},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 355, col: 37, offset: 13297},
									expr: &choiceExpr{
										pos: position{line: 996, col: 7, offset: 40332},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 996, col: 7, offset: 40332},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 996, col: 13, offset: 40338},
												run: (*parser).callonTitleElements12,
												expr: &litMatcher{
													pos:        position{line: 996, col: 13, offset: 40338},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 355, col: 41, offset: 13301},
									expr: &actionExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										run: (*parser).callonTitleElements15,
										expr: &seqExpr{
											pos: position{line: 151, col: 20, offset: 5775},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 151, col: 20, offset: 5775},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 151, col: 25, offset: 5780},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 982, col: 7, offset: 40050},
														run: (*parser).callonTitleElements19,
														expr: &oneOrMoreExpr{
															pos: position{line: 982, col: 7, offset: 40050},
															expr: &seqExpr{
																pos: position{line: 982, col: 8, offset: 40051},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 982, col: 8, offset: 40051},
																		expr: &choiceExpr{
																			pos: position{line: 1000, col: 12, offset: 40394},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1000, col: 12, offset: 40394},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1000, col: 21, offset: 40403},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 982, col: 17, offset: 40060},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonTitleElements29,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 982, col: 21, offset: 40064},
																		expr: &litMatcher{
																			pos:        position{line: 982, col: 22, offset: 40065},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 982, col: 26, offset: 40069},
																		expr: &litMatcher{
																			pos:        position{line: 982, col: 27, offset: 40070},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 982, col: 31, offset: 40074},
																		expr: &litMatcher{
																			pos:        position{line: 982, col: 32, offset: 40075},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 982, col: 37, offset: 40080},
																		expr: &litMatcher{
																			pos:        position{line: 982, col: 38, offset: 40081},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 982, col: 43, offset: 40086},
																		expr: &litMatcher{
																			pos:        position{line: 982, col: 44, offset: 40087},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 982, col: 48, offset: 40091,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 151, col: 33, offset: 5788},
													val:        "]]",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 355, col: 58, offset: 13318},
									name: "TitleElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 355, col: 71, offset: 13331},
									expr: &choiceExpr{
										pos: position{line: 996, col: 7, offset: 40332},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 996, col: 7, offset: 40332},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 996, col: 13, offset: 40338},
												run: (*parser).callonTitleElements47,
												expr: &litMatcher{
													pos:        position{line: 996, col: 13, offset: 40338},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElement",
			pos:  position{line: 359, col: 1, offset: 13443},
			expr: &actionExpr{
				pos: position{line: 359, col: 17, offset: 13459},
				run: (*parser).callonTitleElement1,
				expr: &labeledExpr{
					pos:   position{line: 359, col: 17, offset: 13459},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 359, col: 26, offset: 13468},
						alternatives: []interface{}{
							&actionExpr{
								pos: position{line: 656, col: 19, offset: 27630},
								run: (*parser).callonTitleElement4,
								expr: &seqExpr{
									pos: position{line: 656, col: 19, offset: 27630},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 656, col: 19, offset: 27630},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 656, col: 24, offset: 27635},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 982, col: 7, offset: 40050},
												run: (*parser).callonTitleElement8,
												expr: &oneOrMoreExpr{
													pos: position{line: 982, col: 7, offset: 40050},
													expr: &seqExpr{
														pos: position{line: 982, col: 8, offset: 40051},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 982, col: 8, offset: 40051},
																expr: &choiceExpr{
																	pos: position{line: 1000, col: 12, offset: 40394},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1000, col: 12, offset: 40394},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1000, col: 21, offset: 40403},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 982, col: 17, offset: 40060},
																expr: &choiceExpr{
																	pos: position{line: 996, col: 7, offset: 40332},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 996, col: 7, offset: 40332},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 996, col: 13, offset: 40338},
																			run: (*parser).callonTitleElement18,
																			expr: &litMatcher{
																				pos:        position{line: 996, col: 13, offset: 40338},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 982, col: 21, offset: 40064},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 22, offset: 40065},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 26, offset: 40069},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 27, offset: 40070},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 31, offset: 40074},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 32, offset: 40075},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 37, offset: 40080},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 38, offset: 40081},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 43, offset: 40086},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 44, offset: 40087},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 982, col: 48, offset: 40091,
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 656, col: 32, offset: 27643},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonTitleElement34,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 656, col: 36, offset: 27647},
											val:        ",",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 656, col: 40, offset: 27651},
											label: "label",
											expr: &actionExpr{
												pos: position{line: 662, col: 24, offset: 27853},
												run: (*parser).callonTitleElement38,
												expr: &oneOrMoreExpr{
													pos: position{line: 662, col: 24, offset: 27853},
													expr: &seqExpr{
														pos: position{line: 662, col: 25, offset: 27854},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 662, col: 25, offset: 27854},
																expr: &litMatcher{
																	pos:        position{line: 662, col: 26, offset: 27855},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 662, col: 31, offset: 27860,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 656, col: 68, offset: 27679},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 658, col: 5, offset: 27754},
								run: (*parser).callonTitleElement45,
								expr: &seqExpr{
									pos: position{line: 658, col: 5, offset: 27754},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 658, col: 5, offset: 27754},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 658, col: 10, offset: 27759},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 982, col: 7, offset: 40050},
												run: (*parser).callonTitleElement49,
												expr: &oneOrMoreExpr{
													pos: position{line: 982, col: 7, offset: 40050},
													expr: &seqExpr{
														pos: position{line: 982, col: 8, offset: 40051},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 982, col: 8, offset: 40051},
																expr: &choiceExpr{
																	pos: position{line: 1000, col: 12, offset: 40394},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1000, col: 12, offset: 40394},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1000, col: 21, offset: 40403},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 982, col: 17, offset: 40060},
																expr: &choiceExpr{
																	pos: position{line: 996, col: 7, offset: 40332},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 996, col: 7, offset: 40332},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 996, col: 13, offset: 40338},
																			run: (*parser).callonTitleElement59,
																			expr: &litMatcher{
																				pos:        position{line: 996, col: 13, offset: 40338},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 982, col: 21, offset: 40064},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 22, offset: 40065},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 26, offset: 40069},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 27, offset: 40070},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 31, offset: 40074},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 32, offset: 40075},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 37, offset: 40080},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 38, offset: 40081},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 43, offset: 40086},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 44, offset: 40087},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 982, col: 48, offset: 40091,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 658, col: 18, offset: 27767},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 359, col: 43, offset: 13485},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 710, col: 16, offset: 29352},
								run: (*parser).callonTitleElement74,
								expr: &seqExpr{
									pos: position{line: 710, col: 16, offset: 29352},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 710, col: 16, offset: 29352},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 710, col: 25, offset: 29361},
											expr: &litMatcher{
												pos:        position{line: 710, col: 26, offset: 29362},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 710, col: 30, offset: 29366},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 978, col: 8, offset: 39980},
												run: (*parser).callonTitleElement80,
												expr: &oneOrMoreExpr{
													pos: position{line: 978, col: 8, offset: 39980},
													expr: &seqExpr{
														pos: position{line: 978, col: 9, offset: 39981},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 978, col: 9, offset: 39981},
																expr: &choiceExpr{
																	pos: position{line: 1000, col: 12, offset: 40394},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1000, col: 12, offset: 40394},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1000, col: 21, offset: 40403},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 978, col: 18, offset: 39990},
																expr: &choiceExpr{
																	pos: position{line: 996, col: 7, offset: 40332},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 996, col: 7, offset: 40332},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 996, col: 13, offset: 40338},
																			run: (*parser).callonTitleElement90,
																			expr: &litMatcher{
																				pos:        position{line: 996, col: 13, offset: 40338},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 978, col: 22, offset: 39994},
																expr: &litMatcher{
																	pos:        position{line: 978, col: 23, offset: 39995},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 978, col: 27, offset: 39999},
																expr: &litMatcher{
																	pos:        position{line: 978, col: 28, offset: 40000},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 978, col: 32, offset: 40004,
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 710, col: 41, offset: 29377},
											label: "attributes",
											expr: &choiceExpr{
												pos: position{line: 715, col: 20, offset: 29622},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 715, col: 20, offset: 29622},
														run: (*parser).callonTitleElement99,
														expr: &seqExpr{
															pos: position{line: 715, col: 20, offset: 29622},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 715, col: 20, offset: 29622},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 715, col: 24, offset: 29626},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonTitleElement103,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 715, col: 45, offset: 29647},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 716, col: 9, offset: 29659},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonTitleElement115,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 716, col: 33, offset: 29683},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 717, col: 9, offset: 29695},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonTitleElement127,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 717, col: 33, offset: 29719},
																	expr: &litMatcher{
																		pos:        position{line: 717, col: 33, offset: 29719},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 718, col: 9, offset: 29732},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 718, col: 20, offset: 29743},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonTitleElement142,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement145,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement148,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonTitleElement162,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonTitleElement178,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonTitleElement180,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement183,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement186,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonTitleElement203,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 718, col: 40, offset: 29763},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 720, col: 9, offset: 29869},
														run: (*parser).callonTitleElement206,
														expr: &seqExpr{
															pos: position{line: 720, col: 9, offset: 29869},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 720, col: 9, offset: 29869},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 720, col: 13, offset: 29873},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonTitleElement210,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 720, col: 34, offset: 29894},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 721, col: 9, offset: 29906},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonTitleElement222,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 721, col: 32, offset: 29929},
																	expr: &litMatcher{
																		pos:        position{line: 721, col: 32, offset: 29929},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 722, col: 9, offset: 29942},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 722, col: 20, offset: 29953},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonTitleElement237,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement240,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement243,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonTitleElement257,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonTitleElement273,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonTitleElement275,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement278,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement281,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonTitleElement298,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 722, col: 40, offset: 29973},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 724, col: 9, offset: 30076},
														run: (*parser).callonTitleElement301,
														expr: &seqExpr{
															pos: position{line: 724, col: 9, offset: 30076},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 724, col: 9, offset: 30076},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 724, col: 13, offset: 30080},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonTitleElement305,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 724, col: 34, offset: 30101},
																	expr: &litMatcher{
																		pos:        position{line: 724, col: 34, offset: 30101},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 725, col: 9, offset: 30114},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 725, col: 20, offset: 30125},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonTitleElement320,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement323,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement326,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonTitleElement340,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonTitleElement356,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonTitleElement358,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement361,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement364,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonTitleElement381,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 725, col: 40, offset: 30145},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 727, col: 9, offset: 30246},
														run: (*parser).callonTitleElement384,
														expr: &seqExpr{
															pos: position{line: 727, col: 9, offset: 30246},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 727, col: 9, offset: 30246},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 727, col: 13, offset: 30250},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 727, col: 24, offset: 30261},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonTitleElement390,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement393,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement396,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonTitleElement410,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonTitleElement426,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonTitleElement428,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement431,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement434,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonTitleElement451,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 727, col: 44, offset: 30281},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 359, col: 71, offset: 13513},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 669, col: 9, offset: 28009},
								run: (*parser).callonTitleElement455,
								expr: &labeledExpr{
									pos:   position{line: 669, col: 9, offset: 28009},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 669, col: 15, offset: 28015},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 684, col: 17, offset: 28443},
												run: (*parser).callonTitleElement458,
												expr: &seqExpr{
													pos: position{line: 684, col: 17, offset: 28443},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 684, col: 17, offset: 28443},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 684, col: 25, offset: 28451},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 688, col: 20, offset: 28602},
																run: (*parser).callonTitleElement462,
																expr: &seqExpr{
																	pos: position{line: 688, col: 20, offset: 28602},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 688, col: 20, offset: 28602},
																			expr: &choiceExpr{
																				pos: position{line: 990, col: 15, offset: 40217},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 990, col: 15, offset: 40217},
																						val:        "http://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 990, col: 27, offset: 40229},
																						val:        "https://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 990, col: 40, offset: 40242},
																						val:        "ftp://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 990, col: 51, offset: 40253},
																						val:        "irc://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 990, col: 62, offset: 40264},
																						val:        "mailto:",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 978, col: 8, offset: 39980},
																			run: (*parser).callonTitleElement471,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 978, col: 8, offset: 39980},
																				expr: &seqExpr{
																					pos: position{line: 978, col: 9, offset: 39981},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 978, col: 9, offset: 39981},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 18, offset: 39990},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonTitleElement481,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 22, offset: 39994},
																							expr: &litMatcher{
																								pos:        position{line: 978, col: 23, offset: 39995},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 27, offset: 39999},
																							expr: &litMatcher{
																								pos:        position{line: 978, col: 28, offset: 40000},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 978, col: 32, offset: 40004,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 684, col: 47, offset: 28473},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 692, col: 19, offset: 28672},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 692, col: 19, offset: 28672},
																		run: (*parser).callonTitleElement490,
																		expr: &seqExpr{
																			pos: position{line: 692, col: 19, offset: 28672},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 692, col: 19, offset: 28672},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 692, col: 23, offset: 28676},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 699, col: 22, offset: 28952},
																						run: (*parser).callonTitleElement494,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 699, col: 22, offset: 28952},
																							expr: &seqExpr{
																								pos: position{line: 699, col: 23, offset: 28953},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 699, col: 23, offset: 28953},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 24, offset: 28954},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 699, col: 28, offset: 28958},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 29, offset: 28959},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 699, col: 33, offset: 28963,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 693, col: 9, offset: 28709},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 693, col: 20, offset: 28720},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonTitleElement505,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement508,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement511,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonTitleElement525,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonTitleElement541,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonTitleElement543,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement546,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement549,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonTitleElement566,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 693, col: 40, offset: 28740},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 695, col: 5, offset: 28819},
																		run: (*parser).callonTitleElement569,
																		expr: &seqExpr{
																			pos: position{line: 695, col: 5, offset: 28819},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 695, col: 5, offset: 28819},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 695, col: 9, offset: 28823},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 695, col: 20, offset: 28834},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonTitleElement575,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement578,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement581,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonTitleElement595,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonTitleElement611,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonTitleElement613,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement616,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement619,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonTitleElement636,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 695, col: 40, offset: 28854},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 673, col: 17, offset: 28086},
												run: (*parser).callonTitleElement639,
												expr: &seqExpr{
													pos: position{line: 673, col: 17, offset: 28086},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 673, col: 17, offset: 28086},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 679, col: 20, offset: 28309},
																run: (*parser).callonTitleElement642,
																expr: &seqExpr{
																	pos: position{line: 679, col: 20, offset: 28309},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 990, col: 15, offset: 40217},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 990, col: 15, offset: 40217},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 990, col: 27, offset: 40229},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 990, col: 40, offset: 40242},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 990, col: 51, offset: 40253},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 990, col: 62, offset: 40264},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 978, col: 8, offset: 39980},
																			run: (*parser).callonTitleElement650,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 978, col: 8, offset: 39980},
																				expr: &seqExpr{
																					pos: position{line: 978, col: 9, offset: 39981},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 978, col: 9, offset: 39981},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 18, offset: 39990},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonTitleElement660,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 22, offset: 39994},
																							expr: &litMatcher{
																								pos:        position{line: 978, col: 23, offset: 39995},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 27, offset: 39999},
																							expr: &litMatcher{
																								pos:        position{line: 978, col: 28, offset: 40000},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 978, col: 32, offset: 40004,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 673, col: 39, offset: 28108},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 692, col: 19, offset: 28672},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 692, col: 19, offset: 28672},
																		run: (*parser).callonTitleElement669,
																		expr: &seqExpr{
																			pos: position{line: 692, col: 19, offset: 28672},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 692, col: 19, offset: 28672},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 692, col: 23, offset: 28676},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 699, col: 22, offset: 28952},
																						run: (*parser).callonTitleElement673,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 699, col: 22, offset: 28952},
																							expr: &seqExpr{
																								pos: position{line: 699, col: 23, offset: 28953},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 699, col: 23, offset: 28953},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 24, offset: 28954},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 699, col: 28, offset: 28958},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 29, offset: 28959},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 699, col: 33, offset: 28963,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 693, col: 9, offset: 28709},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 693, col: 20, offset: 28720},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonTitleElement684,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement687,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement690,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonTitleElement704,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonTitleElement720,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonTitleElement722,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement725,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement728,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonTitleElement745,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 693, col: 40, offset: 28740},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 695, col: 5, offset: 28819},
																		run: (*parser).callonTitleElement748,
																		expr: &seqExpr{
																			pos: position{line: 695, col: 5, offset: 28819},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 695, col: 5, offset: 28819},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 695, col: 9, offset: 28823},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 695, col: 20, offset: 28834},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonTitleElement754,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement757,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement760,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonTitleElement774,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonTitleElement790,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonTitleElement792,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement795,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement798,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonTitleElement815,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 695, col: 40, offset: 28854},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 675, col: 5, offset: 28219},
												run: (*parser).callonTitleElement818,
												expr: &labeledExpr{
													pos:   position{line: 675, col: 5, offset: 28219},
													label: "url",
													expr: &actionExpr{
														pos: position{line: 679, col: 20, offset: 28309},
														run: (*parser).callonTitleElement820,
														expr: &seqExpr{
															pos: position{line: 679, col: 20, offset: 28309},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 990, col: 15, offset: 40217},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 990, col: 15, offset: 40217},
																			val:        "http://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 990, col: 27, offset: 40229},
																			val:        "https://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 990, col: 40, offset: 40242},
																			val:        "ftp://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 990, col: 51, offset: 40253},
																			val:        "irc://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 990, col: 62, offset: 40264},
																			val:        "mailto:",
																			ignoreCase: false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 978, col: 8, offset: 39980},
																	run: (*parser).callonTitleElement828,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 978, col: 8, offset: 39980},
																		expr: &seqExpr{
																			pos: position{line: 978, col: 9, offset: 39981},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 978, col: 9, offset: 39981},
																					expr: &choiceExpr{
																						pos: position{line: 1000, col: 12, offset: 40394},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1000, col: 12, offset: 40394},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1000, col: 21, offset: 40403},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 978, col: 18, offset: 39990},
																					expr: &choiceExpr{
																						pos: position{line: 996, col: 7, offset: 40332},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 996, col: 7, offset: 40332},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 996, col: 13, offset: 40338},
																								run: (*parser).callonTitleElement838,
																								expr: &litMatcher{
																									pos:        position{line: 996, col: 13, offset: 40338},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 978, col: 22, offset: 39994},
																					expr: &litMatcher{
																						pos:        position{line: 978, col: 23, offset: 39995},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 978, col: 27, offset: 39999},
																					expr: &litMatcher{
																						pos:        position{line: 978, col: 28, offset: 40000},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 978, col: 32, offset: 40004,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 114, col: 34, offset: 4427},
								run: (*parser).callonTitleElement845,
								expr: &seqExpr{
									pos: position{line: 114, col: 34, offset: 4427},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 114, col: 34, offset: 4427},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 114, col: 38, offset: 4431},
											label: "name",
											expr: &actionExpr{
												pos: position{line: 121, col: 26, offset: 4726},
												run: (*parser).callonTitleElement849,
												expr: &seqExpr{
													pos: position{line: 121, col: 26, offset: 4726},
													exprs: []interface{}{
														&charClassMatcher{
															pos:        position{line: 121, col: 27, offset: 4727},
															val:        "[_A-Za-z0-9]",
															chars:      []rune{'_'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 121, col: 56, offset: 4756},
															expr: &charClassMatcher{
																pos:        position{line: 121, col: 57, offset: 4757},
																val:        "[-A-Za-z0-9]",
																chars:      []rune{'-'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 114, col: 67, offset: 4460},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 974, col: 9, offset: 39906},
								run: (*parser).callonTitleElement855,
								expr: &oneOrMoreExpr{
									pos: position{line: 974, col: 9, offset: 39906},
									expr: &seqExpr{
										pos: position{line: 974, col: 10, offset: 39907},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 974, col: 10, offset: 39907},
												expr: &choiceExpr{
													pos: position{line: 1000, col: 12, offset: 40394},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 974, col: 19, offset: 39916},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonTitleElement865,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 974, col: 23, offset: 39920},
												expr: &charClassMatcher{
													pos:        position{line: 972, col: 16, offset: 39875},
													val:        "[()[]]",
													chars:      []rune{'(', ')', '[', ']'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&anyMatcher{
												line: 974, col: 36, offset: 39933,
											},
										},
									},
								},
							},
							&charClassMatcher{
								pos:        position{line: 972, col: 16, offset: 39875},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
						},
					},
				},
			},
		},
		{
			name: "List",
			pos:  position{line: 367, col: 1, offset: 13716},
			expr: &actionExpr{
				pos: position{line: 367, col: 9, offset: 13724},
				run: (*parser).callonList1,
				expr: &seqExpr{
					pos: position{line: 367, col: 9, offset: 13724},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 367, col: 9, offset: 13724},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 367, col: 20, offset: 13735},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonList5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonList9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonList11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonList15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonList25,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonList39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			run: (*parser).callonList43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 982, col: 7, offset: 40050},
																				expr: &seqExpr{
																					pos: position{line: 982, col: 8, offset: 40051},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 17, offset: 40060},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonList53,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 21, offset: 40064},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 22, offset: 40065},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 26, offset: 40069},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 27, offset: 40070},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 31, offset: 40074},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 32, offset: 40075},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 37, offset: 40080},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 38, offset: 40081},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 43, offset: 40086},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 44, offset: 40087},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 982, col: 48, offset: 40091,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonList67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonList75,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonList78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonList86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonList92,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonList95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonList106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonList111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonList113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonList115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonList117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonList119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonList122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonList124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonList130,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonList135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonList138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonList141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonList155,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonList171,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonList173,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonList176,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonList179,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonList196,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonList202,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 369, col: 5, offset: 13828},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 369, col: 14, offset: 13837},
								name: "ListItems",
							},
						},
					},
				},
			},
		},
		{
			name: "ListItems",
			pos:  position{line: 373, col: 1, offset: 13931},
			expr: &oneOrMoreExpr{
				pos: position{line: 373, col: 14, offset: 13944},
				expr: &choiceExpr{
					pos: position{line: 373, col: 15, offset: 13945},
					alternatives: []interface{}{
						&ruleRefExpr{
							pos:  position{line: 373, col: 15, offset: 13945},
							name: "OrderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 373, col: 33, offset: 13963},
							name: "UnorderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 373, col: 53, offset: 13983},
							name: "LabeledListItem",
						},
					},
				},
			},
		},
		{
			name: "ListParagraph",
			pos:  position{line: 375, col: 1, offset: 14002},
			expr: &actionExpr{
				pos: position{line: 375, col: 18, offset: 14019},
				run: (*parser).callonListParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 375, col: 18, offset: 14019},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 375, col: 24, offset: 14025},
						expr: &ruleRefExpr{
							pos:  position{line: 375, col: 25, offset: 14026},
							name: "ListParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "ListParagraphLine",
			pos:  position{line: 379, col: 1, offset: 14110},
			expr: &actionExpr{
				pos: position{line: 380, col: 5, offset: 14136},
				run: (*parser).callonListParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 380, col: 5, offset: 14136},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 380, col: 5, offset: 14136},
							expr: &actionExpr{
								pos: position{line: 405, col: 26, offset: 14956},
								run: (*parser).callonListParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 405, col: 26, offset: 14956},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 405, col: 26, offset: 14956},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonListParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 405, col: 30, offset: 14960},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 407, col: 5, offset: 15015},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 407, col: 5, offset: 15015},
														run: (*parser).callonListParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 407, col: 5, offset: 15015},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 409, col: 9, offset: 15128},
														run: (*parser).callonListParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 409, col: 9, offset: 15128},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 411, col: 9, offset: 15239},
														run: (*parser).callonListParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 411, col: 9, offset: 15239},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 413, col: 9, offset: 15348},
														run: (*parser).callonListParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 413, col: 9, offset: 15348},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 415, col: 9, offset: 15455},
														run: (*parser).callonListParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 415, col: 9, offset: 15455},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 418, col: 9, offset: 15582},
														run: (*parser).callonListParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 418, col: 9, offset: 15582},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 418, col: 9, offset: 15582},
																	expr: &charClassMatcher{
																		pos:        position{line: 418, col: 10, offset: 15583},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 418, col: 18, offset: 15591},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 420, col: 9, offset: 15694},
														run: (*parser).callonListParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 420, col: 9, offset: 15694},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 420, col: 9, offset: 15694},
																	expr: &charClassMatcher{
																		pos:        position{line: 420, col: 10, offset: 15695},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 420, col: 18, offset: 15703},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 422, col: 9, offset: 15809},
														run: (*parser).callonListParagraphLine33,
														expr: &seqExpr{
															pos: position{line: 422, col: 9, offset: 15809},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 422, col: 9, offset: 15809},
																	expr: &charClassMatcher{
																		pos:        position{line: 422, col: 10, offset: 15810},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 422, col: 18, offset: 15818},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 9, offset: 15924},
														run: (*parser).callonListParagraphLine38,
														expr: &seqExpr{
															pos: position{line: 424, col: 9, offset: 15924},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 424, col: 9, offset: 15924},
																	expr: &charClassMatcher{
																		pos:        position{line: 424, col: 10, offset: 15925},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 424, col: 18, offset: 15933},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 426, col: 9, offset: 16039},
														run: (*parser).callonListParagraphLine43,
														expr: &seqExpr{
															pos: position{line: 426, col: 9, offset: 16039},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 426, col: 9, offset: 16039},
																	expr: &charClassMatcher{
																		pos:        position{line: 426, col: 10, offset: 16040},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 426, col: 18, offset: 16048},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 428, col: 8, offset: 16153},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonListParagraphLine51,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 381, col: 5, offset: 14166},
							expr: &actionExpr{
								pos: position{line: 444, col: 5, offset: 16811},
								run: (*parser).callonListParagraphLine54,
								expr: &seqExpr{
									pos: position{line: 444, col: 5, offset: 16811},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 444, col: 5, offset: 16811},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonListParagraphLine59,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 444, col: 9, offset: 16815},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 445, col: 9, offset: 16832},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 445, col: 9, offset: 16832},
														run: (*parser).callonListParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 445, col: 9, offset: 16832},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 448, col: 11, offset: 17001},
														run: (*parser).callonListParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 448, col: 11, offset: 17001},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 451, col: 11, offset: 17170},
														run: (*parser).callonListParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 451, col: 11, offset: 17170},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 454, col: 11, offset: 17339},
														run: (*parser).callonListParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 454, col: 11, offset: 17339},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 11, offset: 17505},
														run: (*parser).callonListParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 457, col: 11, offset: 17505},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 460, col: 11, offset: 17669},
														run: (*parser).callonListParagraphLine73,
														expr: &litMatcher{
															pos:        position{line: 460, col: 11, offset: 17669},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 462, col: 12, offset: 17816},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonListParagraphLine78,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 382, col: 5, offset: 14198},
							expr: &seqExpr{
								pos: position{line: 382, col: 7, offset: 14200},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 480, col: 24, offset: 18652},
										run: (*parser).callonListParagraphLine82,
										expr: &zeroOrMoreExpr{
											pos: position{line: 480, col: 24, offset: 18652},
											expr: &seqExpr{
												pos: position{line: 480, col: 25, offset: 18653},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 480, col: 25, offset: 18653},
														expr: &choiceExpr{
															pos: position{line: 1000, col: 12, offset: 40394},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1000, col: 12, offset: 40394},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1000, col: 21, offset: 40403},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 480, col: 34, offset: 18662},
														expr: &litMatcher{
															pos:        position{line: 480, col: 35, offset: 18663},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 480, col: 40, offset: 18668,
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 485, col: 30, offset: 18798},
										val:        "::",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 485, col: 35, offset: 18803},
										expr: &choiceExpr{
											pos: position{line: 485, col: 36, offset: 18804},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 996, col: 7, offset: 40332},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 996, col: 13, offset: 40338},
													run: (*parser).callonListParagraphLine96,
													expr: &litMatcher{
														pos:        position{line: 996, col: 13, offset: 40338},
														val:        "\t",
														ignoreCase: false,
													},
												},
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 383, col: 5, offset: 14251},
							expr: &actionExpr{
								pos: position{line: 390, col: 25, offset: 14402},
								run: (*parser).callonListParagraphLine101,
								expr: &seqExpr{
									pos: position{line: 390, col: 25, offset: 14402},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 390, col: 25, offset: 14402},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 390, col: 29, offset: 14406},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonListParagraphLine107,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1004, col: 8, offset: 40434},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1002, col: 8, offset: 40423},
													expr: &anyMatcher{
														line: 1002, col: 9, offset: 40424,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 384, col: 5, offset: 14280},
							expr: &actionExpr{
								pos: position{line: 136, col: 21, offset: 5188},
								run: (*parser).callonListParagraphLine115,
								expr: &seqExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 136, col: 21, offset: 5188},
											label: "attr",
											expr: &choiceExpr{
												pos: position{line: 136, col: 27, offset: 5194},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 145, col: 14, offset: 5645},
														run: (*parser).callonListParagraphLine119,
														expr: &labeledExpr{
															pos:   position{line: 145, col: 14, offset: 5645},
															label: "id",
															expr: &actionExpr{
																pos: position{line: 151, col: 20, offset: 5775},
																run: (*parser).callonListParagraphLine121,
																expr: &seqExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 151, col: 20, offset: 5775},
																			val:        "[[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 151, col: 25, offset: 5780},
																			label: "id",
																			expr: &actionExpr{
																				pos: position{line: 982, col: 7, offset: 40050},
																				run: (*parser).callonListParagraphLine125,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					expr: &seqExpr{
																						pos: position{line: 982, col: 8, offset: 40051},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 982, col: 8, offset: 40051},
																								expr: &choiceExpr{
																									pos: position{line: 1000, col: 12, offset: 40394},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1000, col: 12, offset: 40394},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 1000, col: 21, offset: 40403},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 982, col: 17, offset: 40060},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonListParagraphLine135,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 982, col: 21, offset: 40064},
																								expr: &litMatcher{
																									pos:        position{line: 982, col: 22, offset: 40065},
																									val:        "[",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 982, col: 26, offset: 40069},
																								expr: &litMatcher{
																									pos:        position{line: 982, col: 27, offset: 40070},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 982, col: 31, offset: 40074},
																								expr: &litMatcher{
																									pos:        position{line: 982, col: 32, offset: 40075},
																									val:        "<<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 982, col: 37, offset: 40080},
																								expr: &litMatcher{
																									pos:        position{line: 982, col: 38, offset: 40081},
																									val:        ">>",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 982, col: 43, offset: 40086},
																								expr: &litMatcher{
																									pos:        position{line: 982, col: 44, offset: 40087},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 982, col: 48, offset: 40091,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 151, col: 33, offset: 5788},
																			val:        "]]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 147, col: 5, offset: 5691},
														run: (*parser).callonListParagraphLine149,
														expr: &seqExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 147, col: 5, offset: 5691},
																	val:        "[#",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 147, col: 10, offset: 5696},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 982, col: 7, offset: 40050},
																		run: (*parser).callonListParagraphLine153,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			expr: &seqExpr{
																				pos: position{line: 982, col: 8, offset: 40051},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 982, col: 8, offset: 40051},
																						expr: &choiceExpr{
																							pos: position{line: 1000, col: 12, offset: 40394},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1000, col: 12, offset: 40394},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1000, col: 21, offset: 40403},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 982, col: 17, offset: 40060},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonListParagraphLine163,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 982, col: 21, offset: 40064},
																						expr: &litMatcher{
																							pos:        position{line: 982, col: 22, offset: 40065},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 982, col: 26, offset: 40069},
																						expr: &litMatcher{
																							pos:        position{line: 982, col: 27, offset: 40070},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 982, col: 31, offset: 40074},
																						expr: &litMatcher{
																							pos:        position{line: 982, col: 32, offset: 40075},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 982, col: 37, offset: 40080},
																						expr: &litMatcher{
																							pos:        position{line: 982, col: 38, offset: 40081},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 982, col: 43, offset: 40086},
																						expr: &litMatcher{
																							pos:        position{line: 982, col: 44, offset: 40087},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 982, col: 48, offset: 40091,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 147, col: 18, offset: 5704},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 157, col: 17, offset: 5997},
														run: (*parser).callonListParagraphLine177,
														expr: &seqExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 157, col: 17, offset: 5997},
																	val:        ".",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 157, col: 21, offset: 6001},
																	expr: &litMatcher{
																		pos:        position{line: 157, col: 22, offset: 6002},
																		val:        ".",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 157, col: 26, offset: 6006},
																	expr: &choiceExpr{
																		pos: position{line: 996, col: 7, offset: 40332},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 996, col: 7, offset: 40332},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 996, col: 13, offset: 40338},
																				run: (*parser).callonListParagraphLine185,
																				expr: &litMatcher{
																					pos:        position{line: 996, col: 13, offset: 40338},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 157, col: 30, offset: 6010},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 161, col: 24, offset: 6115},
																		run: (*parser).callonListParagraphLine188,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			expr: &seqExpr{
																				pos: position{line: 161, col: 25, offset: 6116},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 161, col: 25, offset: 6116},
																						expr: &choiceExpr{
																							pos: position{line: 1000, col: 12, offset: 40394},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1000, col: 12, offset: 40394},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1000, col: 21, offset: 40403},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 161, col: 34, offset: 6125,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 167, col: 16, offset: 6274},
														run: (*parser).callonListParagraphLine196,
														expr: &seqExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 167, col: 16, offset: 6274},
																	val:        "[.",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 167, col: 21, offset: 6279},
																	expr: &choiceExpr{
																		pos: position{line: 996, col: 7, offset: 40332},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 996, col: 7, offset: 40332},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 996, col: 13, offset: 40338},
																				run: (*parser).callonListParagraphLine202,
																				expr: &litMatcher{
																					pos:        position{line: 996, col: 13, offset: 40338},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 167, col: 25, offset: 6283},
																	label: "role",
																	expr: &actionExpr{
																		pos: position{line: 171, col: 23, offset: 6387},
																		run: (*parser).callonListParagraphLine205,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			expr: &seqExpr{
																				pos: position{line: 171, col: 24, offset: 6388},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 171, col: 24, offset: 6388},
																						expr: &choiceExpr{
																							pos: position{line: 1000, col: 12, offset: 40394},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1000, col: 12, offset: 40394},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1000, col: 21, offset: 40403},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 171, col: 33, offset: 6397},
																						expr: &litMatcher{
																							pos:        position{line: 171, col: 34, offset: 6398},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 171, col: 38, offset: 6402,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 167, col: 51, offset: 6309},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 176, col: 30, offset: 6551},
														run: (*parser).callonListParagraphLine216,
														expr: &seqExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 176, col: 30, offset: 6551},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 176, col: 34, offset: 6555},
																	label: "k",
																	expr: &choiceExpr{
																		pos: position{line: 494, col: 19, offset: 19202},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 494, col: 19, offset: 19202},
																				run: (*parser).callonListParagraphLine221,
																				expr: &litMatcher{
																					pos:        position{line: 494, col: 19, offset: 19202},
																					val:        "TIP",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 496, col: 5, offset: 19240},
																				run: (*parser).callonListParagraphLine223,
																				expr: &litMatcher{
																					pos:        position{line: 496, col: 5, offset: 19240},
																					val:        "NOTE",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 498, col: 5, offset: 19280},
																				run: (*parser).callonListParagraphLine225,
																				expr: &litMatcher{
																					pos:        position{line: 498, col: 5, offset: 19280},
																					val:        "IMPORTANT",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 500, col: 5, offset: 19330},
																				run: (*parser).callonListParagraphLine227,
																				expr: &litMatcher{
																					pos:        position{line: 500, col: 5, offset: 19330},
																					val:        "WARNING",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 502, col: 5, offset: 19376},
																				run: (*parser).callonListParagraphLine229,
																				expr: &litMatcher{
																					pos:        position{line: 502, col: 5, offset: 19376},
																					val:        "CAUTION",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 176, col: 53, offset: 6574},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 199, col: 21, offset: 7299},
														run: (*parser).callonListParagraphLine232,
														expr: &litMatcher{
															pos:        position{line: 199, col: 21, offset: 7299},
															val:        "[horizontal]",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 181, col: 19, offset: 6735},
														run: (*parser).callonListParagraphLine234,
														expr: &seqExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 181, col: 19, offset: 6735},
																	val:        "[",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 181, col: 23, offset: 6739},
																	expr: &choiceExpr{
																		pos: position{line: 996, col: 7, offset: 40332},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 996, col: 7, offset: 40332},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 996, col: 13, offset: 40338},
																				run: (*parser).callonListParagraphLine240,
																				expr: &litMatcher{
																					pos:        position{line: 996, col: 13, offset: 40338},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 181, col: 27, offset: 6743},
																	label: "attributes",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 181, col: 38, offset: 6754},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonListParagraphLine245,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonListParagraphLine248,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonListParagraphLine251,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonListParagraphLine265,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonListParagraphLine281,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonListParagraphLine283,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonListParagraphLine286,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonListParagraphLine289,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonListParagraphLine306,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 181, col: 59, offset: 6775},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 136, col: 131, offset: 5298},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonListParagraphLine312,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1004, col: 8, offset: 40434},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1002, col: 8, offset: 40423},
													expr: &anyMatcher{
														line: 1002, col: 9, offset: 40424,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 385, col: 5, offset: 14304},
							expr: &choiceExpr{
								pos: position{line: 743, col: 19, offset: 30960},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 948, col: 26, offset: 39156},
										val:        "....",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 751, col: 25, offset: 31377},
										val:        "```",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 762, col: 26, offset: 31929},
										val:        "----",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 784, col: 26, offset: 32905},
										val:        "====",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 905, col: 26, offset: 37427},
										val:        "////",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 807, col: 24, offset: 33803},
										val:        "____",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 861, col: 26, offset: 35755},
										val:        "****",
										ignoreCase: false,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 386, col: 5, offset: 14326},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 386, col: 11, offset: 14332},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "ContinuedDocumentBlock",
			pos:  position{line: 394, col: 1, offset: 14462},
			expr: &actionExpr{
				pos: position{line: 394, col: 27, offset: 14488},
				run: (*parser).callonContinuedDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 394, col: 27, offset: 14488},
					exprs: []interface{}{
						&actionExpr{
							pos: position{line: 390, col: 25, offset: 14402},
							run: (*parser).callonContinuedDocumentBlock3,
							expr: &seqExpr{
								pos: position{line: 390, col: 25, offset: 14402},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 390, col: 25, offset: 14402},
										val:        "+",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 390, col: 29, offset: 14406},
										expr: &choiceExpr{
											pos: position{line: 996, col: 7, offset: 40332},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 996, col: 7, offset: 40332},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 996, col: 13, offset: 40338},
													run: (*parser).callonContinuedDocumentBlock9,
													expr: &litMatcher{
														pos:        position{line: 996, col: 13, offset: 40338},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1004, col: 8, offset: 40434},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1000, col: 12, offset: 40394},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1000, col: 21, offset: 40403},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1002, col: 8, offset: 40423},
												expr: &anyMatcher{
													line: 1002, col: 9, offset: 40424,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 394, col: 48, offset: 14509},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 394, col: 56, offset: 14517},
								name: "DocumentBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItem",
			pos:  position{line: 401, col: 1, offset: 14674},
			expr: &actionExpr{
				pos: position{line: 401, col: 20, offset: 14693},
				run: (*parser).callonOrderedListItem1,
				expr: &seqExpr{
					pos: position{line: 401, col: 20, offset: 14693},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 401, col: 20, offset: 14693},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 401, col: 31, offset: 14704},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonOrderedListItem5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonOrderedListItem9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonOrderedListItem11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonOrderedListItem15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonOrderedListItem25,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonOrderedListItem39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			run: (*parser).callonOrderedListItem43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 982, col: 7, offset: 40050},
																				expr: &seqExpr{
																					pos: position{line: 982, col: 8, offset: 40051},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 17, offset: 40060},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonOrderedListItem53,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 21, offset: 40064},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 22, offset: 40065},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 26, offset: 40069},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 27, offset: 40070},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 31, offset: 40074},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 32, offset: 40075},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 37, offset: 40080},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 38, offset: 40081},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 43, offset: 40086},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 44, offset: 40087},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 982, col: 48, offset: 40091,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonOrderedListItem67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonOrderedListItem75,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonOrderedListItem78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonOrderedListItem86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonOrderedListItem92,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonOrderedListItem95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonOrderedListItem106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonOrderedListItem111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonOrderedListItem113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonOrderedListItem115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonOrderedListItem117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonOrderedListItem119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonOrderedListItem122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonOrderedListItem124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonOrderedListItem130,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonOrderedListItem135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonOrderedListItem138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonOrderedListItem141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonOrderedListItem155,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonOrderedListItem171,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonOrderedListItem173,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonOrderedListItem176,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonOrderedListItem179,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonOrderedListItem196,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonOrderedListItem202,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 401, col: 51, offset: 14724},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 405, col: 26, offset: 14956},
								run: (*parser).callonOrderedListItem210,
								expr: &seqExpr{
									pos: position{line: 405, col: 26, offset: 14956},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 405, col: 26, offset: 14956},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonOrderedListItem215,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 405, col: 30, offset: 14960},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 407, col: 5, offset: 15015},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 407, col: 5, offset: 15015},
														run: (*parser).callonOrderedListItem219,
														expr: &litMatcher{
															pos:        position{line: 407, col: 5, offset: 15015},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 409, col: 9, offset: 15128},
														run: (*parser).callonOrderedListItem221,
														expr: &litMatcher{
															pos:        position{line: 409, col: 9, offset: 15128},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 411, col: 9, offset: 15239},
														run: (*parser).callonOrderedListItem223,
														expr: &litMatcher{
															pos:        position{line: 411, col: 9, offset: 15239},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 413, col: 9, offset: 15348},
														run: (*parser).callonOrderedListItem225,
														expr: &litMatcher{
															pos:        position{line: 413, col: 9, offset: 15348},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 415, col: 9, offset: 15455},
														run: (*parser).callonOrderedListItem227,
														expr: &litMatcher{
															pos:        position{line: 415, col: 9, offset: 15455},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 418, col: 9, offset: 15582},
														run: (*parser).callonOrderedListItem229,
														expr: &seqExpr{
															pos: position{line: 418, col: 9, offset: 15582},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 418, col: 9, offset: 15582},
																	expr: &charClassMatcher{
																		pos:        position{line: 418, col: 10, offset: 15583},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 418, col: 18, offset: 15591},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 420, col: 9, offset: 15694},
														run: (*parser).callonOrderedListItem234,
														expr: &seqExpr{
															pos: position{line: 420, col: 9, offset: 15694},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 420, col: 9, offset: 15694},
																	expr: &charClassMatcher{
																		pos:        position{line: 420, col: 10, offset: 15695},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 420, col: 18, offset: 15703},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 422, col: 9, offset: 15809},
														run: (*parser).callonOrderedListItem239,
														expr: &seqExpr{
															pos: position{line: 422, col: 9, offset: 15809},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 422, col: 9, offset: 15809},
																	expr: &charClassMatcher{
																		pos:        position{line: 422, col: 10, offset: 15810},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 422, col: 18, offset: 15818},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 9, offset: 15924},
														run: (*parser).callonOrderedListItem244,
														expr: &seqExpr{
															pos: position{line: 424, col: 9, offset: 15924},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 424, col: 9, offset: 15924},
																	expr: &charClassMatcher{
																		pos:        position{line: 424, col: 10, offset: 15925},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 424, col: 18, offset: 15933},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 426, col: 9, offset: 16039},
														run: (*parser).callonOrderedListItem249,
														expr: &seqExpr{
															pos: position{line: 426, col: 9, offset: 16039},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 426, col: 9, offset: 16039},
																	expr: &charClassMatcher{
																		pos:        position{line: 426, col: 10, offset: 16040},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 426, col: 18, offset: 16048},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 428, col: 8, offset: 16153},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonOrderedListItem257,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 401, col: 82, offset: 14755},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 401, col: 91, offset: 14764},
								name: "OrderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 401, col: 115, offset: 14788},
							expr: &actionExpr{
								pos: position{line: 963, col: 14, offset: 39679},
								run: (*parser).callonOrderedListItem262,
								expr: &seqExpr{
									pos: position{line: 963, col: 14, offset: 39679},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 963, col: 14, offset: 39679},
											expr: &notExpr{
												pos: position{line: 1002, col: 8, offset: 40423},
												expr: &anyMatcher{
													line: 1002, col: 9, offset: 40424,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 963, col: 19, offset: 39684},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonOrderedListItem270,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1004, col: 8, offset: 40434},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1002, col: 8, offset: 40423},
													expr: &anyMatcher{
														line: 1002, col: 9, offset: 40424,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItemContent",
			pos:  position{line: 432, col: 1, offset: 16193},
			expr: &actionExpr{
				pos: position{line: 432, col: 27, offset: 16219},
				run: (*parser).callonOrderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 432, col: 27, offset: 16219},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 432, col: 37, offset: 16229},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 432, col: 37, offset: 16229},
								expr: &ruleRefExpr{
									pos:  position{line: 432, col: 37, offset: 16229},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 432, col: 52, offset: 16244},
								expr: &ruleRefExpr{
									pos:  position{line: 432, col: 52, offset: 16244},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItem",
			pos:  position{line: 439, col: 1, offset: 16571},
			expr: &actionExpr{
				pos: position{line: 439, col: 22, offset: 16592},
				run: (*parser).callonUnorderedListItem1,
				expr: &seqExpr{
					pos: position{line: 439, col: 22, offset: 16592},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 439, col: 22, offset: 16592},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 444, col: 5, offset: 16811},
								run: (*parser).callonUnorderedListItem4,
								expr: &seqExpr{
									pos: position{line: 444, col: 5, offset: 16811},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 444, col: 5, offset: 16811},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonUnorderedListItem9,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 444, col: 9, offset: 16815},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 445, col: 9, offset: 16832},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 445, col: 9, offset: 16832},
														run: (*parser).callonUnorderedListItem13,
														expr: &litMatcher{
															pos:        position{line: 445, col: 9, offset: 16832},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 448, col: 11, offset: 17001},
														run: (*parser).callonUnorderedListItem15,
														expr: &litMatcher{
															pos:        position{line: 448, col: 11, offset: 17001},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 451, col: 11, offset: 17170},
														run: (*parser).callonUnorderedListItem17,
														expr: &litMatcher{
															pos:        position{line: 451, col: 11, offset: 17170},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 454, col: 11, offset: 17339},
														run: (*parser).callonUnorderedListItem19,
														expr: &litMatcher{
															pos:        position{line: 454, col: 11, offset: 17339},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 11, offset: 17505},
														run: (*parser).callonUnorderedListItem21,
														expr: &litMatcher{
															pos:        position{line: 457, col: 11, offset: 17505},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 460, col: 11, offset: 17669},
														run: (*parser).callonUnorderedListItem23,
														expr: &litMatcher{
															pos:        position{line: 460, col: 11, offset: 17669},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 462, col: 12, offset: 17816},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonUnorderedListItem28,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 439, col: 55, offset: 16625},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 439, col: 64, offset: 16634},
								name: "UnorderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 439, col: 90, offset: 16660},
							expr: &actionExpr{
								pos: position{line: 963, col: 14, offset: 39679},
								run: (*parser).callonUnorderedListItem33,
								expr: &seqExpr{
									pos: position{line: 963, col: 14, offset: 39679},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 963, col: 14, offset: 39679},
											expr: &notExpr{
												pos: position{line: 1002, col: 8, offset: 40423},
												expr: &anyMatcher{
													line: 1002, col: 9, offset: 40424,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 963, col: 19, offset: 39684},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonUnorderedListItem41,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1004, col: 8, offset: 40434},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1002, col: 8, offset: 40423},
													expr: &anyMatcher{
														line: 1002, col: 9, offset: 40424,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItemContent",
			pos:  position{line: 466, col: 1, offset: 17865},
			expr: &actionExpr{
				pos: position{line: 466, col: 29, offset: 17893},
				run: (*parser).callonUnorderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 466, col: 29, offset: 17893},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 466, col: 39, offset: 17903},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 466, col: 39, offset: 17903},
								expr: &ruleRefExpr{
									pos:  position{line: 466, col: 39, offset: 17903},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 466, col: 54, offset: 17918},
								expr: &ruleRefExpr{
									pos:  position{line: 466, col: 54, offset: 17918},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItem",
			pos:  position{line: 473, col: 1, offset: 18243},
			expr: &choiceExpr{
				pos: position{line: 474, col: 5, offset: 18267},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 474, col: 5, offset: 18267},
						run: (*parser).callonLabeledListItem2,
						expr: &seqExpr{
							pos: position{line: 474, col: 5, offset: 18267},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 474, col: 5, offset: 18267},
									label: "term",
									expr: &actionExpr{
										pos: position{line: 480, col: 24, offset: 18652},
										run: (*parser).callonLabeledListItem5,
										expr: &zeroOrMoreExpr{
											pos: position{line: 480, col: 24, offset: 18652},
											expr: &seqExpr{
												pos: position{line: 480, col: 25, offset: 18653},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 480, col: 25, offset: 18653},
														expr: &choiceExpr{
															pos: position{line: 1000, col: 12, offset: 40394},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1000, col: 12, offset: 40394},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1000, col: 21, offset: 40403},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 480, col: 34, offset: 18662},
														expr: &litMatcher{
															pos:        position{line: 480, col: 35, offset: 18663},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 480, col: 40, offset: 18668,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 485, col: 30, offset: 18798},
									val:        "::",
									ignoreCase: false,
								},
								&oneOrMoreExpr{
									pos: position{line: 485, col: 35, offset: 18803},
									expr: &choiceExpr{
										pos: position{line: 485, col: 36, offset: 18804},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 996, col: 7, offset: 40332},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 996, col: 13, offset: 40338},
												run: (*parser).callonLabeledListItem19,
												expr: &litMatcher{
													pos:        position{line: 996, col: 13, offset: 40338},
													val:        "\t",
													ignoreCase: false,
												},
											},
											&litMatcher{
												pos:        position{line: 1000, col: 12, offset: 40394},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1000, col: 21, offset: 40403},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 474, col: 57, offset: 18319},
									label: "description",
									expr: &ruleRefExpr{
										pos:  position{line: 474, col: 70, offset: 18332},
										name: "LabeledListItemDescription",
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 476, col: 10, offset: 18455},
						run: (*parser).callonLabeledListItem25,
						expr: &seqExpr{
							pos: position{line: 476, col: 10, offset: 18455},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 476, col: 10, offset: 18455},
									label: "term",
									expr: &actionExpr{
										pos: position{line: 480, col: 24, offset: 18652},
										run: (*parser).callonLabeledListItem28,
										expr: &zeroOrMoreExpr{
											pos: position{line: 480, col: 24, offset: 18652},
											expr: &seqExpr{
												pos: position{line: 480, col: 25, offset: 18653},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 480, col: 25, offset: 18653},
														expr: &choiceExpr{
															pos: position{line: 1000, col: 12, offset: 40394},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1000, col: 12, offset: 40394},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1000, col: 21, offset: 40403},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 480, col: 34, offset: 18662},
														expr: &litMatcher{
															pos:        position{line: 480, col: 35, offset: 18663},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 480, col: 40, offset: 18668,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 476, col: 37, offset: 18482},
									val:        "::",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 476, col: 42, offset: 18487},
									expr: &choiceExpr{
										pos: position{line: 996, col: 7, offset: 40332},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 996, col: 7, offset: 40332},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 996, col: 13, offset: 40338},
												run: (*parser).callonLabeledListItem42,
												expr: &litMatcher{
													pos:        position{line: 996, col: 13, offset: 40338},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1004, col: 8, offset: 40434},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1000, col: 12, offset: 40394},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1000, col: 21, offset: 40403},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1002, col: 8, offset: 40423},
											expr: &anyMatcher{
												line: 1002, col: 9, offset: 40424,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItemDescription",
			pos:  position{line: 487, col: 1, offset: 18820},
			expr: &actionExpr{
				pos: position{line: 487, col: 31, offset: 18850},
				run: (*parser).callonLabeledListItemDescription1,
				expr: &labeledExpr{
					pos:   position{line: 487, col: 31, offset: 18850},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 487, col: 40, offset: 18859},
						expr: &choiceExpr{
							pos: position{line: 487, col: 41, offset: 18860},
							alternatives: []interface{}{
								&ruleRefExpr{
									pos:  position{line: 487, col: 41, offset: 18860},
									name: "ListParagraph",
								},
								&ruleRefExpr{
									pos:  position{line: 487, col: 57, offset: 18876},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Paragraph",
			pos:  position{line: 511, col: 1, offset: 19679},
			expr: &choiceExpr{
				pos: position{line: 513, col: 5, offset: 19726},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 513, col: 5, offset: 19726},
						run: (*parser).callonParagraph2,
						expr: &seqExpr{
							pos: position{line: 513, col: 5, offset: 19726},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 513, col: 5, offset: 19726},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 513, col: 16, offset: 19737},
										expr: &choiceExpr{
											pos: position{line: 521, col: 23, offset: 20215},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 141, col: 24, offset: 5496},
													run: (*parser).callonParagraph7,
													expr: &seqExpr{
														pos: position{line: 141, col: 24, offset: 5496},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 141, col: 24, offset: 5496},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 141, col: 30, offset: 5502},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 203, col: 20, offset: 7402},
																			run: (*parser).callonParagraph11,
																			expr: &seqExpr{
																				pos: position{line: 203, col: 20, offset: 7402},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 203, col: 20, offset: 7402},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 24, offset: 7406},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7912},
																							run: (*parser).callonParagraph15,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7912},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7912},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8648},
																											run: (*parser).callonParagraph18,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8648},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 25, offset: 7923},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 26, offset: 7924},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 26, offset: 7924},
																													expr: &choiceExpr{
																														pos: position{line: 1004, col: 8, offset: 40434},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1000, col: 12, offset: 40394},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1000, col: 21, offset: 40403},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1002, col: 8, offset: 40423},
																																expr: &anyMatcher{
																																	line: 1002, col: 9, offset: 40424,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 31, offset: 7929},
																													expr: &choiceExpr{
																														pos: position{line: 996, col: 7, offset: 40332},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 996, col: 7, offset: 40332},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 996, col: 13, offset: 40338},
																																run: (*parser).callonParagraph31,
																																expr: &litMatcher{
																																	pos:        position{line: 996, col: 13, offset: 40338},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 35, offset: 7933},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 36, offset: 7934},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 40, offset: 7938},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 41, offset: 7939},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 45, offset: 7943},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 46, offset: 7944},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 50, offset: 7948},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 51, offset: 7949},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 55, offset: 7953},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19202},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19202},
																																run: (*parser).callonParagraph43,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19202},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19240},
																																run: (*parser).callonParagraph45,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19240},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19280},
																																run: (*parser).callonParagraph47,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19280},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19330},
																																run: (*parser).callonParagraph49,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19330},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19376},
																																run: (*parser).callonParagraph51,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19376},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 71, offset: 7969,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 203, col: 41, offset: 7423},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph57,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 45, offset: 7427},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 49, offset: 7431},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph61,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 1004, col: 8, offset: 40434},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1002, col: 8, offset: 40423},
																														expr: &anyMatcher{
																															line: 1002, col: 9, offset: 40424,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 70, offset: 7452},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 74, offset: 7456},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 239, col: 15, offset: 8777},
																							run: (*parser).callonParagraph77,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 239, col: 15, offset: 8777},
																								expr: &seqExpr{
																									pos: position{line: 239, col: 16, offset: 8778},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 239, col: 16, offset: 8778},
																											expr: &choiceExpr{
																												pos: position{line: 1004, col: 8, offset: 40434},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1002, col: 8, offset: 40423},
																														expr: &anyMatcher{
																															line: 1002, col: 9, offset: 40424,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 21, offset: 8783},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 22, offset: 8784},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 26, offset: 8788},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 27, offset: 8789},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 239, col: 31, offset: 8793,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 93, offset: 7475},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 207, col: 5, offset: 7618},
																			run: (*parser).callonParagraph92,
																			expr: &seqExpr{
																				pos: position{line: 207, col: 5, offset: 7618},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 207, col: 5, offset: 7618},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 207, col: 9, offset: 7622},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7912},
																							run: (*parser).callonParagraph96,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7912},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7912},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8648},
																											run: (*parser).callonParagraph99,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8648},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 25, offset: 7923},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 26, offset: 7924},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 26, offset: 7924},
																													expr: &choiceExpr{
																														pos: position{line: 1004, col: 8, offset: 40434},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1000, col: 12, offset: 40394},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1000, col: 21, offset: 40403},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1002, col: 8, offset: 40423},
																																expr: &anyMatcher{
																																	line: 1002, col: 9, offset: 40424,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 31, offset: 7929},
																													expr: &choiceExpr{
																														pos: position{line: 996, col: 7, offset: 40332},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 996, col: 7, offset: 40332},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 996, col: 13, offset: 40338},
																																run: (*parser).callonParagraph112,
																																expr: &litMatcher{
																																	pos:        position{line: 996, col: 13, offset: 40338},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 35, offset: 7933},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 36, offset: 7934},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 40, offset: 7938},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 41, offset: 7939},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 45, offset: 7943},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 46, offset: 7944},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 50, offset: 7948},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 51, offset: 7949},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 55, offset: 7953},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19202},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19202},
																																run: (*parser).callonParagraph124,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19202},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19240},
																																run: (*parser).callonParagraph126,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19240},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19280},
																																run: (*parser).callonParagraph128,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19280},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19330},
																																run: (*parser).callonParagraph130,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19330},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19376},
																																run: (*parser).callonParagraph132,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19376},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 71, offset: 7969,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 207, col: 26, offset: 7639},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph138,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 207, col: 30, offset: 7643},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 207, col: 34, offset: 7647},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph142,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 1004, col: 8, offset: 40434},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1002, col: 8, offset: 40423},
																														expr: &anyMatcher{
																															line: 1002, col: 9, offset: 40424,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 207, col: 55, offset: 7668},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 211, col: 5, offset: 7799},
																			run: (*parser).callonParagraph157,
																			expr: &seqExpr{
																				pos: position{line: 211, col: 5, offset: 7799},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 211, col: 5, offset: 7799},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 211, col: 9, offset: 7803},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7912},
																							run: (*parser).callonParagraph161,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7912},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7912},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8648},
																											run: (*parser).callonParagraph164,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8648},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 25, offset: 7923},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 26, offset: 7924},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 26, offset: 7924},
																													expr: &choiceExpr{
																														pos: position{line: 1004, col: 8, offset: 40434},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1000, col: 12, offset: 40394},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1000, col: 21, offset: 40403},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1002, col: 8, offset: 40423},
																																expr: &anyMatcher{
																																	line: 1002, col: 9, offset: 40424,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 31, offset: 7929},
																													expr: &choiceExpr{
																														pos: position{line: 996, col: 7, offset: 40332},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 996, col: 7, offset: 40332},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 996, col: 13, offset: 40338},
																																run: (*parser).callonParagraph177,
																																expr: &litMatcher{
																																	pos:        position{line: 996, col: 13, offset: 40338},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 35, offset: 7933},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 36, offset: 7934},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 40, offset: 7938},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 41, offset: 7939},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 45, offset: 7943},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 46, offset: 7944},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 50, offset: 7948},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 51, offset: 7949},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 55, offset: 7953},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19202},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19202},
																																run: (*parser).callonParagraph189,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19202},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19240},
																																run: (*parser).callonParagraph191,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19240},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19280},
																																run: (*parser).callonParagraph193,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19280},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19330},
																																run: (*parser).callonParagraph195,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19330},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19376},
																																run: (*parser).callonParagraph197,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19376},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 71, offset: 7969,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 211, col: 26, offset: 7820},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph203,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 211, col: 30, offset: 7824},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 219, col: 20, offset: 8138},
																			run: (*parser).callonParagraph206,
																			expr: &seqExpr{
																				pos: position{line: 219, col: 20, offset: 8138},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 219, col: 20, offset: 8138},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 24, offset: 8142},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonParagraph210,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 219, col: 41, offset: 8159},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph215,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 45, offset: 8163},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 49, offset: 8167},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph219,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 1004, col: 8, offset: 40434},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1002, col: 8, offset: 40423},
																														expr: &anyMatcher{
																															line: 1002, col: 9, offset: 40424,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 70, offset: 8188},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 74, offset: 8192},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 239, col: 15, offset: 8777},
																							run: (*parser).callonParagraph235,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 239, col: 15, offset: 8777},
																								expr: &seqExpr{
																									pos: position{line: 239, col: 16, offset: 8778},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 239, col: 16, offset: 8778},
																											expr: &choiceExpr{
																												pos: position{line: 1004, col: 8, offset: 40434},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1002, col: 8, offset: 40423},
																														expr: &anyMatcher{
																															line: 1002, col: 9, offset: 40424,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 21, offset: 8783},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 22, offset: 8784},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 26, offset: 8788},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 27, offset: 8789},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 239, col: 31, offset: 8793,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 93, offset: 8211},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 223, col: 5, offset: 8354},
																			run: (*parser).callonParagraph250,
																			expr: &seqExpr{
																				pos: position{line: 223, col: 5, offset: 8354},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 223, col: 5, offset: 8354},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 223, col: 9, offset: 8358},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonParagraph254,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 223, col: 26, offset: 8375},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph259,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 223, col: 30, offset: 8379},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 223, col: 34, offset: 8383},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph263,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 1004, col: 8, offset: 40434},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1002, col: 8, offset: 40423},
																														expr: &anyMatcher{
																															line: 1002, col: 9, offset: 40424,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 223, col: 55, offset: 8404},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 227, col: 5, offset: 8535},
																			run: (*parser).callonParagraph278,
																			expr: &seqExpr{
																				pos: position{line: 227, col: 5, offset: 8535},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 227, col: 5, offset: 8535},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 227, col: 9, offset: 8539},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonParagraph282,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 227, col: 26, offset: 8556},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph287,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 227, col: 30, offset: 8560},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 141, col: 65, offset: 5537},
																expr: &choiceExpr{
																	pos: position{line: 996, col: 7, offset: 40332},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 996, col: 7, offset: 40332},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 996, col: 13, offset: 40338},
																			run: (*parser).callonParagraph293,
																			expr: &litMatcher{
																				pos:        position{line: 996, col: 13, offset: 40338},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 1004, col: 8, offset: 40434},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1000, col: 12, offset: 40394},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1000, col: 21, offset: 40403},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 1002, col: 8, offset: 40423},
																		expr: &anyMatcher{
																			line: 1002, col: 9, offset: 40424,
																		},
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 136, col: 21, offset: 5188},
													run: (*parser).callonParagraph300,
													expr: &seqExpr{
														pos: position{line: 136, col: 21, offset: 5188},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 136, col: 21, offset: 5188},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 136, col: 27, offset: 5194},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 145, col: 14, offset: 5645},
																			run: (*parser).callonParagraph304,
																			expr: &labeledExpr{
																				pos:   position{line: 145, col: 14, offset: 5645},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 151, col: 20, offset: 5775},
																					run: (*parser).callonParagraph306,
																					expr: &seqExpr{
																						pos: position{line: 151, col: 20, offset: 5775},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 151, col: 20, offset: 5775},
																								val:        "[[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 151, col: 25, offset: 5780},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 982, col: 7, offset: 40050},
																									run: (*parser).callonParagraph310,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 982, col: 7, offset: 40050},
																										expr: &seqExpr{
																											pos: position{line: 982, col: 8, offset: 40051},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 982, col: 8, offset: 40051},
																													expr: &choiceExpr{
																														pos: position{line: 1000, col: 12, offset: 40394},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1000, col: 12, offset: 40394},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1000, col: 21, offset: 40403},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 17, offset: 40060},
																													expr: &choiceExpr{
																														pos: position{line: 996, col: 7, offset: 40332},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 996, col: 7, offset: 40332},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 996, col: 13, offset: 40338},
																																run: (*parser).callonParagraph320,
																																expr: &litMatcher{
																																	pos:        position{line: 996, col: 13, offset: 40338},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 21, offset: 40064},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 22, offset: 40065},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 26, offset: 40069},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 27, offset: 40070},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 31, offset: 40074},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 32, offset: 40075},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 37, offset: 40080},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 38, offset: 40081},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 43, offset: 40086},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 44, offset: 40087},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 982, col: 48, offset: 40091,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 151, col: 33, offset: 5788},
																								val:        "]]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 147, col: 5, offset: 5691},
																			run: (*parser).callonParagraph334,
																			expr: &seqExpr{
																				pos: position{line: 147, col: 5, offset: 5691},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 147, col: 5, offset: 5691},
																						val:        "[#",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 147, col: 10, offset: 5696},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 982, col: 7, offset: 40050},
																							run: (*parser).callonParagraph338,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 982, col: 7, offset: 40050},
																								expr: &seqExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 982, col: 8, offset: 40051},
																											expr: &choiceExpr{
																												pos: position{line: 1000, col: 12, offset: 40394},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 17, offset: 40060},
																											expr: &choiceExpr{
																												pos: position{line: 996, col: 7, offset: 40332},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 996, col: 7, offset: 40332},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 996, col: 13, offset: 40338},
																														run: (*parser).callonParagraph348,
																														expr: &litMatcher{
																															pos:        position{line: 996, col: 13, offset: 40338},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 21, offset: 40064},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 22, offset: 40065},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 26, offset: 40069},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 27, offset: 40070},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 31, offset: 40074},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 32, offset: 40075},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 37, offset: 40080},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 38, offset: 40081},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 43, offset: 40086},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 44, offset: 40087},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 982, col: 48, offset: 40091,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 147, col: 18, offset: 5704},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 157, col: 17, offset: 5997},
																			run: (*parser).callonParagraph362,
																			expr: &seqExpr{
																				pos: position{line: 157, col: 17, offset: 5997},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 157, col: 17, offset: 5997},
																						val:        ".",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 157, col: 21, offset: 6001},
																						expr: &litMatcher{
																							pos:        position{line: 157, col: 22, offset: 6002},
																							val:        ".",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 157, col: 26, offset: 6006},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph370,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 157, col: 30, offset: 6010},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 161, col: 24, offset: 6115},
																							run: (*parser).callonParagraph373,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 161, col: 24, offset: 6115},
																								expr: &seqExpr{
																									pos: position{line: 161, col: 25, offset: 6116},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 161, col: 25, offset: 6116},
																											expr: &choiceExpr{
																												pos: position{line: 1000, col: 12, offset: 40394},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 161, col: 34, offset: 6125,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 167, col: 16, offset: 6274},
																			run: (*parser).callonParagraph381,
																			expr: &seqExpr{
																				pos: position{line: 167, col: 16, offset: 6274},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 167, col: 16, offset: 6274},
																						val:        "[.",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 167, col: 21, offset: 6279},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph387,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 167, col: 25, offset: 6283},
																						label: "role",
																						expr: &actionExpr{
																							pos: position{line: 171, col: 23, offset: 6387},
																							run: (*parser).callonParagraph390,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 171, col: 23, offset: 6387},
																								expr: &seqExpr{
																									pos: position{line: 171, col: 24, offset: 6388},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 171, col: 24, offset: 6388},
																											expr: &choiceExpr{
																												pos: position{line: 1000, col: 12, offset: 40394},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 171, col: 33, offset: 6397},
																											expr: &litMatcher{
																												pos:        position{line: 171, col: 34, offset: 6398},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 171, col: 38, offset: 6402,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 167, col: 51, offset: 6309},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 176, col: 30, offset: 6551},
																			run: (*parser).callonParagraph401,
																			expr: &seqExpr{
																				pos: position{line: 176, col: 30, offset: 6551},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 176, col: 30, offset: 6551},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 176, col: 34, offset: 6555},
																						label: "k",
																						expr: &choiceExpr{
																							pos: position{line: 494, col: 19, offset: 19202},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 494, col: 19, offset: 19202},
																									run: (*parser).callonParagraph406,
																									expr: &litMatcher{
																										pos:        position{line: 494, col: 19, offset: 19202},
																										val:        "TIP",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 496, col: 5, offset: 19240},
																									run: (*parser).callonParagraph408,
																									expr: &litMatcher{
																										pos:        position{line: 496, col: 5, offset: 19240},
																										val:        "NOTE",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 498, col: 5, offset: 19280},
																									run: (*parser).callonParagraph410,
																									expr: &litMatcher{
																										pos:        position{line: 498, col: 5, offset: 19280},
																										val:        "IMPORTANT",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 500, col: 5, offset: 19330},
																									run: (*parser).callonParagraph412,
																									expr: &litMatcher{
																										pos:        position{line: 500, col: 5, offset: 19330},
																										val:        "WARNING",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 502, col: 5, offset: 19376},
																									run: (*parser).callonParagraph414,
																									expr: &litMatcher{
																										pos:        position{line: 502, col: 5, offset: 19376},
																										val:        "CAUTION",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 176, col: 53, offset: 6574},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 199, col: 21, offset: 7299},
																			run: (*parser).callonParagraph417,
																			expr: &litMatcher{
																				pos:        position{line: 199, col: 21, offset: 7299},
																				val:        "[horizontal]",
																				ignoreCase: false,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 181, col: 19, offset: 6735},
																			run: (*parser).callonParagraph419,
																			expr: &seqExpr{
																				pos: position{line: 181, col: 19, offset: 6735},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 181, col: 19, offset: 6735},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 181, col: 23, offset: 6739},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph425,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 181, col: 27, offset: 6743},
																						label: "attributes",
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 181, col: 38, offset: 6754},
																							expr: &choiceExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										run: (*parser).callonParagraph430,
																										expr: &seqExpr{
																											pos: position{line: 185, col: 21, offset: 6867},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 185, col: 21, offset: 6867},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														run: (*parser).callonParagraph433,
																														expr: &seqExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 14, offset: 8648},
																																		run: (*parser).callonParagraph436,
																																		expr: &litMatcher{
																																			pos:        position{line: 231, col: 14, offset: 8648},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 191, col: 28, offset: 7138},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 191, col: 32, offset: 7142},
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 33, offset: 7143},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 34, offset: 7144},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 38, offset: 7148},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 39, offset: 7149},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 43, offset: 7153},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 44, offset: 7154},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 191, col: 48, offset: 7158,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&litMatcher{
																													pos:        position{line: 185, col: 40, offset: 6886},
																													val:        "=",
																													ignoreCase: false,
																												},
																												&labeledExpr{
																													pos:   position{line: 185, col: 44, offset: 6890},
																													label: "value",
																													expr: &actionExpr{
																														pos: position{line: 195, col: 19, offset: 7217},
																														run: (*parser).callonParagraph450,
																														expr: &labeledExpr{
																															pos:   position{line: 195, col: 19, offset: 7217},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 195, col: 25, offset: 7223},
																																expr: &seqExpr{
																																	pos: position{line: 195, col: 26, offset: 7224},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 195, col: 26, offset: 7224},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 27, offset: 7225},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 195, col: 31, offset: 7229},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 32, offset: 7230},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 195, col: 36, offset: 7234},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 37, offset: 7235},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 195, col: 41, offset: 7239,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 185, col: 67, offset: 6913},
																													expr: &litMatcher{
																														pos:        position{line: 185, col: 67, offset: 6913},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 185, col: 72, offset: 6918},
																													expr: &choiceExpr{
																														pos: position{line: 996, col: 7, offset: 40332},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 996, col: 7, offset: 40332},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 996, col: 13, offset: 40338},
																																run: (*parser).callonParagraph466,
																																expr: &litMatcher{
																																	pos:        position{line: 996, col: 13, offset: 40338},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										run: (*parser).callonParagraph468,
																										expr: &seqExpr{
																											pos: position{line: 187, col: 5, offset: 7002},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 187, col: 5, offset: 7002},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														run: (*parser).callonParagraph471,
																														expr: &seqExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 14, offset: 8648},
																																		run: (*parser).callonParagraph474,
																																		expr: &litMatcher{
																																			pos:        position{line: 231, col: 14, offset: 8648},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 191, col: 28, offset: 7138},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 191, col: 32, offset: 7142},
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 33, offset: 7143},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 34, offset: 7144},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 38, offset: 7148},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 39, offset: 7149},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 43, offset: 7153},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 44, offset: 7154},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 191, col: 48, offset: 7158,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 187, col: 24, offset: 7021},
																													expr: &litMatcher{
																														pos:        position{line: 187, col: 24, offset: 7021},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 187, col: 29, offset: 7026},
																													expr: &choiceExpr{
																														pos: position{line: 996, col: 7, offset: 40332},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 996, col: 7, offset: 40332},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 996, col: 13, offset: 40338},
																																run: (*parser).callonParagraph491,
																																expr: &litMatcher{
																																	pos:        position{line: 996, col: 13, offset: 40338},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 181, col: 59, offset: 6775},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 136, col: 131, offset: 5298},
																expr: &choiceExpr{
																	pos: position{line: 996, col: 7, offset: 40332},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 996, col: 7, offset: 40332},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 996, col: 13, offset: 40338},
																			run: (*parser).callonParagraph497,
																			expr: &litMatcher{
																				pos:        position{line: 996, col: 13, offset: 40338},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 1004, col: 8, offset: 40434},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1000, col: 12, offset: 40394},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1000, col: 21, offset: 40403},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 1002, col: 8, offset: 40423},
																		expr: &anyMatcher{
																			line: 1002, col: 9, offset: 40424,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 513, col: 38, offset: 19759},
									expr: &seqExpr{
										pos: position{line: 513, col: 40, offset: 19761},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 513, col: 40, offset: 19761},
												expr: &litMatcher{
													pos:        position{line: 513, col: 40, offset: 19761},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 513, col: 45, offset: 19766},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonParagraph511,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 513, col: 49, offset: 19770},
												expr: &choiceExpr{
													pos: position{line: 1000, col: 12, offset: 40394},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 513, col: 59, offset: 19780},
									label: "t",
									expr: &choiceExpr{
										pos: position{line: 494, col: 19, offset: 19202},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 494, col: 19, offset: 19202},
												run: (*parser).callonParagraph519,
												expr: &litMatcher{
													pos:        position{line: 494, col: 19, offset: 19202},
													val:        "TIP",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 496, col: 5, offset: 19240},
												run: (*parser).callonParagraph521,
												expr: &litMatcher{
													pos:        position{line: 496, col: 5, offset: 19240},
													val:        "NOTE",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 498, col: 5, offset: 19280},
												run: (*parser).callonParagraph523,
												expr: &litMatcher{
													pos:        position{line: 498, col: 5, offset: 19280},
													val:        "IMPORTANT",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 500, col: 5, offset: 19330},
												run: (*parser).callonParagraph525,
												expr: &litMatcher{
													pos:        position{line: 500, col: 5, offset: 19330},
													val:        "WARNING",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 502, col: 5, offset: 19376},
												run: (*parser).callonParagraph527,
												expr: &litMatcher{
													pos:        position{line: 502, col: 5, offset: 19376},
													val:        "CAUTION",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 513, col: 78, offset: 19799},
									val:        ": ",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 513, col: 83, offset: 19804},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 513, col: 89, offset: 19810},
										expr: &ruleRefExpr{
											pos:  position{line: 513, col: 90, offset: 19811},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 517, col: 5, offset: 20019},
						run: (*parser).callonParagraph533,
						expr: &seqExpr{
							pos: position{line: 517, col: 5, offset: 20019},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 517, col: 5, offset: 20019},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 517, col: 16, offset: 20030},
										expr: &choiceExpr{
											pos: position{line: 521, col: 23, offset: 20215},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 141, col: 24, offset: 5496},
													run: (*parser).callonParagraph538,
													expr: &seqExpr{
														pos: position{line: 141, col: 24, offset: 5496},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 141, col: 24, offset: 5496},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 141, col: 30, offset: 5502},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 203, col: 20, offset: 7402},
																			run: (*parser).callonParagraph542,
																			expr: &seqExpr{
																				pos: position{line: 203, col: 20, offset: 7402},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 203, col: 20, offset: 7402},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 24, offset: 7406},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7912},
																							run: (*parser).callonParagraph546,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7912},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7912},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8648},
																											run: (*parser).callonParagraph549,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8648},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 25, offset: 7923},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 26, offset: 7924},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 26, offset: 7924},
																													expr: &choiceExpr{
																														pos: position{line: 1004, col: 8, offset: 40434},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1000, col: 12, offset: 40394},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1000, col: 21, offset: 40403},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1002, col: 8, offset: 40423},
																																expr: &anyMatcher{
																																	line: 1002, col: 9, offset: 40424,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 31, offset: 7929},
																													expr: &choiceExpr{
																														pos: position{line: 996, col: 7, offset: 40332},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 996, col: 7, offset: 40332},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 996, col: 13, offset: 40338},
																																run: (*parser).callonParagraph562,
																																expr: &litMatcher{
																																	pos:        position{line: 996, col: 13, offset: 40338},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 35, offset: 7933},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 36, offset: 7934},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 40, offset: 7938},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 41, offset: 7939},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 45, offset: 7943},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 46, offset: 7944},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 50, offset: 7948},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 51, offset: 7949},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 55, offset: 7953},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19202},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19202},
																																run: (*parser).callonParagraph574,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19202},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19240},
																																run: (*parser).callonParagraph576,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19240},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19280},
																																run: (*parser).callonParagraph578,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19280},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19330},
																																run: (*parser).callonParagraph580,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19330},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19376},
																																run: (*parser).callonParagraph582,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19376},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 71, offset: 7969,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 203, col: 41, offset: 7423},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph588,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 45, offset: 7427},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 49, offset: 7431},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph592,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 1004, col: 8, offset: 40434},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1002, col: 8, offset: 40423},
																														expr: &anyMatcher{
																															line: 1002, col: 9, offset: 40424,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 70, offset: 7452},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 74, offset: 7456},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 239, col: 15, offset: 8777},
																							run: (*parser).callonParagraph608,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 239, col: 15, offset: 8777},
																								expr: &seqExpr{
																									pos: position{line: 239, col: 16, offset: 8778},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 239, col: 16, offset: 8778},
																											expr: &choiceExpr{
																												pos: position{line: 1004, col: 8, offset: 40434},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1002, col: 8, offset: 40423},
																														expr: &anyMatcher{
																															line: 1002, col: 9, offset: 40424,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 21, offset: 8783},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 22, offset: 8784},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 26, offset: 8788},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 27, offset: 8789},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 239, col: 31, offset: 8793,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 93, offset: 7475},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 207, col: 5, offset: 7618},
																			run: (*parser).callonParagraph623,
																			expr: &seqExpr{
																				pos: position{line: 207, col: 5, offset: 7618},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 207, col: 5, offset: 7618},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 207, col: 9, offset: 7622},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7912},
																							run: (*parser).callonParagraph627,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7912},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7912},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8648},
																											run: (*parser).callonParagraph630,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8648},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 25, offset: 7923},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 26, offset: 7924},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 26, offset: 7924},
																													expr: &choiceExpr{
																														pos: position{line: 1004, col: 8, offset: 40434},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1000, col: 12, offset: 40394},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1000, col: 21, offset: 40403},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1002, col: 8, offset: 40423},
																																expr: &anyMatcher{
																																	line: 1002, col: 9, offset: 40424,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 31, offset: 7929},
																													expr: &choiceExpr{
																														pos: position{line: 996, col: 7, offset: 40332},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 996, col: 7, offset: 40332},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 996, col: 13, offset: 40338},
																																run: (*parser).callonParagraph643,
																																expr: &litMatcher{
																																	pos:        position{line: 996, col: 13, offset: 40338},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 35, offset: 7933},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 36, offset: 7934},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 40, offset: 7938},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 41, offset: 7939},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 45, offset: 7943},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 46, offset: 7944},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 50, offset: 7948},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 51, offset: 7949},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 55, offset: 7953},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19202},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19202},
																																run: (*parser).callonParagraph655,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19202},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19240},
																																run: (*parser).callonParagraph657,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19240},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19280},
																																run: (*parser).callonParagraph659,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19280},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19330},
																																run: (*parser).callonParagraph661,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19330},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19376},
																																run: (*parser).callonParagraph663,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19376},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 71, offset: 7969,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 207, col: 26, offset: 7639},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph669,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 207, col: 30, offset: 7643},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 207, col: 34, offset: 7647},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph673,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 1004, col: 8, offset: 40434},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1002, col: 8, offset: 40423},
																														expr: &anyMatcher{
																															line: 1002, col: 9, offset: 40424,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 207, col: 55, offset: 7668},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 211, col: 5, offset: 7799},
																			run: (*parser).callonParagraph688,
																			expr: &seqExpr{
																				pos: position{line: 211, col: 5, offset: 7799},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 211, col: 5, offset: 7799},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 211, col: 9, offset: 7803},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7912},
																							run: (*parser).callonParagraph692,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7912},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7912},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8648},
																											run: (*parser).callonParagraph695,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8648},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 25, offset: 7923},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 26, offset: 7924},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 26, offset: 7924},
																													expr: &choiceExpr{
																														pos: position{line: 1004, col: 8, offset: 40434},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1000, col: 12, offset: 40394},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1000, col: 21, offset: 40403},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1002, col: 8, offset: 40423},
																																expr: &anyMatcher{
																																	line: 1002, col: 9, offset: 40424,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 31, offset: 7929},
																													expr: &choiceExpr{
																														pos: position{line: 996, col: 7, offset: 40332},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 996, col: 7, offset: 40332},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 996, col: 13, offset: 40338},
																																run: (*parser).callonParagraph708,
																																expr: &litMatcher{
																																	pos:        position{line: 996, col: 13, offset: 40338},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 35, offset: 7933},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 36, offset: 7934},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 40, offset: 7938},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 41, offset: 7939},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 45, offset: 7943},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 46, offset: 7944},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 50, offset: 7948},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 51, offset: 7949},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 55, offset: 7953},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19202},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19202},
																																run: (*parser).callonParagraph720,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19202},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19240},
																																run: (*parser).callonParagraph722,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19240},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19280},
																																run: (*parser).callonParagraph724,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19280},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19330},
																																run: (*parser).callonParagraph726,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19330},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19376},
																																run: (*parser).callonParagraph728,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19376},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 71, offset: 7969,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 211, col: 26, offset: 7820},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph734,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 211, col: 30, offset: 7824},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 219, col: 20, offset: 8138},
																			run: (*parser).callonParagraph737,
																			expr: &seqExpr{
																				pos: position{line: 219, col: 20, offset: 8138},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 219, col: 20, offset: 8138},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 24, offset: 8142},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonParagraph741,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 219, col: 41, offset: 8159},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph746,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 45, offset: 8163},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 49, offset: 8167},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph750,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 1004, col: 8, offset: 40434},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1002, col: 8, offset: 40423},
																														expr: &anyMatcher{
																															line: 1002, col: 9, offset: 40424,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 70, offset: 8188},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 74, offset: 8192},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 239, col: 15, offset: 8777},
																							run: (*parser).callonParagraph766,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 239, col: 15, offset: 8777},
																								expr: &seqExpr{
																									pos: position{line: 239, col: 16, offset: 8778},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 239, col: 16, offset: 8778},
																											expr: &choiceExpr{
																												pos: position{line: 1004, col: 8, offset: 40434},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1002, col: 8, offset: 40423},
																														expr: &anyMatcher{
																															line: 1002, col: 9, offset: 40424,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 21, offset: 8783},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 22, offset: 8784},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 26, offset: 8788},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 27, offset: 8789},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 239, col: 31, offset: 8793,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 93, offset: 8211},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 223, col: 5, offset: 8354},
																			run: (*parser).callonParagraph781,
																			expr: &seqExpr{
																				pos: position{line: 223, col: 5, offset: 8354},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 223, col: 5, offset: 8354},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 223, col: 9, offset: 8358},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonParagraph785,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 223, col: 26, offset: 8375},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph790,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 223, col: 30, offset: 8379},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 223, col: 34, offset: 8383},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph794,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 1004, col: 8, offset: 40434},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1002, col: 8, offset: 40423},
																														expr: &anyMatcher{
																															line: 1002, col: 9, offset: 40424,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 223, col: 55, offset: 8404},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 227, col: 5, offset: 8535},
																			run: (*parser).callonParagraph809,
																			expr: &seqExpr{
																				pos: position{line: 227, col: 5, offset: 8535},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 227, col: 5, offset: 8535},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 227, col: 9, offset: 8539},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonParagraph813,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 227, col: 26, offset: 8556},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph818,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 227, col: 30, offset: 8560},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 141, col: 65, offset: 5537},
																expr: &choiceExpr{
																	pos: position{line: 996, col: 7, offset: 40332},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 996, col: 7, offset: 40332},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 996, col: 13, offset: 40338},
																			run: (*parser).callonParagraph824,
																			expr: &litMatcher{
																				pos:        position{line: 996, col: 13, offset: 40338},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 1004, col: 8, offset: 40434},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1000, col: 12, offset: 40394},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1000, col: 21, offset: 40403},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 1002, col: 8, offset: 40423},
																		expr: &anyMatcher{
																			line: 1002, col: 9, offset: 40424,
																		},
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 136, col: 21, offset: 5188},
													run: (*parser).callonParagraph831,
													expr: &seqExpr{
														pos: position{line: 136, col: 21, offset: 5188},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 136, col: 21, offset: 5188},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 136, col: 27, offset: 5194},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 145, col: 14, offset: 5645},
																			run: (*parser).callonParagraph835,
																			expr: &labeledExpr{
																				pos:   position{line: 145, col: 14, offset: 5645},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 151, col: 20, offset: 5775},
																					run: (*parser).callonParagraph837,
																					expr: &seqExpr{
																						pos: position{line: 151, col: 20, offset: 5775},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 151, col: 20, offset: 5775},
																								val:        "[[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 151, col: 25, offset: 5780},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 982, col: 7, offset: 40050},
																									run: (*parser).callonParagraph841,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 982, col: 7, offset: 40050},
																										expr: &seqExpr{
																											pos: position{line: 982, col: 8, offset: 40051},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 982, col: 8, offset: 40051},
																													expr: &choiceExpr{
																														pos: position{line: 1000, col: 12, offset: 40394},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1000, col: 12, offset: 40394},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1000, col: 21, offset: 40403},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 17, offset: 40060},
																													expr: &choiceExpr{
																														pos: position{line: 996, col: 7, offset: 40332},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 996, col: 7, offset: 40332},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 996, col: 13, offset: 40338},
																																run: (*parser).callonParagraph851,
																																expr: &litMatcher{
																																	pos:        position{line: 996, col: 13, offset: 40338},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 21, offset: 40064},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 22, offset: 40065},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 26, offset: 40069},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 27, offset: 40070},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 31, offset: 40074},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 32, offset: 40075},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 37, offset: 40080},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 38, offset: 40081},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 982, col: 43, offset: 40086},
																													expr: &litMatcher{
																														pos:        position{line: 982, col: 44, offset: 40087},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 982, col: 48, offset: 40091,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 151, col: 33, offset: 5788},
																								val:        "]]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 147, col: 5, offset: 5691},
																			run: (*parser).callonParagraph865,
																			expr: &seqExpr{
																				pos: position{line: 147, col: 5, offset: 5691},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 147, col: 5, offset: 5691},
																						val:        "[#",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 147, col: 10, offset: 5696},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 982, col: 7, offset: 40050},
																							run: (*parser).callonParagraph869,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 982, col: 7, offset: 40050},
																								expr: &seqExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 982, col: 8, offset: 40051},
																											expr: &choiceExpr{
																												pos: position{line: 1000, col: 12, offset: 40394},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 17, offset: 40060},
																											expr: &choiceExpr{
																												pos: position{line: 996, col: 7, offset: 40332},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 996, col: 7, offset: 40332},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 996, col: 13, offset: 40338},
																														run: (*parser).callonParagraph879,
																														expr: &litMatcher{
																															pos:        position{line: 996, col: 13, offset: 40338},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 21, offset: 40064},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 22, offset: 40065},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 26, offset: 40069},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 27, offset: 40070},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 31, offset: 40074},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 32, offset: 40075},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 37, offset: 40080},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 38, offset: 40081},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 43, offset: 40086},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 44, offset: 40087},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 982, col: 48, offset: 40091,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 147, col: 18, offset: 5704},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 157, col: 17, offset: 5997},
																			run: (*parser).callonParagraph893,
																			expr: &seqExpr{
																				pos: position{line: 157, col: 17, offset: 5997},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 157, col: 17, offset: 5997},
																						val:        ".",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 157, col: 21, offset: 6001},
																						expr: &litMatcher{
																							pos:        position{line: 157, col: 22, offset: 6002},
																							val:        ".",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 157, col: 26, offset: 6006},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph901,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 157, col: 30, offset: 6010},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 161, col: 24, offset: 6115},
																							run: (*parser).callonParagraph904,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 161, col: 24, offset: 6115},
																								expr: &seqExpr{
																									pos: position{line: 161, col: 25, offset: 6116},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 161, col: 25, offset: 6116},
																											expr: &choiceExpr{
																												pos: position{line: 1000, col: 12, offset: 40394},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 161, col: 34, offset: 6125,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 167, col: 16, offset: 6274},
																			run: (*parser).callonParagraph912,
																			expr: &seqExpr{
																				pos: position{line: 167, col: 16, offset: 6274},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 167, col: 16, offset: 6274},
																						val:        "[.",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 167, col: 21, offset: 6279},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph918,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 167, col: 25, offset: 6283},
																						label: "role",
																						expr: &actionExpr{
																							pos: position{line: 171, col: 23, offset: 6387},
																							run: (*parser).callonParagraph921,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 171, col: 23, offset: 6387},
																								expr: &seqExpr{
																									pos: position{line: 171, col: 24, offset: 6388},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 171, col: 24, offset: 6388},
																											expr: &choiceExpr{
																												pos: position{line: 1000, col: 12, offset: 40394},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 171, col: 33, offset: 6397},
																											expr: &litMatcher{
																												pos:        position{line: 171, col: 34, offset: 6398},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 171, col: 38, offset: 6402,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 167, col: 51, offset: 6309},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 176, col: 30, offset: 6551},
																			run: (*parser).callonParagraph932,
																			expr: &seqExpr{
																				pos: position{line: 176, col: 30, offset: 6551},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 176, col: 30, offset: 6551},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 176, col: 34, offset: 6555},
																						label: "k",
																						expr: &choiceExpr{
																							pos: position{line: 494, col: 19, offset: 19202},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 494, col: 19, offset: 19202},
																									run: (*parser).callonParagraph937,
																									expr: &litMatcher{
																										pos:        position{line: 494, col: 19, offset: 19202},
																										val:        "TIP",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 496, col: 5, offset: 19240},
																									run: (*parser).callonParagraph939,
																									expr: &litMatcher{
																										pos:        position{line: 496, col: 5, offset: 19240},
																										val:        "NOTE",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 498, col: 5, offset: 19280},
																									run: (*parser).callonParagraph941,
																									expr: &litMatcher{
																										pos:        position{line: 498, col: 5, offset: 19280},
																										val:        "IMPORTANT",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 500, col: 5, offset: 19330},
																									run: (*parser).callonParagraph943,
																									expr: &litMatcher{
																										pos:        position{line: 500, col: 5, offset: 19330},
																										val:        "WARNING",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 502, col: 5, offset: 19376},
																									run: (*parser).callonParagraph945,
																									expr: &litMatcher{
																										pos:        position{line: 502, col: 5, offset: 19376},
																										val:        "CAUTION",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 176, col: 53, offset: 6574},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 199, col: 21, offset: 7299},
																			run: (*parser).callonParagraph948,
																			expr: &litMatcher{
																				pos:        position{line: 199, col: 21, offset: 7299},
																				val:        "[horizontal]",
																				ignoreCase: false,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 181, col: 19, offset: 6735},
																			run: (*parser).callonParagraph950,
																			expr: &seqExpr{
																				pos: position{line: 181, col: 19, offset: 6735},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 181, col: 19, offset: 6735},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 181, col: 23, offset: 6739},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonParagraph956,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 181, col: 27, offset: 6743},
																						label: "attributes",
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 181, col: 38, offset: 6754},
																							expr: &choiceExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										run: (*parser).callonParagraph961,
																										expr: &seqExpr{
																											pos: position{line: 185, col: 21, offset: 6867},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 185, col: 21, offset: 6867},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														run: (*parser).callonParagraph964,
																														expr: &seqExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 14, offset: 8648},
																																		run: (*parser).callonParagraph967,
																																		expr: &litMatcher{
																																			pos:        position{line: 231, col: 14, offset: 8648},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 191, col: 28, offset: 7138},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 191, col: 32, offset: 7142},
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 33, offset: 7143},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 34, offset: 7144},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 38, offset: 7148},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 39, offset: 7149},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 43, offset: 7153},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 44, offset: 7154},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 191, col: 48, offset: 7158,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&litMatcher{
																													pos:        position{line: 185, col: 40, offset: 6886},
																													val:        "=",
																													ignoreCase: false,
																												},
																												&labeledExpr{
																													pos:   position{line: 185, col: 44, offset: 6890},
																													label: "value",
																													expr: &actionExpr{
																														pos: position{line: 195, col: 19, offset: 7217},
																														run: (*parser).callonParagraph981,
																														expr: &labeledExpr{
																															pos:   position{line: 195, col: 19, offset: 7217},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 195, col: 25, offset: 7223},
																																expr: &seqExpr{
																																	pos: position{line: 195, col: 26, offset: 7224},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 195, col: 26, offset: 7224},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 27, offset: 7225},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 195, col: 31, offset: 7229},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 32, offset: 7230},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 195, col: 36, offset: 7234},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 37, offset: 7235},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 195, col: 41, offset: 7239,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 185, col: 67, offset: 6913},
																													expr: &litMatcher{
																														pos:        position{line: 185, col: 67, offset: 6913},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 185, col: 72, offset: 6918},
																													expr: &choiceExpr{
																														pos: position{line: 996, col: 7, offset: 40332},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 996, col: 7, offset: 40332},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 996, col: 13, offset: 40338},
																																run: (*parser).callonParagraph997,
																																expr: &litMatcher{
																																	pos:        position{line: 996, col: 13, offset: 40338},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										run: (*parser).callonParagraph999,
																										expr: &seqExpr{
																											pos: position{line: 187, col: 5, offset: 7002},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 187, col: 5, offset: 7002},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														run: (*parser).callonParagraph1002,
																														expr: &seqExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 14, offset: 8648},
																																		run: (*parser).callonParagraph1005,
																																		expr: &litMatcher{
																																			pos:        position{line: 231, col: 14, offset: 8648},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 191, col: 28, offset: 7138},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 191, col: 32, offset: 7142},
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 33, offset: 7143},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 34, offset: 7144},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 38, offset: 7148},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 39, offset: 7149},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 43, offset: 7153},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 44, offset: 7154},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 191, col: 48, offset: 7158,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 187, col: 24, offset: 7021},
																													expr: &litMatcher{
																														pos:        position{line: 187, col: 24, offset: 7021},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 187, col: 29, offset: 7026},
																													expr: &choiceExpr{
																														pos: position{line: 996, col: 7, offset: 40332},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 996, col: 7, offset: 40332},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 996, col: 13, offset: 40338},
																																run: (*parser).callonParagraph1022,
																																expr: &litMatcher{
																																	pos:        position{line: 996, col: 13, offset: 40338},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 181, col: 59, offset: 6775},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 136, col: 131, offset: 5298},
																expr: &choiceExpr{
																	pos: position{line: 996, col: 7, offset: 40332},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 996, col: 7, offset: 40332},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 996, col: 13, offset: 40338},
																			run: (*parser).callonParagraph1028,
																			expr: &litMatcher{
																				pos:        position{line: 996, col: 13, offset: 40338},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 1004, col: 8, offset: 40434},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1000, col: 12, offset: 40394},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1000, col: 21, offset: 40403},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 1002, col: 8, offset: 40423},
																		expr: &anyMatcher{
																			line: 1002, col: 9, offset: 40424,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 517, col: 38, offset: 20052},
									expr: &seqExpr{
										pos: position{line: 517, col: 40, offset: 20054},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 517, col: 40, offset: 20054},
												expr: &litMatcher{
													pos:        position{line: 517, col: 40, offset: 20054},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 517, col: 45, offset: 20059},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonParagraph1042,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 517, col: 49, offset: 20063},
												expr: &choiceExpr{
													pos: position{line: 1000, col: 12, offset: 40394},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 517, col: 59, offset: 20073},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 517, col: 65, offset: 20079},
										expr: &ruleRefExpr{
											pos:  position{line: 517, col: 66, offset: 20080},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElements",
			pos:  position{line: 523, col: 1, offset: 20289},
			expr: &choiceExpr{
				pos: position{line: 524, col: 5, offset: 20312},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 524, col: 5, offset: 20312},
						run: (*parser).callonInlineElements2,
						expr: &labeledExpr{
							pos:   position{line: 524, col: 5, offset: 20312},
							label: "comment",
							expr: &actionExpr{
								pos: position{line: 915, col: 22, offset: 37823},
								run: (*parser).callonInlineElements4,
								expr: &seqExpr{
									pos: position{line: 915, col: 22, offset: 37823},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 915, col: 22, offset: 37823},
											expr: &litMatcher{
												pos:        position{line: 905, col: 26, offset: 37427},
												val:        "////",
												ignoreCase: false,
											},
										},
										&litMatcher{
											pos:        position{line: 915, col: 45, offset: 37846},
											val:        "//",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 915, col: 50, offset: 37851},
											label: "content",
											expr: &actionExpr{
												pos: position{line: 919, col: 29, offset: 37979},
												run: (*parser).callonInlineElements10,
												expr: &zeroOrMoreExpr{
													pos: position{line: 919, col: 29, offset: 37979},
													expr: &seqExpr{
														pos: position{line: 919, col: 30, offset: 37980},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 919, col: 30, offset: 37980},
																expr: &choiceExpr{
																	pos: position{line: 1004, col: 8, offset: 40434},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1000, col: 12, offset: 40394},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1000, col: 21, offset: 40403},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1002, col: 8, offset: 40423},
																			expr: &anyMatcher{
																				line: 1002, col: 9, offset: 40424,
																			},
																		},
																	},
																},
															},
															&anyMatcher{
																line: 919, col: 35, offset: 37985,
															},
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1004, col: 8, offset: 40434},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1002, col: 8, offset: 40423},
													expr: &anyMatcher{
														line: 1002, col: 9, offset: 40424,
													},
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 526, col: 9, offset: 20413},
						run: (*parser).callonInlineElements25,
						expr: &seqExpr{
							pos: position{line: 526, col: 9, offset: 20413},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 526, col: 9, offset: 20413},
									expr: &notExpr{
										pos: position{line: 1002, col: 8, offset: 40423},
										expr: &anyMatcher{
											line: 1002, col: 9, offset: 40424,
										},
									},
								},
								&notExpr{
									pos: position{line: 526, col: 14, offset: 20418},
									expr: &choiceExpr{
										pos: position{line: 743, col: 19, offset: 30960},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 948, col: 26, offset: 39156},
												val:        "....",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 751, col: 25, offset: 31377},
												val:        "```",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 762, col: 26, offset: 31929},
												val:        "----",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 784, col: 26, offset: 32905},
												val:        "====",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 905, col: 26, offset: 37427},
												val:        "////",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 807, col: 24, offset: 33803},
												val:        "____",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 861, col: 26, offset: 35755},
												val:        "****",
												ignoreCase: false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 526, col: 30, offset: 20434},
									label: "elements",
									expr: &oneOrMoreExpr{
										pos: position{line: 526, col: 39, offset: 20443},
										expr: &seqExpr{
											pos: position{line: 526, col: 40, offset: 20444},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 526, col: 40, offset: 20444},
													expr: &choiceExpr{
														pos: position{line: 1004, col: 8, offset: 40434},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1000, col: 12, offset: 40394},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1000, col: 21, offset: 40403},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1002, col: 8, offset: 40423},
																expr: &anyMatcher{
																	line: 1002, col: 9, offset: 40424,
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 526, col: 45, offset: 20449},
													expr: &choiceExpr{
														pos: position{line: 996, col: 7, offset: 40332},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 996, col: 7, offset: 40332},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 996, col: 13, offset: 40338},
																run: (*parser).callonInlineElements51,
																expr: &litMatcher{
																	pos:        position{line: 996, col: 13, offset: 40338},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 526, col: 49, offset: 20453},
													expr: &actionExpr{
														pos: position{line: 151, col: 20, offset: 5775},
														run: (*parser).callonInlineElements54,
														expr: &seqExpr{
															pos: position{line: 151, col: 20, offset: 5775},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 151, col: 20, offset: 5775},
																	val:        "[[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 151, col: 25, offset: 5780},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 982, col: 7, offset: 40050},
																		run: (*parser).callonInlineElements58,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			expr: &seqExpr{
																				pos: position{line: 982, col: 8, offset: 40051},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 982, col: 8, offset: 40051},
																						expr: &choiceExpr{
																							pos: position{line: 1000, col: 12, offset: 40394},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1000, col: 12, offset: 40394},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1000, col: 21, offset: 40403},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 982, col: 17, offset: 40060},
																						expr: &choiceExpr{
																							pos: position{line: 996, col: 7, offset: 40332},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 996, col: 7, offset: 40332},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 996, col: 13, offset: 40338},
																									run: (*parser).callonInlineElements68,
																									expr: &litMatcher{
																										pos:        position{line: 996, col: 13, offset: 40338},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 982, col: 21, offset: 40064},
																						expr: &litMatcher{
																							pos:        position{line: 982, col: 22, offset: 40065},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 982, col: 26, offset: 40069},
																						expr: &litMatcher{
																							pos:        position{line: 982, col: 27, offset: 40070},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 982, col: 31, offset: 40074},
																						expr: &litMatcher{
																							pos:        position{line: 982, col: 32, offset: 40075},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 982, col: 37, offset: 40080},
																						expr: &litMatcher{
																							pos:        position{line: 982, col: 38, offset: 40081},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 982, col: 43, offset: 40086},
																						expr: &litMatcher{
																							pos:        position{line: 982, col: 44, offset: 40087},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 982, col: 48, offset: 40091,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 151, col: 33, offset: 5788},
																	val:        "]]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&ruleRefExpr{
													pos:  position{line: 526, col: 66, offset: 20470},
													name: "InlineElement",
												},
												&zeroOrMoreExpr{
													pos: position{line: 526, col: 80, offset: 20484},
													expr: &choiceExpr{
														pos: position{line: 996, col: 7, offset: 40332},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 996, col: 7, offset: 40332},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 996, col: 13, offset: 40338},
																run: (*parser).callonInlineElements86,
																expr: &litMatcher{
																	pos:        position{line: 996, col: 13, offset: 40338},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1004, col: 8, offset: 40434},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1000, col: 12, offset: 40394},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1000, col: 21, offset: 40403},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1002, col: 8, offset: 40423},
											expr: &anyMatcher{
												line: 1002, col: 9, offset: 40424,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElement",
			pos:  position{line: 530, col: 1, offset: 20608},
			expr: &actionExpr{
				pos: position{line: 530, col: 18, offset: 20625},
				run: (*parser).callonInlineElement1,
				expr: &labeledExpr{
					pos:   position{line: 530, col: 18, offset: 20625},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 530, col: 27, offset: 20634},
						alternatives: []interface{}{
							&ruleRefExpr{
								pos:  position{line: 530, col: 27, offset: 20634},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 656, col: 19, offset: 27630},
								run: (*parser).callonInlineElement5,
								expr: &seqExpr{
									pos: position{line: 656, col: 19, offset: 27630},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 656, col: 19, offset: 27630},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 656, col: 24, offset: 27635},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 982, col: 7, offset: 40050},
												run: (*parser).callonInlineElement9,
												expr: &oneOrMoreExpr{
													pos: position{line: 982, col: 7, offset: 40050},
													expr: &seqExpr{
														pos: position{line: 982, col: 8, offset: 40051},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 982, col: 8, offset: 40051},
																expr: &choiceExpr{
																	pos: position{line: 1000, col: 12, offset: 40394},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1000, col: 12, offset: 40394},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1000, col: 21, offset: 40403},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 982, col: 17, offset: 40060},
																expr: &choiceExpr{
																	pos: position{line: 996, col: 7, offset: 40332},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 996, col: 7, offset: 40332},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 996, col: 13, offset: 40338},
																			run: (*parser).callonInlineElement19,
																			expr: &litMatcher{
																				pos:        position{line: 996, col: 13, offset: 40338},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 982, col: 21, offset: 40064},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 22, offset: 40065},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 26, offset: 40069},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 27, offset: 40070},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 31, offset: 40074},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 32, offset: 40075},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 37, offset: 40080},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 38, offset: 40081},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 43, offset: 40086},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 44, offset: 40087},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 982, col: 48, offset: 40091,
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 656, col: 32, offset: 27643},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonInlineElement35,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 656, col: 36, offset: 27647},
											val:        ",",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 656, col: 40, offset: 27651},
											label: "label",
											expr: &actionExpr{
												pos: position{line: 662, col: 24, offset: 27853},
												run: (*parser).callonInlineElement39,
												expr: &oneOrMoreExpr{
													pos: position{line: 662, col: 24, offset: 27853},
													expr: &seqExpr{
														pos: position{line: 662, col: 25, offset: 27854},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 662, col: 25, offset: 27854},
																expr: &litMatcher{
																	pos:        position{line: 662, col: 26, offset: 27855},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 662, col: 31, offset: 27860,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 656, col: 68, offset: 27679},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 658, col: 5, offset: 27754},
								run: (*parser).callonInlineElement46,
								expr: &seqExpr{
									pos: position{line: 658, col: 5, offset: 27754},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 658, col: 5, offset: 27754},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 658, col: 10, offset: 27759},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 982, col: 7, offset: 40050},
												run: (*parser).callonInlineElement50,
												expr: &oneOrMoreExpr{
													pos: position{line: 982, col: 7, offset: 40050},
													expr: &seqExpr{
														pos: position{line: 982, col: 8, offset: 40051},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 982, col: 8, offset: 40051},
																expr: &choiceExpr{
																	pos: position{line: 1000, col: 12, offset: 40394},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1000, col: 12, offset: 40394},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1000, col: 21, offset: 40403},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 982, col: 17, offset: 40060},
																expr: &choiceExpr{
																	pos: position{line: 996, col: 7, offset: 40332},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 996, col: 7, offset: 40332},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 996, col: 13, offset: 40338},
																			run: (*parser).callonInlineElement60,
																			expr: &litMatcher{
																				pos:        position{line: 996, col: 13, offset: 40338},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 982, col: 21, offset: 40064},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 22, offset: 40065},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 26, offset: 40069},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 27, offset: 40070},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 31, offset: 40074},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 32, offset: 40075},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 37, offset: 40080},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 38, offset: 40081},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 43, offset: 40086},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 44, offset: 40087},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 982, col: 48, offset: 40091,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 658, col: 18, offset: 27767},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 530, col: 57, offset: 20664},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 710, col: 16, offset: 29352},
								run: (*parser).callonInlineElement75,
								expr: &seqExpr{
									pos: position{line: 710, col: 16, offset: 29352},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 710, col: 16, offset: 29352},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 710, col: 25, offset: 29361},
											expr: &litMatcher{
												pos:        position{line: 710, col: 26, offset: 29362},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 710, col: 30, offset: 29366},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 978, col: 8, offset: 39980},
												run: (*parser).callonInlineElement81,
												expr: &oneOrMoreExpr{
													pos: position{line: 978, col: 8, offset: 39980},
													expr: &seqExpr{
														pos: position{line: 978, col: 9, offset: 39981},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 978, col: 9, offset: 39981},
																expr: &choiceExpr{
																	pos: position{line: 1000, col: 12, offset: 40394},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1000, col: 12, offset: 40394},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1000, col: 21, offset: 40403},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 978, col: 18, offset: 39990},
																expr: &choiceExpr{
																	pos: position{line: 996, col: 7, offset: 40332},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 996, col: 7, offset: 40332},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 996, col: 13, offset: 40338},
																			run: (*parser).callonInlineElement91,
																			expr: &litMatcher{
																				pos:        position{line: 996, col: 13, offset: 40338},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 978, col: 22, offset: 39994},
																expr: &litMatcher{
																	pos:        position{line: 978, col: 23, offset: 39995},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 978, col: 27, offset: 39999},
																expr: &litMatcher{
																	pos:        position{line: 978, col: 28, offset: 40000},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 978, col: 32, offset: 40004,
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 710, col: 41, offset: 29377},
											label: "attributes",
											expr: &choiceExpr{
												pos: position{line: 715, col: 20, offset: 29622},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 715, col: 20, offset: 29622},
														run: (*parser).callonInlineElement100,
														expr: &seqExpr{
															pos: position{line: 715, col: 20, offset: 29622},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 715, col: 20, offset: 29622},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 715, col: 24, offset: 29626},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonInlineElement104,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 715, col: 45, offset: 29647},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 716, col: 9, offset: 29659},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonInlineElement116,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 716, col: 33, offset: 29683},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 717, col: 9, offset: 29695},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonInlineElement128,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 717, col: 33, offset: 29719},
																	expr: &litMatcher{
																		pos:        position{line: 717, col: 33, offset: 29719},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 718, col: 9, offset: 29732},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 718, col: 20, offset: 29743},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElement143,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement146,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement149,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonInlineElement163,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElement179,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElement181,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement184,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement187,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElement204,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 718, col: 40, offset: 29763},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 720, col: 9, offset: 29869},
														run: (*parser).callonInlineElement207,
														expr: &seqExpr{
															pos: position{line: 720, col: 9, offset: 29869},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 720, col: 9, offset: 29869},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 720, col: 13, offset: 29873},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonInlineElement211,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 720, col: 34, offset: 29894},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 721, col: 9, offset: 29906},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonInlineElement223,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 721, col: 32, offset: 29929},
																	expr: &litMatcher{
																		pos:        position{line: 721, col: 32, offset: 29929},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 722, col: 9, offset: 29942},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 722, col: 20, offset: 29953},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElement238,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement241,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement244,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonInlineElement258,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElement274,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElement276,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement279,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement282,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElement299,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 722, col: 40, offset: 29973},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 724, col: 9, offset: 30076},
														run: (*parser).callonInlineElement302,
														expr: &seqExpr{
															pos: position{line: 724, col: 9, offset: 30076},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 724, col: 9, offset: 30076},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 724, col: 13, offset: 30080},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonInlineElement306,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 724, col: 34, offset: 30101},
																	expr: &litMatcher{
																		pos:        position{line: 724, col: 34, offset: 30101},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 725, col: 9, offset: 30114},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 725, col: 20, offset: 30125},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElement321,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement324,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement327,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonInlineElement341,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElement357,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElement359,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement362,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement365,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElement382,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 725, col: 40, offset: 30145},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 727, col: 9, offset: 30246},
														run: (*parser).callonInlineElement385,
														expr: &seqExpr{
															pos: position{line: 727, col: 9, offset: 30246},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 727, col: 9, offset: 30246},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 727, col: 13, offset: 30250},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 727, col: 24, offset: 30261},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElement391,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement394,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement397,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonInlineElement411,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElement427,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElement429,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement432,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement435,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElement452,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 727, col: 44, offset: 30281},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 669, col: 9, offset: 28009},
								run: (*parser).callonInlineElement455,
								expr: &labeledExpr{
									pos:   position{line: 669, col: 9, offset: 28009},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 669, col: 15, offset: 28015},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 684, col: 17, offset: 28443},
												run: (*parser).callonInlineElement458,
												expr: &seqExpr{
													pos: position{line: 684, col: 17, offset: 28443},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 684, col: 17, offset: 28443},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 684, col: 25, offset: 28451},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 688, col: 20, offset: 28602},
																run: (*parser).callonInlineElement462,
																expr: &seqExpr{
																	pos: position{line: 688, col: 20, offset: 28602},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 688, col: 20, offset: 28602},
																			expr: &choiceExpr{
																				pos: position{line: 990, col: 15, offset: 40217},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 990, col: 15, offset: 40217},
																						val:        "http://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 990, col: 27, offset: 40229},
																						val:        "https://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 990, col: 40, offset: 40242},
																						val:        "ftp://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 990, col: 51, offset: 40253},
																						val:        "irc://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 990, col: 62, offset: 40264},
																						val:        "mailto:",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 978, col: 8, offset: 39980},
																			run: (*parser).callonInlineElement471,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 978, col: 8, offset: 39980},
																				expr: &seqExpr{
																					pos: position{line: 978, col: 9, offset: 39981},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 978, col: 9, offset: 39981},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 18, offset: 39990},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonInlineElement481,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 22, offset: 39994},
																							expr: &litMatcher{
																								pos:        position{line: 978, col: 23, offset: 39995},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 27, offset: 39999},
																							expr: &litMatcher{
																								pos:        position{line: 978, col: 28, offset: 40000},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 978, col: 32, offset: 40004,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 684, col: 47, offset: 28473},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 692, col: 19, offset: 28672},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 692, col: 19, offset: 28672},
																		run: (*parser).callonInlineElement490,
																		expr: &seqExpr{
																			pos: position{line: 692, col: 19, offset: 28672},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 692, col: 19, offset: 28672},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 692, col: 23, offset: 28676},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 699, col: 22, offset: 28952},
																						run: (*parser).callonInlineElement494,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 699, col: 22, offset: 28952},
																							expr: &seqExpr{
																								pos: position{line: 699, col: 23, offset: 28953},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 699, col: 23, offset: 28953},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 24, offset: 28954},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 699, col: 28, offset: 28958},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 29, offset: 28959},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 699, col: 33, offset: 28963,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 693, col: 9, offset: 28709},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 693, col: 20, offset: 28720},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElement505,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement508,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement511,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonInlineElement525,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElement541,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElement543,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement546,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement549,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElement566,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 693, col: 40, offset: 28740},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 695, col: 5, offset: 28819},
																		run: (*parser).callonInlineElement569,
																		expr: &seqExpr{
																			pos: position{line: 695, col: 5, offset: 28819},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 695, col: 5, offset: 28819},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 695, col: 9, offset: 28823},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 695, col: 20, offset: 28834},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElement575,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement578,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement581,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonInlineElement595,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElement611,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElement613,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement616,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement619,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElement636,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 695, col: 40, offset: 28854},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 673, col: 17, offset: 28086},
												run: (*parser).callonInlineElement639,
												expr: &seqExpr{
													pos: position{line: 673, col: 17, offset: 28086},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 673, col: 17, offset: 28086},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 679, col: 20, offset: 28309},
																run: (*parser).callonInlineElement642,
																expr: &seqExpr{
																	pos: position{line: 679, col: 20, offset: 28309},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 990, col: 15, offset: 40217},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 990, col: 15, offset: 40217},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 990, col: 27, offset: 40229},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 990, col: 40, offset: 40242},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 990, col: 51, offset: 40253},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 990, col: 62, offset: 40264},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 978, col: 8, offset: 39980},
																			run: (*parser).callonInlineElement650,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 978, col: 8, offset: 39980},
																				expr: &seqExpr{
																					pos: position{line: 978, col: 9, offset: 39981},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 978, col: 9, offset: 39981},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 18, offset: 39990},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonInlineElement660,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 22, offset: 39994},
																							expr: &litMatcher{
																								pos:        position{line: 978, col: 23, offset: 39995},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 27, offset: 39999},
																							expr: &litMatcher{
																								pos:        position{line: 978, col: 28, offset: 40000},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 978, col: 32, offset: 40004,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 673, col: 39, offset: 28108},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 692, col: 19, offset: 28672},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 692, col: 19, offset: 28672},
																		run: (*parser).callonInlineElement669,
																		expr: &seqExpr{
																			pos: position{line: 692, col: 19, offset: 28672},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 692, col: 19, offset: 28672},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 692, col: 23, offset: 28676},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 699, col: 22, offset: 28952},
																						run: (*parser).callonInlineElement673,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 699, col: 22, offset: 28952},
																							expr: &seqExpr{
																								pos: position{line: 699, col: 23, offset: 28953},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 699, col: 23, offset: 28953},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 24, offset: 28954},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 699, col: 28, offset: 28958},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 29, offset: 28959},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 699, col: 33, offset: 28963,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 693, col: 9, offset: 28709},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 693, col: 20, offset: 28720},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElement684,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement687,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement690,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonInlineElement704,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElement720,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElement722,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement725,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement728,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElement745,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 693, col: 40, offset: 28740},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 695, col: 5, offset: 28819},
																		run: (*parser).callonInlineElement748,
																		expr: &seqExpr{
																			pos: position{line: 695, col: 5, offset: 28819},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 695, col: 5, offset: 28819},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 695, col: 9, offset: 28823},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 695, col: 20, offset: 28834},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElement754,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement757,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement760,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonInlineElement774,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElement790,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElement792,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement795,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement798,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElement815,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 695, col: 40, offset: 28854},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 675, col: 5, offset: 28219},
												run: (*parser).callonInlineElement818,
												expr: &labeledExpr{
													pos:   position{line: 675, col: 5, offset: 28219},
													label: "url",
													expr: &actionExpr{
														pos: position{line: 679, col: 20, offset: 28309},
														run: (*parser).callonInlineElement820,
														expr: &seqExpr{
															pos: position{line: 679, col: 20, offset: 28309},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 990, col: 15, offset: 40217},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 990, col: 15, offset: 40217},
																			val:        "http://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 990, col: 27, offset: 40229},
																			val:        "https://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 990, col: 40, offset: 40242},
																			val:        "ftp://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 990, col: 51, offset: 40253},
																			val:        "irc://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 990, col: 62, offset: 40264},
																			val:        "mailto:",
																			ignoreCase: false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 978, col: 8, offset: 39980},
																	run: (*parser).callonInlineElement828,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 978, col: 8, offset: 39980},
																		expr: &seqExpr{
																			pos: position{line: 978, col: 9, offset: 39981},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 978, col: 9, offset: 39981},
																					expr: &choiceExpr{
																						pos: position{line: 1000, col: 12, offset: 40394},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1000, col: 12, offset: 40394},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1000, col: 21, offset: 40403},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 978, col: 18, offset: 39990},
																					expr: &choiceExpr{
																						pos: position{line: 996, col: 7, offset: 40332},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 996, col: 7, offset: 40332},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 996, col: 13, offset: 40338},
																								run: (*parser).callonInlineElement838,
																								expr: &litMatcher{
																									pos:        position{line: 996, col: 13, offset: 40338},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 978, col: 22, offset: 39994},
																					expr: &litMatcher{
																						pos:        position{line: 978, col: 23, offset: 39995},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 978, col: 27, offset: 39999},
																					expr: &litMatcher{
																						pos:        position{line: 978, col: 28, offset: 40000},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 978, col: 32, offset: 40004,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 114, col: 34, offset: 4427},
								run: (*parser).callonInlineElement845,
								expr: &seqExpr{
									pos: position{line: 114, col: 34, offset: 4427},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 114, col: 34, offset: 4427},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 114, col: 38, offset: 4431},
											label: "name",
											expr: &actionExpr{
												pos: position{line: 121, col: 26, offset: 4726},
												run: (*parser).callonInlineElement849,
												expr: &seqExpr{
													pos: position{line: 121, col: 26, offset: 4726},
													exprs: []interface{}{
														&charClassMatcher{
															pos:        position{line: 121, col: 27, offset: 4727},
															val:        "[_A-Za-z0-9]",
															chars:      []rune{'_'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 121, col: 56, offset: 4756},
															expr: &charClassMatcher{
																pos:        position{line: 121, col: 57, offset: 4757},
																val:        "[-A-Za-z0-9]",
																chars:      []rune{'-'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 114, col: 67, offset: 4460},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 974, col: 9, offset: 39906},
								run: (*parser).callonInlineElement855,
								expr: &oneOrMoreExpr{
									pos: position{line: 974, col: 9, offset: 39906},
									expr: &seqExpr{
										pos: position{line: 974, col: 10, offset: 39907},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 974, col: 10, offset: 39907},
												expr: &choiceExpr{
													pos: position{line: 1000, col: 12, offset: 40394},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 974, col: 19, offset: 39916},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonInlineElement865,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 974, col: 23, offset: 39920},
												expr: &charClassMatcher{
													pos:        position{line: 972, col: 16, offset: 39875},
													val:        "[()[]]",
													chars:      []rune{'(', ')', '[', ']'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&anyMatcher{
												line: 974, col: 36, offset: 39933,
											},
										},
									},
								},
							},
							&charClassMatcher{
								pos:        position{line: 972, col: 16, offset: 39875},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementsWithoutSubtitution",
			pos:  position{line: 537, col: 1, offset: 20961},
			expr: &actionExpr{
				pos: position{line: 537, col: 37, offset: 20997},
				run: (*parser).callonInlineElementsWithoutSubtitution1,
				expr: &seqExpr{
					pos: position{line: 537, col: 37, offset: 20997},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 537, col: 37, offset: 20997},
							expr: &notExpr{
								pos: position{line: 1002, col: 8, offset: 40423},
								expr: &anyMatcher{
									line: 1002, col: 9, offset: 40424,
								},
							},
						},
						&notExpr{
							pos: position{line: 537, col: 42, offset: 21002},
							expr: &choiceExpr{
								pos: position{line: 743, col: 19, offset: 30960},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 948, col: 26, offset: 39156},
										val:        "....",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 751, col: 25, offset: 31377},
										val:        "```",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 762, col: 26, offset: 31929},
										val:        "----",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 784, col: 26, offset: 32905},
										val:        "====",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 905, col: 26, offset: 37427},
										val:        "////",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 807, col: 24, offset: 33803},
										val:        "____",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 861, col: 26, offset: 35755},
										val:        "****",
										ignoreCase: false,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 537, col: 58, offset: 21018},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 537, col: 67, offset: 21027},
								expr: &seqExpr{
									pos: position{line: 537, col: 68, offset: 21028},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 537, col: 68, offset: 21028},
											expr: &choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 537, col: 73, offset: 21033},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonInlineElementsWithoutSubtitution27,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 537, col: 77, offset: 21037},
											expr: &actionExpr{
												pos: position{line: 151, col: 20, offset: 5775},
												run: (*parser).callonInlineElementsWithoutSubtitution30,
												expr: &seqExpr{
													pos: position{line: 151, col: 20, offset: 5775},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 151, col: 20, offset: 5775},
															val:        "[[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 151, col: 25, offset: 5780},
															label: "id",
															expr: &actionExpr{
																pos: position{line: 982, col: 7, offset: 40050},
																run: (*parser).callonInlineElementsWithoutSubtitution34,
																expr: &oneOrMoreExpr{
																	pos: position{line: 982, col: 7, offset: 40050},
																	expr: &seqExpr{
																		pos: position{line: 982, col: 8, offset: 40051},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 982, col: 8, offset: 40051},
																				expr: &choiceExpr{
																					pos: position{line: 1000, col: 12, offset: 40394},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1000, col: 12, offset: 40394},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1000, col: 21, offset: 40403},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 982, col: 17, offset: 40060},
																				expr: &choiceExpr{
																					pos: position{line: 996, col: 7, offset: 40332},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 996, col: 7, offset: 40332},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 996, col: 13, offset: 40338},
																							run: (*parser).callonInlineElementsWithoutSubtitution44,
																							expr: &litMatcher{
																								pos:        position{line: 996, col: 13, offset: 40338},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 982, col: 21, offset: 40064},
																				expr: &litMatcher{
																					pos:        position{line: 982, col: 22, offset: 40065},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 982, col: 26, offset: 40069},
																				expr: &litMatcher{
																					pos:        position{line: 982, col: 27, offset: 40070},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 982, col: 31, offset: 40074},
																				expr: &litMatcher{
																					pos:        position{line: 982, col: 32, offset: 40075},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 982, col: 37, offset: 40080},
																				expr: &litMatcher{
																					pos:        position{line: 982, col: 38, offset: 40081},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 982, col: 43, offset: 40086},
																				expr: &litMatcher{
																					pos:        position{line: 982, col: 44, offset: 40087},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 982, col: 48, offset: 40091,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 151, col: 33, offset: 5788},
															val:        "]]",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&ruleRefExpr{
											pos:  position{line: 537, col: 94, offset: 21054},
											name: "InlineElementWithoutSubtitution",
										},
										&zeroOrMoreExpr{
											pos: position{line: 537, col: 126, offset: 21086},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonInlineElementsWithoutSubtitution62,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1004, col: 8, offset: 40434},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementWithoutSubtitution",
			pos:  position{line: 541, col: 1, offset: 21202},
			expr: &actionExpr{
				pos: position{line: 541, col: 36, offset: 21237},
				run: (*parser).callonInlineElementWithoutSubtitution1,
				expr: &labeledExpr{
					pos:   position{line: 541, col: 36, offset: 21237},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 541, col: 45, offset: 21246},
						alternatives: []interface{}{
							&ruleRefExpr{
								pos:  position{line: 541, col: 45, offset: 21246},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 656, col: 19, offset: 27630},
								run: (*parser).callonInlineElementWithoutSubtitution5,
								expr: &seqExpr{
									pos: position{line: 656, col: 19, offset: 27630},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 656, col: 19, offset: 27630},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 656, col: 24, offset: 27635},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 982, col: 7, offset: 40050},
												run: (*parser).callonInlineElementWithoutSubtitution9,
												expr: &oneOrMoreExpr{
													pos: position{line: 982, col: 7, offset: 40050},
													expr: &seqExpr{
														pos: position{line: 982, col: 8, offset: 40051},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 982, col: 8, offset: 40051},
																expr: &choiceExpr{
																	pos: position{line: 1000, col: 12, offset: 40394},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1000, col: 12, offset: 40394},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1000, col: 21, offset: 40403},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 982, col: 17, offset: 40060},
																expr: &choiceExpr{
																	pos: position{line: 996, col: 7, offset: 40332},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 996, col: 7, offset: 40332},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 996, col: 13, offset: 40338},
																			run: (*parser).callonInlineElementWithoutSubtitution19,
																			expr: &litMatcher{
																				pos:        position{line: 996, col: 13, offset: 40338},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 982, col: 21, offset: 40064},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 22, offset: 40065},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 26, offset: 40069},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 27, offset: 40070},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 31, offset: 40074},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 32, offset: 40075},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 37, offset: 40080},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 38, offset: 40081},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 43, offset: 40086},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 44, offset: 40087},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 982, col: 48, offset: 40091,
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 656, col: 32, offset: 27643},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonInlineElementWithoutSubtitution35,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 656, col: 36, offset: 27647},
											val:        ",",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 656, col: 40, offset: 27651},
											label: "label",
											expr: &actionExpr{
												pos: position{line: 662, col: 24, offset: 27853},
												run: (*parser).callonInlineElementWithoutSubtitution39,
												expr: &oneOrMoreExpr{
													pos: position{line: 662, col: 24, offset: 27853},
													expr: &seqExpr{
														pos: position{line: 662, col: 25, offset: 27854},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 662, col: 25, offset: 27854},
																expr: &litMatcher{
																	pos:        position{line: 662, col: 26, offset: 27855},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 662, col: 31, offset: 27860,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 656, col: 68, offset: 27679},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 658, col: 5, offset: 27754},
								run: (*parser).callonInlineElementWithoutSubtitution46,
								expr: &seqExpr{
									pos: position{line: 658, col: 5, offset: 27754},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 658, col: 5, offset: 27754},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 658, col: 10, offset: 27759},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 982, col: 7, offset: 40050},
												run: (*parser).callonInlineElementWithoutSubtitution50,
												expr: &oneOrMoreExpr{
													pos: position{line: 982, col: 7, offset: 40050},
													expr: &seqExpr{
														pos: position{line: 982, col: 8, offset: 40051},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 982, col: 8, offset: 40051},
																expr: &choiceExpr{
																	pos: position{line: 1000, col: 12, offset: 40394},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1000, col: 12, offset: 40394},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1000, col: 21, offset: 40403},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 982, col: 17, offset: 40060},
																expr: &choiceExpr{
																	pos: position{line: 996, col: 7, offset: 40332},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 996, col: 7, offset: 40332},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 996, col: 13, offset: 40338},
																			run: (*parser).callonInlineElementWithoutSubtitution60,
																			expr: &litMatcher{
																				pos:        position{line: 996, col: 13, offset: 40338},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 982, col: 21, offset: 40064},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 22, offset: 40065},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 26, offset: 40069},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 27, offset: 40070},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 31, offset: 40074},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 32, offset: 40075},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 37, offset: 40080},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 38, offset: 40081},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 982, col: 43, offset: 40086},
																expr: &litMatcher{
																	pos:        position{line: 982, col: 44, offset: 40087},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 982, col: 48, offset: 40091,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 658, col: 18, offset: 27767},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 541, col: 75, offset: 21276},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 710, col: 16, offset: 29352},
								run: (*parser).callonInlineElementWithoutSubtitution75,
								expr: &seqExpr{
									pos: position{line: 710, col: 16, offset: 29352},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 710, col: 16, offset: 29352},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 710, col: 25, offset: 29361},
											expr: &litMatcher{
												pos:        position{line: 710, col: 26, offset: 29362},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 710, col: 30, offset: 29366},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 978, col: 8, offset: 39980},
												run: (*parser).callonInlineElementWithoutSubtitution81,
												expr: &oneOrMoreExpr{
													pos: position{line: 978, col: 8, offset: 39980},
													expr: &seqExpr{
														pos: position{line: 978, col: 9, offset: 39981},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 978, col: 9, offset: 39981},
																expr: &choiceExpr{
																	pos: position{line: 1000, col: 12, offset: 40394},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1000, col: 12, offset: 40394},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1000, col: 21, offset: 40403},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 978, col: 18, offset: 39990},
																expr: &choiceExpr{
																	pos: position{line: 996, col: 7, offset: 40332},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 996, col: 7, offset: 40332},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 996, col: 13, offset: 40338},
																			run: (*parser).callonInlineElementWithoutSubtitution91,
																			expr: &litMatcher{
																				pos:        position{line: 996, col: 13, offset: 40338},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 978, col: 22, offset: 39994},
																expr: &litMatcher{
																	pos:        position{line: 978, col: 23, offset: 39995},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 978, col: 27, offset: 39999},
																expr: &litMatcher{
																	pos:        position{line: 978, col: 28, offset: 40000},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 978, col: 32, offset: 40004,
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 710, col: 41, offset: 29377},
											label: "attributes",
											expr: &choiceExpr{
												pos: position{line: 715, col: 20, offset: 29622},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 715, col: 20, offset: 29622},
														run: (*parser).callonInlineElementWithoutSubtitution100,
														expr: &seqExpr{
															pos: position{line: 715, col: 20, offset: 29622},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 715, col: 20, offset: 29622},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 715, col: 24, offset: 29626},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonInlineElementWithoutSubtitution104,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 715, col: 45, offset: 29647},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 716, col: 9, offset: 29659},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonInlineElementWithoutSubtitution116,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 716, col: 33, offset: 29683},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 717, col: 9, offset: 29695},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonInlineElementWithoutSubtitution128,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 717, col: 33, offset: 29719},
																	expr: &litMatcher{
																		pos:        position{line: 717, col: 33, offset: 29719},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 718, col: 9, offset: 29732},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 718, col: 20, offset: 29743},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElementWithoutSubtitution143,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution146,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElementWithoutSubtitution149,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonInlineElementWithoutSubtitution163,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElementWithoutSubtitution179,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElementWithoutSubtitution181,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution184,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElementWithoutSubtitution187,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElementWithoutSubtitution204,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 718, col: 40, offset: 29763},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 720, col: 9, offset: 29869},
														run: (*parser).callonInlineElementWithoutSubtitution207,
														expr: &seqExpr{
															pos: position{line: 720, col: 9, offset: 29869},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 720, col: 9, offset: 29869},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 720, col: 13, offset: 29873},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonInlineElementWithoutSubtitution211,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 720, col: 34, offset: 29894},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 721, col: 9, offset: 29906},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonInlineElementWithoutSubtitution223,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 721, col: 32, offset: 29929},
																	expr: &litMatcher{
																		pos:        position{line: 721, col: 32, offset: 29929},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 722, col: 9, offset: 29942},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 722, col: 20, offset: 29953},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElementWithoutSubtitution238,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution241,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElementWithoutSubtitution244,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonInlineElementWithoutSubtitution258,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElementWithoutSubtitution274,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElementWithoutSubtitution276,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution279,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElementWithoutSubtitution282,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElementWithoutSubtitution299,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 722, col: 40, offset: 29973},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 724, col: 9, offset: 30076},
														run: (*parser).callonInlineElementWithoutSubtitution302,
														expr: &seqExpr{
															pos: position{line: 724, col: 9, offset: 30076},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 724, col: 9, offset: 30076},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 724, col: 13, offset: 30080},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30401},
																		run: (*parser).callonInlineElementWithoutSubtitution306,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30401},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30402},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30402},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30403},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30407},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30408},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30412},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30413},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30417,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 724, col: 34, offset: 30101},
																	expr: &litMatcher{
																		pos:        position{line: 724, col: 34, offset: 30101},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 725, col: 9, offset: 30114},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 725, col: 20, offset: 30125},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElementWithoutSubtitution321,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution324,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElementWithoutSubtitution327,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonInlineElementWithoutSubtitution341,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElementWithoutSubtitution357,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElementWithoutSubtitution359,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution362,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElementWithoutSubtitution365,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElementWithoutSubtitution382,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 725, col: 40, offset: 30145},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 727, col: 9, offset: 30246},
														run: (*parser).callonInlineElementWithoutSubtitution385,
														expr: &seqExpr{
															pos: position{line: 727, col: 9, offset: 30246},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 727, col: 9, offset: 30246},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 727, col: 13, offset: 30250},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 727, col: 24, offset: 30261},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElementWithoutSubtitution391,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution394,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElementWithoutSubtitution397,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonInlineElementWithoutSubtitution411,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElementWithoutSubtitution427,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElementWithoutSubtitution429,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution432,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElementWithoutSubtitution435,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 996, col: 7, offset: 40332},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 996, col: 7, offset: 40332},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 996, col: 13, offset: 40338},
																											run: (*parser).callonInlineElementWithoutSubtitution452,
																											expr: &litMatcher{
																												pos:        position{line: 996, col: 13, offset: 40338},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 727, col: 44, offset: 30281},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 669, col: 9, offset: 28009},
								run: (*parser).callonInlineElementWithoutSubtitution455,
								expr: &labeledExpr{
									pos:   position{line: 669, col: 9, offset: 28009},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 669, col: 15, offset: 28015},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 684, col: 17, offset: 28443},
												run: (*parser).callonInlineElementWithoutSubtitution458,
												expr: &seqExpr{
													pos: position{line: 684, col: 17, offset: 28443},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 684, col: 17, offset: 28443},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 684, col: 25, offset: 28451},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 688, col: 20, offset: 28602},
																run: (*parser).callonInlineElementWithoutSubtitution462,
																expr: &seqExpr{
																	pos: position{line: 688, col: 20, offset: 28602},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 688, col: 20, offset: 28602},
																			expr: &choiceExpr{
																				pos: position{line: 990, col: 15, offset: 40217},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 990, col: 15, offset: 40217},
																						val:        "http://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 990, col: 27, offset: 40229},
																						val:        "https://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 990, col: 40, offset: 40242},
																						val:        "ftp://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 990, col: 51, offset: 40253},
																						val:        "irc://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 990, col: 62, offset: 40264},
																						val:        "mailto:",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 978, col: 8, offset: 39980},
																			run: (*parser).callonInlineElementWithoutSubtitution471,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 978, col: 8, offset: 39980},
																				expr: &seqExpr{
																					pos: position{line: 978, col: 9, offset: 39981},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 978, col: 9, offset: 39981},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 18, offset: 39990},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonInlineElementWithoutSubtitution481,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 22, offset: 39994},
																							expr: &litMatcher{
																								pos:        position{line: 978, col: 23, offset: 39995},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 27, offset: 39999},
																							expr: &litMatcher{
																								pos:        position{line: 978, col: 28, offset: 40000},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 978, col: 32, offset: 40004,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 684, col: 47, offset: 28473},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 692, col: 19, offset: 28672},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 692, col: 19, offset: 28672},
																		run: (*parser).callonInlineElementWithoutSubtitution490,
																		expr: &seqExpr{
																			pos: position{line: 692, col: 19, offset: 28672},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 692, col: 19, offset: 28672},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 692, col: 23, offset: 28676},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 699, col: 22, offset: 28952},
																						run: (*parser).callonInlineElementWithoutSubtitution494,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 699, col: 22, offset: 28952},
																							expr: &seqExpr{
																								pos: position{line: 699, col: 23, offset: 28953},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 699, col: 23, offset: 28953},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 24, offset: 28954},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 699, col: 28, offset: 28958},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 29, offset: 28959},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 699, col: 33, offset: 28963,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 693, col: 9, offset: 28709},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 693, col: 20, offset: 28720},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElementWithoutSubtitution505,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution508,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElementWithoutSubtitution511,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonInlineElementWithoutSubtitution525,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElementWithoutSubtitution541,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElementWithoutSubtitution543,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution546,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElementWithoutSubtitution549,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElementWithoutSubtitution566,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 693, col: 40, offset: 28740},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 695, col: 5, offset: 28819},
																		run: (*parser).callonInlineElementWithoutSubtitution569,
																		expr: &seqExpr{
																			pos: position{line: 695, col: 5, offset: 28819},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 695, col: 5, offset: 28819},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 695, col: 9, offset: 28823},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 695, col: 20, offset: 28834},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElementWithoutSubtitution575,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution578,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElementWithoutSubtitution581,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonInlineElementWithoutSubtitution595,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElementWithoutSubtitution611,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElementWithoutSubtitution613,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution616,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElementWithoutSubtitution619,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElementWithoutSubtitution636,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 695, col: 40, offset: 28854},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 673, col: 17, offset: 28086},
												run: (*parser).callonInlineElementWithoutSubtitution639,
												expr: &seqExpr{
													pos: position{line: 673, col: 17, offset: 28086},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 673, col: 17, offset: 28086},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 679, col: 20, offset: 28309},
																run: (*parser).callonInlineElementWithoutSubtitution642,
																expr: &seqExpr{
																	pos: position{line: 679, col: 20, offset: 28309},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 990, col: 15, offset: 40217},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 990, col: 15, offset: 40217},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 990, col: 27, offset: 40229},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 990, col: 40, offset: 40242},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 990, col: 51, offset: 40253},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 990, col: 62, offset: 40264},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 978, col: 8, offset: 39980},
																			run: (*parser).callonInlineElementWithoutSubtitution650,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 978, col: 8, offset: 39980},
																				expr: &seqExpr{
																					pos: position{line: 978, col: 9, offset: 39981},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 978, col: 9, offset: 39981},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 18, offset: 39990},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonInlineElementWithoutSubtitution660,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 22, offset: 39994},
																							expr: &litMatcher{
																								pos:        position{line: 978, col: 23, offset: 39995},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 978, col: 27, offset: 39999},
																							expr: &litMatcher{
																								pos:        position{line: 978, col: 28, offset: 40000},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 978, col: 32, offset: 40004,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 673, col: 39, offset: 28108},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 692, col: 19, offset: 28672},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 692, col: 19, offset: 28672},
																		run: (*parser).callonInlineElementWithoutSubtitution669,
																		expr: &seqExpr{
																			pos: position{line: 692, col: 19, offset: 28672},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 692, col: 19, offset: 28672},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 692, col: 23, offset: 28676},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 699, col: 22, offset: 28952},
																						run: (*parser).callonInlineElementWithoutSubtitution673,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 699, col: 22, offset: 28952},
																							expr: &seqExpr{
																								pos: position{line: 699, col: 23, offset: 28953},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 699, col: 23, offset: 28953},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 24, offset: 28954},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 699, col: 28, offset: 28958},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 29, offset: 28959},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 699, col: 33, offset: 28963,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 693, col: 9, offset: 28709},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 693, col: 20, offset: 28720},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElementWithoutSubtitution684,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution687,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElementWithoutSubtitution690,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonInlineElementWithoutSubtitution704,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElementWithoutSubtitution720,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElementWithoutSubtitution722,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution725,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElementWithoutSubtitution728,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElementWithoutSubtitution745,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 693, col: 40, offset: 28740},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 695, col: 5, offset: 28819},
																		run: (*parser).callonInlineElementWithoutSubtitution748,
																		expr: &seqExpr{
																			pos: position{line: 695, col: 5, offset: 28819},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 695, col: 5, offset: 28819},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 695, col: 9, offset: 28823},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 695, col: 20, offset: 28834},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElementWithoutSubtitution754,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution757,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElementWithoutSubtitution760,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonInlineElementWithoutSubtitution774,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElementWithoutSubtitution790,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElementWithoutSubtitution792,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution795,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElementWithoutSubtitution798,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 996, col: 7, offset: 40332},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 996, col: 7, offset: 40332},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 996, col: 13, offset: 40338},
																															run: (*parser).callonInlineElementWithoutSubtitution815,
																															expr: &litMatcher{
																																pos:        position{line: 996, col: 13, offset: 40338},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 695, col: 40, offset: 28854},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 675, col: 5, offset: 28219},
												run: (*parser).callonInlineElementWithoutSubtitution818,
												expr: &labeledExpr{
													pos:   position{line: 675, col: 5, offset: 28219},
													label: "url",
													expr: &actionExpr{
														pos: position{line: 679, col: 20, offset: 28309},
														run: (*parser).callonInlineElementWithoutSubtitution820,
														expr: &seqExpr{
															pos: position{line: 679, col: 20, offset: 28309},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 990, col: 15, offset: 40217},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 990, col: 15, offset: 40217},
																			val:        "http://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 990, col: 27, offset: 40229},
																			val:        "https://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 990, col: 40, offset: 40242},
																			val:        "ftp://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 990, col: 51, offset: 40253},
																			val:        "irc://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 990, col: 62, offset: 40264},
																			val:        "mailto:",
																			ignoreCase: false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 978, col: 8, offset: 39980},
																	run: (*parser).callonInlineElementWithoutSubtitution828,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 978, col: 8, offset: 39980},
																		expr: &seqExpr{
																			pos: position{line: 978, col: 9, offset: 39981},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 978, col: 9, offset: 39981},
																					expr: &choiceExpr{
																						pos: position{line: 1000, col: 12, offset: 40394},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1000, col: 12, offset: 40394},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1000, col: 21, offset: 40403},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 978, col: 18, offset: 39990},
																					expr: &choiceExpr{
																						pos: position{line: 996, col: 7, offset: 40332},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 996, col: 7, offset: 40332},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 996, col: 13, offset: 40338},
																								run: (*parser).callonInlineElementWithoutSubtitution838,
																								expr: &litMatcher{
																									pos:        position{line: 996, col: 13, offset: 40338},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 978, col: 22, offset: 39994},
																					expr: &litMatcher{
																						pos:        position{line: 978, col: 23, offset: 39995},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 978, col: 27, offset: 39999},
																					expr: &litMatcher{
																						pos:        position{line: 978, col: 28, offset: 40000},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 978, col: 32, offset: 40004,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 974, col: 9, offset: 39906},
								run: (*parser).callonInlineElementWithoutSubtitution845,
								expr: &oneOrMoreExpr{
									pos: position{line: 974, col: 9, offset: 39906},
									expr: &seqExpr{
										pos: position{line: 974, col: 10, offset: 39907},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 974, col: 10, offset: 39907},
												expr: &choiceExpr{
													pos: position{line: 1000, col: 12, offset: 40394},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 974, col: 19, offset: 39916},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonInlineElementWithoutSubtitution855,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 974, col: 23, offset: 39920},
												expr: &charClassMatcher{
													pos:        position{line: 972, col: 16, offset: 39875},
													val:        "[()[]]",
													chars:      []rune{'(', ')', '[', ']'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&anyMatcher{
												line: 974, col: 36, offset: 39933,
											},
										},
									},
								},
							},
							&charClassMatcher{
								pos:        position{line: 972, col: 16, offset: 39875},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedText",
			pos:  position{line: 548, col: 1, offset: 21599},
			expr: &choiceExpr{
				pos: position{line: 548, col: 15, offset: 21613},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 548, col: 15, offset: 21613},
						name: "BoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 548, col: 26, offset: 21624},
						name: "ItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 548, col: 39, offset: 21637},
						name: "MonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 549, col: 13, offset: 21665},
						name: "EscapedBoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 549, col: 31, offset: 21683},
						name: "EscapedItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 549, col: 51, offset: 21703},
						name: "EscapedMonospaceText",
					},
				},
			},
		},
		{
			name: "BoldText",
			pos:  position{line: 551, col: 1, offset: 21725},
			expr: &choiceExpr{
				pos: position{line: 552, col: 5, offset: 21742},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 552, col: 5, offset: 21742},
						run: (*parser).callonBoldText2,
						expr: &seqExpr{
							pos: position{line: 552, col: 5, offset: 21742},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 552, col: 5, offset: 21742},
									expr: &litMatcher{
										pos:        position{line: 552, col: 6, offset: 21743},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 552, col: 11, offset: 21748},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 552, col: 16, offset: 21753},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 552, col: 25, offset: 21762},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 552, col: 44, offset: 21781},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 554, col: 9, offset: 21914},
						run: (*parser).callonBoldText10,
						expr: &seqExpr{
							pos: position{line: 554, col: 9, offset: 21914},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 554, col: 9, offset: 21914},
									expr: &litMatcher{
										pos:        position{line: 554, col: 10, offset: 21915},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 554, col: 15, offset: 21920},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 554, col: 20, offset: 21925},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 554, col: 29, offset: 21934},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 554, col: 48, offset: 21953},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 557, col: 9, offset: 22130},
						run: (*parser).callonBoldText18,
						expr: &seqExpr{
							pos: position{line: 557, col: 9, offset: 22130},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 557, col: 9, offset: 22130},
									expr: &litMatcher{
										pos:        position{line: 557, col: 10, offset: 22131},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 557, col: 14, offset: 22135},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 557, col: 18, offset: 22139},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 557, col: 27, offset: 22148},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 557, col: 46, offset: 22167},
									val:        "*",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 557, col: 50, offset: 22171},
									expr: &charClassMatcher{
										pos:        position{line: 970, col: 13, offset: 39847},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedBoldText",
			pos:  position{line: 561, col: 1, offset: 22365},
			expr: &choiceExpr{
				pos: position{line: 562, col: 5, offset: 22389},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 562, col: 5, offset: 22389},
						run: (*parser).callonEscapedBoldText2,
						expr: &seqExpr{
							pos: position{line: 562, col: 5, offset: 22389},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 562, col: 5, offset: 22389},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 575, col: 25, offset: 23193},
										run: (*parser).callonEscapedBoldText5,
										expr: &seqExpr{
											pos: position{line: 575, col: 25, offset: 23193},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 575, col: 25, offset: 23193},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 575, col: 30, offset: 23198},
													expr: &litMatcher{
														pos:        position{line: 575, col: 30, offset: 23198},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 562, col: 40, offset: 22424},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 562, col: 45, offset: 22429},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 562, col: 54, offset: 22438},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 562, col: 73, offset: 22457},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 564, col: 9, offset: 22613},
						run: (*parser).callonEscapedBoldText14,
						expr: &seqExpr{
							pos: position{line: 564, col: 9, offset: 22613},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 564, col: 9, offset: 22613},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 571, col: 25, offset: 23124},
										run: (*parser).callonEscapedBoldText17,
										expr: &seqExpr{
											pos: position{line: 571, col: 25, offset: 23124},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 571, col: 25, offset: 23124},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 571, col: 29, offset: 23128},
													expr: &litMatcher{
														pos:        position{line: 571, col: 29, offset: 23128},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 564, col: 44, offset: 22648},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 564, col: 49, offset: 22653},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 564, col: 58, offset: 22662},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 564, col: 77, offset: 22681},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 567, col: 9, offset: 22880},
						run: (*parser).callonEscapedBoldText26,
						expr: &seqExpr{
							pos: position{line: 567, col: 9, offset: 22880},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 567, col: 9, offset: 22880},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 571, col: 25, offset: 23124},
										run: (*parser).callonEscapedBoldText29,
										expr: &seqExpr{
											pos: position{line: 571, col: 25, offset: 23124},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 571, col: 25, offset: 23124},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 571, col: 29, offset: 23128},
													expr: &litMatcher{
														pos:        position{line: 571, col: 29, offset: 23128},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 567, col: 44, offset: 22915},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 567, col: 48, offset: 22919},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 567, col: 57, offset: 22928},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 567, col: 76, offset: 22947},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ItalicText",
			pos:  position{line: 579, col: 1, offset: 23239},
			expr: &choiceExpr{
				pos: position{line: 580, col: 5, offset: 23258},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 580, col: 5, offset: 23258},
						run: (*parser).callonItalicText2,
						expr: &seqExpr{
							pos: position{line: 580, col: 5, offset: 23258},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 580, col: 5, offset: 23258},
									expr: &litMatcher{
										pos:        position{line: 580, col: 6, offset: 23259},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 580, col: 11, offset: 23264},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 580, col: 16, offset: 23269},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 580, col: 25, offset: 23278},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 580, col: 44, offset: 23297},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 582, col: 9, offset: 23386},
						run: (*parser).callonItalicText10,
						expr: &seqExpr{
							pos: position{line: 582, col: 9, offset: 23386},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 582, col: 9, offset: 23386},
									expr: &litMatcher{
										pos:        position{line: 582, col: 10, offset: 23387},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 582, col: 15, offset: 23392},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 582, col: 20, offset: 23397},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 582, col: 29, offset: 23406},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 582, col: 48, offset: 23425},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 585, col: 9, offset: 23604},
						run: (*parser).callonItalicText18,
						expr: &seqExpr{
							pos: position{line: 585, col: 9, offset: 23604},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 585, col: 9, offset: 23604},
									expr: &litMatcher{
										pos:        position{line: 585, col: 10, offset: 23605},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 585, col: 14, offset: 23609},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 585, col: 18, offset: 23613},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 585, col: 27, offset: 23622},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 585, col: 46, offset: 23641},
									val:        "_",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 585, col: 50, offset: 23645},
									expr: &charClassMatcher{
										pos:        position{line: 970, col: 13, offset: 39847},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedItalicText",
			pos:  position{line: 589, col: 1, offset: 23840},
			expr: &choiceExpr{
				pos: position{line: 590, col: 5, offset: 23866},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 590, col: 5, offset: 23866},
						run: (*parser).callonEscapedItalicText2,
						expr: &seqExpr{
							pos: position{line: 590, col: 5, offset: 23866},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 590, col: 5, offset: 23866},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 575, col: 25, offset: 23193},
										run: (*parser).callonEscapedItalicText5,
										expr: &seqExpr{
											pos: position{line: 575, col: 25, offset: 23193},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 575, col: 25, offset: 23193},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 575, col: 30, offset: 23198},
													expr: &litMatcher{
														pos:        position{line: 575, col: 30, offset: 23198},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 590, col: 40, offset: 23901},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 590, col: 45, offset: 23906},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 590, col: 54, offset: 23915},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 590, col: 73, offset: 23934},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 592, col: 9, offset: 24090},
						run: (*parser).callonEscapedItalicText14,
						expr: &seqExpr{
							pos: position{line: 592, col: 9, offset: 24090},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 592, col: 9, offset: 24090},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 571, col: 25, offset: 23124},
										run: (*parser).callonEscapedItalicText17,
										expr: &seqExpr{
											pos: position{line: 571, col: 25, offset: 23124},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 571, col: 25, offset: 23124},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 571, col: 29, offset: 23128},
													expr: &litMatcher{
														pos:        position{line: 571, col: 29, offset: 23128},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 592, col: 44, offset: 24125},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 592, col: 49, offset: 24130},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 592, col: 58, offset: 24139},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 592, col: 77, offset: 24158},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 595, col: 9, offset: 24357},
						run: (*parser).callonEscapedItalicText26,
						expr: &seqExpr{
							pos: position{line: 595, col: 9, offset: 24357},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 595, col: 9, offset: 24357},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 571, col: 25, offset: 23124},
										run: (*parser).callonEscapedItalicText29,
										expr: &seqExpr{
											pos: position{line: 571, col: 25, offset: 23124},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 571, col: 25, offset: 23124},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 571, col: 29, offset: 23128},
													expr: &litMatcher{
														pos:        position{line: 571, col: 29, offset: 23128},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 595, col: 44, offset: 24392},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 595, col: 48, offset: 24396},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 595, col: 57, offset: 24405},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 595, col: 76, offset: 24424},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "MonospaceText",
			pos:  position{line: 599, col: 1, offset: 24577},
			expr: &choiceExpr{
				pos: position{line: 600, col: 5, offset: 24599},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 600, col: 5, offset: 24599},
						run: (*parser).callonMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 600, col: 5, offset: 24599},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 600, col: 5, offset: 24599},
									expr: &litMatcher{
										pos:        position{line: 600, col: 6, offset: 24600},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 600, col: 11, offset: 24605},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 600, col: 16, offset: 24610},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 600, col: 25, offset: 24619},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 600, col: 44, offset: 24638},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 602, col: 9, offset: 24776},
						run: (*parser).callonMonospaceText10,
						expr: &seqExpr{
							pos: position{line: 602, col: 9, offset: 24776},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 602, col: 9, offset: 24776},
									expr: &litMatcher{
										pos:        position{line: 602, col: 10, offset: 24777},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 602, col: 15, offset: 24782},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 602, col: 20, offset: 24787},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 602, col: 29, offset: 24796},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 602, col: 48, offset: 24815},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 605, col: 9, offset: 24997},
						run: (*parser).callonMonospaceText18,
						expr: &seqExpr{
							pos: position{line: 605, col: 9, offset: 24997},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 605, col: 9, offset: 24997},
									expr: &litMatcher{
										pos:        position{line: 605, col: 10, offset: 24998},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 605, col: 14, offset: 25002},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 605, col: 18, offset: 25006},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 605, col: 27, offset: 25015},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 605, col: 46, offset: 25034},
									val:        "`",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 605, col: 50, offset: 25038},
									expr: &charClassMatcher{
										pos:        position{line: 970, col: 13, offset: 39847},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedMonospaceText",
			pos:  position{line: 609, col: 1, offset: 25236},
			expr: &choiceExpr{
				pos: position{line: 610, col: 5, offset: 25265},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 610, col: 5, offset: 25265},
						run: (*parser).callonEscapedMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 610, col: 5, offset: 25265},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 610, col: 5, offset: 25265},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 575, col: 25, offset: 23193},
										run: (*parser).callonEscapedMonospaceText5,
										expr: &seqExpr{
											pos: position{line: 575, col: 25, offset: 23193},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 575, col: 25, offset: 23193},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 575, col: 30, offset: 23198},
													expr: &litMatcher{
														pos:        position{line: 575, col: 30, offset: 23198},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 610, col: 40, offset: 25300},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 610, col: 45, offset: 25305},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 610, col: 54, offset: 25314},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 610, col: 73, offset: 25333},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 612, col: 9, offset: 25489},
						run: (*parser).callonEscapedMonospaceText14,
						expr: &seqExpr{
							pos: position{line: 612, col: 9, offset: 25489},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 612, col: 9, offset: 25489},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 571, col: 25, offset: 23124},
										run: (*parser).callonEscapedMonospaceText17,
										expr: &seqExpr{
											pos: position{line: 571, col: 25, offset: 23124},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 571, col: 25, offset: 23124},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 571, col: 29, offset: 23128},
													expr: &litMatcher{
														pos:        position{line: 571, col: 29, offset: 23128},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 612, col: 44, offset: 25524},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 612, col: 49, offset: 25529},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 612, col: 58, offset: 25538},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 612, col: 77, offset: 25557},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 615, col: 9, offset: 25756},
						run: (*parser).callonEscapedMonospaceText26,
						expr: &seqExpr{
							pos: position{line: 615, col: 9, offset: 25756},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 615, col: 9, offset: 25756},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 571, col: 25, offset: 23124},
										run: (*parser).callonEscapedMonospaceText29,
										expr: &seqExpr{
											pos: position{line: 571, col: 25, offset: 23124},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 571, col: 25, offset: 23124},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 571, col: 29, offset: 23128},
													expr: &litMatcher{
														pos:        position{line: 571, col: 29, offset: 23128},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 615, col: 44, offset: 25791},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 615, col: 48, offset: 25795},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 615, col: 57, offset: 25804},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 615, col: 76, offset: 25823},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContent",
			pos:  position{line: 619, col: 1, offset: 25976},
			expr: &seqExpr{
				pos: position{line: 619, col: 22, offset: 25997},
				exprs: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 619, col: 22, offset: 25997},
						name: "QuotedTextContentElement",
					},
					&zeroOrMoreExpr{
						pos: position{line: 619, col: 47, offset: 26022},
						expr: &seqExpr{
							pos: position{line: 619, col: 48, offset: 26023},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 619, col: 48, offset: 26023},
									expr: &choiceExpr{
										pos: position{line: 996, col: 7, offset: 40332},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 996, col: 7, offset: 40332},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 996, col: 13, offset: 40338},
												run: (*parser).callonQuotedTextContent8,
												expr: &litMatcher{
													pos:        position{line: 996, col: 13, offset: 40338},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 619, col: 52, offset: 26027},
									name: "QuotedTextContentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContentElement",
			pos:  position{line: 621, col: 1, offset: 26055},
			expr: &choiceExpr{
				pos: position{line: 621, col: 29, offset: 26083},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 621, col: 29, offset: 26083},
						name: "QuotedText",
					},
					&oneOrMoreExpr{
						pos: position{line: 623, col: 19, offset: 26260},
						expr: &seqExpr{
							pos: position{line: 623, col: 20, offset: 26261},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 623, col: 20, offset: 26261},
									expr: &choiceExpr{
										pos: position{line: 1000, col: 12, offset: 40394},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1000, col: 12, offset: 40394},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1000, col: 21, offset: 40403},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 623, col: 29, offset: 26270},
									expr: &choiceExpr{
										pos: position{line: 996, col: 7, offset: 40332},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 996, col: 7, offset: 40332},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 996, col: 13, offset: 40338},
												run: (*parser).callonQuotedTextContentElement12,
												expr: &litMatcher{
													pos:        position{line: 996, col: 13, offset: 40338},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 623, col: 33, offset: 26274},
									expr: &litMatcher{
										pos:        position{line: 623, col: 34, offset: 26275},
										val:        "*",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 623, col: 38, offset: 26279},
									expr: &litMatcher{
										pos:        position{line: 623, col: 39, offset: 26280},
										val:        "_",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 623, col: 43, offset: 26284},
									expr: &litMatcher{
										pos:        position{line: 623, col: 44, offset: 26285},
										val:        "`",
										ignoreCase: false,
									},
								},
								&anyMatcher{
									line: 623, col: 48, offset: 26289,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 625, col: 29, offset: 26360},
						run: (*parser).callonQuotedTextContentElement21,
						expr: &oneOrMoreExpr{
							pos: position{line: 625, col: 29, offset: 26360},
							expr: &seqExpr{
								pos: position{line: 625, col: 30, offset: 26361},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 625, col: 30, offset: 26361},
										expr: &choiceExpr{
											pos: position{line: 1000, col: 12, offset: 40394},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 625, col: 39, offset: 26370},
										expr: &choiceExpr{
											pos: position{line: 996, col: 7, offset: 40332},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 996, col: 7, offset: 40332},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 996, col: 13, offset: 40338},
													run: (*parser).callonQuotedTextContentElement31,
													expr: &litMatcher{
														pos:        position{line: 996, col: 13, offset: 40338},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&anyMatcher{
										line: 625, col: 44, offset: 26375,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Passthrough",
			pos:  position{line: 635, col: 1, offset: 26774},
			expr: &choiceExpr{
				pos: position{line: 635, col: 16, offset: 26789},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 641, col: 26, offset: 27031},
						run: (*parser).callonPassthrough2,
						expr: &seqExpr{
							pos: position{line: 641, col: 26, offset: 27031},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 641, col: 26, offset: 27031},
									val:        "+++",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 641, col: 32, offset: 27037},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 641, col: 40, offset: 27045},
										expr: &seqExpr{
											pos: position{line: 641, col: 41, offset: 27046},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 641, col: 41, offset: 27046},
													expr: &litMatcher{
														pos:        position{line: 641, col: 42, offset: 27047},
														val:        "+++",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 641, col: 48, offset: 27053,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 641, col: 52, offset: 27057},
									val:        "+++",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 637, col: 26, offset: 26880},
						run: (*parser).callonPassthrough12,
						expr: &seqExpr{
							pos: position{line: 637, col: 26, offset: 26880},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 637, col: 26, offset: 26880},
									val:        "+",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 637, col: 30, offset: 26884},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 637, col: 38, offset: 26892},
										expr: &seqExpr{
											pos: position{line: 637, col: 39, offset: 26893},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 637, col: 39, offset: 26893},
													expr: &choiceExpr{
														pos: position{line: 1000, col: 12, offset: 40394},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1000, col: 12, offset: 40394},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1000, col: 21, offset: 40403},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 637, col: 48, offset: 26902},
													expr: &litMatcher{
														pos:        position{line: 637, col: 49, offset: 26903},
														val:        "+",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 637, col: 53, offset: 26907,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 637, col: 57, offset: 26911},
									val:        "+",
									ignoreCase: false,
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 635, col: 64, offset: 26837},
						name: "PassthroughMacro",
					},
				},
			},
		},
		{
			name: "PassthroughMacro",
			pos:  position{line: 645, col: 1, offset: 27154},
			expr: &choiceExpr{
				pos: position{line: 645, col: 21, offset: 27174},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 645, col: 21, offset: 27174},
						run: (*parser).callonPassthroughMacro2,
						expr: &seqExpr{
							pos: position{line: 645, col: 21, offset: 27174},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 645, col: 21, offset: 27174},
									val:        "pass:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 645, col: 30, offset: 27183},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 645, col: 38, offset: 27191},
										expr: &seqExpr{
											pos: position{line: 651, col: 31, offset: 27491},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 651, col: 31, offset: 27491},
													expr: &litMatcher{
														pos:        position{line: 651, col: 32, offset: 27492},
														val:        "]",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 651, col: 36, offset: 27496,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 645, col: 67, offset: 27220},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 647, col: 5, offset: 27311},
						run: (*parser).callonPassthroughMacro12,
						expr: &seqExpr{
							pos: position{line: 647, col: 5, offset: 27311},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 647, col: 5, offset: 27311},
									val:        "pass:q[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 647, col: 15, offset: 27321},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 647, col: 23, offset: 27329},
										expr: &choiceExpr{
											pos: position{line: 647, col: 24, offset: 27330},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 647, col: 24, offset: 27330},
													name: "QuotedText",
												},
												&seqExpr{
													pos: position{line: 651, col: 31, offset: 27491},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 651, col: 31, offset: 27491},
															expr: &litMatcher{
																pos:        position{line: 651, col: 32, offset: 27492},
																val:        "]",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 651, col: 36, offset: 27496,
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 647, col: 65, offset: 27371},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DelimitedBlock",
			pos:  position{line: 739, col: 1, offset: 30791},
			expr: &choiceExpr{
				pos: position{line: 739, col: 19, offset: 30809},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 739, col: 19, offset: 30809},
						name: "FencedBlock",
					},
					&actionExpr{
						pos: position{line: 765, col: 17, offset: 31988},
						run: (*parser).callonDelimitedBlock3,
						expr: &seqExpr{
							pos: position{line: 765, col: 17, offset: 31988},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 765, col: 17, offset: 31988},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 765, col: 28, offset: 31999},
										expr: &actionExpr{
											pos: position{line: 136, col: 21, offset: 5188},
											run: (*parser).callonDelimitedBlock7,
											expr: &seqExpr{
												pos: position{line: 136, col: 21, offset: 5188},
												exprs: []interface{}{
													&labeledExpr{
														pos:   position{line: 136, col: 21, offset: 5188},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 136, col: 27, offset: 5194},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 145, col: 14, offset: 5645},
																	run: (*parser).callonDelimitedBlock11,
																	expr: &labeledExpr{
																		pos:   position{line: 145, col: 14, offset: 5645},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 151, col: 20, offset: 5775},
																			run: (*parser).callonDelimitedBlock13,
																			expr: &seqExpr{
																				pos: position{line: 151, col: 20, offset: 5775},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 151, col: 20, offset: 5775},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 151, col: 25, offset: 5780},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 982, col: 7, offset: 40050},
																							run: (*parser).callonDelimitedBlock17,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 982, col: 7, offset: 40050},
																								expr: &seqExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 982, col: 8, offset: 40051},
																											expr: &choiceExpr{
																												pos: position{line: 1000, col: 12, offset: 40394},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 17, offset: 40060},
																											expr: &choiceExpr{
																												pos: position{line: 996, col: 7, offset: 40332},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 996, col: 7, offset: 40332},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 996, col: 13, offset: 40338},
																														run: (*parser).callonDelimitedBlock27,
																														expr: &litMatcher{
																															pos:        position{line: 996, col: 13, offset: 40338},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 21, offset: 40064},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 22, offset: 40065},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 26, offset: 40069},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 27, offset: 40070},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 31, offset: 40074},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 32, offset: 40075},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 37, offset: 40080},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 38, offset: 40081},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 43, offset: 40086},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 44, offset: 40087},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 982, col: 48, offset: 40091,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 151, col: 33, offset: 5788},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 147, col: 5, offset: 5691},
																	run: (*parser).callonDelimitedBlock41,
																	expr: &seqExpr{
																		pos: position{line: 147, col: 5, offset: 5691},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 147, col: 5, offset: 5691},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 147, col: 10, offset: 5696},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonDelimitedBlock45,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonDelimitedBlock55,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 147, col: 18, offset: 5704},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 157, col: 17, offset: 5997},
																	run: (*parser).callonDelimitedBlock69,
																	expr: &seqExpr{
																		pos: position{line: 157, col: 17, offset: 5997},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 157, col: 17, offset: 5997},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 157, col: 21, offset: 6001},
																				expr: &litMatcher{
																					pos:        position{line: 157, col: 22, offset: 6002},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 157, col: 26, offset: 6006},
																				expr: &choiceExpr{
																					pos: position{line: 996, col: 7, offset: 40332},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 996, col: 7, offset: 40332},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 996, col: 13, offset: 40338},
																							run: (*parser).callonDelimitedBlock77,
																							expr: &litMatcher{
																								pos:        position{line: 996, col: 13, offset: 40338},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 157, col: 30, offset: 6010},
																				label: "title",
																				expr: &actionExpr{
																					pos: position{line: 161, col: 24, offset: 6115},
																					run: (*parser).callonDelimitedBlock80,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 161, col: 24, offset: 6115},
																						expr: &seqExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 161, col: 25, offset: 6116},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 161, col: 34, offset: 6125,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 167, col: 16, offset: 6274},
																	run: (*parser).callonDelimitedBlock88,
																	expr: &seqExpr{
																		pos: position{line: 167, col: 16, offset: 6274},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 167, col: 16, offset: 6274},
																				val:        "[.",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 167, col: 21, offset: 6279},
																				expr: &choiceExpr{
																					pos: position{line: 996, col: 7, offset: 40332},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 996, col: 7, offset: 40332},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 996, col: 13, offset: 40338},
																							run: (*parser).callonDelimitedBlock94,
																							expr: &litMatcher{
																								pos:        position{line: 996, col: 13, offset: 40338},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 167, col: 25, offset: 6283},
																				label: "role",
																				expr: &actionExpr{
																					pos: position{line: 171, col: 23, offset: 6387},
																					run: (*parser).callonDelimitedBlock97,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 171, col: 23, offset: 6387},
																						expr: &seqExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 171, col: 24, offset: 6388},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 171, col: 33, offset: 6397},
																									expr: &litMatcher{
																										pos:        position{line: 171, col: 34, offset: 6398},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 171, col: 38, offset: 6402,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 167, col: 51, offset: 6309},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 176, col: 30, offset: 6551},
																	run: (*parser).callonDelimitedBlock108,
																	expr: &seqExpr{
																		pos: position{line: 176, col: 30, offset: 6551},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 176, col: 30, offset: 6551},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 176, col: 34, offset: 6555},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 494, col: 19, offset: 19202},
																							run: (*parser).callonDelimitedBlock113,
																							expr: &litMatcher{
																								pos:        position{line: 494, col: 19, offset: 19202},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 496, col: 5, offset: 19240},
																							run: (*parser).callonDelimitedBlock115,
																							expr: &litMatcher{
																								pos:        position{line: 496, col: 5, offset: 19240},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 498, col: 5, offset: 19280},
																							run: (*parser).callonDelimitedBlock117,
																							expr: &litMatcher{
																								pos:        position{line: 498, col: 5, offset: 19280},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 500, col: 5, offset: 19330},
																							run: (*parser).callonDelimitedBlock119,
																							expr: &litMatcher{
																								pos:        position{line: 500, col: 5, offset: 19330},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 502, col: 5, offset: 19376},
																							run: (*parser).callonDelimitedBlock121,
																							expr: &litMatcher{
																								pos:        position{line: 502, col: 5, offset: 19376},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 176, col: 53, offset: 6574},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 199, col: 21, offset: 7299},
																	run: (*parser).callonDelimitedBlock124,
																	expr: &litMatcher{
																		pos:        position{line: 199, col: 21, offset: 7299},
																		val:        "[horizontal]",
																		ignoreCase: false,
																	},
																},
																&actionExpr{
																	pos: position{line: 181, col: 19, offset: 6735},
																	run: (*parser).callonDelimitedBlock126,
																	expr: &seqExpr{
																		pos: position{line: 181, col: 19, offset: 6735},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 181, col: 19, offset: 6735},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 181, col: 23, offset: 6739},
																				expr: &choiceExpr{
																					pos: position{line: 996, col: 7, offset: 40332},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 996, col: 7, offset: 40332},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 996, col: 13, offset: 40338},
																							run: (*parser).callonDelimitedBlock132,
																							expr: &litMatcher{
																								pos:        position{line: 996, col: 13, offset: 40338},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 181, col: 27, offset: 6743},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 181, col: 38, offset: 6754},
																					expr: &choiceExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								run: (*parser).callonDelimitedBlock137,
																								expr: &seqExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 185, col: 21, offset: 6867},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												run: (*parser).callonDelimitedBlock140,
																												expr: &seqExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															expr: &actionExpr{
																																pos: position{line: 231, col: 14, offset: 8648},
																																run: (*parser).callonDelimitedBlock143,
																																expr: &litMatcher{
																																	pos:        position{line: 231, col: 14, offset: 8648},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 191, col: 28, offset: 7138},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 191, col: 32, offset: 7142},
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 34, offset: 7144},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 38, offset: 7148},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 39, offset: 7149},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 43, offset: 7153},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 44, offset: 7154},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 191, col: 48, offset: 7158,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 185, col: 40, offset: 6886},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 185, col: 44, offset: 6890},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 195, col: 19, offset: 7217},
																												run: (*parser).callonDelimitedBlock157,
																												expr: &labeledExpr{
																													pos:   position{line: 195, col: 19, offset: 7217},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 195, col: 25, offset: 7223},
																														expr: &seqExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 195, col: 26, offset: 7224},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 27, offset: 7225},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 195, col: 31, offset: 7229},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 32, offset: 7230},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 195, col: 36, offset: 7234},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 37, offset: 7235},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 195, col: 41, offset: 7239,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 185, col: 67, offset: 6913},
																											expr: &litMatcher{
																												pos:        position{line: 185, col: 67, offset: 6913},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 185, col: 72, offset: 6918},
																											expr: &choiceExpr{
																												pos: position{line: 996, col: 7, offset: 40332},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 996, col: 7, offset: 40332},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 996, col: 13, offset: 40338},
																														run: (*parser).callonDelimitedBlock173,
																														expr: &litMatcher{
																															pos:        position{line: 996, col: 13, offset: 40338},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								run: (*parser).callonDelimitedBlock175,
																								expr: &seqExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 187, col: 5, offset: 7002},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												run: (*parser).callonDelimitedBlock178,
																												expr: &seqExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															expr: &actionExpr{
																																pos: position{line: 231, col: 14, offset: 8648},
																																run: (*parser).callonDelimitedBlock181,
																																expr: &litMatcher{
																																	pos:        position{line: 231, col: 14, offset: 8648},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 191, col: 28, offset: 7138},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 191, col: 32, offset: 7142},
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 34, offset: 7144},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 38, offset: 7148},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 39, offset: 7149},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 43, offset: 7153},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 44, offset: 7154},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 191, col: 48, offset: 7158,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 187, col: 24, offset: 7021},
																											expr: &litMatcher{
																												pos:        position{line: 187, col: 24, offset: 7021},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 187, col: 29, offset: 7026},
																											expr: &choiceExpr{
																												pos: position{line: 996, col: 7, offset: 40332},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 996, col: 7, offset: 40332},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 996, col: 13, offset: 40338},
																														run: (*parser).callonDelimitedBlock198,
																														expr: &litMatcher{
																															pos:        position{line: 996, col: 13, offset: 40338},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 181, col: 59, offset: 6775},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 136, col: 131, offset: 5298},
														expr: &choiceExpr{
															pos: position{line: 996, col: 7, offset: 40332},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 996, col: 7, offset: 40332},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 996, col: 13, offset: 40338},
																	run: (*parser).callonDelimitedBlock204,
																	expr: &litMatcher{
																		pos:        position{line: 996, col: 13, offset: 40338},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1004, col: 8, offset: 40434},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1000, col: 12, offset: 40394},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1000, col: 21, offset: 40403},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1002, col: 8, offset: 40423},
																expr: &anyMatcher{
																	line: 1002, col: 9, offset: 40424,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 762, col: 26, offset: 31929},
									val:        "----",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 765, col: 70, offset: 32041},
									expr: &choiceExpr{
										pos: position{line: 996, col: 7, offset: 40332},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 996, col: 7, offset: 40332},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 996, col: 13, offset: 40338},
												run: (*parser).callonDelimitedBlock215,
												expr: &litMatcher{
													pos:        position{line: 996, col: 13, offset: 40338},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1000, col: 12, offset: 40394},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1000, col: 12, offset: 40394},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1000, col: 21, offset: 40403},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 765, col: 82, offset: 32053},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 765, col: 90, offset: 32061},
										expr: &actionExpr{
											pos: position{line: 769, col: 24, offset: 32267},
											run: (*parser).callonDelimitedBlock222,
											expr: &labeledExpr{
												pos:   position{line: 769, col: 24, offset: 32267},
												label: "lines",
												expr: &oneOrMoreExpr{
													pos: position{line: 769, col: 30, offset: 32273},
													expr: &actionExpr{
														pos: position{line: 773, col: 21, offset: 32376},
														run: (*parser).callonDelimitedBlock225,
														expr: &seqExpr{
															pos: position{line: 773, col: 21, offset: 32376},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 773, col: 21, offset: 32376},
																	expr: &litMatcher{
																		pos:        position{line: 762, col: 26, offset: 31929},
																		val:        "----",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 773, col: 44, offset: 32399},
																	expr: &notExpr{
																		pos: position{line: 1002, col: 8, offset: 40423},
																		expr: &anyMatcher{
																			line: 1002, col: 9, offset: 40424,
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 773, col: 49, offset: 32404},
																	label: "line",
																	expr: &actionExpr{
																		pos: position{line: 777, col: 28, offset: 32515},
																		run: (*parser).callonDelimitedBlock233,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 777, col: 28, offset: 32515},
																			expr: &seqExpr{
																				pos: position{line: 777, col: 29, offset: 32516},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 777, col: 29, offset: 32516},
																						expr: &litMatcher{
																							pos:        position{line: 762, col: 26, offset: 31929},
																							val:        "----",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 777, col: 52, offset: 32539},
																						expr: &choiceExpr{
																							pos: position{line: 1004, col: 8, offset: 40434},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1000, col: 12, offset: 40394},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1000, col: 21, offset: 40403},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1002, col: 8, offset: 40423},
																									expr: &anyMatcher{
																										line: 1002, col: 9, offset: 40424,
																									},
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 777, col: 57, offset: 32544,
																					},
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1004, col: 8, offset: 40434},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1000, col: 12, offset: 40394},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1000, col: 21, offset: 40403},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1002, col: 8, offset: 40423},
																			expr: &anyMatcher{
																				line: 1002, col: 9, offset: 40424,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 765, col: 114, offset: 32085},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 765, col: 115, offset: 32086},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 762, col: 26, offset: 31929},
													val:        "----",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 765, col: 137, offset: 32108},
													expr: &choiceExpr{
														pos: position{line: 996, col: 7, offset: 40332},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 996, col: 7, offset: 40332},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 996, col: 13, offset: 40338},
																run: (*parser).callonDelimitedBlock256,
																expr: &litMatcher{
																	pos:        position{line: 996, col: 13, offset: 40338},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1004, col: 8, offset: 40434},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1002, col: 8, offset: 40423},
															expr: &anyMatcher{
																line: 1002, col: 9, offset: 40424,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1002, col: 8, offset: 40423},
											expr: &anyMatcher{
												line: 1002, col: 9, offset: 40424,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 739, col: 48, offset: 30838},
						name: "ExampleBlock",
					},
					&actionExpr{
						pos: position{line: 907, col: 17, offset: 37451},
						run: (*parser).callonDelimitedBlock266,
						expr: &seqExpr{
							pos: position{line: 907, col: 17, offset: 37451},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 907, col: 17, offset: 37451},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 907, col: 28, offset: 37462},
										expr: &actionExpr{
											pos: position{line: 136, col: 21, offset: 5188},
											run: (*parser).callonDelimitedBlock270,
											expr: &seqExpr{
												pos: position{line: 136, col: 21, offset: 5188},
												exprs: []interface{}{
													&labeledExpr{
														pos:   position{line: 136, col: 21, offset: 5188},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 136, col: 27, offset: 5194},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 145, col: 14, offset: 5645},
																	run: (*parser).callonDelimitedBlock274,
																	expr: &labeledExpr{
																		pos:   position{line: 145, col: 14, offset: 5645},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 151, col: 20, offset: 5775},
																			run: (*parser).callonDelimitedBlock276,
																			expr: &seqExpr{
																				pos: position{line: 151, col: 20, offset: 5775},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 151, col: 20, offset: 5775},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 151, col: 25, offset: 5780},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 982, col: 7, offset: 40050},
																							run: (*parser).callonDelimitedBlock280,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 982, col: 7, offset: 40050},
																								expr: &seqExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 982, col: 8, offset: 40051},
																											expr: &choiceExpr{
																												pos: position{line: 1000, col: 12, offset: 40394},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1000, col: 12, offset: 40394},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1000, col: 21, offset: 40403},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 17, offset: 40060},
																											expr: &choiceExpr{
																												pos: position{line: 996, col: 7, offset: 40332},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 996, col: 7, offset: 40332},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 996, col: 13, offset: 40338},
																														run: (*parser).callonDelimitedBlock290,
																														expr: &litMatcher{
																															pos:        position{line: 996, col: 13, offset: 40338},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 21, offset: 40064},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 22, offset: 40065},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 26, offset: 40069},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 27, offset: 40070},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 31, offset: 40074},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 32, offset: 40075},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 37, offset: 40080},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 38, offset: 40081},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 982, col: 43, offset: 40086},
																											expr: &litMatcher{
																												pos:        position{line: 982, col: 44, offset: 40087},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 982, col: 48, offset: 40091,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 151, col: 33, offset: 5788},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 147, col: 5, offset: 5691},
																	run: (*parser).callonDelimitedBlock304,
																	expr: &seqExpr{
																		pos: position{line: 147, col: 5, offset: 5691},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 147, col: 5, offset: 5691},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 147, col: 10, offset: 5696},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonDelimitedBlock308,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonDelimitedBlock318,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 147, col: 18, offset: 5704},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 157, col: 17, offset: 5997},
																	run: (*parser).callonDelimitedBlock332,
																	expr: &seqExpr{
																		pos: position{line: 157, col: 17, offset: 5997},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 157, col: 17, offset: 5997},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 157, col: 21, offset: 6001},
																				expr: &litMatcher{
																					pos:        position{line: 157, col: 22, offset: 6002},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 157, col: 26, offset: 6006},
																				expr: &choiceExpr{
																					pos: position{line: 996, col: 7, offset: 40332},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 996, col: 7, offset: 40332},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 996, col: 13, offset: 40338},
																							run: (*parser).callonDelimitedBlock340,
																							expr: &litMatcher{
																								pos:        position{line: 996, col: 13, offset: 40338},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 157, col: 30, offset: 6010},
																				label: "title",
																				expr: &actionExpr{
																					pos: position{line: 161, col: 24, offset: 6115},
																					run: (*parser).callonDelimitedBlock343,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 161, col: 24, offset: 6115},
																						expr: &seqExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 161, col: 25, offset: 6116},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 161, col: 34, offset: 6125,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 167, col: 16, offset: 6274},
																	run: (*parser).callonDelimitedBlock351,
																	expr: &seqExpr{
																		pos: position{line: 167, col: 16, offset: 6274},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 167, col: 16, offset: 6274},
																				val:        "[.",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 167, col: 21, offset: 6279},
																				expr: &choiceExpr{
																					pos: position{line: 996, col: 7, offset: 40332},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 996, col: 7, offset: 40332},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 996, col: 13, offset: 40338},
																							run: (*parser).callonDelimitedBlock357,
																							expr: &litMatcher{
																								pos:        position{line: 996, col: 13, offset: 40338},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 167, col: 25, offset: 6283},
																				label: "role",
																				expr: &actionExpr{
																					pos: position{line: 171, col: 23, offset: 6387},
																					run: (*parser).callonDelimitedBlock360,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 171, col: 23, offset: 6387},
																						expr: &seqExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 171, col: 24, offset: 6388},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 171, col: 33, offset: 6397},
																									expr: &litMatcher{
																										pos:        position{line: 171, col: 34, offset: 6398},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 171, col: 38, offset: 6402,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 167, col: 51, offset: 6309},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 176, col: 30, offset: 6551},
																	run: (*parser).callonDelimitedBlock371,
																	expr: &seqExpr{
																		pos: position{line: 176, col: 30, offset: 6551},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 176, col: 30, offset: 6551},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 176, col: 34, offset: 6555},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 494, col: 19, offset: 19202},
																							run: (*parser).callonDelimitedBlock376,
																							expr: &litMatcher{
																								pos:        position{line: 494, col: 19, offset: 19202},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 496, col: 5, offset: 19240},
																							run: (*parser).callonDelimitedBlock378,
																							expr: &litMatcher{
																								pos:        position{line: 496, col: 5, offset: 19240},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 498, col: 5, offset: 19280},
																							run: (*parser).callonDelimitedBlock380,
																							expr: &litMatcher{
																								pos:        position{line: 498, col: 5, offset: 19280},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 500, col: 5, offset: 19330},
																							run: (*parser).callonDelimitedBlock382,
																							expr: &litMatcher{
																								pos:        position{line: 500, col: 5, offset: 19330},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 502, col: 5, offset: 19376},
																							run: (*parser).callonDelimitedBlock384,
																							expr: &litMatcher{
																								pos:        position{line: 502, col: 5, offset: 19376},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 176, col: 53, offset: 6574},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 199, col: 21, offset: 7299},
																	run: (*parser).callonDelimitedBlock387,
																	expr: &litMatcher{
																		pos:        position{line: 199, col: 21, offset: 7299},
																		val:        "[horizontal]",
																		ignoreCase: false,
																	},
																},
																&actionExpr{
																	pos: position{line: 181, col: 19, offset: 6735},
																	run: (*parser).callonDelimitedBlock389,
																	expr: &seqExpr{
																		pos: position{line: 181, col: 19, offset: 6735},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 181, col: 19, offset: 6735},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 181, col: 23, offset: 6739},
																				expr: &choiceExpr{
																					pos: position{line: 996, col: 7, offset: 40332},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 996, col: 7, offset: 40332},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 996, col: 13, offset: 40338},
																							run: (*parser).callonDelimitedBlock395,
																							expr: &litMatcher{
																								pos:        position{line: 996, col: 13, offset: 40338},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 181, col: 27, offset: 6743},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 181, col: 38, offset: 6754},
																					expr: &choiceExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								run: (*parser).callonDelimitedBlock400,
																								expr: &seqExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 185, col: 21, offset: 6867},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												run: (*parser).callonDelimitedBlock403,
																												expr: &seqExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															expr: &actionExpr{
																																pos: position{line: 231, col: 14, offset: 8648},
																																run: (*parser).callonDelimitedBlock406,
																																expr: &litMatcher{
																																	pos:        position{line: 231, col: 14, offset: 8648},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 191, col: 28, offset: 7138},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 191, col: 32, offset: 7142},
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 34, offset: 7144},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 38, offset: 7148},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 39, offset: 7149},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 43, offset: 7153},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 44, offset: 7154},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 191, col: 48, offset: 7158,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 185, col: 40, offset: 6886},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 185, col: 44, offset: 6890},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 195, col: 19, offset: 7217},
																												run: (*parser).callonDelimitedBlock420,
																												expr: &labeledExpr{
																													pos:   position{line: 195, col: 19, offset: 7217},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 195, col: 25, offset: 7223},
																														expr: &seqExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 195, col: 26, offset: 7224},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 27, offset: 7225},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 195, col: 31, offset: 7229},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 32, offset: 7230},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 195, col: 36, offset: 7234},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 37, offset: 7235},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 195, col: 41, offset: 7239,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 185, col: 67, offset: 6913},
																											expr: &litMatcher{
																												pos:        position{line: 185, col: 67, offset: 6913},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 185, col: 72, offset: 6918},
																											expr: &choiceExpr{
																												pos: position{line: 996, col: 7, offset: 40332},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 996, col: 7, offset: 40332},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 996, col: 13, offset: 40338},
																														run: (*parser).callonDelimitedBlock436,
																														expr: &litMatcher{
																															pos:        position{line: 996, col: 13, offset: 40338},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								run: (*parser).callonDelimitedBlock438,
																								expr: &seqExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 187, col: 5, offset: 7002},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												run: (*parser).callonDelimitedBlock441,
																												expr: &seqExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															expr: &actionExpr{
																																pos: position{line: 231, col: 14, offset: 8648},
																																run: (*parser).callonDelimitedBlock444,
																																expr: &litMatcher{
																																	pos:        position{line: 231, col: 14, offset: 8648},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 191, col: 28, offset: 7138},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 191, col: 32, offset: 7142},
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 34, offset: 7144},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 38, offset: 7148},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 39, offset: 7149},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 43, offset: 7153},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 44, offset: 7154},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 191, col: 48, offset: 7158,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 187, col: 24, offset: 7021},
																											expr: &litMatcher{
																												pos:        position{line: 187, col: 24, offset: 7021},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 187, col: 29, offset: 7026},
																											expr: &choiceExpr{
																												pos: position{line: 996, col: 7, offset: 40332},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 996, col: 7, offset: 40332},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 996, col: 13, offset: 40338},
																														run: (*parser).callonDelimitedBlock461,
																														expr: &litMatcher{
																															pos:        position{line: 996, col: 13, offset: 40338},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 181, col: 59, offset: 6775},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 136, col: 131, offset: 5298},
														expr: &choiceExpr{
															pos: position{line: 996, col: 7, offset: 40332},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 996, col: 7, offset: 40332},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 996, col: 13, offset: 40338},
																	run: (*parser).callonDelimitedBlock467,
																	expr: &litMatcher{
																		pos:        position{line: 996, col: 13, offset: 40338},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1004, col: 8, offset: 40434},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1000, col: 12, offset: 40394},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1000, col: 21, offset: 40403},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1002, col: 8, offset: 40423},
																expr: &anyMatcher{
																	line: 1002, col: 9, offset: 40424,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 905, col: 26, offset: 37427},
									val:        "////",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 907, col: 70, offset: 37504},
									expr: &choiceExpr{
										pos: position{line: 996, col: 7, offset: 40332},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 996, col: 7, offset: 40332},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 996, col: 13, offset: 40338},
												run: (*parser).callonDelimitedBlock478,
												expr: &litMatcher{
													pos:        position{line: 996, col: 13, offset: 40338},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1000, col: 12, offset: 40394},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1000, col: 12, offset: 40394},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1000, col: 21, offset: 40403},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 907, col: 82, offset: 37516},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 907, col: 90, offset: 37524},
										expr: &actionExpr{
											pos: position{line: 911, col: 21, offset: 37729},
											run: (*parser).callonDelimitedBlock485,
											expr: &seqExpr{
												pos: position{line: 911, col: 21, offset: 37729},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 911, col: 21, offset: 37729},
														expr: &seqExpr{
															pos: position{line: 911, col: 22, offset: 37730},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 911, col: 22, offset: 37730},
																	expr: &litMatcher{
																		pos:        position{line: 905, col: 26, offset: 37427},
																		val:        "////",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 911, col: 45, offset: 37753},
																	expr: &choiceExpr{
																		pos: position{line: 1004, col: 8, offset: 40434},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1000, col: 12, offset: 40394},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1000, col: 21, offset: 40403},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1002, col: 8, offset: 40423},
																				expr: &anyMatcher{
																					line: 1002, col: 9, offset: 40424,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 911, col: 50, offset: 37758,
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1004, col: 8, offset: 40434},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1000, col: 12, offset: 40394},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1000, col: 21, offset: 40403},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1002, col: 8, offset: 40423},
																expr: &anyMatcher{
																	line: 1002, col: 9, offset: 40424,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 907, col: 112, offset: 37546},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 907, col: 113, offset: 37547},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 905, col: 26, offset: 37427},
													val:        "////",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 907, col: 135, offset: 37569},
													expr: &choiceExpr{
														pos: position{line: 996, col: 7, offset: 40332},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 996, col: 7, offset: 40332},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 996, col: 13, offset: 40338},
																run: (*parser).callonDelimitedBlock509,
																expr: &litMatcher{
																	pos:        position{line: 996, col: 13, offset: 40338},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1004, col: 8, offset: 40434},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1000, col: 12, offset: 40394},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1000, col: 21, offset: 40403},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1002, col: 8, offset: 40423},
															expr: &anyMatcher{
																line: 1002, col: 9, offset: 40424,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1002, col: 8, offset: 40423},
											expr: &anyMatcher{
												line: 1002, col: 9, offset: 40424,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 740, col: 34, offset: 30885},
						name: "VerseBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 740, col: 47, offset: 30898},
						name: "QuoteBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 741, col: 19, offset: 30928},
						name: "SidebarBlock",
					},
				},
			},
		},
		{
			name: "FencedBlock",
			pos:  position{line: 753, col: 1, offset: 31384},
			expr: &actionExpr{
				pos: position{line: 753, col: 16, offset: 31399},
				run: (*parser).callonFencedBlock1,
				expr: &seqExpr{
					pos: position{line: 753, col: 16, offset: 31399},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 753, col: 16, offset: 31399},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 753, col: 27, offset: 31410},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonFencedBlock5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonFencedBlock9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonFencedBlock11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonFencedBlock15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonFencedBlock25,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonFencedBlock39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			run: (*parser).callonFencedBlock43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 982, col: 7, offset: 40050},
																				expr: &seqExpr{
																					pos: position{line: 982, col: 8, offset: 40051},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 17, offset: 40060},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonFencedBlock53,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 21, offset: 40064},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 22, offset: 40065},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 26, offset: 40069},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 27, offset: 40070},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 31, offset: 40074},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 32, offset: 40075},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 37, offset: 40080},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 38, offset: 40081},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 43, offset: 40086},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 44, offset: 40087},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 982, col: 48, offset: 40091,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonFencedBlock67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonFencedBlock75,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonFencedBlock78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonFencedBlock86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonFencedBlock92,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonFencedBlock95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonFencedBlock106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonFencedBlock111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonFencedBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonFencedBlock115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonFencedBlock117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonFencedBlock119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonFencedBlock122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonFencedBlock124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonFencedBlock130,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonFencedBlock135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonFencedBlock138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonFencedBlock141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonFencedBlock155,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonFencedBlock171,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonFencedBlock173,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonFencedBlock176,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonFencedBlock179,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonFencedBlock196,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonFencedBlock202,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 751, col: 25, offset: 31377},
							val:        "```",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 753, col: 68, offset: 31451},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonFencedBlock213,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1000, col: 12, offset: 40394},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 753, col: 80, offset: 31463},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 753, col: 88, offset: 31471},
								expr: &ruleRefExpr{
									pos:  position{line: 753, col: 89, offset: 31472},
									name: "FencedBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 753, col: 111, offset: 31494},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 753, col: 112, offset: 31495},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 751, col: 25, offset: 31377},
											val:        "```",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 753, col: 133, offset: 31516},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonFencedBlock227,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1004, col: 8, offset: 40434},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1002, col: 8, offset: 40423},
													expr: &anyMatcher{
														line: 1002, col: 9, offset: 40424,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FencedBlockContent",
			pos:  position{line: 757, col: 1, offset: 31651},
			expr: &choiceExpr{
				pos: position{line: 757, col: 23, offset: 31673},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 757, col: 23, offset: 31673},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 757, col: 30, offset: 31680},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 963, col: 14, offset: 39679},
						run: (*parser).callonFencedBlockContent4,
						expr: &seqExpr{
							pos: position{line: 963, col: 14, offset: 39679},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 963, col: 14, offset: 39679},
									expr: &notExpr{
										pos: position{line: 1002, col: 8, offset: 40423},
										expr: &anyMatcher{
											line: 1002, col: 9, offset: 40424,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 963, col: 19, offset: 39684},
									expr: &choiceExpr{
										pos: position{line: 996, col: 7, offset: 40332},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 996, col: 7, offset: 40332},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 996, col: 13, offset: 40338},
												run: (*parser).callonFencedBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 996, col: 13, offset: 40338},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1004, col: 8, offset: 40434},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1000, col: 12, offset: 40394},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1000, col: 21, offset: 40403},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1002, col: 8, offset: 40423},
											expr: &anyMatcher{
												line: 1002, col: 9, offset: 40424,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ExampleBlock",
			pos:  position{line: 786, col: 1, offset: 32913},
			expr: &actionExpr{
				pos: position{line: 786, col: 17, offset: 32929},
				run: (*parser).callonExampleBlock1,
				expr: &seqExpr{
					pos: position{line: 786, col: 17, offset: 32929},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 786, col: 17, offset: 32929},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 786, col: 28, offset: 32940},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonExampleBlock5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonExampleBlock9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonExampleBlock11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonExampleBlock15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonExampleBlock25,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonExampleBlock39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			run: (*parser).callonExampleBlock43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 982, col: 7, offset: 40050},
																				expr: &seqExpr{
																					pos: position{line: 982, col: 8, offset: 40051},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 17, offset: 40060},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonExampleBlock53,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 21, offset: 40064},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 22, offset: 40065},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 26, offset: 40069},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 27, offset: 40070},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 31, offset: 40074},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 32, offset: 40075},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 37, offset: 40080},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 38, offset: 40081},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 43, offset: 40086},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 44, offset: 40087},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 982, col: 48, offset: 40091,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonExampleBlock67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonExampleBlock75,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonExampleBlock78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonExampleBlock86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonExampleBlock92,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonExampleBlock95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonExampleBlock106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonExampleBlock111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonExampleBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonExampleBlock115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonExampleBlock117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonExampleBlock119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonExampleBlock122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonExampleBlock124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonExampleBlock130,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonExampleBlock135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonExampleBlock138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonExampleBlock141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonExampleBlock155,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonExampleBlock171,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonExampleBlock173,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonExampleBlock176,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonExampleBlock179,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonExampleBlock196,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonExampleBlock202,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 784, col: 26, offset: 32905},
							val:        "====",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 786, col: 70, offset: 32982},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonExampleBlock213,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1000, col: 12, offset: 40394},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 786, col: 82, offset: 32994},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 786, col: 90, offset: 33002},
								expr: &choiceExpr{
									pos: position{line: 786, col: 91, offset: 33003},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 786, col: 91, offset: 33003},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 786, col: 98, offset: 33010},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 963, col: 14, offset: 39679},
											run: (*parser).callonExampleBlock223,
											expr: &seqExpr{
												pos: position{line: 963, col: 14, offset: 39679},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 963, col: 14, offset: 39679},
														expr: &notExpr{
															pos: position{line: 1002, col: 8, offset: 40423},
															expr: &anyMatcher{
																line: 1002, col: 9, offset: 40424,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 963, col: 19, offset: 39684},
														expr: &choiceExpr{
															pos: position{line: 996, col: 7, offset: 40332},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 996, col: 7, offset: 40332},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 996, col: 13, offset: 40338},
																	run: (*parser).callonExampleBlock231,
																	expr: &litMatcher{
																		pos:        position{line: 996, col: 13, offset: 40338},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1004, col: 8, offset: 40434},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1000, col: 12, offset: 40394},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1000, col: 21, offset: 40403},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1002, col: 8, offset: 40423},
																expr: &anyMatcher{
																	line: 1002, col: 9, offset: 40424,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 786, col: 129, offset: 33041},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 786, col: 130, offset: 33042},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 784, col: 26, offset: 32905},
											val:        "====",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 786, col: 152, offset: 33064},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonExampleBlock244,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1004, col: 8, offset: 40434},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1002, col: 8, offset: 40423},
													expr: &anyMatcher{
														line: 1002, col: 9, offset: 40424,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "BlockParagraph",
			pos:  position{line: 791, col: 1, offset: 33218},
			expr: &actionExpr{
				pos: position{line: 791, col: 20, offset: 33237},
				run: (*parser).callonBlockParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 791, col: 20, offset: 33237},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 791, col: 26, offset: 33243},
						expr: &ruleRefExpr{
							pos:  position{line: 791, col: 27, offset: 33244},
							name: "BlockParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "BlockParagraphLine",
			pos:  position{line: 795, col: 1, offset: 33329},
			expr: &actionExpr{
				pos: position{line: 795, col: 23, offset: 33351},
				run: (*parser).callonBlockParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 795, col: 23, offset: 33351},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 795, col: 23, offset: 33351},
							expr: &actionExpr{
								pos: position{line: 405, col: 26, offset: 14956},
								run: (*parser).callonBlockParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 405, col: 26, offset: 14956},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 405, col: 26, offset: 14956},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonBlockParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 405, col: 30, offset: 14960},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 407, col: 5, offset: 15015},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 407, col: 5, offset: 15015},
														run: (*parser).callonBlockParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 407, col: 5, offset: 15015},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 409, col: 9, offset: 15128},
														run: (*parser).callonBlockParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 409, col: 9, offset: 15128},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 411, col: 9, offset: 15239},
														run: (*parser).callonBlockParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 411, col: 9, offset: 15239},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 413, col: 9, offset: 15348},
														run: (*parser).callonBlockParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 413, col: 9, offset: 15348},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 415, col: 9, offset: 15455},
														run: (*parser).callonBlockParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 415, col: 9, offset: 15455},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 418, col: 9, offset: 15582},
														run: (*parser).callonBlockParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 418, col: 9, offset: 15582},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 418, col: 9, offset: 15582},
																	expr: &charClassMatcher{
																		pos:        position{line: 418, col: 10, offset: 15583},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 418, col: 18, offset: 15591},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 420, col: 9, offset: 15694},
														run: (*parser).callonBlockParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 420, col: 9, offset: 15694},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 420, col: 9, offset: 15694},
																	expr: &charClassMatcher{
																		pos:        position{line: 420, col: 10, offset: 15695},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 420, col: 18, offset: 15703},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 422, col: 9, offset: 15809},
														run: (*parser).callonBlockParagraphLine33,
														expr: &seqExpr{
															pos: position{line: 422, col: 9, offset: 15809},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 422, col: 9, offset: 15809},
																	expr: &charClassMatcher{
																		pos:        position{line: 422, col: 10, offset: 15810},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 422, col: 18, offset: 15818},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 9, offset: 15924},
														run: (*parser).callonBlockParagraphLine38,
														expr: &seqExpr{
															pos: position{line: 424, col: 9, offset: 15924},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 424, col: 9, offset: 15924},
																	expr: &charClassMatcher{
																		pos:        position{line: 424, col: 10, offset: 15925},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 424, col: 18, offset: 15933},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 426, col: 9, offset: 16039},
														run: (*parser).callonBlockParagraphLine43,
														expr: &seqExpr{
															pos: position{line: 426, col: 9, offset: 16039},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 426, col: 9, offset: 16039},
																	expr: &charClassMatcher{
																		pos:        position{line: 426, col: 10, offset: 16040},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 426, col: 18, offset: 16048},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 428, col: 8, offset: 16153},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonBlockParagraphLine51,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 796, col: 9, offset: 33385},
							expr: &actionExpr{
								pos: position{line: 444, col: 5, offset: 16811},
								run: (*parser).callonBlockParagraphLine54,
								expr: &seqExpr{
									pos: position{line: 444, col: 5, offset: 16811},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 444, col: 5, offset: 16811},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonBlockParagraphLine59,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 444, col: 9, offset: 16815},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 445, col: 9, offset: 16832},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 445, col: 9, offset: 16832},
														run: (*parser).callonBlockParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 445, col: 9, offset: 16832},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 448, col: 11, offset: 17001},
														run: (*parser).callonBlockParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 448, col: 11, offset: 17001},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 451, col: 11, offset: 17170},
														run: (*parser).callonBlockParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 451, col: 11, offset: 17170},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 454, col: 11, offset: 17339},
														run: (*parser).callonBlockParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 454, col: 11, offset: 17339},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 11, offset: 17505},
														run: (*parser).callonBlockParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 457, col: 11, offset: 17505},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 460, col: 11, offset: 17669},
														run: (*parser).callonBlockParagraphLine73,
														expr: &litMatcher{
															pos:        position{line: 460, col: 11, offset: 17669},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 462, col: 12, offset: 17816},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonBlockParagraphLine78,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 797, col: 9, offset: 33421},
							expr: &seqExpr{
								pos: position{line: 797, col: 11, offset: 33423},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 480, col: 24, offset: 18652},
										run: (*parser).callonBlockParagraphLine82,
										expr: &zeroOrMoreExpr{
											pos: position{line: 480, col: 24, offset: 18652},
											expr: &seqExpr{
												pos: position{line: 480, col: 25, offset: 18653},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 480, col: 25, offset: 18653},
														expr: &choiceExpr{
															pos: position{line: 1000, col: 12, offset: 40394},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1000, col: 12, offset: 40394},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1000, col: 21, offset: 40403},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 480, col: 34, offset: 18662},
														expr: &litMatcher{
															pos:        position{line: 480, col: 35, offset: 18663},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 480, col: 40, offset: 18668,
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 485, col: 30, offset: 18798},
										val:        "::",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 485, col: 35, offset: 18803},
										expr: &choiceExpr{
											pos: position{line: 485, col: 36, offset: 18804},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 996, col: 7, offset: 40332},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 996, col: 13, offset: 40338},
													run: (*parser).callonBlockParagraphLine96,
													expr: &litMatcher{
														pos:        position{line: 996, col: 13, offset: 40338},
														val:        "\t",
														ignoreCase: false,
													},
												},
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 798, col: 9, offset: 33478},
							expr: &actionExpr{
								pos: position{line: 390, col: 25, offset: 14402},
								run: (*parser).callonBlockParagraphLine101,
								expr: &seqExpr{
									pos: position{line: 390, col: 25, offset: 14402},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 390, col: 25, offset: 14402},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 390, col: 29, offset: 14406},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonBlockParagraphLine107,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1004, col: 8, offset: 40434},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1002, col: 8, offset: 40423},
													expr: &anyMatcher{
														line: 1002, col: 9, offset: 40424,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 799, col: 9, offset: 33511},
							expr: &choiceExpr{
								pos: position{line: 743, col: 19, offset: 30960},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 948, col: 26, offset: 39156},
										val:        "....",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 751, col: 25, offset: 31377},
										val:        "```",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 762, col: 26, offset: 31929},
										val:        "----",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 784, col: 26, offset: 32905},
										val:        "====",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 905, col: 26, offset: 37427},
										val:        "////",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 807, col: 24, offset: 33803},
										val:        "____",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 861, col: 26, offset: 35755},
										val:        "****",
										ignoreCase: false,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 800, col: 9, offset: 33538},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 800, col: 15, offset: 33544},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlock",
			pos:  position{line: 809, col: 1, offset: 33836},
			expr: &actionExpr{
				pos: position{line: 809, col: 15, offset: 33850},
				run: (*parser).callonQuoteBlock1,
				expr: &seqExpr{
					pos: position{line: 809, col: 15, offset: 33850},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 809, col: 15, offset: 33850},
							label: "attributes",
							expr: &oneOrMoreExpr{
								pos: position{line: 809, col: 26, offset: 33861},
								expr: &actionExpr{
									pos: position{line: 817, col: 5, offset: 34159},
									run: (*parser).callonQuoteBlock5,
									expr: &seqExpr{
										pos: position{line: 817, col: 5, offset: 34159},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 817, col: 5, offset: 34159},
												label: "attribute",
												expr: &choiceExpr{
													pos: position{line: 203, col: 20, offset: 7402},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 203, col: 20, offset: 7402},
															run: (*parser).callonQuoteBlock9,
															expr: &seqExpr{
																pos: position{line: 203, col: 20, offset: 7402},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 203, col: 20, offset: 7402},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 203, col: 24, offset: 7406},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 215, col: 14, offset: 7912},
																			run: (*parser).callonQuoteBlock13,
																			expr: &seqExpr{
																				pos: position{line: 215, col: 14, offset: 7912},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 215, col: 14, offset: 7912},
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonQuoteBlock16,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 215, col: 25, offset: 7923},
																						expr: &seqExpr{
																							pos: position{line: 215, col: 26, offset: 7924},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 215, col: 26, offset: 7924},
																									expr: &choiceExpr{
																										pos: position{line: 1004, col: 8, offset: 40434},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1002, col: 8, offset: 40423},
																												expr: &anyMatcher{
																													line: 1002, col: 9, offset: 40424,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 31, offset: 7929},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonQuoteBlock29,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 35, offset: 7933},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 36, offset: 7934},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 40, offset: 7938},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 41, offset: 7939},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 45, offset: 7943},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 46, offset: 7944},
																										val:        "#",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 50, offset: 7948},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 51, offset: 7949},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 55, offset: 7953},
																									expr: &choiceExpr{
																										pos: position{line: 494, col: 19, offset: 19202},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 494, col: 19, offset: 19202},
																												run: (*parser).callonQuoteBlock41,
																												expr: &litMatcher{
																													pos:        position{line: 494, col: 19, offset: 19202},
																													val:        "TIP",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 496, col: 5, offset: 19240},
																												run: (*parser).callonQuoteBlock43,
																												expr: &litMatcher{
																													pos:        position{line: 496, col: 5, offset: 19240},
																													val:        "NOTE",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 498, col: 5, offset: 19280},
																												run: (*parser).callonQuoteBlock45,
																												expr: &litMatcher{
																													pos:        position{line: 498, col: 5, offset: 19280},
																													val:        "IMPORTANT",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 500, col: 5, offset: 19330},
																												run: (*parser).callonQuoteBlock47,
																												expr: &litMatcher{
																													pos:        position{line: 500, col: 5, offset: 19330},
																													val:        "WARNING",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 502, col: 5, offset: 19376},
																												run: (*parser).callonQuoteBlock49,
																												expr: &litMatcher{
																													pos:        position{line: 502, col: 5, offset: 19376},
																													val:        "CAUTION",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 215, col: 71, offset: 7969,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 203, col: 41, offset: 7423},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonQuoteBlock55,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 203, col: 45, offset: 7427},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 203, col: 49, offset: 7431},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 235, col: 16, offset: 8707},
																			run: (*parser).callonQuoteBlock59,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 235, col: 16, offset: 8707},
																				expr: &seqExpr{
																					pos: position{line: 235, col: 17, offset: 8708},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 235, col: 17, offset: 8708},
																							expr: &choiceExpr{
																								pos: position{line: 1004, col: 8, offset: 40434},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1002, col: 8, offset: 40423},
																										expr: &anyMatcher{
																											line: 1002, col: 9, offset: 40424,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 22, offset: 8713},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 23, offset: 8714},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 27, offset: 8718},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 28, offset: 8719},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 235, col: 32, offset: 8723,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 203, col: 70, offset: 7452},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 203, col: 74, offset: 7456},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 239, col: 15, offset: 8777},
																			run: (*parser).callonQuoteBlock75,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 239, col: 15, offset: 8777},
																				expr: &seqExpr{
																					pos: position{line: 239, col: 16, offset: 8778},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 239, col: 16, offset: 8778},
																							expr: &choiceExpr{
																								pos: position{line: 1004, col: 8, offset: 40434},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1002, col: 8, offset: 40423},
																										expr: &anyMatcher{
																											line: 1002, col: 9, offset: 40424,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 239, col: 21, offset: 8783},
																							expr: &litMatcher{
																								pos:        position{line: 239, col: 22, offset: 8784},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 239, col: 26, offset: 8788},
																							expr: &litMatcher{
																								pos:        position{line: 239, col: 27, offset: 8789},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 239, col: 31, offset: 8793,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 203, col: 93, offset: 7475},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 207, col: 5, offset: 7618},
															run: (*parser).callonQuoteBlock90,
															expr: &seqExpr{
																pos: position{line: 207, col: 5, offset: 7618},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 207, col: 5, offset: 7618},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 207, col: 9, offset: 7622},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 215, col: 14, offset: 7912},
																			run: (*parser).callonQuoteBlock94,
																			expr: &seqExpr{
																				pos: position{line: 215, col: 14, offset: 7912},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 215, col: 14, offset: 7912},
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonQuoteBlock97,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 215, col: 25, offset: 7923},
																						expr: &seqExpr{
																							pos: position{line: 215, col: 26, offset: 7924},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 215, col: 26, offset: 7924},
																									expr: &choiceExpr{
																										pos: position{line: 1004, col: 8, offset: 40434},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1002, col: 8, offset: 40423},
																												expr: &anyMatcher{
																													line: 1002, col: 9, offset: 40424,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 31, offset: 7929},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonQuoteBlock110,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 35, offset: 7933},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 36, offset: 7934},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 40, offset: 7938},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 41, offset: 7939},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 45, offset: 7943},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 46, offset: 7944},
																										val:        "#",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 50, offset: 7948},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 51, offset: 7949},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 55, offset: 7953},
																									expr: &choiceExpr{
																										pos: position{line: 494, col: 19, offset: 19202},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 494, col: 19, offset: 19202},
																												run: (*parser).callonQuoteBlock122,
																												expr: &litMatcher{
																													pos:        position{line: 494, col: 19, offset: 19202},
																													val:        "TIP",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 496, col: 5, offset: 19240},
																												run: (*parser).callonQuoteBlock124,
																												expr: &litMatcher{
																													pos:        position{line: 496, col: 5, offset: 19240},
																													val:        "NOTE",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 498, col: 5, offset: 19280},
																												run: (*parser).callonQuoteBlock126,
																												expr: &litMatcher{
																													pos:        position{line: 498, col: 5, offset: 19280},
																													val:        "IMPORTANT",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 500, col: 5, offset: 19330},
																												run: (*parser).callonQuoteBlock128,
																												expr: &litMatcher{
																													pos:        position{line: 500, col: 5, offset: 19330},
																													val:        "WARNING",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 502, col: 5, offset: 19376},
																												run: (*parser).callonQuoteBlock130,
																												expr: &litMatcher{
																													pos:        position{line: 502, col: 5, offset: 19376},
																													val:        "CAUTION",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 215, col: 71, offset: 7969,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 207, col: 26, offset: 7639},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonQuoteBlock136,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 207, col: 30, offset: 7643},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 207, col: 34, offset: 7647},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 235, col: 16, offset: 8707},
																			run: (*parser).callonQuoteBlock140,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 235, col: 16, offset: 8707},
																				expr: &seqExpr{
																					pos: position{line: 235, col: 17, offset: 8708},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 235, col: 17, offset: 8708},
																							expr: &choiceExpr{
																								pos: position{line: 1004, col: 8, offset: 40434},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1002, col: 8, offset: 40423},
																										expr: &anyMatcher{
																											line: 1002, col: 9, offset: 40424,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 22, offset: 8713},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 23, offset: 8714},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 27, offset: 8718},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 28, offset: 8719},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 235, col: 32, offset: 8723,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 207, col: 55, offset: 7668},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 211, col: 5, offset: 7799},
															run: (*parser).callonQuoteBlock155,
															expr: &seqExpr{
																pos: position{line: 211, col: 5, offset: 7799},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 211, col: 5, offset: 7799},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 211, col: 9, offset: 7803},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 215, col: 14, offset: 7912},
																			run: (*parser).callonQuoteBlock159,
																			expr: &seqExpr{
																				pos: position{line: 215, col: 14, offset: 7912},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 215, col: 14, offset: 7912},
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonQuoteBlock162,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 215, col: 25, offset: 7923},
																						expr: &seqExpr{
																							pos: position{line: 215, col: 26, offset: 7924},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 215, col: 26, offset: 7924},
																									expr: &choiceExpr{
																										pos: position{line: 1004, col: 8, offset: 40434},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1002, col: 8, offset: 40423},
																												expr: &anyMatcher{
																													line: 1002, col: 9, offset: 40424,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 31, offset: 7929},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonQuoteBlock175,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 35, offset: 7933},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 36, offset: 7934},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 40, offset: 7938},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 41, offset: 7939},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 45, offset: 7943},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 46, offset: 7944},
																										val:        "#",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 50, offset: 7948},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 51, offset: 7949},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 55, offset: 7953},
																									expr: &choiceExpr{
																										pos: position{line: 494, col: 19, offset: 19202},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 494, col: 19, offset: 19202},
																												run: (*parser).callonQuoteBlock187,
																												expr: &litMatcher{
																													pos:        position{line: 494, col: 19, offset: 19202},
																													val:        "TIP",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 496, col: 5, offset: 19240},
																												run: (*parser).callonQuoteBlock189,
																												expr: &litMatcher{
																													pos:        position{line: 496, col: 5, offset: 19240},
																													val:        "NOTE",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 498, col: 5, offset: 19280},
																												run: (*parser).callonQuoteBlock191,
																												expr: &litMatcher{
																													pos:        position{line: 498, col: 5, offset: 19280},
																													val:        "IMPORTANT",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 500, col: 5, offset: 19330},
																												run: (*parser).callonQuoteBlock193,
																												expr: &litMatcher{
																													pos:        position{line: 500, col: 5, offset: 19330},
																													val:        "WARNING",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 502, col: 5, offset: 19376},
																												run: (*parser).callonQuoteBlock195,
																												expr: &litMatcher{
																													pos:        position{line: 502, col: 5, offset: 19376},
																													val:        "CAUTION",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 215, col: 71, offset: 7969,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 211, col: 26, offset: 7820},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonQuoteBlock201,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 211, col: 30, offset: 7824},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 817, col: 33, offset: 34187},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonQuoteBlock207,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 807, col: 24, offset: 33803},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 809, col: 70, offset: 33905},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonQuoteBlock218,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1000, col: 12, offset: 40394},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 809, col: 82, offset: 33917},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 809, col: 90, offset: 33925},
								expr: &ruleRefExpr{
									pos:  position{line: 809, col: 91, offset: 33926},
									name: "QuoteBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 809, col: 113, offset: 33948},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 809, col: 114, offset: 33949},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 807, col: 24, offset: 33803},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 809, col: 134, offset: 33969},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonQuoteBlock232,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1004, col: 8, offset: 40434},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1002, col: 8, offset: 40423},
													expr: &anyMatcher{
														line: 1002, col: 9, offset: 40424,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlockContent",
			pos:  position{line: 824, col: 1, offset: 34319},
			expr: &actionExpr{
				pos: position{line: 825, col: 5, offset: 34345},
				run: (*parser).callonQuoteBlockContent1,
				expr: &seqExpr{
					pos: position{line: 825, col: 5, offset: 34345},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 825, col: 5, offset: 34345},
							expr: &litMatcher{
								pos:        position{line: 807, col: 24, offset: 33803},
								val:        "____",
								ignoreCase: false,
							},
						},
						&notExpr{
							pos: position{line: 825, col: 26, offset: 34366},
							expr: &notExpr{
								pos: position{line: 1002, col: 8, offset: 40423},
								expr: &anyMatcher{
									line: 1002, col: 9, offset: 40424,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 825, col: 31, offset: 34371},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 825, col: 40, offset: 34380},
								name: "DocumentBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlock",
			pos:  position{line: 834, col: 1, offset: 34676},
			expr: &actionExpr{
				pos: position{line: 834, col: 15, offset: 34690},
				run: (*parser).callonVerseBlock1,
				expr: &seqExpr{
					pos: position{line: 834, col: 15, offset: 34690},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 834, col: 15, offset: 34690},
							label: "attributes",
							expr: &oneOrMoreExpr{
								pos: position{line: 834, col: 26, offset: 34701},
								expr: &actionExpr{
									pos: position{line: 842, col: 5, offset: 34998},
									run: (*parser).callonVerseBlock5,
									expr: &seqExpr{
										pos: position{line: 842, col: 5, offset: 34998},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 842, col: 5, offset: 34998},
												label: "attribute",
												expr: &choiceExpr{
													pos: position{line: 219, col: 20, offset: 8138},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 219, col: 20, offset: 8138},
															run: (*parser).callonVerseBlock9,
															expr: &seqExpr{
																pos: position{line: 219, col: 20, offset: 8138},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 219, col: 20, offset: 8138},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 219, col: 24, offset: 8142},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 231, col: 14, offset: 8648},
																			run: (*parser).callonVerseBlock13,
																			expr: &litMatcher{
																				pos:        position{line: 231, col: 14, offset: 8648},
																				val:        "verse",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 219, col: 41, offset: 8159},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonVerseBlock18,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 219, col: 45, offset: 8163},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 219, col: 49, offset: 8167},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 235, col: 16, offset: 8707},
																			run: (*parser).callonVerseBlock22,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 235, col: 16, offset: 8707},
																				expr: &seqExpr{
																					pos: position{line: 235, col: 17, offset: 8708},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 235, col: 17, offset: 8708},
																							expr: &choiceExpr{
																								pos: position{line: 1004, col: 8, offset: 40434},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1002, col: 8, offset: 40423},
																										expr: &anyMatcher{
																											line: 1002, col: 9, offset: 40424,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 22, offset: 8713},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 23, offset: 8714},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 27, offset: 8718},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 28, offset: 8719},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 235, col: 32, offset: 8723,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 219, col: 70, offset: 8188},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 219, col: 74, offset: 8192},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 239, col: 15, offset: 8777},
																			run: (*parser).callonVerseBlock38,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 239, col: 15, offset: 8777},
																				expr: &seqExpr{
																					pos: position{line: 239, col: 16, offset: 8778},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 239, col: 16, offset: 8778},
																							expr: &choiceExpr{
																								pos: position{line: 1004, col: 8, offset: 40434},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1002, col: 8, offset: 40423},
																										expr: &anyMatcher{
																											line: 1002, col: 9, offset: 40424,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 239, col: 21, offset: 8783},
																							expr: &litMatcher{
																								pos:        position{line: 239, col: 22, offset: 8784},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 239, col: 26, offset: 8788},
																							expr: &litMatcher{
																								pos:        position{line: 239, col: 27, offset: 8789},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 239, col: 31, offset: 8793,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 219, col: 93, offset: 8211},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 223, col: 5, offset: 8354},
															run: (*parser).callonVerseBlock53,
															expr: &seqExpr{
																pos: position{line: 223, col: 5, offset: 8354},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 223, col: 5, offset: 8354},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 223, col: 9, offset: 8358},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 231, col: 14, offset: 8648},
																			run: (*parser).callonVerseBlock57,
																			expr: &litMatcher{
																				pos:        position{line: 231, col: 14, offset: 8648},
																				val:        "verse",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 223, col: 26, offset: 8375},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonVerseBlock62,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 223, col: 30, offset: 8379},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 223, col: 34, offset: 8383},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 235, col: 16, offset: 8707},
																			run: (*parser).callonVerseBlock66,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 235, col: 16, offset: 8707},
																				expr: &seqExpr{
																					pos: position{line: 235, col: 17, offset: 8708},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 235, col: 17, offset: 8708},
																							expr: &choiceExpr{
																								pos: position{line: 1004, col: 8, offset: 40434},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1002, col: 8, offset: 40423},
																										expr: &anyMatcher{
																											line: 1002, col: 9, offset: 40424,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 22, offset: 8713},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 23, offset: 8714},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 27, offset: 8718},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 28, offset: 8719},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 235, col: 32, offset: 8723,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 223, col: 55, offset: 8404},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 227, col: 5, offset: 8535},
															run: (*parser).callonVerseBlock81,
															expr: &seqExpr{
																pos: position{line: 227, col: 5, offset: 8535},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 227, col: 5, offset: 8535},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 227, col: 9, offset: 8539},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 231, col: 14, offset: 8648},
																			run: (*parser).callonVerseBlock85,
																			expr: &litMatcher{
																				pos:        position{line: 231, col: 14, offset: 8648},
																				val:        "verse",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 227, col: 26, offset: 8556},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonVerseBlock90,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 227, col: 30, offset: 8560},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 842, col: 33, offset: 35026},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonVerseBlock96,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 807, col: 24, offset: 33803},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 834, col: 70, offset: 34745},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonVerseBlock107,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1000, col: 12, offset: 40394},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 834, col: 82, offset: 34757},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 834, col: 90, offset: 34765},
								expr: &ruleRefExpr{
									pos:  position{line: 834, col: 91, offset: 34766},
									name: "VerseBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 834, col: 112, offset: 34787},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 834, col: 113, offset: 34788},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 807, col: 24, offset: 33803},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 834, col: 133, offset: 34808},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonVerseBlock121,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1004, col: 8, offset: 40434},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1002, col: 8, offset: 40423},
													expr: &anyMatcher{
														line: 1002, col: 9, offset: 40424,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockContent",
			pos:  position{line: 846, col: 1, offset: 35075},
			expr: &actionExpr{
				pos: position{line: 846, col: 22, offset: 35096},
				run: (*parser).callonVerseBlockContent1,
				expr: &labeledExpr{
					pos:   position{line: 846, col: 22, offset: 35096},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 846, col: 28, offset: 35102},
						expr: &ruleRefExpr{
							pos:  position{line: 846, col: 29, offset: 35103},
							name: "VerseBlockLine",
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLine",
			pos:  position{line: 850, col: 1, offset: 35183},
			expr: &actionExpr{
				pos: position{line: 850, col: 19, offset: 35201},
				run: (*parser).callonVerseBlockLine1,
				expr: &seqExpr{
					pos: position{line: 850, col: 19, offset: 35201},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 850, col: 19, offset: 35201},
							expr: &litMatcher{
								pos:        position{line: 807, col: 24, offset: 33803},
								val:        "____",
								ignoreCase: false,
							},
						},
						&notExpr{
							pos: position{line: 850, col: 40, offset: 35222},
							expr: &notExpr{
								pos: position{line: 1002, col: 8, offset: 40423},
								expr: &anyMatcher{
									line: 1002, col: 9, offset: 40424,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 850, col: 45, offset: 35227},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 850, col: 51, offset: 35233},
								name: "VerseBlockLineContent",
							},
						},
						&choiceExpr{
							pos: position{line: 1004, col: 8, offset: 40434},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLineContent",
			pos:  position{line: 854, col: 1, offset: 35309},
			expr: &actionExpr{
				pos: position{line: 854, col: 26, offset: 35334},
				run: (*parser).callonVerseBlockLineContent1,
				expr: &labeledExpr{
					pos:   position{line: 854, col: 26, offset: 35334},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 854, col: 35, offset: 35343},
						expr: &seqExpr{
							pos: position{line: 854, col: 36, offset: 35344},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 854, col: 36, offset: 35344},
									expr: &litMatcher{
										pos:        position{line: 807, col: 24, offset: 33803},
										val:        "____",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 854, col: 57, offset: 35365},
									expr: &choiceExpr{
										pos: position{line: 1004, col: 8, offset: 40434},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1000, col: 12, offset: 40394},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1000, col: 21, offset: 40403},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1002, col: 8, offset: 40423},
												expr: &anyMatcher{
													line: 1002, col: 9, offset: 40424,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 854, col: 62, offset: 35370},
									expr: &choiceExpr{
										pos: position{line: 996, col: 7, offset: 40332},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 996, col: 7, offset: 40332},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 996, col: 13, offset: 40338},
												run: (*parser).callonVerseBlockLineContent16,
												expr: &litMatcher{
													pos:        position{line: 996, col: 13, offset: 40338},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 854, col: 66, offset: 35374},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 854, col: 80, offset: 35388},
									expr: &choiceExpr{
										pos: position{line: 996, col: 7, offset: 40332},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 996, col: 7, offset: 40332},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 996, col: 13, offset: 40338},
												run: (*parser).callonVerseBlockLineContent22,
												expr: &litMatcher{
													pos:        position{line: 996, col: 13, offset: 40338},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlock",
			pos:  position{line: 863, col: 1, offset: 35763},
			expr: &actionExpr{
				pos: position{line: 863, col: 17, offset: 35779},
				run: (*parser).callonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 863, col: 17, offset: 35779},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 863, col: 17, offset: 35779},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 863, col: 28, offset: 35790},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSidebarBlock5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSidebarBlock9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSidebarBlock11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonSidebarBlock15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSidebarBlock25,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSidebarBlock39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			run: (*parser).callonSidebarBlock43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 982, col: 7, offset: 40050},
																				expr: &seqExpr{
																					pos: position{line: 982, col: 8, offset: 40051},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 17, offset: 40060},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonSidebarBlock53,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 21, offset: 40064},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 22, offset: 40065},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 26, offset: 40069},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 27, offset: 40070},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 31, offset: 40074},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 32, offset: 40075},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 37, offset: 40080},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 38, offset: 40081},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 43, offset: 40086},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 44, offset: 40087},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 982, col: 48, offset: 40091,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSidebarBlock67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSidebarBlock75,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSidebarBlock78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSidebarBlock86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSidebarBlock92,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSidebarBlock95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSidebarBlock106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonSidebarBlock111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonSidebarBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonSidebarBlock115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonSidebarBlock117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonSidebarBlock119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonSidebarBlock122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSidebarBlock124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonSidebarBlock130,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSidebarBlock135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSidebarBlock138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSidebarBlock141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonSidebarBlock155,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSidebarBlock171,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSidebarBlock173,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSidebarBlock176,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSidebarBlock179,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonSidebarBlock196,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonSidebarBlock202,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 861, col: 26, offset: 35755},
							val:        "****",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 863, col: 70, offset: 35832},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonSidebarBlock213,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1000, col: 12, offset: 40394},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 863, col: 82, offset: 35844},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 863, col: 90, offset: 35852},
								expr: &ruleRefExpr{
									pos:  position{line: 863, col: 91, offset: 35853},
									name: "SidebarBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 863, col: 115, offset: 35877},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 863, col: 116, offset: 35878},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 861, col: 26, offset: 35755},
											val:        "****",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 863, col: 138, offset: 35900},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonSidebarBlock227,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1004, col: 8, offset: 40434},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1002, col: 8, offset: 40423},
													expr: &anyMatcher{
														line: 1002, col: 9, offset: 40424,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlockContent",
			pos:  position{line: 867, col: 1, offset: 36036},
			expr: &choiceExpr{
				pos: position{line: 867, col: 24, offset: 36059},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 867, col: 24, offset: 36059},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 867, col: 31, offset: 36066},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 963, col: 14, offset: 39679},
						run: (*parser).callonSidebarBlockContent4,
						expr: &seqExpr{
							pos: position{line: 963, col: 14, offset: 39679},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 963, col: 14, offset: 39679},
									expr: &notExpr{
										pos: position{line: 1002, col: 8, offset: 40423},
										expr: &anyMatcher{
											line: 1002, col: 9, offset: 40424,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 963, col: 19, offset: 39684},
									expr: &choiceExpr{
										pos: position{line: 996, col: 7, offset: 40332},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 996, col: 7, offset: 40332},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 996, col: 13, offset: 40338},
												run: (*parser).callonSidebarBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 996, col: 13, offset: 40338},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1004, col: 8, offset: 40434},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1000, col: 12, offset: 40394},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1000, col: 21, offset: 40403},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1002, col: 8, offset: 40423},
											expr: &anyMatcher{
												line: 1002, col: 9, offset: 40424,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 867, col: 60, offset: 36095},
						name: "NonSidebarBlock",
					},
				},
			},
		},
		{
			name: "NonSidebarBlock",
			pos:  position{line: 869, col: 1, offset: 36112},
			expr: &actionExpr{
				pos: position{line: 869, col: 20, offset: 36131},
				run: (*parser).callonNonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 869, col: 20, offset: 36131},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 869, col: 20, offset: 36131},
							expr: &ruleRefExpr{
								pos:  position{line: 869, col: 21, offset: 36132},
								name: "SidebarBlock",
							},
						},
						&labeledExpr{
							pos:   position{line: 869, col: 34, offset: 36145},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 869, col: 43, offset: 36154},
								name: "DelimitedBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "Table",
			pos:  position{line: 876, col: 1, offset: 36387},
			expr: &actionExpr{
				pos: position{line: 876, col: 10, offset: 36396},
				run: (*parser).callonTable1,
				expr: &seqExpr{
					pos: position{line: 876, col: 10, offset: 36396},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 876, col: 10, offset: 36396},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 876, col: 21, offset: 36407},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonTable5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonTable9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonTable11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 982, col: 7, offset: 40050},
																					run: (*parser).callonTable15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 982, col: 7, offset: 40050},
																						expr: &seqExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 982, col: 8, offset: 40051},
																									expr: &choiceExpr{
																										pos: position{line: 1000, col: 12, offset: 40394},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1000, col: 12, offset: 40394},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1000, col: 21, offset: 40403},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 17, offset: 40060},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonTable25,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 21, offset: 40064},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 22, offset: 40065},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 26, offset: 40069},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 27, offset: 40070},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 31, offset: 40074},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 32, offset: 40075},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 37, offset: 40080},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 38, offset: 40081},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 982, col: 43, offset: 40086},
																									expr: &litMatcher{
																										pos:        position{line: 982, col: 44, offset: 40087},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 982, col: 48, offset: 40091,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonTable39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 982, col: 7, offset: 40050},
																			run: (*parser).callonTable43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 982, col: 7, offset: 40050},
																				expr: &seqExpr{
																					pos: position{line: 982, col: 8, offset: 40051},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 982, col: 8, offset: 40051},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 17, offset: 40060},
																							expr: &choiceExpr{
																								pos: position{line: 996, col: 7, offset: 40332},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 996, col: 7, offset: 40332},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 996, col: 13, offset: 40338},
																										run: (*parser).callonTable53,
																										expr: &litMatcher{
																											pos:        position{line: 996, col: 13, offset: 40338},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 21, offset: 40064},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 22, offset: 40065},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 26, offset: 40069},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 27, offset: 40070},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 31, offset: 40074},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 32, offset: 40075},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 37, offset: 40080},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 38, offset: 40081},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 982, col: 43, offset: 40086},
																							expr: &litMatcher{
																								pos:        position{line: 982, col: 44, offset: 40087},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 982, col: 48, offset: 40091,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonTable67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonTable75,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonTable78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonTable86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonTable92,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonTable95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1000, col: 12, offset: 40394},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1000, col: 12, offset: 40394},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1000, col: 21, offset: 40403},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonTable106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonTable111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonTable113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonTable115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonTable117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonTable119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonTable122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonTable124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 996, col: 7, offset: 40332},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 996, col: 7, offset: 40332},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 996, col: 13, offset: 40338},
																					run: (*parser).callonTable130,
																					expr: &litMatcher{
																						pos:        position{line: 996, col: 13, offset: 40338},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonTable135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonTable138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonTable141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonTable155,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonTable171,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonTable173,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonTable176,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonTable179,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 996, col: 7, offset: 40332},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 996, col: 7, offset: 40332},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 996, col: 13, offset: 40338},
																												run: (*parser).callonTable196,
																												expr: &litMatcher{
																													pos:        position{line: 996, col: 13, offset: 40338},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 996, col: 7, offset: 40332},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 996, col: 7, offset: 40332},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 996, col: 13, offset: 40338},
															run: (*parser).callonTable202,
															expr: &litMatcher{
																pos:        position{line: 996, col: 13, offset: 40338},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 886, col: 19, offset: 36752},
							val:        "|===",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 877, col: 24, offset: 36451},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonTable213,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1000, col: 12, offset: 40394},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 878, col: 9, offset: 36471},
							label: "header",
							expr: &zeroOrOneExpr{
								pos: position{line: 878, col: 16, offset: 36478},
								expr: &ruleRefExpr{
									pos:  position{line: 878, col: 17, offset: 36479},
									name: "TableLineHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 879, col: 9, offset: 36505},
							label: "lines",
							expr: &zeroOrMoreExpr{
								pos: position{line: 879, col: 15, offset: 36511},
								expr: &ruleRefExpr{
									pos:  position{line: 879, col: 16, offset: 36512},
									name: "TableLine",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 880, col: 10, offset: 36533},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 880, col: 11, offset: 36534},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 886, col: 19, offset: 36752},
											val:        "|===",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 880, col: 26, offset: 36549},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonTable230,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1004, col: 8, offset: 40434},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1002, col: 8, offset: 40423},
													expr: &anyMatcher{
														line: 1002, col: 9, offset: 40424,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLineHeader",
			pos:  position{line: 889, col: 1, offset: 36823},
			expr: &actionExpr{
				pos: position{line: 889, col: 20, offset: 36842},
				run: (*parser).callonTableLineHeader1,
				expr: &seqExpr{
					pos: position{line: 889, col: 20, offset: 36842},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 889, col: 20, offset: 36842},
							expr: &litMatcher{
								pos:        position{line: 886, col: 19, offset: 36752},
								val:        "|===",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 889, col: 36, offset: 36858},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 889, col: 42, offset: 36864},
								expr: &ruleRefExpr{
									pos:  position{line: 889, col: 43, offset: 36865},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1004, col: 8, offset: 40434},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
						&actionExpr{
							pos: position{line: 963, col: 14, offset: 39679},
							run: (*parser).callonTableLineHeader13,
							expr: &seqExpr{
								pos: position{line: 963, col: 14, offset: 39679},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 963, col: 14, offset: 39679},
										expr: &notExpr{
											pos: position{line: 1002, col: 8, offset: 40423},
											expr: &anyMatcher{
												line: 1002, col: 9, offset: 40424,
											},
										},
									},
									&zeroOrMoreExpr{
										pos: position{line: 963, col: 19, offset: 39684},
										expr: &choiceExpr{
											pos: position{line: 996, col: 7, offset: 40332},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 996, col: 7, offset: 40332},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 996, col: 13, offset: 40338},
													run: (*parser).callonTableLineHeader21,
													expr: &litMatcher{
														pos:        position{line: 996, col: 13, offset: 40338},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1004, col: 8, offset: 40434},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1000, col: 12, offset: 40394},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1000, col: 21, offset: 40403},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1002, col: 8, offset: 40423},
												expr: &anyMatcher{
													line: 1002, col: 9, offset: 40424,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLine",
			pos:  position{line: 893, col: 1, offset: 36949},
			expr: &actionExpr{
				pos: position{line: 893, col: 14, offset: 36962},
				run: (*parser).callonTableLine1,
				expr: &seqExpr{
					pos: position{line: 893, col: 14, offset: 36962},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 893, col: 14, offset: 36962},
							expr: &litMatcher{
								pos:        position{line: 886, col: 19, offset: 36752},
								val:        "|===",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 893, col: 30, offset: 36978},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 893, col: 36, offset: 36984},
								expr: &ruleRefExpr{
									pos:  position{line: 893, col: 37, offset: 36985},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1004, col: 8, offset: 40434},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1000, col: 12, offset: 40394},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1000, col: 21, offset: 40403},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1002, col: 8, offset: 40423},
									expr: &anyMatcher{
										line: 1002, col: 9, offset: 40424,
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 893, col: 53, offset: 37001},
							expr: &actionExpr{
								pos: position{line: 963, col: 14, offset: 39679},
								run: (*parser).callonTableLine14,
								expr: &seqExpr{
									pos: position{line: 963, col: 14, offset: 39679},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 963, col: 14, offset: 39679},
											expr: &notExpr{
												pos: position{line: 1002, col: 8, offset: 40423},
												expr: &anyMatcher{
													line: 1002, col: 9, offset: 40424,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 963, col: 19, offset: 39684},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonTableLine22,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1004, col: 8, offset: 40434},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1000, col: 12, offset: 40394},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1000, col: 21, offset: 40403},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1002, col: 8, offset: 40423},
													expr: &anyMatcher{
														line: 1002, col: 9, offset: 40424,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableCell",
			pos:  position{line: 897, col: 1, offset: 37070},
			expr: &actionExpr{
				pos: position{line: 897, col: 14, offset: 37083},
				run: (*parser).callonTableCell1,
				expr: &seqExpr{
					pos: position{line: 897, col: 14, offset: 37083},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 884, col: 23, offset: 36725},
							val:        "|",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 884, col: 27, offset: 36729},
							expr: &choiceExpr{
								pos: position{line: 996, col: 7, offset: 40332},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 996, col: 7, offset: 40332},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 996, col: 13, offset: 40338},
										run: (*parser).callonTableCell7,
										expr: &litMatcher{
											pos:        position{line: 996, col: 13, offset: 40338},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 897, col: 33, offset: 37102},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 897, col: 42, offset: 37111},
								expr: &seqExpr{
									pos: position{line: 897, col: 43, offset: 37112},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 897, col: 43, offset: 37112},
											expr: &seqExpr{
												pos: position{line: 884, col: 23, offset: 36725},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 884, col: 23, offset: 36725},
														val:        "|",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 884, col: 27, offset: 36729},
														expr: &choiceExpr{
															pos: position{line: 996, col: 7, offset: 40332},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 996, col: 7, offset: 40332},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 996, col: 13, offset: 40338},
																	run: (*parser).callonTableCell18,
																	expr: &litMatcher{
																		pos:        position{line: 996, col: 13, offset: 40338},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 897, col: 63, offset: 37132},
											expr: &choiceExpr{
												pos: position{line: 1004, col: 8, offset: 40434},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1000, col: 12, offset: 40394},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1000, col: 21, offset: 40403},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1002, col: 8, offset: 40423},
														expr: &anyMatcher{
															line: 1002, col: 9, offset: 40424,
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 897, col: 68, offset: 37137},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonTableCell29,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&ruleRefExpr{
											pos:  position{line: 897, col: 72, offset: 37141},
											name: "InlineElement",
										},
										&zeroOrMoreExpr{
											pos: position{line: 897, col: 86, offset: 37155},
											expr: &choiceExpr{
												pos: position{line: 996, col: 7, offset: 40332},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 996, col: 7, offset: 40332},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 996, col: 13, offset: 40338},
														run: (*parser).callonTableCell35,
														expr: &litMatcher{
															pos:        position{line: 996, col: 13, offset: 40338},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "WS",
			pos:  position{line: 996, col: 1, offset: 40326},
			expr: &choiceExpr{
				pos: position{line: 996, col: 7, offset: 40332},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 996, col: 7, offset: 40332},
						val:        " ",
						ignoreCase: false,
					},
					&actionExpr{
						pos: position{line: 996, col: 13, offset: 40338},
						run: (*parser).callonWS3,
						expr: &litMatcher{
							pos:        position{line: 996, col: 13, offset: 40338},
							val:        "\t",
							ignoreCase: false,
						},
					},
				},
			},
		},
		{
			name: "NEWLINE",
			pos:  position{line: 1000, col: 1, offset: 40383},
			expr: &choiceExpr{
				pos: position{line: 1000, col: 12, offset: 40394},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 1000, col: 12, offset: 40394},
						val:        "\r\n",
						ignoreCase: false,
					},
					&charClassMatcher{
						pos:        position{line: 1000, col: 21, offset: 40403},
						val:        "[\\r\\n]",
						chars:      []rune{'\r', '\n'},
						ignoreCase: false,
						inverted:   false,
					},
				},
			},
		},
	},
}

func (c *current) onDocument1(frontMatter, documentHeader, blocks interface{}) (interface{}, error) {
	return types.NewDocument(frontMatter, documentHeader, blocks.([]interface{}))
}

func (p *parser) callonDocument1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocument1(stack["frontMatter"], stack["documentHeader"], stack["blocks"])
}

func (c *current) onDocumentBlock16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock16()
}

func (c *current) onDocumentBlock8() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock8()
}

func (c *current) onDocumentBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock27()
}

func (c *current) onDocumentBlock36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock36()
}

func (c *current) onDocumentBlock23(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock23(stack["name"])
}

func (c *current) onDocumentBlock47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock47()
}

func (c *current) onDocumentBlock56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock56()
}

func (c *current) onDocumentBlock59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock59()
}

func (c *current) onDocumentBlock43(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock43(stack["name"], stack["value"])
}

func (c *current) onDocumentBlock76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock76()
}

func (c *current) onDocumentBlock85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock85()
}

func (c *current) onDocumentBlock72(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentBlock72() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock72(stack["name"])
}

func (c *current) onDocumentBlock96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock96()
}

func (c *current) onDocumentBlock105() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock105()
}

func (c *current) onDocumentBlock92(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock92(stack["name"])
}

func (c *current) onDocumentBlock142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock142()
}

func (c *current) onDocumentBlock132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock132()
}

func (c *current) onDocumentBlock128(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock128(stack["id"])
}

func (c *current) onDocumentBlock126(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDocumentBlock126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock126(stack["id"])
}

func (c *current) onDocumentBlock170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock170()
}

func (c *current) onDocumentBlock160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock160()
}

func (c *current) onDocumentBlock156(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock156(stack["id"])
}

func (c *current) onDocumentBlock192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock192()
}

func (c *current) onDocumentBlock195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock195()
}

func (c *current) onDocumentBlock184(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentBlock184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock184(stack["title"])
}

func (c *current) onDocumentBlock209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock209()
}

func (c *current) onDocumentBlock212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock212()
}

func (c *current) onDocumentBlock203(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentBlock203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock203(stack["role"])
}

func (c *current) onDocumentBlock228() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentBlock228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock228()
}

func (c *current) onDocumentBlock230() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentBlock230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock230()
}

func (c *current) onDocumentBlock232() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentBlock232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock232()
}

func (c *current) onDocumentBlock234() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentBlock234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock234()
}

func (c *current) onDocumentBlock236() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock236()
}

func (c *current) onDocumentBlock223(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentBlock223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock223(stack["k"])
}

func (c *current) onDocumentBlock239() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentBlock239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock239()
}

func (c *current) onDocumentBlock247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock247()
}

func (c *current) onDocumentBlock258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock258()
}

func (c *current) onDocumentBlock255(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock255(stack["key"])
}

func (c *current) onDocumentBlock272(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock272(stack["value"])
}

func (c *current) onDocumentBlock288() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock288() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock288()
}

func (c *current) onDocumentBlock252(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock252(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock296() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock296()
}

func (c *current) onDocumentBlock293(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock293(stack["key"])
}

func (c *current) onDocumentBlock313() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock313()
}

func (c *current) onDocumentBlock290(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock290(stack["key"])
}

func (c *current) onDocumentBlock241(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock241(stack["attributes"])
}

func (c *current) onDocumentBlock319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock319()
}

func (c *current) onDocumentBlock122(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock122(stack["attr"])
}

func (c *current) onDocumentBlock338() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock338()
}

func (c *current) onDocumentBlock328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock328()
}

func (c *current) onDocumentBlock351() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock351()
}

func (c *current) onDocumentBlock363() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock363()
}

func (c *current) onDocumentBlock375() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock375()
}

func (c *current) onDocumentBlock396() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock396()
}

func (c *current) onDocumentBlock393(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock393() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock393(stack["key"])
}

func (c *current) onDocumentBlock410(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock410(stack["value"])
}

func (c *current) onDocumentBlock426() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock426()
}

func (c *current) onDocumentBlock390(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock390(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock434() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock434() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock434()
}

func (c *current) onDocumentBlock431(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock431(stack["key"])
}

func (c *current) onDocumentBlock451() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock451()
}

func (c *current) onDocumentBlock428(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock428() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock428(stack["key"])
}

func (c *current) onDocumentBlock347(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock347(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onDocumentBlock458() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock458()
}

func (c *current) onDocumentBlock470() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock470() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock470()
}

func (c *current) onDocumentBlock491() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock491() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock491()
}

func (c *current) onDocumentBlock488(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock488() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock488(stack["key"])
}

func (c *current) onDocumentBlock505(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock505(stack["value"])
}

func (c *current) onDocumentBlock521() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock521() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock521()
}

func (c *current) onDocumentBlock485(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock485() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock485(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock529() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock529() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock529()
}

func (c *current) onDocumentBlock526(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock526(stack["key"])
}

func (c *current) onDocumentBlock546() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock546() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock546()
}

func (c *current) onDocumentBlock523(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock523() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock523(stack["key"])
}

func (c *current) onDocumentBlock454(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock454(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onDocumentBlock553() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock553() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock553()
}

func (c *current) onDocumentBlock574() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock574() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock574()
}

func (c *current) onDocumentBlock571(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock571() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock571(stack["key"])
}

func (c *current) onDocumentBlock588(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock588() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock588(stack["value"])
}

func (c *current) onDocumentBlock604() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock604()
}

func (c *current) onDocumentBlock568(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock568() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock568(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock612() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock612() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock612()
}

func (c *current) onDocumentBlock609(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock609() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock609(stack["key"])
}

func (c *current) onDocumentBlock629() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock629() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock629()
}

func (c *current) onDocumentBlock606(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock606() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock606(stack["key"])
}

func (c *current) onDocumentBlock549(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock549() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock549(stack["alt"], stack["otherAttrs"])
}

func (c *current) onDocumentBlock644() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock644() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock644()
}

func (c *current) onDocumentBlock641(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock641() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock641(stack["key"])
}

func (c *current) onDocumentBlock658(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock658() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock658(stack["value"])
}

func (c *current) onDocumentBlock674() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock674() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock674()
}

func (c *current) onDocumentBlock638(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock638() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock638(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock682() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock682() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock682()
}

func (c *current) onDocumentBlock679(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock679() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock679(stack["key"])
}

func (c *current) onDocumentBlock699() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock699() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock699()
}

func (c *current) onDocumentBlock676(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock676() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock676(stack["key"])
}

func (c *current) onDocumentBlock632(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock632() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock632(stack["otherAttrs"])
}

func (c *current) onDocumentBlock705() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock705() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock705()
}

func (c *current) onDocumentBlock118(attributes, path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewBlockImage(path.(string), attributes.([]interface{}), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonDocumentBlock118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock118(stack["attributes"], stack["path"], stack["inlineAttributes"])
}

func (c *current) onDocumentBlock720() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock720() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock720()
}

func (c *current) onDocumentBlock741() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock741() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock741()
}

func (c *current) onDocumentBlock733() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock733() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock733()
}

func (c *current) onDocumentBlock715() (interface{}, error) {

	return string(c.text), nil
}

func (p *parser) callonDocumentBlock715() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock715()
}

func (c *current) onDocumentBlock712(content interface{}) (interface{}, error) {
	return types.NewLiteralBlock(content.(string))
}

func (p *parser) callonDocumentBlock712() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock712(stack["content"])
}

func (c *current) onDocumentBlock760() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock760() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock760()
}

func (c *current) onDocumentBlock766() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock766() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock766()
}

func (c *current) onDocumentBlock778() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock778() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock778()
}

func (c *current) onDocumentBlock754(content interface{}) (interface{}, error) {
	return types.NewLiteralBlock(content.(string))
}

func (p *parser) callonDocumentBlock754() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock754(stack["content"])
}

func (c *current) onDocumentBlock793() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock793() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock793()
}

func (c *current) onDocumentBlock815() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock815() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock815()
}

func (c *current) onDocumentBlock807() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock807() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock807()
}

func (c *current) onDocumentBlock799() (interface{}, error) {

	return string(c.text), nil
}

func (p *parser) callonDocumentBlock799() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock799()
}

func (c *current) onDocumentBlock787(content interface{}) (interface{}, error) {
	return types.NewLiteralBlock(content.(string))
}

func (p *parser) callonDocumentBlock787() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock787(stack["content"])
}

func (c *current) onDocumentBlock1(block interface{}) (interface{}, error) {
	// element attribute alone should be take recognized as such
	return block, nil
}

func (p *parser) callonDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1(stack["block"])
}

func (c *current) onFrontMatter10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter10()
}

func (c *current) onFrontMatter1(content interface{}) (interface{}, error) {
	return types.NewYamlFrontMatter(content.(string))
}

func (p *parser) callonFrontMatter1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter1(stack["content"])
}

func (c *current) onDocumentHeader13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader13()
}

func (c *current) onDocumentHeader24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader24()
}

func (c *current) onDocumentHeader42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader42()
}

func (c *current) onDocumentHeader48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader48()
}

func (c *current) onDocumentHeader27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader27()
}

func (c *current) onDocumentHeader67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader67()
}

func (c *current) onDocumentHeader73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader73()
}

func (c *current) onDocumentHeader52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader52()
}

func (c *current) onDocumentHeader92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader92()
}

func (c *current) onDocumentHeader98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader98()
}

func (c *current) onDocumentHeader77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader77()
}

func (c *current) onDocumentHeader102(email interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader102(stack["email"])
}

func (c *current) onDocumentHeader121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader121()
}

func (c *current) onDocumentHeader128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader128()
}

func (c *current) onDocumentHeader19(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader19(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader8(authors interface{}) (interface{}, error) {
	return types.NewDocumentAuthors(authors.([]interface{}))
}

func (p *parser) callonDocumentHeader8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader8(stack["authors"])
}

func (c *current) onDocumentHeader140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader140()
}

func (c *current) onDocumentHeader149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader149()
}

func (c *current) onDocumentHeader167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader167()
}

func (c *current) onDocumentHeader173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader173()
}

func (c *current) onDocumentHeader152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader152()
}

func (c *current) onDocumentHeader246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader246()
}

func (c *current) onDocumentHeader253() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader253()
}

func (c *current) onDocumentHeader144(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader144(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader135(author interface{}) (interface{}, error) {
	return []types.DocumentAuthor{author.(types.DocumentAuthor)}, nil
}

func (p *parser) callonDocumentHeader135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader135(stack["author"])
}

func (c *current) onDocumentHeader262() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader262()
}

func (c *current) onDocumentHeader272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader272()
}

func (c *current) onDocumentHeader269() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader269() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader269()
}

func (c *current) onDocumentHeader291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader291()
}

func (c *current) onDocumentHeader309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader309()
}

func (c *current) onDocumentHeader287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader287()
}

func (c *current) onDocumentHeader317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader317()
}

func (c *current) onDocumentHeader333() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader333()
}

func (c *current) onDocumentHeader257(revnumber, revdate, revremark interface{}) (interface{}, error) {
	return types.NewDocumentRevision(revnumber, revdate, revremark)
}

func (p *parser) callonDocumentHeader257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader257(stack["revnumber"], stack["revdate"], stack["revremark"])
}

func (c *current) onDocumentHeader355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader355()
}

func (c *current) onDocumentHeader364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader364()
}

func (c *current) onDocumentHeader351(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentHeader351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader351(stack["name"])
}

func (c *current) onDocumentHeader375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader375()
}

func (c *current) onDocumentHeader384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader384()
}

func (c *current) onDocumentHeader387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader387()
}

func (c *current) onDocumentHeader371(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentHeader371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader371(stack["name"], stack["value"])
}

func (c *current) onDocumentHeader1(header, authors, revision, otherAttributes interface{}) (interface{}, error) {

	return types.NewDocumentHeader(header, authors, revision, otherAttributes.([]interface{}))
}

func (p *parser) callonDocumentHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader1(stack["header"], stack["authors"], stack["revision"], stack["otherAttributes"])
}

func (c *current) onSection1(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1(stack["section"])
}

func (c *current) onSection07(header, elements interface{}) (interface{}, error) {
	return types.NewSection(0, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection07() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection07(stack["header"], stack["elements"])
}

func (c *current) onSection01(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection01() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection01(stack["section"])
}

func (c *current) onSection0Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title25()
}

func (c *current) onSection0Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title15()
}

func (c *current) onSection0Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title11(stack["id"])
}

func (c *current) onSection0Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection0Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title9(stack["id"])
}

func (c *current) onSection0Title53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title53()
}

func (c *current) onSection0Title43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title43()
}

func (c *current) onSection0Title39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title39(stack["id"])
}

func (c *current) onSection0Title75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title75()
}

func (c *current) onSection0Title78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title78()
}

func (c *current) onSection0Title67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection0Title67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title67(stack["title"])
}

func (c *current) onSection0Title92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title92()
}

func (c *current) onSection0Title95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title95()
}

func (c *current) onSection0Title86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection0Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title86(stack["role"])
}

func (c *current) onSection0Title111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection0Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title111()
}

func (c *current) onSection0Title113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection0Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title113()
}

func (c *current) onSection0Title115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection0Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title115()
}

func (c *current) onSection0Title117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection0Title117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title117()
}

func (c *current) onSection0Title119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0Title119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title119()
}

func (c *current) onSection0Title106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0Title106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title106(stack["k"])
}

func (c *current) onSection0Title122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0Title122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title122()
}

func (c *current) onSection0Title130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title130()
}

func (c *current) onSection0Title141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title141()
}

func (c *current) onSection0Title138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title138(stack["key"])
}

func (c *current) onSection0Title155(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title155(stack["value"])
}

func (c *current) onSection0Title171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title171()
}

func (c *current) onSection0Title135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection0Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title135(stack["key"], stack["value"])
}

func (c *current) onSection0Title179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title179()
}

func (c *current) onSection0Title176(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title176(stack["key"])
}

func (c *current) onSection0Title196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title196()
}

func (c *current) onSection0Title173(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection0Title173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title173(stack["key"])
}

func (c *current) onSection0Title124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title124(stack["attributes"])
}

func (c *current) onSection0Title202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title202()
}

func (c *current) onSection0Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection0Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title5(stack["attr"])
}

func (c *current) onSection0Title213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title213()
}

func (c *current) onSection0Title220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title220()
}

func (c *current) onSection0Title238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title238()
}

func (c *current) onSection0Title228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title228()
}

func (c *current) onSection0Title224(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title224(stack["id"])
}

func (c *current) onSection0Title255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title255()
}

func (c *current) onSection0Title1(attributes, content, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection0Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection0Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection0Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Block1(stack["content"])
}

func (c *current) onSection17(header, elements interface{}) (interface{}, error) {
	return types.NewSection(1, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection17(stack["header"], stack["elements"])
}

func (c *current) onSection11(section interface{}) (interface{}, error) {
	return section, nil
}

func (p *parser) callonSection11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection11(stack["section"])
}

func (c *current) onSection1Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title25()
}

func (c *current) onSection1Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title15()
}

func (c *current) onSection1Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title11(stack["id"])
}

func (c *current) onSection1Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection1Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title9(stack["id"])
}

func (c *current) onSection1Title53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title53()
}

func (c *current) onSection1Title43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title43()
}

func (c *current) onSection1Title39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title39(stack["id"])
}

func (c *current) onSection1Title75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title75()
}

func (c *current) onSection1Title78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title78()
}

func (c *current) onSection1Title67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection1Title67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title67(stack["title"])
}

func (c *current) onSection1Title92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title92()
}

func (c *current) onSection1Title95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title95()
}

func (c *current) onSection1Title86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection1Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title86(stack["role"])
}

func (c *current) onSection1Title111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection1Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title111()
}

func (c *current) onSection1Title113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection1Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title113()
}

func (c *current) onSection1Title115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection1Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title115()
}

func (c *current) onSection1Title117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection1Title117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title117()
}

func (c *current) onSection1Title119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection1Title119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title119()
}

func (c *current) onSection1Title106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection1Title106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title106(stack["k"])
}

func (c *current) onSection1Title122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection1Title122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title122()
}

func (c *current) onSection1Title130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title130()
}

func (c *current) onSection1Title141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title141()
}

func (c *current) onSection1Title138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title138(stack["key"])
}

func (c *current) onSection1Title155(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title155(stack["value"])
}

func (c *current) onSection1Title171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title171()
}

func (c *current) onSection1Title135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection1Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title135(stack["key"], stack["value"])
}

func (c *current) onSection1Title179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title179()
}

func (c *current) onSection1Title176(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title176(stack["key"])
}

func (c *current) onSection1Title196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title196()
}

func (c *current) onSection1Title173(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection1Title173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title173(stack["key"])
}

func (c *current) onSection1Title124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection1Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title124(stack["attributes"])
}

func (c *current) onSection1Title202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title202()
}

func (c *current) onSection1Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection1Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title5(stack["attr"])
}

func (c *current) onSection1Title213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title213()
}

func (c *current) onSection1Title220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title220()
}

func (c *current) onSection1Title238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title238()
}

func (c *current) onSection1Title228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title228()
}

func (c *current) onSection1Title224(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title224(stack["id"])
}

func (c *current) onSection1Title255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title255()
}

func (c *current) onSection1Title1(attributes, content, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection1Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection1Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection1Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Block1(stack["content"])
}

func (c *current) onSection27(header, elements interface{}) (interface{}, error) {
	return types.NewSection(2, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection27(stack["header"], stack["elements"])
}

func (c *current) onSection21(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection21(stack["section"])
}

func (c *current) onSection2Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title25()
}

func (c *current) onSection2Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title15()
}

func (c *current) onSection2Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title11(stack["id"])
}

func (c *current) onSection2Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection2Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title9(stack["id"])
}

func (c *current) onSection2Title53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title53()
}

func (c *current) onSection2Title43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title43()
}

func (c *current) onSection2Title39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title39(stack["id"])
}

func (c *current) onSection2Title75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title75()
}

func (c *current) onSection2Title78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title78()
}

func (c *current) onSection2Title67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection2Title67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title67(stack["title"])
}

func (c *current) onSection2Title92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title92()
}

func (c *current) onSection2Title95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title95()
}

func (c *current) onSection2Title86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection2Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title86(stack["role"])
}

func (c *current) onSection2Title111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection2Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title111()
}

func (c *current) onSection2Title113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection2Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title113()
}

func (c *current) onSection2Title115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection2Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title115()
}

func (c *current) onSection2Title117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection2Title117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title117()
}

func (c *current) onSection2Title119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection2Title119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title119()
}

func (c *current) onSection2Title106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection2Title106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title106(stack["k"])
}

func (c *current) onSection2Title122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection2Title122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title122()
}

func (c *current) onSection2Title130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title130()
}

func (c *current) onSection2Title141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title141()
}

func (c *current) onSection2Title138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title138(stack["key"])
}

func (c *current) onSection2Title155(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title155(stack["value"])
}

func (c *current) onSection2Title171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title171()
}

func (c *current) onSection2Title135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection2Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title135(stack["key"], stack["value"])
}

func (c *current) onSection2Title179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title179()
}

func (c *current) onSection2Title176(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title176(stack["key"])
}

func (c *current) onSection2Title196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title196()
}

func (c *current) onSection2Title173(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection2Title173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title173(stack["key"])
}

func (c *current) onSection2Title124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection2Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title124(stack["attributes"])
}

func (c *current) onSection2Title202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title202()
}

func (c *current) onSection2Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection2Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title5(stack["attr"])
}

func (c *current) onSection2Title213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title213()
}

func (c *current) onSection2Title220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title220()
}

func (c *current) onSection2Title238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title238()
}

func (c *current) onSection2Title228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title228()
}

func (c *current) onSection2Title224(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title224(stack["id"])
}

func (c *current) onSection2Title255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title255()
}

func (c *current) onSection2Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection2Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection2Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection2Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Block1(stack["content"])
}

func (c *current) onSection37(header, elements interface{}) (interface{}, error) {
	return types.NewSection(3, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection37(stack["header"], stack["elements"])
}

func (c *current) onSection31(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection31(stack["section"])
}

func (c *current) onSection3Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title25()
}

func (c *current) onSection3Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title15()
}

func (c *current) onSection3Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title11(stack["id"])
}

func (c *current) onSection3Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection3Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title9(stack["id"])
}

func (c *current) onSection3Title53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title53()
}

func (c *current) onSection3Title43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title43()
}

func (c *current) onSection3Title39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title39(stack["id"])
}

func (c *current) onSection3Title75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title75()
}

func (c *current) onSection3Title78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title78()
}

func (c *current) onSection3Title67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection3Title67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title67(stack["title"])
}

func (c *current) onSection3Title92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title92()
}

func (c *current) onSection3Title95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title95()
}

func (c *current) onSection3Title86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection3Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title86(stack["role"])
}

func (c *current) onSection3Title111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection3Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title111()
}

func (c *current) onSection3Title113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection3Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title113()
}

func (c *current) onSection3Title115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection3Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title115()
}

func (c *current) onSection3Title117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection3Title117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title117()
}

func (c *current) onSection3Title119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection3Title119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title119()
}

func (c *current) onSection3Title106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection3Title106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title106(stack["k"])
}

func (c *current) onSection3Title122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection3Title122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title122()
}

func (c *current) onSection3Title130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title130()
}

func (c *current) onSection3Title141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title141()
}

func (c *current) onSection3Title138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title138(stack["key"])
}

func (c *current) onSection3Title155(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title155(stack["value"])
}

func (c *current) onSection3Title171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title171()
}

func (c *current) onSection3Title135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection3Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title135(stack["key"], stack["value"])
}

func (c *current) onSection3Title179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title179()
}

func (c *current) onSection3Title176(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title176(stack["key"])
}

func (c *current) onSection3Title196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title196()
}

func (c *current) onSection3Title173(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection3Title173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title173(stack["key"])
}

func (c *current) onSection3Title124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection3Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title124(stack["attributes"])
}

func (c *current) onSection3Title202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title202()
}

func (c *current) onSection3Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection3Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title5(stack["attr"])
}

func (c *current) onSection3Title213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title213()
}

func (c *current) onSection3Title220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title220()
}

func (c *current) onSection3Title238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title238()
}

func (c *current) onSection3Title228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title228()
}

func (c *current) onSection3Title224(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title224(stack["id"])
}

func (c *current) onSection3Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection3Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection3Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection3Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Block1(stack["content"])
}

func (c *current) onSection47(header, elements interface{}) (interface{}, error) {
	return types.NewSection(4, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection47(stack["header"], stack["elements"])
}

func (c *current) onSection41(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection41(stack["section"])
}

func (c *current) onSection4Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title25()
}

func (c *current) onSection4Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title15()
}

func (c *current) onSection4Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title11(stack["id"])
}

func (c *current) onSection4Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection4Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title9(stack["id"])
}

func (c *current) onSection4Title53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title53()
}

func (c *current) onSection4Title43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title43()
}

func (c *current) onSection4Title39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title39(stack["id"])
}

func (c *current) onSection4Title75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title75()
}

func (c *current) onSection4Title78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title78()
}

func (c *current) onSection4Title67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection4Title67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title67(stack["title"])
}

func (c *current) onSection4Title92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title92()
}

func (c *current) onSection4Title95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title95()
}

func (c *current) onSection4Title86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection4Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title86(stack["role"])
}

func (c *current) onSection4Title111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection4Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title111()
}

func (c *current) onSection4Title113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection4Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title113()
}

func (c *current) onSection4Title115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection4Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title115()
}

func (c *current) onSection4Title117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection4Title117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title117()
}

func (c *current) onSection4Title119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection4Title119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title119()
}

func (c *current) onSection4Title106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection4Title106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title106(stack["k"])
}

func (c *current) onSection4Title122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection4Title122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title122()
}

func (c *current) onSection4Title130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title130()
}

func (c *current) onSection4Title141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title141()
}

func (c *current) onSection4Title138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title138(stack["key"])
}

func (c *current) onSection4Title155(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title155(stack["value"])
}

func (c *current) onSection4Title171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title171()
}

func (c *current) onSection4Title135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection4Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title135(stack["key"], stack["value"])
}

func (c *current) onSection4Title179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title179()
}

func (c *current) onSection4Title176(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title176(stack["key"])
}

func (c *current) onSection4Title196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title196()
}

func (c *current) onSection4Title173(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection4Title173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title173(stack["key"])
}

func (c *current) onSection4Title124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection4Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title124(stack["attributes"])
}

func (c *current) onSection4Title202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title202()
}

func (c *current) onSection4Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection4Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title5(stack["attr"])
}

func (c *current) onSection4Title213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title213()
}

func (c *current) onSection4Title220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title220()
}

func (c *current) onSection4Title238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title238()
}

func (c *current) onSection4Title228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title228()
}

func (c *current) onSection4Title224(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title224(stack["id"])
}

func (c *current) onSection4Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection4Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection4Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection4Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Block1(stack["content"])
}

func (c *current) onSection57(header, elements interface{}) (interface{}, error) {
	return types.NewSection(5, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection57(stack["header"], stack["elements"])
}

func (c *current) onSection51(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection51(stack["section"])
}

func (c *current) onSection5Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title25()
}

func (c *current) onSection5Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title15()
}

func (c *current) onSection5Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title11(stack["id"])
}

func (c *current) onSection5Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection5Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title9(stack["id"])
}

func (c *current) onSection5Title53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title53()
}

func (c *current) onSection5Title43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title43()
}

func (c *current) onSection5Title39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title39(stack["id"])
}

func (c *current) onSection5Title75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title75()
}

func (c *current) onSection5Title78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title78()
}

func (c *current) onSection5Title67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection5Title67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title67(stack["title"])
}

func (c *current) onSection5Title92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title92()
}

func (c *current) onSection5Title95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title95()
}

func (c *current) onSection5Title86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection5Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title86(stack["role"])
}

func (c *current) onSection5Title111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection5Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title111()
}

func (c *current) onSection5Title113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection5Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title113()
}

func (c *current) onSection5Title115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection5Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title115()
}

func (c *current) onSection5Title117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection5Title117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title117()
}

func (c *current) onSection5Title119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection5Title119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title119()
}

func (c *current) onSection5Title106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection5Title106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title106(stack["k"])
}

func (c *current) onSection5Title122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection5Title122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title122()
}

func (c *current) onSection5Title130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title130()
}

func (c *current) onSection5Title141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title141()
}

func (c *current) onSection5Title138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title138(stack["key"])
}

func (c *current) onSection5Title155(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title155(stack["value"])
}

func (c *current) onSection5Title171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title171()
}

func (c *current) onSection5Title135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection5Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title135(stack["key"], stack["value"])
}

func (c *current) onSection5Title179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title179()
}

func (c *current) onSection5Title176(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title176(stack["key"])
}

func (c *current) onSection5Title196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title196()
}

func (c *current) onSection5Title173(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection5Title173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title173(stack["key"])
}

func (c *current) onSection5Title124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection5Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title124(stack["attributes"])
}

func (c *current) onSection5Title202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title202()
}

func (c *current) onSection5Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection5Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title5(stack["attr"])
}

func (c *current) onSection5Title213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title213()
}

func (c *current) onSection5Title220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title220()
}

func (c *current) onSection5Title238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title238()
}

func (c *current) onSection5Title228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title228()
}

func (c *current) onSection5Title224(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title224(stack["id"])
}

func (c *current) onSection5Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection5Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection5Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection5Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Block1(stack["content"])
}

func (c *current) onTitleElements12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements12()
}

func (c *current) onTitleElements29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements29()
}

func (c *current) onTitleElements19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements19()
}

func (c *current) onTitleElements15(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonTitleElements15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements15(stack["id"])
}

func (c *current) onTitleElements47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements47()
}

func (c *current) onTitleElements1(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonTitleElements1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements1(stack["elements"])
}

func (c *current) onTitleElement18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement18()
}

func (c *current) onTitleElement8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement8()
}

func (c *current) onTitleElement34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement34()
}

func (c *current) onTitleElement38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement38()
}

func (c *current) onTitleElement4(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonTitleElement4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement4(stack["id"], stack["label"])
}

func (c *current) onTitleElement59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement59()
}

func (c *current) onTitleElement49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement49()
}

func (c *current) onTitleElement45(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonTitleElement45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement45(stack["id"])
}

func (c *current) onTitleElement90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement90()
}

func (c *current) onTitleElement80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement80()
}

func (c *current) onTitleElement103() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement103()
}

func (c *current) onTitleElement115() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement115()
}

func (c *current) onTitleElement127() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement127()
}

func (c *current) onTitleElement148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement148()
}

func (c *current) onTitleElement145(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement145(stack["key"])
}

func (c *current) onTitleElement162(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement162(stack["value"])
}

func (c *current) onTitleElement178() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement178()
}

func (c *current) onTitleElement142(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement142(stack["key"], stack["value"])
}

func (c *current) onTitleElement186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement186()
}

func (c *current) onTitleElement183(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement183(stack["key"])
}

func (c *current) onTitleElement203() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement203()
}

func (c *current) onTitleElement180(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement180(stack["key"])
}

func (c *current) onTitleElement99(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement99(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onTitleElement210() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement210()
}

func (c *current) onTitleElement222() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement222()
}

func (c *current) onTitleElement243() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement243()
}

func (c *current) onTitleElement240(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement240(stack["key"])
}

func (c *current) onTitleElement257(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement257(stack["value"])
}

func (c *current) onTitleElement273() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement273() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement273()
}

func (c *current) onTitleElement237(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement237(stack["key"], stack["value"])
}

func (c *current) onTitleElement281() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement281()
}

func (c *current) onTitleElement278(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement278(stack["key"])
}

func (c *current) onTitleElement298() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement298()
}

func (c *current) onTitleElement275(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement275(stack["key"])
}

func (c *current) onTitleElement206(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement206(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onTitleElement305() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement305()
}

func (c *current) onTitleElement326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement326()
}

func (c *current) onTitleElement323(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement323(stack["key"])
}

func (c *current) onTitleElement340(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement340(stack["value"])
}

func (c *current) onTitleElement356() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement356()
}

func (c *current) onTitleElement320(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement320(stack["key"], stack["value"])
}

func (c *current) onTitleElement364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement364()
}

func (c *current) onTitleElement361(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement361() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement361(stack["key"])
}

func (c *current) onTitleElement381() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement381()
}

func (c *current) onTitleElement358(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement358() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement358(stack["key"])
}

func (c *current) onTitleElement301(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement301(stack["alt"], stack["otherAttrs"])
}

func (c *current) onTitleElement396() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement396()
}

func (c *current) onTitleElement393(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement393() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement393(stack["key"])
}

func (c *current) onTitleElement410(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement410(stack["value"])
}

func (c *current) onTitleElement426() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement426()
}

func (c *current) onTitleElement390(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement390(stack["key"], stack["value"])
}

func (c *current) onTitleElement434() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement434() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement434()
}

func (c *current) onTitleElement431(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement431(stack["key"])
}

func (c *current) onTitleElement451() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement451()
}

func (c *current) onTitleElement428(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement428() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement428(stack["key"])
}

func (c *current) onTitleElement384(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement384(stack["otherAttrs"])
}

func (c *current) onTitleElement74(path, attributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement74(stack["path"], stack["attributes"])
}

func (c *current) onTitleElement481() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement481()
}

func (c *current) onTitleElement471() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement471() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement471()
}

func (c *current) onTitleElement462() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement462()
}

func (c *current) onTitleElement494() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement494()
}

func (c *current) onTitleElement511() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement511()
}

func (c *current) onTitleElement508(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement508(stack["key"])
}

func (c *current) onTitleElement525(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement525(stack["value"])
}

func (c *current) onTitleElement541() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement541() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement541()
}

func (c *current) onTitleElement505(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement505(stack["key"], stack["value"])
}

func (c *current) onTitleElement549() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement549() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement549()
}

func (c *current) onTitleElement546(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement546() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement546(stack["key"])
}

func (c *current) onTitleElement566() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement566() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement566()
}

func (c *current) onTitleElement543(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement543() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement543(stack["key"])
}

func (c *current) onTitleElement490(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement490(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement581() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement581() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement581()
}

func (c *current) onTitleElement578(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement578(stack["key"])
}

func (c *current) onTitleElement595(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement595() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement595(stack["value"])
}

func (c *current) onTitleElement611() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement611() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement611()
}

func (c *current) onTitleElement575(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement575() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement575(stack["key"], stack["value"])
}

func (c *current) onTitleElement619() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement619() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement619()
}

func (c *current) onTitleElement616(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement616() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement616(stack["key"])
}

func (c *current) onTitleElement636() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement636() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement636()
}

func (c *current) onTitleElement613(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement613() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement613(stack["key"])
}

func (c *current) onTitleElement569(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement569() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement569(stack["otherAttrs"])
}

func (c *current) onTitleElement458(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement458(stack["url"], stack["attributes"])
}

func (c *current) onTitleElement660() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement660() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement660()
}

func (c *current) onTitleElement650() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement650() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement650()
}

func (c *current) onTitleElement642() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement642() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement642()
}

func (c *current) onTitleElement673() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement673() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement673()
}

func (c *current) onTitleElement690() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement690() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement690()
}

func (c *current) onTitleElement687(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement687() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement687(stack["key"])
}

func (c *current) onTitleElement704(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement704(stack["value"])
}

func (c *current) onTitleElement720() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement720() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement720()
}

func (c *current) onTitleElement684(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement684() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement684(stack["key"], stack["value"])
}

func (c *current) onTitleElement728() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement728() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement728()
}

func (c *current) onTitleElement725(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement725() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement725(stack["key"])
}

func (c *current) onTitleElement745() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement745() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement745()
}

func (c *current) onTitleElement722(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement722() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement722(stack["key"])
}

func (c *current) onTitleElement669(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement669(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement760() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement760() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement760()
}

func (c *current) onTitleElement757(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement757() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement757(stack["key"])
}

func (c *current) onTitleElement774(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement774() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement774(stack["value"])
}

func (c *current) onTitleElement790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement790()
}

func (c *current) onTitleElement754(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement754() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement754(stack["key"], stack["value"])
}

func (c *current) onTitleElement798() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement798() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement798()
}

func (c *current) onTitleElement795(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement795() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement795(stack["key"])
}

func (c *current) onTitleElement815() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement815() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement815()
}

func (c *current) onTitleElement792(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement792() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement792(stack["key"])
}

func (c *current) onTitleElement748(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement748() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement748(stack["otherAttrs"])
}

func (c *current) onTitleElement639(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement639() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement639(stack["url"], stack["attributes"])
}

func (c *current) onTitleElement838() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement838() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement838()
}

func (c *current) onTitleElement828() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement828()
}

func (c *current) onTitleElement820() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement820() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement820()
}

func (c *current) onTitleElement818(url interface{}) (interface{}, error) {
	return types.NewLink(url.(string), nil)
}

func (p *parser) callonTitleElement818() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement818(stack["url"])
}

func (c *current) onTitleElement455(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonTitleElement455() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement455(stack["link"])
}

func (c *current) onTitleElement849() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement849() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement849()
}

func (c *current) onTitleElement845(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonTitleElement845() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement845(stack["name"])
}

func (c *current) onTitleElement865() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement865() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement865()
}

func (c *current) onTitleElement855() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement855() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement855()
}

func (c *current) onTitleElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonTitleElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1(stack["element"])
}

func (c *current) onList25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList25()
}

func (c *current) onList15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList15()
}

func (c *current) onList11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonList11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList11(stack["id"])
}

func (c *current) onList9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonList9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList9(stack["id"])
}

func (c *current) onList53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList53()
}

func (c *current) onList43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList43()
}

func (c *current) onList39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonList39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList39(stack["id"])
}

func (c *current) onList75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList75()
}

func (c *current) onList78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList78()
}

func (c *current) onList67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonList67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList67(stack["title"])
}

func (c *current) onList92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList92()
}

func (c *current) onList95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList95()
}

func (c *current) onList86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonList86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList86(stack["role"])
}

func (c *current) onList111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonList111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList111()
}

func (c *current) onList113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonList113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList113()
}

func (c *current) onList115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonList115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList115()
}

func (c *current) onList117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonList117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList117()
}

func (c *current) onList119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonList119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList119()
}

func (c *current) onList106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonList106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList106(stack["k"])
}

func (c *current) onList122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonList122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList122()
}

func (c *current) onList130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList130()
}

func (c *current) onList141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList141()
}

func (c *current) onList138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList138(stack["key"])
}

func (c *current) onList155(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList155(stack["value"])
}

func (c *current) onList171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList171()
}

func (c *current) onList135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonList135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList135(stack["key"], stack["value"])
}

func (c *current) onList179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList179()
}

func (c *current) onList176(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList176(stack["key"])
}

func (c *current) onList196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList196()
}

func (c *current) onList173(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonList173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList173(stack["key"])
}

func (c *current) onList124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonList124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList124(stack["attributes"])
}

func (c *current) onList202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList202()
}

func (c *current) onList5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonList5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList5(stack["attr"])
}

func (c *current) onList1(attributes, elements interface{}) (interface{}, error) {
	return types.NewList(elements.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonList1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList1(stack["attributes"], stack["elements"])
}

func (c *current) onListParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonListParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph1(stack["lines"])
}

func (c *current) onListParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine9()
}

func (c *current) onListParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonListParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine13()
}

func (c *current) onListParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonListParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine15()
}

func (c *current) onListParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonListParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine17()
}

func (c *current) onListParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonListParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine19()
}

func (c *current) onListParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonListParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine21()
}

func (c *current) onListParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonListParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine23()
}

func (c *current) onListParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonListParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine28()
}

func (c *current) onListParagraphLine33() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonListParagraphLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine33()
}

func (c *current) onListParagraphLine38() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonListParagraphLine38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine38()
}

func (c *current) onListParagraphLine43() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonListParagraphLine43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine43()
}

func (c *current) onListParagraphLine51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine51()
}

func (c *current) onListParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine4(stack["prefix"])
}

func (c *current) onListParagraphLine59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine59()
}

func (c *current) onListParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonListParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine63()
}

func (c *current) onListParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonListParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine65()
}

func (c *current) onListParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonListParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine67()
}

func (c *current) onListParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonListParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine69()
}

func (c *current) onListParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonListParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine71()
}

func (c *current) onListParagraphLine73() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonListParagraphLine73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine73()
}

func (c *current) onListParagraphLine78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine78()
}

func (c *current) onListParagraphLine54(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine54(stack["prefix"])
}

func (c *current) onListParagraphLine82() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine82()
}

func (c *current) onListParagraphLine96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine96()
}

func (c *current) onListParagraphLine107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine107()
}

func (c *current) onListParagraphLine101() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonListParagraphLine101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine101()
}

func (c *current) onListParagraphLine135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine135()
}

func (c *current) onListParagraphLine125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine125()
}

func (c *current) onListParagraphLine121(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine121(stack["id"])
}

func (c *current) onListParagraphLine119(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonListParagraphLine119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine119(stack["id"])
}

func (c *current) onListParagraphLine163() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine163()
}

func (c *current) onListParagraphLine153() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine153()
}

func (c *current) onListParagraphLine149(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine149(stack["id"])
}

func (c *current) onListParagraphLine185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine185()
}

func (c *current) onListParagraphLine188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine188()
}

func (c *current) onListParagraphLine177(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonListParagraphLine177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine177(stack["title"])
}

func (c *current) onListParagraphLine202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine202()
}

func (c *current) onListParagraphLine205() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine205() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine205()
}

func (c *current) onListParagraphLine196(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonListParagraphLine196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine196(stack["role"])
}

func (c *current) onListParagraphLine221() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonListParagraphLine221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine221()
}

func (c *current) onListParagraphLine223() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonListParagraphLine223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine223()
}

func (c *current) onListParagraphLine225() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonListParagraphLine225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine225()
}

func (c *current) onListParagraphLine227() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonListParagraphLine227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine227()
}

func (c *current) onListParagraphLine229() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonListParagraphLine229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine229()
}

func (c *current) onListParagraphLine216(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonListParagraphLine216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine216(stack["k"])
}

func (c *current) onListParagraphLine232() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonListParagraphLine232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine232()
}

func (c *current) onListParagraphLine240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine240()
}

func (c *current) onListParagraphLine251() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine251()
}

func (c *current) onListParagraphLine248(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine248(stack["key"])
}

func (c *current) onListParagraphLine265(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine265() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine265(stack["value"])
}

func (c *current) onListParagraphLine281() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine281()
}

func (c *current) onListParagraphLine245(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonListParagraphLine245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine245(stack["key"], stack["value"])
}

func (c *current) onListParagraphLine289() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine289() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine289()
}

func (c *current) onListParagraphLine286(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine286(stack["key"])
}

func (c *current) onListParagraphLine306() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine306()
}

func (c *current) onListParagraphLine283(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonListParagraphLine283() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine283(stack["key"])
}

func (c *current) onListParagraphLine234(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonListParagraphLine234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine234(stack["attributes"])
}

func (c *current) onListParagraphLine312() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine312()
}

func (c *current) onListParagraphLine115(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonListParagraphLine115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine115(stack["attr"])
}

func (c *current) onListParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonListParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine1(stack["line"])
}

func (c *current) onContinuedDocumentBlock9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonContinuedDocumentBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock9()
}

func (c *current) onContinuedDocumentBlock3() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonContinuedDocumentBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock3()
}

func (c *current) onContinuedDocumentBlock1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonContinuedDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock1(stack["element"])
}

func (c *current) onOrderedListItem25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem25()
}

func (c *current) onOrderedListItem15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem15()
}

func (c *current) onOrderedListItem11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem11(stack["id"])
}

func (c *current) onOrderedListItem9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonOrderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem9(stack["id"])
}

func (c *current) onOrderedListItem53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem53()
}

func (c *current) onOrderedListItem43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem43()
}

func (c *current) onOrderedListItem39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem39(stack["id"])
}

func (c *current) onOrderedListItem75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem75()
}

func (c *current) onOrderedListItem78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem78()
}

func (c *current) onOrderedListItem67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonOrderedListItem67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem67(stack["title"])
}

func (c *current) onOrderedListItem92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem92()
}

func (c *current) onOrderedListItem95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem95()
}

func (c *current) onOrderedListItem86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonOrderedListItem86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem86(stack["role"])
}

func (c *current) onOrderedListItem111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonOrderedListItem111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem111()
}

func (c *current) onOrderedListItem113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonOrderedListItem113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem113()
}

func (c *current) onOrderedListItem115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonOrderedListItem115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem115()
}

func (c *current) onOrderedListItem117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonOrderedListItem117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem117()
}

func (c *current) onOrderedListItem119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonOrderedListItem119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem119()
}

func (c *current) onOrderedListItem106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonOrderedListItem106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem106(stack["k"])
}

func (c *current) onOrderedListItem122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonOrderedListItem122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem122()
}

func (c *current) onOrderedListItem130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem130()
}

func (c *current) onOrderedListItem141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem141()
}

func (c *current) onOrderedListItem138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem138(stack["key"])
}

func (c *current) onOrderedListItem155(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem155(stack["value"])
}

func (c *current) onOrderedListItem171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem171()
}

func (c *current) onOrderedListItem135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonOrderedListItem135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem135(stack["key"], stack["value"])
}

func (c *current) onOrderedListItem179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem179()
}

func (c *current) onOrderedListItem176(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem176(stack["key"])
}

func (c *current) onOrderedListItem196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem196()
}

func (c *current) onOrderedListItem173(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonOrderedListItem173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem173(stack["key"])
}

func (c *current) onOrderedListItem124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem124(stack["attributes"])
}

func (c *current) onOrderedListItem202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem202()
}

func (c *current) onOrderedListItem5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonOrderedListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem5(stack["attr"])
}

func (c *current) onOrderedListItem215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem215()
}

func (c *current) onOrderedListItem219() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonOrderedListItem219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem219()
}

func (c *current) onOrderedListItem221() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonOrderedListItem221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem221()
}

func (c *current) onOrderedListItem223() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonOrderedListItem223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem223()
}

func (c *current) onOrderedListItem225() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonOrderedListItem225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem225()
}

func (c *current) onOrderedListItem227() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonOrderedListItem227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem227()
}

func (c *current) onOrderedListItem229() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonOrderedListItem229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem229()
}

func (c *current) onOrderedListItem234() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonOrderedListItem234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem234()
}

func (c *current) onOrderedListItem239() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonOrderedListItem239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem239()
}

func (c *current) onOrderedListItem244() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonOrderedListItem244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem244()
}

func (c *current) onOrderedListItem249() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonOrderedListItem249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem249()
}

func (c *current) onOrderedListItem257() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem257()
}

func (c *current) onOrderedListItem210(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonOrderedListItem210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem210(stack["prefix"])
}

func (c *current) onOrderedListItem270() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem270()
}

func (c *current) onOrderedListItem262() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonOrderedListItem262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem262()
}

func (c *current) onOrderedListItem1(attributes, prefix, content interface{}) (interface{}, error) {
	return types.NewOrderedListItem(prefix.(types.OrderedListItemPrefix), content.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem1(stack["attributes"], stack["prefix"], stack["content"])
}

func (c *current) onOrderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonOrderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItemContent1(stack["elements"])
}

func (c *current) onUnorderedListItem9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem9()
}

func (c *current) onUnorderedListItem13() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonUnorderedListItem13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem13()
}

func (c *current) onUnorderedListItem15() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonUnorderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem15()
}

func (c *current) onUnorderedListItem17() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonUnorderedListItem17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem17()
}

func (c *current) onUnorderedListItem19() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonUnorderedListItem19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem19()
}

func (c *current) onUnorderedListItem21() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonUnorderedListItem21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem21()
}

func (c *current) onUnorderedListItem23() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonUnorderedListItem23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem23()
}

func (c *current) onUnorderedListItem28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem28()
}

func (c *current) onUnorderedListItem4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonUnorderedListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem4(stack["prefix"])
}

func (c *current) onUnorderedListItem41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem41()
}

func (c *current) onUnorderedListItem33() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonUnorderedListItem33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem33()
}

func (c *current) onUnorderedListItem1(prefix, content interface{}) (interface{}, error) {
	return types.NewUnorderedListItem(prefix.(types.UnorderedListItemPrefix), content.([]interface{}))
}

func (p *parser) callonUnorderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem1(stack["prefix"], stack["content"])
}

func (c *current) onUnorderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonUnorderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItemContent1(stack["elements"])
}

func (c *current) onLabeledListItem5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem5()
}

func (c *current) onLabeledListItem19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem19()
}

func (c *current) onLabeledListItem2(term, description interface{}) (interface{}, error) {
	return types.NewLabeledListItem(term.(string), description.([]interface{}))

}

func (p *parser) callonLabeledListItem2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem2(stack["term"], stack["description"])
}

func (c *current) onLabeledListItem28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem28()
}

func (c *current) onLabeledListItem42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem42()
}

func (c *current) onLabeledListItem25(term interface{}) (interface{}, error) {
	// here, WS is optional since there is no description afterwards
	return types.NewLabeledListItem(term.(string), nil)

}

func (p *parser) callonLabeledListItem25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem25(stack["term"])
}

func (c *current) onLabeledListItemDescription1(elements interface{}) (interface{}, error) {
	// TODO: replace with (ListParagraph+ ContinuedDocumentBlock*) and use a single rule for all item contents ?
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonLabeledListItemDescription1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription1(stack["elements"])
}

func (c *current) onParagraph18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph18()
}

func (c *current) onParagraph31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph31()
}

func (c *current) onParagraph43() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph43()
}

func (c *current) onParagraph45() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph45()
}

func (c *current) onParagraph47() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph47()
}

func (c *current) onParagraph49() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph49()
}

func (c *current) onParagraph51() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph51()
}

func (c *current) onParagraph15() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph15()
}

func (c *current) onParagraph57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph57()
}

func (c *current) onParagraph61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph61()
}

func (c *current) onParagraph77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph77()
}

func (c *current) onParagraph11(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph11(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph99() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph99()
}

func (c *current) onParagraph112() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph112()
}

func (c *current) onParagraph124() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph124()
}

func (c *current) onParagraph126() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph126()
}

func (c *current) onParagraph128() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph128()
}

func (c *current) onParagraph130() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph130()
}

func (c *current) onParagraph132() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph132()
}

func (c *current) onParagraph96() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph96()
}

func (c *current) onParagraph138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph138()
}

func (c *current) onParagraph142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph142()
}

func (c *current) onParagraph92(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph92(stack["kind"], stack["author"])
}

func (c *current) onParagraph164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph164()
}

func (c *current) onParagraph177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph177()
}

func (c *current) onParagraph189() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph189()
}

func (c *current) onParagraph191() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph191()
}

func (c *current) onParagraph193() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph193()
}

func (c *current) onParagraph195() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph195()
}

func (c *current) onParagraph197() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph197()
}

func (c *current) onParagraph161() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph161()
}

func (c *current) onParagraph203() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph203()
}

func (c *current) onParagraph157(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph157(stack["kind"])
}

func (c *current) onParagraph210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph210()
}

func (c *current) onParagraph215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph215()
}

func (c *current) onParagraph219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph219()
}

func (c *current) onParagraph235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph235()
}

func (c *current) onParagraph206(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph206(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph254()
}

func (c *current) onParagraph259() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph259()
}

func (c *current) onParagraph263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph263()
}

func (c *current) onParagraph250(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph250(stack["kind"], stack["author"])
}

func (c *current) onParagraph282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph282()
}

func (c *current) onParagraph287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph287()
}

func (c *current) onParagraph278(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph278(stack["kind"])
}

func (c *current) onParagraph293() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph293()
}

func (c *current) onParagraph7(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph7(stack["attr"])
}

func (c *current) onParagraph320() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph320()
}

func (c *current) onParagraph310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph310()
}

func (c *current) onParagraph306(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph306(stack["id"])
}

func (c *current) onParagraph304(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonParagraph304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph304(stack["id"])
}

func (c *current) onParagraph348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph348()
}

func (c *current) onParagraph338() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph338()
}

func (c *current) onParagraph334(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph334(stack["id"])
}

func (c *current) onParagraph370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph370()
}

func (c *current) onParagraph373() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph373() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph373()
}

func (c *current) onParagraph362(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonParagraph362() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph362(stack["title"])
}

func (c *current) onParagraph387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph387()
}

func (c *current) onParagraph390() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph390()
}

func (c *current) onParagraph381(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonParagraph381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph381(stack["role"])
}

func (c *current) onParagraph406() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph406()
}

func (c *current) onParagraph408() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph408()
}

func (c *current) onParagraph410() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph410()
}

func (c *current) onParagraph412() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph412()
}

func (c *current) onParagraph414() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph414()
}

func (c *current) onParagraph401(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonParagraph401() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph401(stack["k"])
}

func (c *current) onParagraph417() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonParagraph417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph417()
}

func (c *current) onParagraph425() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph425() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph425()
}

func (c *current) onParagraph436() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph436()
}

func (c *current) onParagraph433(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph433() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph433(stack["key"])
}

func (c *current) onParagraph450(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph450() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph450(stack["value"])
}

func (c *current) onParagraph466() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph466() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph466()
}

func (c *current) onParagraph430(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonParagraph430() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph430(stack["key"], stack["value"])
}

func (c *current) onParagraph474() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph474() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph474()
}

func (c *current) onParagraph471(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph471() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph471(stack["key"])
}

func (c *current) onParagraph491() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph491() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph491()
}

func (c *current) onParagraph468(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonParagraph468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph468(stack["key"])
}

func (c *current) onParagraph419(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonParagraph419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph419(stack["attributes"])
}

func (c *current) onParagraph497() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph497() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph497()
}

func (c *current) onParagraph300(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph300(stack["attr"])
}

func (c *current) onParagraph511() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph511()
}

func (c *current) onParagraph519() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph519()
}

func (c *current) onParagraph521() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph521() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph521()
}

func (c *current) onParagraph523() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph523() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph523()
}

func (c *current) onParagraph525() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph525()
}

func (c *current) onParagraph527() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph527() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph527()
}

func (c *current) onParagraph2(attributes, t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind), attributes.([]interface{}))

}

func (p *parser) callonParagraph2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph2(stack["attributes"], stack["t"], stack["lines"])
}

func (c *current) onParagraph549() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph549() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph549()
}

func (c *current) onParagraph562() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph562() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph562()
}

func (c *current) onParagraph574() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph574() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph574()
}

func (c *current) onParagraph576() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph576()
}

func (c *current) onParagraph578() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph578()
}

func (c *current) onParagraph580() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph580() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph580()
}

func (c *current) onParagraph582() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph582() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph582()
}

func (c *current) onParagraph546() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph546() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph546()
}

func (c *current) onParagraph588() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph588() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph588()
}

func (c *current) onParagraph592() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph592() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph592()
}

func (c *current) onParagraph608() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph608() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph608()
}

func (c *current) onParagraph542(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph542(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph630() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph630() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph630()
}

func (c *current) onParagraph643() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph643() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph643()
}

func (c *current) onParagraph655() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph655() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph655()
}

func (c *current) onParagraph657() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph657() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph657()
}

func (c *current) onParagraph659() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph659() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph659()
}

func (c *current) onParagraph661() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph661() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph661()
}

func (c *current) onParagraph663() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph663() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph663()
}

func (c *current) onParagraph627() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph627() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph627()
}

func (c *current) onParagraph669() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph669()
}

func (c *current) onParagraph673() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph673() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph673()
}

func (c *current) onParagraph623(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph623() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph623(stack["kind"], stack["author"])
}

func (c *current) onParagraph695() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph695() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph695()
}

func (c *current) onParagraph708() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph708() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph708()
}

func (c *current) onParagraph720() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph720() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph720()
}

func (c *current) onParagraph722() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph722() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph722()
}

func (c *current) onParagraph724() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph724() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph724()
}

func (c *current) onParagraph726() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph726() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph726()
}

func (c *current) onParagraph728() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph728() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph728()
}

func (c *current) onParagraph692() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph692() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph692()
}

func (c *current) onParagraph734() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph734() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph734()
}

func (c *current) onParagraph688(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph688() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph688(stack["kind"])
}

func (c *current) onParagraph741() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph741() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph741()
}

func (c *current) onParagraph746() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph746() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph746()
}

func (c *current) onParagraph750() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph750() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph750()
}

func (c *current) onParagraph766() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph766() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph766()
}

func (c *current) onParagraph737(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph737() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph737(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph785() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph785() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph785()
}

func (c *current) onParagraph790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph790()
}

func (c *current) onParagraph794() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph794() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph794()
}

func (c *current) onParagraph781(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph781() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph781(stack["kind"], stack["author"])
}

func (c *current) onParagraph813() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph813() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph813()
}

func (c *current) onParagraph818() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph818() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph818()
}

func (c *current) onParagraph809(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph809() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph809(stack["kind"])
}

func (c *current) onParagraph824() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph824() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph824()
}

func (c *current) onParagraph538(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph538(stack["attr"])
}

func (c *current) onParagraph851() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph851() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph851()
}

func (c *current) onParagraph841() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph841() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph841()
}

func (c *current) onParagraph837(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph837(stack["id"])
}

func (c *current) onParagraph835(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonParagraph835() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph835(stack["id"])
}

func (c *current) onParagraph879() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph879() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph879()
}

func (c *current) onParagraph869() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph869() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph869()
}

func (c *current) onParagraph865(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph865() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph865(stack["id"])
}

func (c *current) onParagraph901() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph901() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph901()
}

func (c *current) onParagraph904() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph904() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph904()
}

func (c *current) onParagraph893(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonParagraph893() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph893(stack["title"])
}

func (c *current) onParagraph918() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph918() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph918()
}

func (c *current) onParagraph921() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph921() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph921()
}

func (c *current) onParagraph912(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonParagraph912() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph912(stack["role"])
}

func (c *current) onParagraph937() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph937() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph937()
}

func (c *current) onParagraph939() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph939() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph939()
}

func (c *current) onParagraph941() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph941() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph941()
}

func (c *current) onParagraph943() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph943() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph943()
}

func (c *current) onParagraph945() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph945() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph945()
}

func (c *current) onParagraph932(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonParagraph932() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph932(stack["k"])
}

func (c *current) onParagraph948() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonParagraph948() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph948()
}

func (c *current) onParagraph956() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph956() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph956()
}

func (c *current) onParagraph967() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph967() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph967()
}

func (c *current) onParagraph964(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph964() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph964(stack["key"])
}

func (c *current) onParagraph981(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph981() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph981(stack["value"])
}

func (c *current) onParagraph997() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph997() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph997()
}

func (c *current) onParagraph961(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonParagraph961() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph961(stack["key"], stack["value"])
}

func (c *current) onParagraph1005() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1005() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1005()
}

func (c *current) onParagraph1002(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1002() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1002(stack["key"])
}

func (c *current) onParagraph1022() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1022() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1022()
}

func (c *current) onParagraph999(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonParagraph999() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph999(stack["key"])
}

func (c *current) onParagraph950(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonParagraph950() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph950(stack["attributes"])
}

func (c *current) onParagraph1028() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1028() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1028()
}

func (c *current) onParagraph831(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph831() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph831(stack["attr"])
}

func (c *current) onParagraph1042() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1042() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1042()
}

func (c *current) onParagraph533(attributes, lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}), attributes.([]interface{}))

}

func (p *parser) callonParagraph533() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph533(stack["attributes"], stack["lines"])
}

func (c *current) onInlineElements10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements10()
}

func (c *current) onInlineElements4(content interface{}) (interface{}, error) {
	return types.NewSingleLineComment(content.(string))
}

func (p *parser) callonInlineElements4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements4(stack["content"])
}

func (c *current) onInlineElements2(comment interface{}) (interface{}, error) {
	return types.NewInlineElements([]interface{}{comment})

}

func (p *parser) callonInlineElements2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements2(stack["comment"])
}

func (c *current) onInlineElements51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements51()
}

func (c *current) onInlineElements68() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements68() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements68()
}

func (c *current) onInlineElements58() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements58() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements58()
}

func (c *current) onInlineElements54(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonInlineElements54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements54(stack["id"])
}

func (c *current) onInlineElements86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements86()
}

func (c *current) onInlineElements25(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))

}

func (p *parser) callonInlineElements25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements25(stack["elements"])
}

func (c *current) onInlineElement19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement19()
}

func (c *current) onInlineElement9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement9()
}

func (c *current) onInlineElement35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement35()
}

func (c *current) onInlineElement39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement39()
}

func (c *current) onInlineElement5(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElement5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement5(stack["id"], stack["label"])
}

func (c *current) onInlineElement60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement60()
}

func (c *current) onInlineElement50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement50()
}

func (c *current) onInlineElement46(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElement46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement46(stack["id"])
}

func (c *current) onInlineElement91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement91()
}

func (c *current) onInlineElement81() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement81()
}

func (c *current) onInlineElement104() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement104()
}

func (c *current) onInlineElement116() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement116()
}

func (c *current) onInlineElement128() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement128()
}

func (c *current) onInlineElement149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement149()
}

func (c *current) onInlineElement146(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement146(stack["key"])
}

func (c *current) onInlineElement163(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement163(stack["value"])
}

func (c *current) onInlineElement179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement179()
}

func (c *current) onInlineElement143(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement143(stack["key"], stack["value"])
}

func (c *current) onInlineElement187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement187()
}

func (c *current) onInlineElement184(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement184(stack["key"])
}

func (c *current) onInlineElement204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement204()
}

func (c *current) onInlineElement181(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement181(stack["key"])
}

func (c *current) onInlineElement100(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement100(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElement211() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement211()
}

func (c *current) onInlineElement223() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement223()
}

func (c *current) onInlineElement244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement244()
}

func (c *current) onInlineElement241(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement241(stack["key"])
}

func (c *current) onInlineElement258(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement258(stack["value"])
}

func (c *current) onInlineElement274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement274()
}

func (c *current) onInlineElement238(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement238(stack["key"], stack["value"])
}

func (c *current) onInlineElement282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement282()
}

func (c *current) onInlineElement279(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement279(stack["key"])
}

func (c *current) onInlineElement299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement299()
}

func (c *current) onInlineElement276(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement276(stack["key"])
}

func (c *current) onInlineElement207(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement207(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElement306() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement306()
}

func (c *current) onInlineElement327() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement327() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement327()
}

func (c *current) onInlineElement324(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement324(stack["key"])
}

func (c *current) onInlineElement341(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement341(stack["value"])
}

func (c *current) onInlineElement357() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement357()
}

func (c *current) onInlineElement321(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement321(stack["key"], stack["value"])
}

func (c *current) onInlineElement365() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement365() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement365()
}

func (c *current) onInlineElement362(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement362() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement362(stack["key"])
}

func (c *current) onInlineElement382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement382()
}

func (c *current) onInlineElement359(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement359() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement359(stack["key"])
}

func (c *current) onInlineElement302(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement302(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElement397() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement397() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement397()
}

func (c *current) onInlineElement394(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement394(stack["key"])
}

func (c *current) onInlineElement411(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement411(stack["value"])
}

func (c *current) onInlineElement427() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement427()
}

func (c *current) onInlineElement391(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement391() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement391(stack["key"], stack["value"])
}

func (c *current) onInlineElement435() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement435()
}

func (c *current) onInlineElement432(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement432(stack["key"])
}

func (c *current) onInlineElement452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement452()
}

func (c *current) onInlineElement429(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement429(stack["key"])
}

func (c *current) onInlineElement385(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement385() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement385(stack["otherAttrs"])
}

func (c *current) onInlineElement75(path, attributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement75(stack["path"], stack["attributes"])
}

func (c *current) onInlineElement481() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement481()
}

func (c *current) onInlineElement471() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement471() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement471()
}

func (c *current) onInlineElement462() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement462()
}

func (c *current) onInlineElement494() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement494()
}

func (c *current) onInlineElement511() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement511()
}

func (c *current) onInlineElement508(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement508(stack["key"])
}

func (c *current) onInlineElement525(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement525(stack["value"])
}

func (c *current) onInlineElement541() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement541() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement541()
}

func (c *current) onInlineElement505(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement505(stack["key"], stack["value"])
}

func (c *current) onInlineElement549() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement549() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement549()
}

func (c *current) onInlineElement546(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement546() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement546(stack["key"])
}

func (c *current) onInlineElement566() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement566() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement566()
}

func (c *current) onInlineElement543(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement543() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement543(stack["key"])
}

func (c *current) onInlineElement490(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement490(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement581() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement581() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement581()
}

func (c *current) onInlineElement578(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement578(stack["key"])
}

func (c *current) onInlineElement595(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement595() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement595(stack["value"])
}

func (c *current) onInlineElement611() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement611() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement611()
}

func (c *current) onInlineElement575(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement575() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement575(stack["key"], stack["value"])
}

func (c *current) onInlineElement619() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement619() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement619()
}

func (c *current) onInlineElement616(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement616() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement616(stack["key"])
}

func (c *current) onInlineElement636() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement636() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement636()
}

func (c *current) onInlineElement613(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement613() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement613(stack["key"])
}

func (c *current) onInlineElement569(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement569() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement569(stack["otherAttrs"])
}

func (c *current) onInlineElement458(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement458(stack["url"], stack["attributes"])
}

func (c *current) onInlineElement660() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement660() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement660()
}

func (c *current) onInlineElement650() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement650() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement650()
}

func (c *current) onInlineElement642() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement642() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement642()
}

func (c *current) onInlineElement673() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement673() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement673()
}

func (c *current) onInlineElement690() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement690() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement690()
}

func (c *current) onInlineElement687(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement687() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement687(stack["key"])
}

func (c *current) onInlineElement704(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement704(stack["value"])
}

func (c *current) onInlineElement720() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement720() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement720()
}

func (c *current) onInlineElement684(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement684() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement684(stack["key"], stack["value"])
}

func (c *current) onInlineElement728() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement728() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement728()
}

func (c *current) onInlineElement725(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement725() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement725(stack["key"])
}

func (c *current) onInlineElement745() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement745() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement745()
}

func (c *current) onInlineElement722(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement722() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement722(stack["key"])
}

func (c *current) onInlineElement669(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement669(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement760() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement760() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement760()
}

func (c *current) onInlineElement757(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement757() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement757(stack["key"])
}

func (c *current) onInlineElement774(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement774() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement774(stack["value"])
}

func (c *current) onInlineElement790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement790()
}

func (c *current) onInlineElement754(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement754() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement754(stack["key"], stack["value"])
}

func (c *current) onInlineElement798() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement798() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement798()
}

func (c *current) onInlineElement795(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement795() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement795(stack["key"])
}

func (c *current) onInlineElement815() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement815() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement815()
}

func (c *current) onInlineElement792(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement792() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement792(stack["key"])
}

func (c *current) onInlineElement748(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement748() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement748(stack["otherAttrs"])
}

func (c *current) onInlineElement639(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement639() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement639(stack["url"], stack["attributes"])
}

func (c *current) onInlineElement838() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement838() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement838()
}

func (c *current) onInlineElement828() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement828()
}

func (c *current) onInlineElement820() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement820() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement820()
}

func (c *current) onInlineElement818(url interface{}) (interface{}, error) {
	return types.NewLink(url.(string), nil)
}

func (p *parser) callonInlineElement818() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement818(stack["url"])
}

func (c *current) onInlineElement455(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElement455() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement455(stack["link"])
}

func (c *current) onInlineElement849() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement849() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement849()
}

func (c *current) onInlineElement845(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonInlineElement845() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement845(stack["name"])
}

func (c *current) onInlineElement865() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement865() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement865()
}

func (c *current) onInlineElement855() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement855() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement855()
}

func (c *current) onInlineElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1(stack["element"])
}

func (c *current) onInlineElementsWithoutSubtitution27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution27()
}

func (c *current) onInlineElementsWithoutSubtitution44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution44()
}

func (c *current) onInlineElementsWithoutSubtitution34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution34()
}

func (c *current) onInlineElementsWithoutSubtitution30(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonInlineElementsWithoutSubtitution30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution30(stack["id"])
}

func (c *current) onInlineElementsWithoutSubtitution62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution62()
}

func (c *current) onInlineElementsWithoutSubtitution1(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonInlineElementsWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution1(stack["elements"])
}

func (c *current) onInlineElementWithoutSubtitution19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution19()
}

func (c *current) onInlineElementWithoutSubtitution9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution9()
}

func (c *current) onInlineElementWithoutSubtitution35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution35()
}

func (c *current) onInlineElementWithoutSubtitution39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution39()
}

func (c *current) onInlineElementWithoutSubtitution5(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElementWithoutSubtitution5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution5(stack["id"], stack["label"])
}

func (c *current) onInlineElementWithoutSubtitution60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution60()
}

func (c *current) onInlineElementWithoutSubtitution50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution50()
}

func (c *current) onInlineElementWithoutSubtitution46(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution46(stack["id"])
}

func (c *current) onInlineElementWithoutSubtitution91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution91()
}

func (c *current) onInlineElementWithoutSubtitution81() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution81()
}

func (c *current) onInlineElementWithoutSubtitution104() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution104()
}

func (c *current) onInlineElementWithoutSubtitution116() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution116()
}

func (c *current) onInlineElementWithoutSubtitution128() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution128()
}

func (c *current) onInlineElementWithoutSubtitution149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution149()
}

func (c *current) onInlineElementWithoutSubtitution146(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution146(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution163(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution163(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution179()
}

func (c *current) onInlineElementWithoutSubtitution143(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution143(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution187()
}

func (c *current) onInlineElementWithoutSubtitution184(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution184(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution204()
}

func (c *current) onInlineElementWithoutSubtitution181(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution181(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution100(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution100(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution211() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution211()
}

func (c *current) onInlineElementWithoutSubtitution223() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution223()
}

func (c *current) onInlineElementWithoutSubtitution244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution244()
}

func (c *current) onInlineElementWithoutSubtitution241(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution241(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution258(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution258(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution274()
}

func (c *current) onInlineElementWithoutSubtitution238(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution238(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution282()
}

func (c *current) onInlineElementWithoutSubtitution279(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution279(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution299()
}

func (c *current) onInlineElementWithoutSubtitution276(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution276(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution207(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution207(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution306() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution306()
}

func (c *current) onInlineElementWithoutSubtitution327() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution327() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution327()
}

func (c *current) onInlineElementWithoutSubtitution324(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution324(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution341(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution341(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution357() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution357()
}

func (c *current) onInlineElementWithoutSubtitution321(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution321(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution365() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution365() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution365()
}

func (c *current) onInlineElementWithoutSubtitution362(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution362() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution362(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution382()
}

func (c *current) onInlineElementWithoutSubtitution359(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution359() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution359(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution302(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution302(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution397() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution397() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution397()
}

func (c *current) onInlineElementWithoutSubtitution394(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution394(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution411(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution411(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution427() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution427()
}

func (c *current) onInlineElementWithoutSubtitution391(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution391() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution391(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution435() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution435()
}

func (c *current) onInlineElementWithoutSubtitution432(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution432(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution452()
}

func (c *current) onInlineElementWithoutSubtitution429(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution429(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution385(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution385() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution385(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution75(path, attributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution75(stack["path"], stack["attributes"])
}

func (c *current) onInlineElementWithoutSubtitution481() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution481()
}

func (c *current) onInlineElementWithoutSubtitution471() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution471() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution471()
}

func (c *current) onInlineElementWithoutSubtitution462() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution462()
}

func (c *current) onInlineElementWithoutSubtitution494() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution494()
}

func (c *current) onInlineElementWithoutSubtitution511() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution511()
}

func (c *current) onInlineElementWithoutSubtitution508(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution508(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution525(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution525(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution541() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution541() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution541()
}

func (c *current) onInlineElementWithoutSubtitution505(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution505(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution549() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution549() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution549()
}

func (c *current) onInlineElementWithoutSubtitution546(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution546() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution546(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution566() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution566() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution566()
}

func (c *current) onInlineElementWithoutSubtitution543(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution543() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution543(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution490(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution490(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution581() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution581() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution581()
}

func (c *current) onInlineElementWithoutSubtitution578(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution578(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution595(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution595() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution595(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution611() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution611() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution611()
}

func (c *current) onInlineElementWithoutSubtitution575(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution575() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution575(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution619() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution619() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution619()
}

func (c *current) onInlineElementWithoutSubtitution616(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution616() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution616(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution636() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution636() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution636()
}

func (c *current) onInlineElementWithoutSubtitution613(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution613() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution613(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution569(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution569() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution569(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution458(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution458(stack["url"], stack["attributes"])
}

func (c *current) onInlineElementWithoutSubtitution660() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution660() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution660()
}

func (c *current) onInlineElementWithoutSubtitution650() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution650() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution650()
}

func (c *current) onInlineElementWithoutSubtitution642() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution642() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution642()
}

func (c *current) onInlineElementWithoutSubtitution673() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution673() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution673()
}

func (c *current) onInlineElementWithoutSubtitution690() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution690() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution690()
}

func (c *current) onInlineElementWithoutSubtitution687(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution687() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution687(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution704(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution704(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution720() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution720() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution720()
}

func (c *current) onInlineElementWithoutSubtitution684(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution684() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution684(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution728() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution728() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution728()
}

func (c *current) onInlineElementWithoutSubtitution725(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution725() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution725(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution745() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution745() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution745()
}

func (c *current) onInlineElementWithoutSubtitution722(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution722() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution722(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution669(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution669(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution760() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution760() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution760()
}

func (c *current) onInlineElementWithoutSubtitution757(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution757() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution757(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution774(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution774() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution774(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution790()
}

func (c *current) onInlineElementWithoutSubtitution754(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution754() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution754(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution798() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution798() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution798()
}

func (c *current) onInlineElementWithoutSubtitution795(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution795() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution795(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution815() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution815() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution815()
}

func (c *current) onInlineElementWithoutSubtitution792(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution792() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution792(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution748(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution748() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution748(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution639(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution639() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution639(stack["url"], stack["attributes"])
}

func (c *current) onInlineElementWithoutSubtitution838() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution838() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution838()
}

func (c *current) onInlineElementWithoutSubtitution828() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution828()
}

func (c *current) onInlineElementWithoutSubtitution820() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution820() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution820()
}

func (c *current) onInlineElementWithoutSubtitution818(url interface{}) (interface{}, error) {
	return types.NewLink(url.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution818() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution818(stack["url"])
}

func (c *current) onInlineElementWithoutSubtitution455(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElementWithoutSubtitution455() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution455(stack["link"])
}

func (c *current) onInlineElementWithoutSubtitution855() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution855() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution855()
}

func (c *current) onInlineElementWithoutSubtitution845() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution845() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution845()
}

func (c *current) onInlineElementWithoutSubtitution1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElementWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1(stack["element"])
}

func (c *current) onBoldText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText2(stack["content"])
}

func (c *current) onBoldText10(content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewQuotedText(types.Bold, result)

}

func (p *parser) callonBoldText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText10(stack["content"])
}

func (c *current) onBoldText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText18(stack["content"])
}

func (c *current) onEscapedBoldText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText5()
}

func (c *current) onEscapedBoldText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "**", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText17()
}

func (c *current) onEscapedBoldText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "*", result)

}

func (p *parser) callonEscapedBoldText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText29()
}

func (c *current) onEscapedBoldText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "*", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText26(stack["backslashes"], stack["content"])
}

func (c *current) onItalicText2(content interface{}) (interface{}, error) {
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText2(stack["content"])
}

func (c *current) onItalicText10(content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewQuotedText(types.Italic, result)

}

func (p *parser) callonItalicText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText10(stack["content"])
}

func (c *current) onItalicText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText18(stack["content"])
}

func (c *current) onEscapedItalicText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText5()
}

func (c *current) onEscapedItalicText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "__", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText17()
}

func (c *current) onEscapedItalicText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "_", result)

}

func (p *parser) callonEscapedItalicText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText29()
}

func (c *current) onEscapedItalicText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "_", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText26(stack["backslashes"], stack["content"])
}

func (c *current) onMonospaceText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText2(stack["content"])
}

func (c *current) onMonospaceText10(content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewQuotedText(types.Monospace, result)

}

func (p *parser) callonMonospaceText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText10(stack["content"])
}

func (c *current) onMonospaceText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText18(stack["content"])
}

func (c *current) onEscapedMonospaceText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText5()
}

func (c *current) onEscapedMonospaceText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "``", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText17()
}

func (c *current) onEscapedMonospaceText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "`", result)

}

func (p *parser) callonEscapedMonospaceText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText29()
}

func (c *current) onEscapedMonospaceText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "`", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText26(stack["backslashes"], stack["content"])
}

func (c *current) onQuotedTextContent8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContent8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContent8()
}

func (c *current) onQuotedTextContentElement12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement12()
}

func (c *current) onQuotedTextContentElement31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement31()
}

func (c *current) onQuotedTextContentElement21() (interface{}, error) {
	// can have "*", "_" or "`" within, maybe because the user inserted another quote, or made an error (extra or missing space, for example)
	return c.text, nil
}

func (p *parser) callonQuotedTextContentElement21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement21()
}

func (c *current) onPassthrough2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.TriplePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough2(stack["content"])
}

func (c *current) onPassthrough12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.SinglePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough12(stack["content"])
}

func (c *current) onPassthroughMacro2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro2(stack["content"])
}

func (c *current) onPassthroughMacro12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro12(stack["content"])
}

func (c *current) onDelimitedBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock27()
}

func (c *current) onDelimitedBlock17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock17()
}

func (c *current) onDelimitedBlock13(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock13(stack["id"])
}

func (c *current) onDelimitedBlock11(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDelimitedBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock11(stack["id"])
}

func (c *current) onDelimitedBlock55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock55()
}

func (c *current) onDelimitedBlock45() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock45()
}

func (c *current) onDelimitedBlock41(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock41(stack["id"])
}

func (c *current) onDelimitedBlock77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock77()
}

func (c *current) onDelimitedBlock80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock80()
}

func (c *current) onDelimitedBlock69(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDelimitedBlock69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock69(stack["title"])
}

func (c *current) onDelimitedBlock94() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock94()
}

func (c *current) onDelimitedBlock97() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock97()
}

func (c *current) onDelimitedBlock88(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDelimitedBlock88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock88(stack["role"])
}

func (c *current) onDelimitedBlock113() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDelimitedBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock113()
}

func (c *current) onDelimitedBlock115() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDelimitedBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock115()
}

func (c *current) onDelimitedBlock117() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDelimitedBlock117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock117()
}

func (c *current) onDelimitedBlock119() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDelimitedBlock119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock119()
}

func (c *current) onDelimitedBlock121() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDelimitedBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock121()
}

func (c *current) onDelimitedBlock108(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDelimitedBlock108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock108(stack["k"])
}

func (c *current) onDelimitedBlock124() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDelimitedBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock124()
}

func (c *current) onDelimitedBlock132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock132()
}

func (c *current) onDelimitedBlock143() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock143()
}

func (c *current) onDelimitedBlock140(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock140(stack["key"])
}

func (c *current) onDelimitedBlock157(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock157(stack["value"])
}

func (c *current) onDelimitedBlock173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock173()
}

func (c *current) onDelimitedBlock137(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDelimitedBlock137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock137(stack["key"], stack["value"])
}

func (c *current) onDelimitedBlock181() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock181()
}

func (c *current) onDelimitedBlock178(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock178(stack["key"])
}

func (c *current) onDelimitedBlock198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock198()
}

func (c *current) onDelimitedBlock175(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDelimitedBlock175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock175(stack["key"])
}

func (c *current) onDelimitedBlock126(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDelimitedBlock126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock126(stack["attributes"])
}

func (c *current) onDelimitedBlock204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock204()
}

func (c *current) onDelimitedBlock7(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDelimitedBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock7(stack["attr"])
}

func (c *current) onDelimitedBlock215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock215()
}

func (c *current) onDelimitedBlock233() (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(string(c.text))
}

func (p *parser) callonDelimitedBlock233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock233()
}

func (c *current) onDelimitedBlock225(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonDelimitedBlock225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock225(stack["line"])
}

func (c *current) onDelimitedBlock222(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonDelimitedBlock222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock222(stack["lines"])
}

func (c *current) onDelimitedBlock256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock256()
}

func (c *current) onDelimitedBlock3(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Listing, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonDelimitedBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock3(stack["attributes"], stack["content"])
}

func (c *current) onDelimitedBlock290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock290()
}

func (c *current) onDelimitedBlock280() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock280() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock280()
}

func (c *current) onDelimitedBlock276(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock276(stack["id"])
}

func (c *current) onDelimitedBlock274(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDelimitedBlock274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock274(stack["id"])
}

func (c *current) onDelimitedBlock318() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock318()
}

func (c *current) onDelimitedBlock308() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock308() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock308()
}

func (c *current) onDelimitedBlock304(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock304(stack["id"])
}

func (c *current) onDelimitedBlock340() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock340()
}

func (c *current) onDelimitedBlock343() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock343()
}

func (c *current) onDelimitedBlock332(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDelimitedBlock332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock332(stack["title"])
}

func (c *current) onDelimitedBlock357() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock357()
}

func (c *current) onDelimitedBlock360() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock360()
}

func (c *current) onDelimitedBlock351(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDelimitedBlock351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock351(stack["role"])
}

func (c *current) onDelimitedBlock376() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDelimitedBlock376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock376()
}

func (c *current) onDelimitedBlock378() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDelimitedBlock378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock378()
}

func (c *current) onDelimitedBlock380() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDelimitedBlock380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock380()
}

func (c *current) onDelimitedBlock382() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDelimitedBlock382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock382()
}

func (c *current) onDelimitedBlock384() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDelimitedBlock384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock384()
}

func (c *current) onDelimitedBlock371(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDelimitedBlock371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock371(stack["k"])
}

func (c *current) onDelimitedBlock387() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDelimitedBlock387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock387()
}

func (c *current) onDelimitedBlock395() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock395() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock395()
}

func (c *current) onDelimitedBlock406() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock406()
}

func (c *current) onDelimitedBlock403(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock403() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock403(stack["key"])
}

func (c *current) onDelimitedBlock420(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock420(stack["value"])
}

func (c *current) onDelimitedBlock436() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock436()
}

func (c *current) onDelimitedBlock400(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDelimitedBlock400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock400(stack["key"], stack["value"])
}

func (c *current) onDelimitedBlock444() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock444() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock444()
}

func (c *current) onDelimitedBlock441(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock441() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock441(stack["key"])
}

func (c *current) onDelimitedBlock461() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock461() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock461()
}

func (c *current) onDelimitedBlock438(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDelimitedBlock438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock438(stack["key"])
}

func (c *current) onDelimitedBlock389(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDelimitedBlock389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock389(stack["attributes"])
}

func (c *current) onDelimitedBlock467() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock467() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock467()
}

func (c *current) onDelimitedBlock270(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDelimitedBlock270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock270(stack["attr"])
}

func (c *current) onDelimitedBlock478() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock478() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock478()
}

func (c *current) onDelimitedBlock485() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock485() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock485()
}

func (c *current) onDelimitedBlock509() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock509() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock509()
}

func (c *current) onDelimitedBlock266(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Comment, content.([]interface{}), attributes.([]interface{}), types.Verbatim)
}

func (p *parser) callonDelimitedBlock266() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock266(stack["attributes"], stack["content"])
}

func (c *current) onFencedBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock25()
}

func (c *current) onFencedBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock15()
}

func (c *current) onFencedBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonFencedBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock11(stack["id"])
}

func (c *current) onFencedBlock9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonFencedBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock9(stack["id"])
}

func (c *current) onFencedBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock53()
}

func (c *current) onFencedBlock43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock43()
}

func (c *current) onFencedBlock39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonFencedBlock39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock39(stack["id"])
}

func (c *current) onFencedBlock75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock75()
}

func (c *current) onFencedBlock78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock78()
}

func (c *current) onFencedBlock67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonFencedBlock67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock67(stack["title"])
}

func (c *current) onFencedBlock92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock92()
}

func (c *current) onFencedBlock95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock95()
}

func (c *current) onFencedBlock86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonFencedBlock86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock86(stack["role"])
}

func (c *current) onFencedBlock111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonFencedBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock111()
}

func (c *current) onFencedBlock113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonFencedBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock113()
}

func (c *current) onFencedBlock115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonFencedBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock115()
}

func (c *current) onFencedBlock117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonFencedBlock117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock117()
}

func (c *current) onFencedBlock119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonFencedBlock119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock119()
}

func (c *current) onFencedBlock106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonFencedBlock106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock106(stack["k"])
}

func (c *current) onFencedBlock122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonFencedBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock122()
}

func (c *current) onFencedBlock130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock130()
}

func (c *current) onFencedBlock141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock141()
}

func (c *current) onFencedBlock138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock138(stack["key"])
}

func (c *current) onFencedBlock155(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock155(stack["value"])
}

func (c *current) onFencedBlock171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock171()
}

func (c *current) onFencedBlock135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonFencedBlock135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock135(stack["key"], stack["value"])
}

func (c *current) onFencedBlock179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock179()
}

func (c *current) onFencedBlock176(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock176(stack["key"])
}

func (c *current) onFencedBlock196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock196()
}

func (c *current) onFencedBlock173(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonFencedBlock173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock173(stack["key"])
}

func (c *current) onFencedBlock124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonFencedBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock124(stack["attributes"])
}

func (c *current) onFencedBlock202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock202()
}

func (c *current) onFencedBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonFencedBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock5(stack["attr"])
}

func (c *current) onFencedBlock213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock213()
}

func (c *current) onFencedBlock227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock227()
}

func (c *current) onFencedBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Fenced, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonFencedBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock1(stack["attributes"], stack["content"])
}

func (c *current) onFencedBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent12()
}

func (c *current) onFencedBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonFencedBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent4()
}

func (c *current) onExampleBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock25()
}

func (c *current) onExampleBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock15()
}

func (c *current) onExampleBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonExampleBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock11(stack["id"])
}

func (c *current) onExampleBlock9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonExampleBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock9(stack["id"])
}

func (c *current) onExampleBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock53()
}

func (c *current) onExampleBlock43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock43()
}

func (c *current) onExampleBlock39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonExampleBlock39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock39(stack["id"])
}

func (c *current) onExampleBlock75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock75()
}

func (c *current) onExampleBlock78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock78()
}

func (c *current) onExampleBlock67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonExampleBlock67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock67(stack["title"])
}

func (c *current) onExampleBlock92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock92()
}

func (c *current) onExampleBlock95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock95()
}

func (c *current) onExampleBlock86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonExampleBlock86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock86(stack["role"])
}

func (c *current) onExampleBlock111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonExampleBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock111()
}

func (c *current) onExampleBlock113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonExampleBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock113()
}

func (c *current) onExampleBlock115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonExampleBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock115()
}

func (c *current) onExampleBlock117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonExampleBlock117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock117()
}

func (c *current) onExampleBlock119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonExampleBlock119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock119()
}

func (c *current) onExampleBlock106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonExampleBlock106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock106(stack["k"])
}

func (c *current) onExampleBlock122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonExampleBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock122()
}

func (c *current) onExampleBlock130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock130()
}

func (c *current) onExampleBlock141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock141()
}

func (c *current) onExampleBlock138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock138(stack["key"])
}

func (c *current) onExampleBlock155(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock155(stack["value"])
}

func (c *current) onExampleBlock171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock171()
}

func (c *current) onExampleBlock135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonExampleBlock135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock135(stack["key"], stack["value"])
}

func (c *current) onExampleBlock179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock179()
}

func (c *current) onExampleBlock176(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock176(stack["key"])
}

func (c *current) onExampleBlock196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock196()
}

func (c *current) onExampleBlock173(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonExampleBlock173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock173(stack["key"])
}

func (c *current) onExampleBlock124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonExampleBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock124(stack["attributes"])
}

func (c *current) onExampleBlock202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock202()
}

func (c *current) onExampleBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonExampleBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock5(stack["attr"])
}

func (c *current) onExampleBlock213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock213()
}

func (c *current) onExampleBlock231() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock231()
}

func (c *current) onExampleBlock223() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonExampleBlock223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock223()
}

func (c *current) onExampleBlock244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock244()
}

func (c *current) onExampleBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Example, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonExampleBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock1(stack["attributes"], stack["content"])
}

func (c *current) onBlockParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonBlockParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph1(stack["lines"])
}

func (c *current) onBlockParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine9()
}

func (c *current) onBlockParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonBlockParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine13()
}

func (c *current) onBlockParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonBlockParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine15()
}

func (c *current) onBlockParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonBlockParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine17()
}

func (c *current) onBlockParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonBlockParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine19()
}

func (c *current) onBlockParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonBlockParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine21()
}

func (c *current) onBlockParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonBlockParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine23()
}

func (c *current) onBlockParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonBlockParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine28()
}

func (c *current) onBlockParagraphLine33() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonBlockParagraphLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine33()
}

func (c *current) onBlockParagraphLine38() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonBlockParagraphLine38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine38()
}

func (c *current) onBlockParagraphLine43() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonBlockParagraphLine43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine43()
}

func (c *current) onBlockParagraphLine51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine51()
}

func (c *current) onBlockParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine4(stack["prefix"])
}

func (c *current) onBlockParagraphLine59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine59()
}

func (c *current) onBlockParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonBlockParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine63()
}

func (c *current) onBlockParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonBlockParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine65()
}

func (c *current) onBlockParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonBlockParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine67()
}

func (c *current) onBlockParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonBlockParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine69()
}

func (c *current) onBlockParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonBlockParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine71()
}

func (c *current) onBlockParagraphLine73() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonBlockParagraphLine73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine73()
}

func (c *current) onBlockParagraphLine78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine78()
}

func (c *current) onBlockParagraphLine54(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine54(stack["prefix"])
}

func (c *current) onBlockParagraphLine82() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine82()
}

func (c *current) onBlockParagraphLine96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine96()
}

func (c *current) onBlockParagraphLine107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine107()
}

func (c *current) onBlockParagraphLine101() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonBlockParagraphLine101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine101()
}

func (c *current) onBlockParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonBlockParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine1(stack["line"])
}

func (c *current) onQuoteBlock16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock16()
}

func (c *current) onQuoteBlock29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock29()
}

func (c *current) onQuoteBlock41() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock41()
}

func (c *current) onQuoteBlock43() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock43()
}

func (c *current) onQuoteBlock45() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock45()
}

func (c *current) onQuoteBlock47() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock47()
}

func (c *current) onQuoteBlock49() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock49()
}

func (c *current) onQuoteBlock13() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock13()
}

func (c *current) onQuoteBlock55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock55()
}

func (c *current) onQuoteBlock59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock59()
}

func (c *current) onQuoteBlock75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock75()
}

func (c *current) onQuoteBlock9(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonQuoteBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock9(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onQuoteBlock97() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock97()
}

func (c *current) onQuoteBlock110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock110()
}

func (c *current) onQuoteBlock122() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock122()
}

func (c *current) onQuoteBlock124() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock124()
}

func (c *current) onQuoteBlock126() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock126()
}

func (c *current) onQuoteBlock128() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock128()
}

func (c *current) onQuoteBlock130() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock130()
}

func (c *current) onQuoteBlock94() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock94()
}

func (c *current) onQuoteBlock136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock136()
}

func (c *current) onQuoteBlock140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock140()
}

func (c *current) onQuoteBlock90(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonQuoteBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock90(stack["kind"], stack["author"])
}

func (c *current) onQuoteBlock162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock162()
}

func (c *current) onQuoteBlock175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock175()
}

func (c *current) onQuoteBlock187() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock187()
}

func (c *current) onQuoteBlock189() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock189()
}

func (c *current) onQuoteBlock191() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock191()
}

func (c *current) onQuoteBlock193() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock193()
}

func (c *current) onQuoteBlock195() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock195()
}

func (c *current) onQuoteBlock159() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock159()
}

func (c *current) onQuoteBlock201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock201()
}

func (c *current) onQuoteBlock155(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonQuoteBlock155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock155(stack["kind"])
}

func (c *current) onQuoteBlock207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock207()
}

func (c *current) onQuoteBlock5(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonQuoteBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock5(stack["attribute"])
}

func (c *current) onQuoteBlock218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock218()
}

func (c *current) onQuoteBlock232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock232()
}

func (c *current) onQuoteBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Quote,
		content.([]interface{}),
		attributes.([]interface{}),
		types.None)
}

func (p *parser) callonQuoteBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock1(stack["attributes"], stack["content"])
}

func (c *current) onQuoteBlockContent1(element interface{}) (interface{}, error) {
	return element, nil

}

func (p *parser) callonQuoteBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockContent1(stack["element"])
}

func (c *current) onVerseBlock13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock13()
}

func (c *current) onVerseBlock18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock18()
}

func (c *current) onVerseBlock22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock22()
}

func (c *current) onVerseBlock38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock38()
}

func (c *current) onVerseBlock9(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonVerseBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock9(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onVerseBlock57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock57()
}

func (c *current) onVerseBlock62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock62()
}

func (c *current) onVerseBlock66() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock66() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock66()
}

func (c *current) onVerseBlock53(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonVerseBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock53(stack["kind"], stack["author"])
}

func (c *current) onVerseBlock85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock85()
}

func (c *current) onVerseBlock90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock90()
}

func (c *current) onVerseBlock81(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonVerseBlock81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock81(stack["kind"])
}

func (c *current) onVerseBlock96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock96()
}

func (c *current) onVerseBlock5(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonVerseBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock5(stack["attribute"])
}

func (c *current) onVerseBlock107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock107()
}

func (c *current) onVerseBlock121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock121()
}

func (c *current) onVerseBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Verse,
		content.([]interface{}),
		attributes.([]interface{}),
		types.None)
}

func (p *parser) callonVerseBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock1(stack["attributes"], stack["content"])
}

func (c *current) onVerseBlockContent1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonVerseBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockContent1(stack["lines"])
}

func (c *current) onVerseBlockLine1(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonVerseBlockLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine1(stack["line"])
}

func (c *current) onVerseBlockLineContent16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent16()
}

func (c *current) onVerseBlockLineContent22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent22()
}

func (c *current) onVerseBlockLineContent1(elements interface{}) (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonVerseBlockLineContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent1(stack["elements"])
}

func (c *current) onSidebarBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock25()
}

func (c *current) onSidebarBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock15()
}

func (c *current) onSidebarBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSidebarBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock11(stack["id"])
}

func (c *current) onSidebarBlock9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSidebarBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock9(stack["id"])
}

func (c *current) onSidebarBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock53()
}

func (c *current) onSidebarBlock43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock43()
}

func (c *current) onSidebarBlock39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSidebarBlock39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock39(stack["id"])
}

func (c *current) onSidebarBlock75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock75()
}

func (c *current) onSidebarBlock78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock78()
}

func (c *current) onSidebarBlock67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSidebarBlock67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock67(stack["title"])
}

func (c *current) onSidebarBlock92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock92()
}

func (c *current) onSidebarBlock95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock95()
}

func (c *current) onSidebarBlock86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSidebarBlock86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock86(stack["role"])
}

func (c *current) onSidebarBlock111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSidebarBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock111()
}

func (c *current) onSidebarBlock113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSidebarBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock113()
}

func (c *current) onSidebarBlock115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSidebarBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock115()
}

func (c *current) onSidebarBlock117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSidebarBlock117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock117()
}

func (c *current) onSidebarBlock119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSidebarBlock119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock119()
}

func (c *current) onSidebarBlock106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSidebarBlock106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock106(stack["k"])
}

func (c *current) onSidebarBlock122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSidebarBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock122()
}

func (c *current) onSidebarBlock130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock130()
}

func (c *current) onSidebarBlock141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock141()
}

func (c *current) onSidebarBlock138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock138(stack["key"])
}

func (c *current) onSidebarBlock155(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock155(stack["value"])
}

func (c *current) onSidebarBlock171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock171()
}

func (c *current) onSidebarBlock135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSidebarBlock135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock135(stack["key"], stack["value"])
}

func (c *current) onSidebarBlock179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock179()
}

func (c *current) onSidebarBlock176(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock176(stack["key"])
}

func (c *current) onSidebarBlock196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock196()
}

func (c *current) onSidebarBlock173(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSidebarBlock173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock173(stack["key"])
}

func (c *current) onSidebarBlock124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSidebarBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock124(stack["attributes"])
}

func (c *current) onSidebarBlock202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock202()
}

func (c *current) onSidebarBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSidebarBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock5(stack["attr"])
}

func (c *current) onSidebarBlock213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock213()
}

func (c *current) onSidebarBlock227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock227()
}

func (c *current) onSidebarBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Sidebar, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock1(stack["attributes"], stack["content"])
}

func (c *current) onSidebarBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent12()
}

func (c *current) onSidebarBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonSidebarBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent4()
}

func (c *current) onNonSidebarBlock1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonNonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onNonSidebarBlock1(stack["content"])
}

func (c *current) onTable25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable25()
}

func (c *current) onTable15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable15()
}

func (c *current) onTable11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonTable11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable11(stack["id"])
}

func (c *current) onTable9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonTable9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable9(stack["id"])
}

func (c *current) onTable53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable53()
}

func (c *current) onTable43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable43()
}

func (c *current) onTable39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonTable39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable39(stack["id"])
}

func (c *current) onTable75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable75()
}

func (c *current) onTable78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable78()
}

func (c *current) onTable67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonTable67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable67(stack["title"])
}

func (c *current) onTable92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable92()
}

func (c *current) onTable95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable95()
}

func (c *current) onTable86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonTable86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable86(stack["role"])
}

func (c *current) onTable111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonTable111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable111()
}

func (c *current) onTable113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonTable113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable113()
}

func (c *current) onTable115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonTable115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable115()
}

func (c *current) onTable117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonTable117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable117()
}

func (c *current) onTable119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonTable119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable119()
}

func (c *current) onTable106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonTable106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable106(stack["k"])
}

func (c *current) onTable122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonTable122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable122()
}

func (c *current) onTable130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable130()
}

func (c *current) onTable141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable141()
}

func (c *current) onTable138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable138(stack["key"])
}

func (c *current) onTable155(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable155(stack["value"])
}

func (c *current) onTable171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable171()
}

func (c *current) onTable135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTable135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable135(stack["key"], stack["value"])
}

func (c *current) onTable179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable179()
}

func (c *current) onTable176(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable176(stack["key"])
}

func (c *current) onTable196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable196()
}

func (c *current) onTable173(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTable173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable173(stack["key"])
}

func (c *current) onTable124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonTable124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable124(stack["attributes"])
}

func (c *current) onTable202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable202()
}

func (c *current) onTable5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonTable5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable5(stack["attr"])
}

func (c *current) onTable213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable213()
}

func (c *current) onTable230() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable230()
}

func (c *current) onTable1(attributes, header, lines interface{}) (interface{}, error) {
	// end delimiter or end of file
	return types.NewTable(header, lines.([]interface{}), attributes.([]interface{}))

}

func (p *parser) callonTable1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable1(stack["attributes"], stack["header"], stack["lines"])
}

func (c *current) onTableLineHeader21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader21()
}

func (c *current) onTableLineHeader13(cells interface{}) (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLineHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader13(stack["cells"])
}

func (c *current) onTableLineHeader1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLineHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader1(stack["cells"])
}

func (c *current) onTableLine22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine22()
}

func (c *current) onTableLine14() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLine14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine14()
}

func (c *current) onTableLine1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine1(stack["cells"])
}

func (c *current) onTableCell7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell7()
}

func (c *current) onTableCell18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell18()
}

func (c *current) onTableCell29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell29()
}

func (c *current) onTableCell35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell35()
}

func (c *current) onTableCell1(elements interface{}) (interface{}, error) {
	return types.NewInlineElements(elements)
}

func (p *parser) callonTableCell1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell1(stack["elements"])
}

func (c *current) onWS3() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonWS3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWS3()
}

var (
	// errNoRule is returned when the grammar to parse has no rule.
	errNoRule = errors.New("grammar has no rule")

	// errInvalidEntrypoint is returned when the specified entrypoint rule
	// does not exit.
	errInvalidEntrypoint = errors.New("invalid entrypoint")

	// errInvalidEncoding is returned when the source is not properly
	// utf8-encoded.
	errInvalidEncoding = errors.New("invalid encoding")

	// errMaxExprCnt is used to signal that the maximum number of
	// expressions have been parsed.
	errMaxExprCnt = errors.New("max number of expresssions parsed")
)

// Option is a function that can set an option on the parser. It returns
// the previous setting as an Option.
type Option func(*parser) Option

// MaxExpressions creates an Option to stop parsing after the provided
// number of expressions have been parsed, if the value is 0 then the parser will
// parse for as many steps as needed (possibly an infinite number).
//
// The default for maxExprCnt is 0.
func MaxExpressions(maxExprCnt uint64) Option {
	return func(p *parser) Option {
		oldMaxExprCnt := p.maxExprCnt
		p.maxExprCnt = maxExprCnt
		return MaxExpressions(oldMaxExprCnt)
	}
}

// Entrypoint creates an Option to set the rule name to use as entrypoint.
// The rule name must have been specified in the -alternate-entrypoints
// if generating the parser with the -optimize-grammar flag, otherwise
// it may have been optimized out. Passing an empty string sets the
// entrypoint to the first rule in the grammar.
//
// The default is to start parsing at the first rule in the grammar.
func Entrypoint(ruleName string) Option {
	return func(p *parser) Option {
		oldEntrypoint := p.entrypoint
		p.entrypoint = ruleName
		if ruleName == "" {
			p.entrypoint = g.rules[0].name
		}
		return Entrypoint(oldEntrypoint)
	}
}

// Statistics adds a user provided Stats struct to the parser to allow
// the user to process the results after the parsing has finished.
// Also the key for the "no match" counter is set.
//
// Example usage:
//
//     input := "input"
//     stats := Stats{}
//     _, err := Parse("input-file", []byte(input), Statistics(&stats, "no match"))
//     if err != nil {
//         log.Panicln(err)
//     }
//     b, err := json.MarshalIndent(stats.ChoiceAltCnt, "", "  ")
//     if err != nil {
//         log.Panicln(err)
//     }
//     fmt.Println(string(b))
//
func Statistics(stats *Stats, choiceNoMatch string) Option {
	return func(p *parser) Option {
		oldStats := p.Stats
		p.Stats = stats
		oldChoiceNoMatch := p.choiceNoMatch
		p.choiceNoMatch = choiceNoMatch
		if p.Stats.ChoiceAltCnt == nil {
			p.Stats.ChoiceAltCnt = make(map[string]map[string]int)
		}
		return Statistics(oldStats, oldChoiceNoMatch)
	}
}

// Debug creates an Option to set the debug flag to b. When set to true,
// debugging information is printed to stdout while parsing.
//
// The default is false.
func Debug(b bool) Option {
	return func(p *parser) Option {
		old := p.debug
		p.debug = b
		return Debug(old)
	}
}

// Memoize creates an Option to set the memoize flag to b. When set to true,
// the parser will cache all results so each expression is evaluated only
// once. This guarantees linear parsing time even for pathological cases,
// at the expense of more memory and slower times for typical cases.
//
// The default is false.
func Memoize(b bool) Option {
	return func(p *parser) Option {
		old := p.memoize
		p.memoize = b
		return Memoize(old)
	}
}

// AllowInvalidUTF8 creates an Option to allow invalid UTF-8 bytes.
// Every invalid UTF-8 byte is treated as a utf8.RuneError (U+FFFD)
// by character class matchers and is matched by the any matcher.
// The returned matched value, c.text and c.offset are NOT affected.
//
// The default is false.
func AllowInvalidUTF8(b bool) Option {
	return func(p *parser) Option {
		old := p.allowInvalidUTF8
		p.allowInvalidUTF8 = b
		return AllowInvalidUTF8(old)
	}
}

// Recover creates an Option to set the recover flag to b. When set to
// true, this causes the parser to recover from panics and convert it
// to an error. Setting it to false can be useful while debugging to
// access the full stack trace.
//
// The default is true.
func Recover(b bool) Option {
	return func(p *parser) Option {
		old := p.recover
		p.recover = b
		return Recover(old)
	}
}

// GlobalStore creates an Option to set a key to a certain value in
// the globalStore.
func GlobalStore(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.globalStore[key]
		p.cur.globalStore[key] = value
		return GlobalStore(key, old)
	}
}

// InitState creates an Option to set a key to a certain value in
// the global "state" store.
func InitState(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.state[key]
		p.cur.state[key] = value
		return InitState(key, old)
	}
}

// ParseFile parses the file identified by filename.
func ParseFile(filename string, opts ...Option) (i interface{}, err error) {
	f, err := os.Open(filename)
	if err != nil {
		return nil, err
	}
	defer func() {
		if closeErr := f.Close(); closeErr != nil {
			err = closeErr
		}
	}()
	return ParseReader(filename, f, opts...)
}

// ParseReader parses the data from r using filename as information in the
// error messages.
func ParseReader(filename string, r io.Reader, opts ...Option) (interface{}, error) {
	b, err := ioutil.ReadAll(r)
	if err != nil {
		return nil, err
	}

	return Parse(filename, b, opts...)
}

// Parse parses the data from b using filename as information in the
// error messages.
func Parse(filename string, b []byte, opts ...Option) (interface{}, error) {
	return newParser(filename, b, opts...).parse(g)
}

// position records a position in the text.
type position struct {
	line, col, offset int
}

func (p position) String() string {
	return fmt.Sprintf("%d:%d [%d]", p.line, p.col, p.offset)
}

// savepoint stores all state required to go back to this point in the
// parser.
type savepoint struct {
	position
	rn rune
	w  int
}

type current struct {
	pos  position // start position of the match
	text []byte   // raw text of the match

	// state is a store for arbitrary key,value pairs that the user wants to be
	// tied to the backtracking of the parser.
	// This is always rolled back if a parsing rule fails.
	state storeDict

	// globalStore is a general store for the user to store arbitrary key-value
	// pairs that they need to manage and that they do not want tied to the
	// backtracking of the parser. This is only modified by the user and never
	// rolled back by the parser. It is always up to the user to keep this in a
	// consistent state.
	globalStore storeDict
}

type storeDict map[string]interface{}

// the AST types...

type grammar struct {
	pos   position
	rules []*rule
}

type rule struct {
	pos         position
	name        string
	displayName string
	expr        interface{}
}

type choiceExpr struct {
	pos          position
	alternatives []interface{}
}

type actionExpr struct {
	pos  position
	expr interface{}
	run  func(*parser) (interface{}, error)
}

type recoveryExpr struct {
	pos          position
	expr         interface{}
	recoverExpr  interface{}
	failureLabel []string
}

type seqExpr struct {
	pos   position
	exprs []interface{}
}

type throwExpr struct {
	pos   position
	label string
}

type labeledExpr struct {
	pos   position
	label string
	expr  interface{}
}

type expr struct {
	pos  position
	expr interface{}
}

type andExpr expr
type notExpr expr
type zeroOrOneExpr expr
type zeroOrMoreExpr expr
type oneOrMoreExpr expr

type ruleRefExpr struct {
	pos  position
	name string
}

type stateCodeExpr struct {
	pos position
	run func(*parser) error
}

type andCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type notCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type litMatcher struct {
	pos        position
	val        string
	ignoreCase bool
}

type charClassMatcher struct {
	pos             position
	val             string
	basicLatinChars [128]bool
	chars           []rune
	ranges          []rune
	classes         []*unicode.RangeTable
	ignoreCase      bool
	inverted        bool
}

type anyMatcher position

// errList cumulates the errors found by the parser.
type errList []error

func (e *errList) add(err error) {
	*e = append(*e, err)
}

func (e errList) err() error {
	if len(e) == 0 {
		return nil
	}
	e.dedupe()
	return e
}

func (e *errList) dedupe() {
	var cleaned []error
	set := make(map[string]bool)
	for _, err := range *e {
		if msg := err.Error(); !set[msg] {
			set[msg] = true
			cleaned = append(cleaned, err)
		}
	}
	*e = cleaned
}

func (e errList) Error() string {
	switch len(e) {
	case 0:
		return ""
	case 1:
		return e[0].Error()
	default:
		var buf bytes.Buffer

		for i, err := range e {
			if i > 0 {
				buf.WriteRune('\n')
			}
			buf.WriteString(err.Error())
		}
		return buf.String()
	}
}

// parserError wraps an error with a prefix indicating the rule in which
// the error occurred. The original error is stored in the Inner field.
type parserError struct {
	Inner    error
	pos      position
	prefix   string
	expected []string
}

// Error returns the error message.
func (p *parserError) Error() string {
	return p.prefix + ": " + p.Inner.Error()
}

// newParser creates a parser with the specified input source and options.
func newParser(filename string, b []byte, opts ...Option) *parser {
	stats := Stats{
		ChoiceAltCnt: make(map[string]map[string]int),
	}

	p := &parser{
		filename: filename,
		errs:     new(errList),
		data:     b,
		pt:       savepoint{position: position{line: 1}},
		recover:  true,
		cur: current{
			state:       make(storeDict),
			globalStore: make(storeDict),
		},
		maxFailPos:      position{col: 1, line: 1},
		maxFailExpected: make([]string, 0, 20),
		Stats:           &stats,
		// start rule is rule [0] unless an alternate entrypoint is specified
		entrypoint: g.rules[0].name,
	}
	p.setOptions(opts)

	if p.maxExprCnt == 0 {
		p.maxExprCnt = math.MaxUint64
	}

	return p
}

// setOptions applies the options to the parser.
func (p *parser) setOptions(opts []Option) {
	for _, opt := range opts {
		opt(p)
	}
}

type resultTuple struct {
	v   interface{}
	b   bool
	end savepoint
}

const choiceNoMatch = -1

// Stats stores some statistics, gathered during parsing
type Stats struct {
	// ExprCnt counts the number of expressions processed during parsing
	// This value is compared to the maximum number of expressions allowed
	// (set by the MaxExpressions option).
	ExprCnt uint64

	// ChoiceAltCnt is used to count for each ordered choice expression,
	// which alternative is used how may times.
	// These numbers allow to optimize the order of the ordered choice expression
	// to increase the performance of the parser
	//
	// The outer key of ChoiceAltCnt is composed of the name of the rule as well
	// as the line and the column of the ordered choice.
	// The inner key of ChoiceAltCnt is the number (one-based) of the matching alternative.
	// For each alternative the number of matches are counted. If an ordered choice does not
	// match, a special counter is incremented. The name of this counter is set with
	// the parser option Statistics.
	// For an alternative to be included in ChoiceAltCnt, it has to match at least once.
	ChoiceAltCnt map[string]map[string]int
}

type parser struct {
	filename string
	pt       savepoint
	cur      current

	data []byte
	errs *errList

	depth   int
	recover bool
	debug   bool

	memoize bool
	// memoization table for the packrat algorithm:
	// map[offset in source] map[expression or rule] {value, match}
	memo map[int]map[interface{}]resultTuple

	// rules table, maps the rule identifier to the rule node
	rules map[string]*rule
	// variables stack, map of label to value
	vstack []map[string]interface{}
	// rule stack, allows identification of the current rule in errors
	rstack []*rule

	// parse fail
	maxFailPos            position
	maxFailExpected       []string
	maxFailInvertExpected bool

	// max number of expressions to be parsed
	maxExprCnt uint64
	// entrypoint for the parser
	entrypoint string

	allowInvalidUTF8 bool

	*Stats

	choiceNoMatch string
	// recovery expression stack, keeps track of the currently available recovery expression, these are traversed in reverse
	recoveryStack []map[string]interface{}
}

// push a variable set on the vstack.
func (p *parser) pushV() {
	if cap(p.vstack) == len(p.vstack) {
		// create new empty slot in the stack
		p.vstack = append(p.vstack, nil)
	} else {
		// slice to 1 more
		p.vstack = p.vstack[:len(p.vstack)+1]
	}

	// get the last args set
	m := p.vstack[len(p.vstack)-1]
	if m != nil && len(m) == 0 {
		// empty map, all good
		return
	}

	m = make(map[string]interface{})
	p.vstack[len(p.vstack)-1] = m
}

// pop a variable set from the vstack.
func (p *parser) popV() {
	// if the map is not empty, clear it
	m := p.vstack[len(p.vstack)-1]
	if len(m) > 0 {
		// GC that map
		p.vstack[len(p.vstack)-1] = nil
	}
	p.vstack = p.vstack[:len(p.vstack)-1]
}

// push a recovery expression with its labels to the recoveryStack
func (p *parser) pushRecovery(labels []string, expr interface{}) {
	if cap(p.recoveryStack) == len(p.recoveryStack) {
		// create new empty slot in the stack
		p.recoveryStack = append(p.recoveryStack, nil)
	} else {
		// slice to 1 more
		p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)+1]
	}

	m := make(map[string]interface{}, len(labels))
	for _, fl := range labels {
		m[fl] = expr
	}
	p.recoveryStack[len(p.recoveryStack)-1] = m
}

// pop a recovery expression from the recoveryStack
func (p *parser) popRecovery() {
	// GC that map
	p.recoveryStack[len(p.recoveryStack)-1] = nil

	p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)-1]
}

func (p *parser) print(prefix, s string) string {
	if !p.debug {
		return s
	}

	fmt.Printf("%s %d:%d:%d: %s [%#U]\n",
		prefix, p.pt.line, p.pt.col, p.pt.offset, s, p.pt.rn)
	return s
}

func (p *parser) in(s string) string {
	p.depth++
	return p.print(strings.Repeat(" ", p.depth)+">", s)
}

func (p *parser) out(s string) string {
	p.depth--
	return p.print(strings.Repeat(" ", p.depth)+"<", s)
}

func (p *parser) addErr(err error) {
	p.addErrAt(err, p.pt.position, []string{})
}

func (p *parser) addErrAt(err error, pos position, expected []string) {
	var buf bytes.Buffer
	if p.filename != "" {
		buf.WriteString(p.filename)
	}
	if buf.Len() > 0 {
		buf.WriteString(":")
	}
	buf.WriteString(fmt.Sprintf("%d:%d (%d)", pos.line, pos.col, pos.offset))
	if len(p.rstack) > 0 {
		if buf.Len() > 0 {
			buf.WriteString(": ")
		}
		rule := p.rstack[len(p.rstack)-1]
		if rule.displayName != "" {
			buf.WriteString("rule " + rule.displayName)
		} else {
			buf.WriteString("rule " + rule.name)
		}
	}
	pe := &parserError{Inner: err, pos: pos, prefix: buf.String(), expected: expected}
	p.errs.add(pe)
}

func (p *parser) failAt(fail bool, pos position, want string) {
	// process fail if parsing fails and not inverted or parsing succeeds and invert is set
	if fail == p.maxFailInvertExpected {
		if pos.offset < p.maxFailPos.offset {
			return
		}

		if pos.offset > p.maxFailPos.offset {
			p.maxFailPos = pos
			p.maxFailExpected = p.maxFailExpected[:0]
		}

		if p.maxFailInvertExpected {
			want = "!" + want
		}
		p.maxFailExpected = append(p.maxFailExpected, want)
	}
}

// read advances the parser to the next rune.
func (p *parser) read() {
	p.pt.offset += p.pt.w
	rn, n := utf8.DecodeRune(p.data[p.pt.offset:])
	p.pt.rn = rn
	p.pt.w = n
	p.pt.col++
	if rn == '\n' {
		p.pt.line++
		p.pt.col = 0
	}

	if rn == utf8.RuneError && n == 1 { // see utf8.DecodeRune
		if !p.allowInvalidUTF8 {
			p.addErr(errInvalidEncoding)
		}
	}
}

// restore parser position to the savepoint pt.
func (p *parser) restore(pt savepoint) {
	if p.debug {
		defer p.out(p.in("restore"))
	}
	if pt.offset == p.pt.offset {
		return
	}
	p.pt = pt
}

// Cloner is implemented by any value that has a Clone method, which returns a
// copy of the value. This is mainly used for types which are not passed by
// value (e.g map, slice, chan) or structs that contain such types.
//
// This is used in conjunction with the global state feature to create proper
// copies of the state to allow the parser to properly restore the state in
// the case of backtracking.
type Cloner interface {
	Clone() interface{}
}

// clone and return parser current state.
func (p *parser) cloneState() storeDict {
	if p.debug {
		defer p.out(p.in("cloneState"))
	}

	state := make(storeDict, len(p.cur.state))
	for k, v := range p.cur.state {
		if c, ok := v.(Cloner); ok {
			state[k] = c.Clone()
		} else {
			state[k] = v
		}
	}
	return state
}

// restore parser current state to the state storeDict.
// every restoreState should applied only one time for every cloned state
func (p *parser) restoreState(state storeDict) {
	if p.debug {
		defer p.out(p.in("restoreState"))
	}
	p.cur.state = state
}

// get the slice of bytes from the savepoint start to the current position.
func (p *parser) sliceFrom(start savepoint) []byte {
	return p.data[start.position.offset:p.pt.position.offset]
}

func (p *parser) getMemoized(node interface{}) (resultTuple, bool) {
	if len(p.memo) == 0 {
		return resultTuple{}, false
	}
	m := p.memo[p.pt.offset]
	if len(m) == 0 {
		return resultTuple{}, false
	}
	res, ok := m[node]
	return res, ok
}

func (p *parser) setMemoized(pt savepoint, node interface{}, tuple resultTuple) {
	if p.memo == nil {
		p.memo = make(map[int]map[interface{}]resultTuple)
	}
	m := p.memo[pt.offset]
	if m == nil {
		m = make(map[interface{}]resultTuple)
		p.memo[pt.offset] = m
	}
	m[node] = tuple
}

func (p *parser) buildRulesTable(g *grammar) {
	p.rules = make(map[string]*rule, len(g.rules))
	for _, r := range g.rules {
		p.rules[r.name] = r
	}
}

func (p *parser) parse(g *grammar) (val interface{}, err error) {
	if len(g.rules) == 0 {
		p.addErr(errNoRule)
		return nil, p.errs.err()
	}

	// TODO : not super critical but this could be generated
	p.buildRulesTable(g)

	if p.recover {
		// panic can be used in action code to stop parsing immediately
		// and return the panic as an error.
		defer func() {
			if e := recover(); e != nil {
				if p.debug {
					defer p.out(p.in("panic handler"))
				}
				val = nil
				switch e := e.(type) {
				case error:
					p.addErr(e)
				default:
					p.addErr(fmt.Errorf("%v", e))
				}
				err = p.errs.err()
			}
		}()
	}

	startRule, ok := p.rules[p.entrypoint]
	if !ok {
		p.addErr(errInvalidEntrypoint)
		return nil, p.errs.err()
	}

	p.read() // advance to first rune
	val, ok = p.parseRule(startRule)
	if !ok {
		if len(*p.errs) == 0 {
			// If parsing fails, but no errors have been recorded, the expected values
			// for the farthest parser position are returned as error.
			maxFailExpectedMap := make(map[string]struct{}, len(p.maxFailExpected))
			for _, v := range p.maxFailExpected {
				maxFailExpectedMap[v] = struct{}{}
			}
			expected := make([]string, 0, len(maxFailExpectedMap))
			eof := false
			if _, ok := maxFailExpectedMap["!."]; ok {
				delete(maxFailExpectedMap, "!.")
				eof = true
			}
			for k := range maxFailExpectedMap {
				expected = append(expected, k)
			}
			sort.Strings(expected)
			if eof {
				expected = append(expected, "EOF")
			}
			p.addErrAt(errors.New("no match found, expected: "+listJoin(expected, ", ", "or")), p.maxFailPos, expected)
		}

		return nil, p.errs.err()
	}
	return val, p.errs.err()
}

func listJoin(list []string, sep string, lastSep string) string {
	switch len(list) {
	case 0:
		return ""
	case 1:
		return list[0]
	default:
		return fmt.Sprintf("%s %s %s", strings.Join(list[:len(list)-1], sep), lastSep, list[len(list)-1])
	}
}

func (p *parser) parseRule(rule *rule) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRule " + rule.name))
	}

	if p.memoize {
		res, ok := p.getMemoized(rule)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
	}

	start := p.pt
	p.rstack = append(p.rstack, rule)
	p.pushV()
	val, ok := p.parseExpr(rule.expr)
	p.popV()
	p.rstack = p.rstack[:len(p.rstack)-1]
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}

	if p.memoize {
		p.setMemoized(start, rule, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseExpr(expr interface{}) (interface{}, bool) {
	var pt savepoint

	if p.memoize {
		res, ok := p.getMemoized(expr)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
		pt = p.pt
	}

	p.ExprCnt++
	if p.ExprCnt > p.maxExprCnt {
		panic(errMaxExprCnt)
	}

	var val interface{}
	var ok bool
	switch expr := expr.(type) {
	case *actionExpr:
		val, ok = p.parseActionExpr(expr)
	case *andCodeExpr:
		val, ok = p.parseAndCodeExpr(expr)
	case *andExpr:
		val, ok = p.parseAndExpr(expr)
	case *anyMatcher:
		val, ok = p.parseAnyMatcher(expr)
	case *charClassMatcher:
		val, ok = p.parseCharClassMatcher(expr)
	case *choiceExpr:
		val, ok = p.parseChoiceExpr(expr)
	case *labeledExpr:
		val, ok = p.parseLabeledExpr(expr)
	case *litMatcher:
		val, ok = p.parseLitMatcher(expr)
	case *notCodeExpr:
		val, ok = p.parseNotCodeExpr(expr)
	case *notExpr:
		val, ok = p.parseNotExpr(expr)
	case *oneOrMoreExpr:
		val, ok = p.parseOneOrMoreExpr(expr)
	case *recoveryExpr:
		val, ok = p.parseRecoveryExpr(expr)
	case *ruleRefExpr:
		val, ok = p.parseRuleRefExpr(expr)
	case *seqExpr:
		val, ok = p.parseSeqExpr(expr)
	case *stateCodeExpr:
		val, ok = p.parseStateCodeExpr(expr)
	case *throwExpr:
		val, ok = p.parseThrowExpr(expr)
	case *zeroOrMoreExpr:
		val, ok = p.parseZeroOrMoreExpr(expr)
	case *zeroOrOneExpr:
		val, ok = p.parseZeroOrOneExpr(expr)
	default:
		panic(fmt.Sprintf("unknown expression type %T", expr))
	}
	if p.memoize {
		p.setMemoized(pt, expr, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseActionExpr(act *actionExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseActionExpr"))
	}

	start := p.pt
	val, ok := p.parseExpr(act.expr)
	if ok {
		p.cur.pos = start.position
		p.cur.text = p.sliceFrom(start)
		state := p.cloneState()
		actVal, err := act.run(p)
		if err != nil {
			p.addErrAt(err, start.position, []string{})
		}
		p.restoreState(state)

		val = actVal
	}
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}
	return val, ok
}

func (p *parser) parseAndCodeExpr(and *andCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndCodeExpr"))
	}

	state := p.cloneState()

	ok, err := and.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, ok
}

func (p *parser) parseAndExpr(and *andExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	_, ok := p.parseExpr(and.expr)
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, ok
}

func (p *parser) parseAnyMatcher(any *anyMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAnyMatcher"))
	}

	if p.pt.rn == utf8.RuneError && p.pt.w == 0 {
		// EOF - see utf8.DecodeRune
		p.failAt(false, p.pt.position, ".")
		return nil, false
	}
	start := p.pt
	p.read()
	p.failAt(true, start.position, ".")
	return p.sliceFrom(start), true
}

func (p *parser) parseCharClassMatcher(chr *charClassMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseCharClassMatcher"))
	}

	cur := p.pt.rn
	start := p.pt

	// can't match EOF
	if cur == utf8.RuneError && p.pt.w == 0 { // see utf8.DecodeRune
		p.failAt(false, start.position, chr.val)
		return nil, false
	}

	if chr.ignoreCase {
		cur = unicode.ToLower(cur)
	}

	// try to match in the list of available chars
	for _, rn := range chr.chars {
		if rn == cur {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of ranges
	for i := 0; i < len(chr.ranges); i += 2 {
		if cur >= chr.ranges[i] && cur <= chr.ranges[i+1] {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of Unicode classes
	for _, cl := range chr.classes {
		if unicode.Is(cl, cur) {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	if chr.inverted {
		p.read()
		p.failAt(true, start.position, chr.val)
		return p.sliceFrom(start), true
	}
	p.failAt(false, start.position, chr.val)
	return nil, false
}

func (p *parser) incChoiceAltCnt(ch *choiceExpr, altI int) {
	choiceIdent := fmt.Sprintf("%s %d:%d", p.rstack[len(p.rstack)-1].name, ch.pos.line, ch.pos.col)
	m := p.ChoiceAltCnt[choiceIdent]
	if m == nil {
		m = make(map[string]int)
		p.ChoiceAltCnt[choiceIdent] = m
	}
	// We increment altI by 1, so the keys do not start at 0
	alt := strconv.Itoa(altI + 1)
	if altI == choiceNoMatch {
		alt = p.choiceNoMatch
	}
	m[alt]++
}

func (p *parser) parseChoiceExpr(ch *choiceExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseChoiceExpr"))
	}

	for altI, alt := range ch.alternatives {
		// dummy assignment to prevent compile error if optimized
		_ = altI

		state := p.cloneState()

		p.pushV()
		val, ok := p.parseExpr(alt)
		p.popV()
		if ok {
			p.incChoiceAltCnt(ch, altI)
			return val, ok
		}
		p.restoreState(state)
	}
	p.incChoiceAltCnt(ch, choiceNoMatch)
	return nil, false
}

func (p *parser) parseLabeledExpr(lab *labeledExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLabeledExpr"))
	}

	p.pushV()
	val, ok := p.parseExpr(lab.expr)
	p.popV()
	if ok && lab.label != "" {
		m := p.vstack[len(p.vstack)-1]
		m[lab.label] = val
	}
	return val, ok
}

func (p *parser) parseLitMatcher(lit *litMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLitMatcher"))
	}

	ignoreCase := ""
	if lit.ignoreCase {
		ignoreCase = "i"
	}
	val := fmt.Sprintf("%q%s", lit.val, ignoreCase)
	start := p.pt
	for _, want := range lit.val {
		cur := p.pt.rn
		if lit.ignoreCase {
			cur = unicode.ToLower(cur)
		}
		if cur != want {
			p.failAt(false, start.position, val)
			p.restore(start)
			return nil, false
		}
		p.read()
	}
	p.failAt(true, start.position, val)
	return p.sliceFrom(start), true
}

func (p *parser) parseNotCodeExpr(not *notCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotCodeExpr"))
	}

	state := p.cloneState()

	ok, err := not.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, !ok
}

func (p *parser) parseNotExpr(not *notExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	_, ok := p.parseExpr(not.expr)
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, !ok
}

func (p *parser) parseOneOrMoreExpr(expr *oneOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseOneOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			if len(vals) == 0 {
				// did not match once, no match
				return nil, false
			}
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseRecoveryExpr(recover *recoveryExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRecoveryExpr (" + strings.Join(recover.failureLabel, ",") + ")"))
	}

	p.pushRecovery(recover.failureLabel, recover.recoverExpr)
	val, ok := p.parseExpr(recover.expr)
	p.popRecovery()

	return val, ok
}

func (p *parser) parseRuleRefExpr(ref *ruleRefExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRuleRefExpr " + ref.name))
	}

	if ref.name == "" {
		panic(fmt.Sprintf("%s: invalid rule: missing name", ref.pos))
	}

	rule := p.rules[ref.name]
	if rule == nil {
		p.addErr(fmt.Errorf("undefined rule: %s", ref.name))
		return nil, false
	}
	return p.parseRule(rule)
}

func (p *parser) parseSeqExpr(seq *seqExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseSeqExpr"))
	}

	vals := make([]interface{}, 0, len(seq.exprs))

	pt := p.pt
	state := p.cloneState()
	for _, expr := range seq.exprs {
		val, ok := p.parseExpr(expr)
		if !ok {
			p.restoreState(state)
			p.restore(pt)
			return nil, false
		}
		vals = append(vals, val)
	}
	return vals, true
}

func (p *parser) parseStateCodeExpr(state *stateCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseStateCodeExpr"))
	}

	err := state.run(p)
	if err != nil {
		p.addErr(err)
	}
	return nil, true
}

func (p *parser) parseThrowExpr(expr *throwExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseThrowExpr"))
	}

	for i := len(p.recoveryStack) - 1; i >= 0; i-- {
		if recoverExpr, ok := p.recoveryStack[i][expr.label]; ok {
			if val, ok := p.parseExpr(recoverExpr); ok {
				return val, ok
			}
		}
	}

	return nil, false
}

func (p *parser) parseZeroOrMoreExpr(expr *zeroOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseZeroOrOneExpr(expr *zeroOrOneExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrOneExpr"))
	}

	p.pushV()
	val, _ := p.parseExpr(expr.expr)
	p.popV()
	// whether it matched or not, consider it a match
	return val, true
}
